{"instance_id": "112855ce32e1", "generation_result": [{"code": "handleOpenMarketplace = (): void =>     const source = 'actions_menu';\n    const modalData = {\n        modalId: ModalIdentifiers.MARKETPLACE,\n        dialogType: MarketplaceTypes.CUSTOM_EMOJI,\n        dialogProps: {\n            source,\n        },\n    };\n\n    this.props.actions.openModal(modalData);\n};", "CodeBleu_score": 51.74010771299733}, {"code": "handleOpenMarketplace = (): void =>     this.setSource('actions_menu');\n    const modalId = 'marketplace_modal';\n    const dialogType = MarketplaceModal;\n    const dialogProps = {\n        onClose: this.handleCloseMarketplace,\n        onSubmit: this.handleSubmitMarketplace,\n    };\n    this.openModal(modalId, dialogType, dialogProps);\n};", "CodeBleu_score": 36.546400492811884}, {"code": "handleOpenMarketplace = (): void =>     this.setSource('actions_menu');\n    const dialogProps = {\n        id: 'marketplace_modal',\n        dialogType: MarketplaceModal,\n        dialogProps: {\n            source: this.source,\n        },\n    };\n    this.openModal(dialogProps);\n};", "CodeBleu_score": 37.382533409814165}]}
{"instance_id": "421836df0bf0", "generation_result": [{"code": "onClickAppBinding = async (binding: AppBinding) =>  const context = {\n    app_id: binding.app_id,\n    location: 'app-binding',\n    channel_id: binding.channel_id,\n    team_id: binding.team_id,\n    post_id: binding.post_id,\n    root_id: binding.root_id,\n  };\n\n  try {\n    const response = await handleBindingClickWithContext(binding, context, intl);\n\n    if (response.type === 'ok') {\n      postEphemeralCallResponse(response.text);\n    } else if (response.type === 'navigate') {\n      handleAppBindingNavigate(response.path, response.channelId);\n    } else if (response.type === 'form') {\n      openAppBindingModal(response.form);\n    } else {\n      postEphemeralCallResponse(intl.formatMessage({\n        id: 'interactive_apps.error.response.unsupported',\n        defaultMessage: 'App responded with unsupported response type',\n      }));\n    }\n  } catch (error) {\n    postEphemeralCallResponse(intl.formatMessage({\n      id: 'interactive_apps.error.response',\n      defaultMessage: 'App failed to respond',\n    }));\n  }\n};", "CodeBleu_score": 19.318769002251123}, {"code": "onClickAppBinding = async (binding: AppBinding) =>    const context = {\n        app_id: binding.app_id,\n        location: 'command',\n        channel_id: this.props.channelId,\n        team_id: this.props.teamId,\n        post_id: this.props.postId,\n        root_post_id: this.props.rootPostId,\n    };\n\n    try {\n        const response = await handleBindingClick(binding, context, this.props.intl);\n\n        if (response.type === 'ok') {\n            this.props.actions.postEphemeralCallResponse(response.text);\n        } else if (response.type === 'navigate') {\n            this.props.actions.handleBindingNavigate(response.url);\n        } else if (response.type === 'form') {\n            this.props.actions.openModal({\n                modalId: ModalIdentifiers.SHOW_MODAL,\n                dialogType: ShowModalTypes.SHOW_MODAL_DIALOG,\n                dialogProps: {\n                    ...response,\n                    onSubmit: (form: { [key: string]: any }) => {\n                        this.props.actions.submitInteractiveDialog(response.call, form, response.url);\n                    },\n                    onCancel: () => {\n                        this.props.actions.closeModal(ModalIdentifiers.SHOW_MODAL);\n                    },\n                },\n            });\n        } else {\n            this.props.actions.postEphemeralCallResponse(this.props.intl.formatMessage({\n                id: 'interactive_app_unsupported_response_type',\n                defaultMessage: 'App response type not supported. Response type: {type}.',\n            }, {\n                type: response.type,\n            }));\n        }\n    } catch (error) {\n        this.props.actions.postEphemeralCallResponse(this.props.intl.formatMessage({\n            id: 'interactive_app_error',\n            defaultMessage: 'App error: {error}',\n        }, {\n            error: error.message,\n        }));\n    }\n};", "CodeBleu_score": 33.456480016353964}, {"code": "onClickAppBinding = async (binding: AppBinding) =>  const context = {\n    app_id: binding.app_id,\n    location: binding.location,\n    channel_id: binding.channel_id,\n    team_id: binding.team_id,\n    post_id: binding.post_id,\n    root_id: binding.root_id,\n  };\n\n  try {\n    const response = await handleBindingClick(binding, context, intl);\n\n    if (response.type === 'OK') {\n      postEphemeralCallResponse(response.text);\n    } else if (response.type === 'NAVIGATE') {\n      handleNavigation(response.navigateToUrl);\n    } else if (response.type === 'FORM') {\n      openModal(response.form);\n    } else {\n      postEphemeralCallResponse(\n        intl.formatMessage({\n          id: 'error.unsupported.response',\n          defaultMessage: 'Unsupported response type',\n        })\n      );\n    }\n  } catch (error) {\n    postEphemeralCallResponse(\n      intl.formatMessage({\n        id: 'error.unexpected',\n        defaultMessage: 'An unexpected error occurred',\n      })\n    );\n  }\n};", "CodeBleu_score": 19.37056217434923}]}
{"instance_id": "7b2d58ae93e2", "generation_result": [{"code": "handleDropdownOpened = (open: boolean) =>    if (open) {\n        this.props.handleDropdownOpened(open);\n        return;\n    }\n    this.setState({\n        open,\n        dropdownPosition: undefined,\n    });\n};\n", "CodeBleu_score": 6.078777036826484}, {"code": "handleDropdownOpened = (open: boolean) =>    if (open) {\n        this.props.handleDropdownOpened(open);\n        return;\n    }\n\n    const { button } = this.buttonRef.current;\n    const { top, bottom, height } = button.getBoundingClientRect();\n\n    const spaceAbove = top;\n    const spaceBelow = window.innerHeight - bottom;\n\n    if (spaceAbove < height) {\n        this.setState({\n            dropdownPosition: 'bottom',\n        });\n    } else if (spaceBelow < height) {\n        this.setState({\n            dropdownPosition: 'top',\n        });\n    } else {\n        this.setState({\n            dropdownPosition: spaceAbove > spaceBelow ? 'top' : 'bottom',\n        });\n    }\n\n    this.props.handleDropdownOpened(open);\n};", "CodeBleu_score": 32.229952496758415}, {"code": "handleDropdownOpened = (open: boolean) =>  if (!open) {\n    return false;\n  }\n  const {\n    buttonRef,\n    dropdownRef,\n    dropdownTop,\n    dropdownLeft,\n    dropdownWidth,\n    dropdownHeight,\n    dropdownMaxHeight,\n    dropdownMaxWidth,\n    dropdownMinHeight,\n    dropdownMinWidth,\n    dropdownMaxTop,\n    dropdownMaxLeft,\n    dropdownMaxBottom,\n    dropdownMaxRight,\n  } = this.state;\n\n  const buttonRect = buttonRef.current.getBoundingClientRect();\n  const dropdownRect = dropdownRef.current.getBoundingClientRect();\n\n  const buttonTop = buttonRect.top;\n  const buttonLeft = buttonRect.left;\n  const buttonWidth = buttonRect.width;\n  const buttonHeight = buttonRect.height;\n\n  const availableSpaceAbove = buttonTop;\n  const availableSpaceBelow = window.innerHeight - buttonTop - buttonHeight;\n\n  let newDropdownTop = buttonTop - dropdownHeight;\n  let newDropdownLeft = buttonLeft;\n\n  if (availableSpaceAbove < availableSpaceBelow) {\n    newDropdownTop = buttonTop + buttonHeight;\n  }\n\n  if (newDropdownTop + dropdownHeight > window.innerHeight) {\n    newDropdownTop = window.innerHeight - dropdownHeight;\n  }\n\n  if (newDropdownLeft + dropdownWidth > window.innerWidth) {\n    newDropdownLeft = window.innerWidth - dropdownWidth;\n  }\n\n  if (newDropdownLeft < 0) {\n    newDropdownLeft = 0;\n  }\n\n  if (\n    dropdownMaxTop !== undefined &&\n    newDropdownTop + dropdownHeight > dropdownMaxTop\n  ) {\n    newDropdownTop = dropdownMaxTop - dropdownHeight;\n  }\n\n  if (\n    dropdownMaxLeft !== undefined &&\n    newDropdownLeft + dropdownWidth > dropdownMaxLeft\n  ) {\n    newDropdownLeft = dropdownMaxLeft - dropdownWidth;\n  }\n\n  if (\n    dropdownMaxBottom !== undefined &&", "CodeBleu_score": 19.195316342278357}]}
{"instance_id": "024f57c26061", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: Props)    const post = ownProps.post;\n    const isSystemMessage = post.type === Constants.POST_TYPES.SYSTEM_MESSAGE;\n    const showAppBindings = !isSystemMessage && state.views.post.showAppBindings;\n    const appsEnabled = state.views.post.showAppBindings && state.views.post.appsEnabled;\n    const pluginComponents = state.plugins.components.PostActionMenuButton;\n    const userRoles = getCurrentUserId(state) ? getCurrentUserRoles(state) : '';\n    const teamId = getCurrentTeamId(state);\n    const isMobile = state.views.channel.mobileView;\n    const canAccessMarketplace = canDownloadApps(state);\n\n    return {\n        appBindings: showAppBindings ? getAppBindings(state, post.id) : [],\n        appsEnabled,\n        pluginComponents,\n        userRoles,\n        teamId,\n        isMobile,\n        canAccessMarketplace,\n    };\n}", "CodeBleu_score": 41.07253869755587}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props)    const post = ownProps.post || {};\n    const isSystemMessage = post.type && post.type.startsWith(POST_TYPES.SYSTEM_MESSAGE);\n\n    const showAppBindings = !isSystemMessage && state.views.apps.length > 0 && post.type && post.type.startsWith(POST_TYPES.M_CHANNEL);\n    const appsEnabled = state.views.appsEnabled;\n    const pluginComponents = state.plugins.components.AppBindings;\n\n    const user = getCurrentUser(state);\n    const isAdmin = isCurrentUserSystemAdmin(state);\n\n    const teamId = getCurrentTeamId(state);\n\n    const mobileView = isMobileView();\n\n    const marketplaceAccess = getMarketplaceAccess(state);\n\n    return {\n        appBindings: showAppBindings ? getAppBindings(state, post.id) : [],\n        appsEnabled,\n        pluginComponents,\n        userRoles: user ? user.roles : '',\n        teamId,\n        mobileView,\n        marketplaceAccess,\n    };\n}\n", "CodeBleu_score": 43.16354684775704}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props)    const post = getPost(state, ownProps.postId);\n    const isSystemMessage = post ? post.type === PostTypes.SYSTEM_MESSAGE : false;\n\n    let appBindings: AppBinding[] | null = null;\n    if (ownProps.showAppBindings && !isSystemMessage) {\n        const postType = post ? post.type : null;\n        const appsEnabled = areAppBindingsEnabled(state, postType);\n        if (appsEnabled) {\n            appBindings = getAppBindings(state, ownProps.postId);\n        }\n    }\n\n    const user = getCurrentUser(state);\n    const isSystemAdmin = isCurrentUserSystemAdmin(state);\n\n    return {\n        appBindings,\n        appsEnabled,\n        pluginComponents: state.plugins.components.Post,\n        userRoles: getRoles(user.roles),\n        teamId: getCurrentTeamId(state),\n        isMobileView: isMobileView(state),\n        marketplaceAccess: getMarketplaceAccess(state),\n    };\n}", "CodeBleu_score": 51.269091186291504}]}
{"instance_id": "ae0a07f4dbea", "generation_result": [{"code": "export default function DeviceIcon(props: Props)  const { deviceTitle, devicePicture } = props;\n  const intl = useIntl();\n  const title =\n    typeof deviceTitle === 'object'\n      ? intl.formatMessage(deviceTitle)\n      : deviceTitle;\n\n  return (\n    <i\n      className={devicePicture}\n      title={title}\n      aria-hidden=\"true\"\n    />\n  );\n}", "CodeBleu_score": 36.24815989797558}, {"code": "export default function DeviceIcon(props: Props)  const intl = useIntl();\n  const { deviceTitle, devicePicture } = props;\n  const title =\n    typeof deviceTitle === 'object'\n      ? intl.formatMessage(deviceTitle)\n      : deviceTitle;\n  return <i className={devicePicture} title={title} />;\n}", "CodeBleu_score": 38.79605673746463}, {"code": "export default function DeviceIcon(props: Props)  const { deviceTitle, devicePicture } = props;\n  const intl = useIntl();\n  const title = isMessageDescriptor(deviceTitle)\n    ? intl.formatMessage(deviceTitle)\n    : deviceTitle;\n\n  return (\n    <i\n      className={devicePicture}\n      title={title}\n      aria-hidden=\"true\"\n    />\n  );\n}", "CodeBleu_score": 36.8283628483204}]}
{"instance_id": "e0a805402908", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)   const currentChannel = getCurrentChannel(state, ownProps)\n  const currentChannelId = currentChannel?.id\n  const currentTeamId = currentChannel?.team_id\n  const searchTerm = getSearchTerm(state)\n  const groups = getGroupsNotAssociatedWithChannel(state, currentChannelId)\n  const filteredGroups = searchTerm\n    ? groups.filter((group) =>\n        group.display_name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    : groups\n\n  return {\n    currentChannelId,\n    currentChannelName: currentChannel?.display_name,\n    currentTeamId,\n    ...ownProps,\n    searchTerm,\n    filteredGroups,\n  }\n}", "CodeBleu_score": 40.254071471370466}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)     const currentChannel = getCurrentChannel(state, ownProps) || {};\n    const currentTeamId = getCurrentTeamId(state);\n    const searchTerm = state.entities.search.current;\n    const groups = Object.values(state.entities.groups.myGroups);\n    const filteredGroups = groups.filter((group) => {\n      return group.name.toLowerCase().includes(searchTerm.toLowerCase()) && group.id !== currentChannel.id;\n    });\n    return {\n      currentChannelName: currentChannel.display_name,\n      currentChannelId: currentChannel.id,\n      teamId: currentTeamId,\n      ...ownProps,\n      searchTerm,\n      filteredGroups,\n    };\n  }", "CodeBleu_score": 44.692656847487925}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)     const currentChannel = getCurrentChannel(state, ownProps) || {};\n    const searchTerm = getSearchTerm(state);\n    const groups = getGroupsNotAssociatedWithChannel(state, currentChannel.id);\n    const filteredGroups = searchTerm ? filterGroups(groups, searchTerm) : groups;\n\n    return {\n        currentChannelName: currentChannel.name,\n        currentChannelId: currentChannel.id,\n        teamId: getCurrentTeamId(state),\n        ...ownProps,\n        searchTerm,\n        filteredGroups,\n    };\n}\n", "CodeBleu_score": 35.68192090119709}]}
{"instance_id": "a3412b1c0762", "generation_result": [{"code": "componentDidUpdate(prevProps: Props)    const { searchTerm } = this.props;\n    const { searchTerm: prevSearchTerm } = prevProps;\n\n    if (searchTerm !== prevSearchTerm) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ loading: true });\n            this.props.searchGroups(searchTerm, this.props.channelId);\n            this.setState({ loading: false });\n        }, 1000);\n    }\n\n    if (searchTerm === \"\") {\n        return;\n    }\n}\n", "CodeBleu_score": 39.44690068222975}, {"code": "componentDidUpdate(prevProps: Props)  if (prevProps.searchTerm !== this.props.searchTerm) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.setState({ loading: true });\n      this.props.searchGroups(this.props.searchTerm, this.props.channel.id, this.props.channel.token, this.props.channel.community_id).then(() => {\n        this.setState({ loading: false });\n      });\n    }, 500);\n  }\n  if (this.props.searchTerm === '') {\n    return;\n  }\n}", "CodeBleu_score": 30.900694003662498}, {"code": "componentDidUpdate(prevProps: Props)    const { searchTerm } = this.props;\n    if (prevProps.searchTerm !== searchTerm) {\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        this.setState({ loading: true }, () => {\n          this.searchGroupsNotAssociatedWithChannel(searchTerm);\n          this.setState({ loading: false });\n        });\n      }, 500);\n    }\n  }\n", "CodeBleu_score": 31.510647207958105}]}
{"instance_id": "0f47faf97411", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)    const currentChannel = ownProps.channel || getCurrentChannel(state);\n\n    const excludeGroups = state.entities.channels.groups.filter((group) => group.id !== currentChannel?.id);\n\n    const searchTerm = getSearchTerm(state);\n\n    const filteredGroups = excludeGroups.filter((group) => group.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    return {\n        currentChannelId: currentChannel?.id,\n        currentChannelName: currentChannel?.display_name,\n        currentChannelType: currentChannel?.type,\n        currentTeamId: currentChannel?.team_id,\n        onChannelSwitch: (channelId: string) => {\n            const channel = getChannel(state, channelId);\n            if (channel) {\n                handleSwitchChannel(channel.team_id, channelId);\n            }\n        },\n        onClose: closeRightHandSide,\n        onExcludedGroupAdded: (group: Channel) => {\n            handleAddExcludedGroup(group.id);\n        },\n        onExcludedGroupRemoved: (group: Channel) => {\n            handleRemoveExcludedGroup(group.id);\n        },\n        onGroupClick: (group: Channel) => {\n            handleSelectGroup(group.id);\n        },\n        onGroupSwitched: (group: Channel) => {\n            handleSwitchGroup(group.id);\n        },\n        onSearch: (term: string) => {\n            handleSearchGroups(term);\n        },\n        searchTerm,\n        ...ownProps,\n        groups: filteredGroups,\n    };\n}", "CodeBleu_score": 37.81207286886795}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)    const currentChannel = getCurrentChannelId(state) || ownProps.channelId || getDefaultChannel(state).id;\n\n    const currentChannelStats = state.entities.channels.myMembers[currentChannel];\n    const currentTeamId = getCurrentTeamId(state);\n    const currentUserId = getCurrentUserId(state);\n\n    const groupsAssociated = getGroupsAssociatedToChannel(state, currentChannel);\n    const groupsExclude = getGroupsExcludeAssociatedToChannel(state, currentChannel);\n    const groupsNotAssociated = getGroupsNotAssociatedToChannel(state, currentChannel, currentTeamId, currentUserId, groupsExclude);\n    const stats = getMyChannelMembership(state);\n\n    const searchTerm = getSearchTerm(state);\n    const groups = filterGroupsMatchingTerm(groupsNotAssociated, searchTerm);\n\n    return {\n        currentChannel,\n        currentChannelStats,\n        currentTeamId,\n        currentUserId,\n        groupsAssociated,\n        groupsExclude,\n        groupsNotAssociated,\n        searchTerm,\n        groups,\n        stats,\n        actions: bindActionCreators({\n            getGroups,\n            setCategoryCollapsed,\n            setCategorySorting,\n            setCategorySortingDirection,\n            setDraggingState,\n            setSearchTerm,\n        }, dispatch),\n    };\n}", "CodeBleu_score": 36.22140933388488}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)  const currentChannel = ownProps.channel || getCurrentChannel(state);\n  const excludedGroups = getGroupsAssociatedToChannel(state, currentChannel);\n  const searchTerm = getSearchTermForCurrentChannel(state);\n\n  const filteredGroups = getSortedGroups(state, currentChannel)\n    .filter((group) => {\n      return !excludedGroups.includes(group.id);\n    })\n    .filter((group) => {\n      if (!searchTerm) {\n        return true;\n      }\n\n      return group.name.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n\n  return {\n    currentChannel,\n    onAssociateGroup: (group: Group) => {\n      associateGroupToChannel(group, currentChannel);\n    },\n    onDisassociateGroup: (group: Group) => {\n      disassociateGroupFromChannel(group, currentChannel);\n    },\n    onSetChannel: (channel: Channel) => {\n      setCurrentChannel(channel);\n    },\n    onSetSearchTerm: (searchTerm: string) => {\n      setSearchTermForCurrentChannel(searchTerm);\n    },\n    excludedGroups,\n    searchTerm,\n    filteredGroups,\n  };\n}\n", "CodeBleu_score": 40.46648430419877}]}
{"instance_id": "923c0c472c01", "generation_result": [{"code": "private handlePageChange = (page: number, prevPage: number): void =>   if (page > prevPage) {\n    this.setState({ loading: true });\n    const { groupId } = this.props;\n    if (groupId) {\n      this.props.fetchGroupProfiles(groupId, page);\n    } else {\n      this.props.fetchProfiles(page);\n    }\n    this.setState({ loading: false });\n  }\n}\n", "CodeBleu_score": 41.78111536807136}, {"code": "private handlePageChange = (page: number, prevPage: number): void =>   if (page > prevPage) {\n    this.setState({ loading: true });\n    const { groupId } = this.props;\n    if (groupId) {\n      this.fetchGroupMembers(groupId, page);\n    } else {\n      this.fetchMembers(page);\n    }\n    this.setState({ loading: false });\n  }\n}\n", "CodeBleu_score": 38.91069370155438}, {"code": "private handlePageChange = (page: number, prevPage: number): void =>     if (page > prevPage) {\n        this.setState({ loading: true });\n        if (this.props.groupId) {\n            this.props.getGroupMembers(this.props.groupId, page);\n        } else {\n            this.props.getUsers(page);\n        }\n        this.setState({ loading: false });\n    }\n};\n", "CodeBleu_score": 38.45700062906018}]}
{"instance_id": "4614bb3319bb", "generation_result": [{"code": "public search = (searchTerm: string): void =>     if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n    }\n    this.setState({ searchTerm: searchTerm.trim() });\n    if (this.state.searchTerm) {\n        this.setState({ userLoading: true });\n        this.searchTimeout = setTimeout(() => {\n            this.searchUsers();\n            this.setState({ userLoading: false });\n        }, 500);\n    }\n};", "CodeBleu_score": 26.065291253199497}, {"code": "public search = (searchTerm: string): void =>     clearTimeout(this.searchTimeout);\n    this.setState({ searchTerm: searchTerm.trim() });\n    if (this.state.searchTerm) {\n        this.setState({ isUserLoading: true });\n        this.searchTimeout = setTimeout(this.searchUsers, 500);\n    } else {\n        this.setState({ isUserLoading: false });\n    }\n};\n", "CodeBleu_score": 26.186916181325316}, {"code": "public search = (searchTerm: string): void =>     clearTimeout(this.searchTimeout);\n    this.setState({\n      searchTerm: searchTerm.trim(),\n    });\n    if (searchTerm.trim().length > 0) {\n      this.setState({\n        userLoading: true,\n      });\n      this.searchTimeout = setTimeout(() => {\n        this.searchUsers();\n      }, 1000);\n    }\n  }", "CodeBleu_score": 25.6872134762116}]}
{"instance_id": "aeafe2d0ee11", "generation_result": [{"code": "visibleSections = () =>  const {\n    config: { sections, adminDefinition },\n    license,\n    buildEnterpriseReady,\n    consoleAccess,\n    cloud,\n  } = this.props;\n  const result = new Set();\n\n  sections.forEach((section) => {\n    const { items, title, schema, url } = section;\n    if (schema && title) {\n      if (\n        !section.hideWhenNoConsoleAccess ||\n        consoleAccess.isConsoleConfig()\n      ) {\n        if (\n          !section.hideWhenNoEnterprise ||\n          license.isEnterprise() ||\n          buildEnterpriseReady\n        ) {\n          if (!section.hideWhenExperimental || cloud?.isExperimental) {\n            if (\n              !section.hideWhenConfigurable ||\n              adminDefinition.isConfigurable(section.id)\n            ) {\n              result.add(url);\n            }\n          }\n        }\n      }\n    }\n\n    items.forEach((item) => {\n      const { title, schema, url } = item;\n      if (schema && title) {\n        if (\n          !item.hideWhenNoConsoleAccess ||\n          consoleAccess.isConsoleConfig()\n        ) {\n          if (\n            !item.hideWhenNoEnterprise ||\n            license.isEnterprise() ||\n            buildEnterpriseReady\n          ) {\n            if (!item.hideWhenExperimental || cloud?.isExperimental) {\n              if (\n                !item.hideWhenConfigurable ||\n                adminDefinition.isConfigurable(item.id)\n              ) {\n                result.add(url);\n              }\n            }\n          }\n        }\n      }\n    });\n  });\n\n  return result;\n};", "CodeBleu_score": 27.59906800368267}, {"code": "visibleSections = () =>  const result = new Set();\n  const {\n    schema: { sections },\n    title,\n  } = this.props;\n\n  if (!sections) {\n    return result;\n  }\n\n  for (const section of sections) {\n    if (!section.schema || !section.title) {\n      continue;\n    }\n\n    if (\n      section.schema.type === \"object\" &&\n      !section.hidden &&\n      !(\n        section.schema.properties.license &&\n        section.schema.properties.license.const ===\n          \"enterprise\" &&\n        !this.props.license.isEnterprise\n      ) &&\n      !(\n        section.schema.properties.buildEnterpriseReady &&\n        section.schema.properties.buildEnterpriseReady.const === true &&\n        !this.props.buildEnterpriseReady\n      ) &&\n      !(\n        section.schema.properties.consoleAccess &&\n        section.schema.properties.consoleAccess.const === \"internal\" &&\n        this.props.consoleAccess !== \"internal\"\n      ) &&\n      !(\n        section.schema.properties.adminDefinition &&\n        section.schema.properties.adminDefinition.const === \"cloud\" &&\n        this.props.cloud !== \"cloud\"\n      )\n    ) {\n      result.add(`/${title}/${section.title}`);\n    }\n\n    if (section.subSections) {\n      for (const subSection of section.subSections) {\n        if (!subSection.schema || !subSection.title) {\n          continue;\n        }\n\n        if (\n          subSection.schema.type === \"object\" &&\n          !subSection.hidden &&\n          !(\n            subSection.schema.properties.license &&\n            subSection.schema.properties.license.const ===\n              \"enterprise\" &&\n            !this.props.license.isEnterprise\n          ) &&\n          !(\n            subSection.schema.properties.buildEnterpriseReady &&\n            subSection.schema.properties.buildEnterpriseReady.const ===\n              true &&\n            !this.props.buildEnterpriseReady\n          ) &&\n          !(\n            subSection.", "CodeBleu_score": 22.04166327276012}, {"code": "visibleSections = () =>  const result = new Set();\n\n  for (const section of this.config.sections) {\n    if (section.schema && section.title) {\n      const isHidden =\n        section.hidden ||\n        (section.hiddenEnterprise && this.buildEnterpriseReady) ||\n        (section.hiddenCloud && this.cloud) ||\n        (section.hiddenConsole && !this.consoleAccess) ||\n        (section.hiddenAdmin && this.adminDefinition);\n\n      if (!isHidden) {\n        result.add(section.schema);\n      }\n\n      if (section.subSections) {\n        for (const subsection of section.subSections) {\n          if (subsection.schema && subsection.title) {\n            const isSubsectionHidden =\n              subsection.hidden ||\n              (subsection.hiddenEnterprise && this.buildEnterpriseReady) ||\n              (subsection.hiddenCloud && this.cloud) ||\n              (subsection.hiddenConsole && !this.consoleAccess) ||\n              (subsection.hiddenAdmin && this.adminDefinition);\n\n            if (!isSubsectionHidden) {\n              result.add(subsection.schema);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return Array.from(result);\n};", "CodeBleu_score": 35.23403531363385}]}
{"instance_id": "e869682a1b2c", "generation_result": [{"code": "handleImageChange = () =>    if (this.fileInputRef.current) {\n        const files = this.fileInputRef.current.files;\n        if (files && files.length > 0) {\n            this.setState({\n                image: files[0],\n                imageChanged: true,\n                imageDelete: false\n            });\n        }\n    }\n};", "CodeBleu_score": 45.79476584807194}, {"code": "handleImageChange = () =>  if (this.fileInputRef.current && this.fileInputRef.current.files) {\n    this.setState({\n      saveNeeded: true,\n      image: this.fileInputRef.current.files[0],\n      delete: false,\n    });\n  }\n};", "CodeBleu_score": 19.77024807796389}, {"code": "handleImageChange = () =>  if (this.fileInputRef.current) {\n    const files = this.fileInputRef.current.files;\n    if (files && files.length > 0) {\n      this.setState({\n        image: files[0],\n        saveNeeded: true,\n        deleteNeeded: false,\n      });\n    }\n  }\n};\n", "CodeBleu_score": 44.47886643036186}]}
{"instance_id": "8bc13681a6b2", "generation_result": [{"code": "private removeChannel = (channel: ChannelWithTeamData) =>    const { channels, endCount, pageSize } = this.state;\n\n    if (channel.isRemoving) {\n        return;\n    }\n\n    const { page, pageSize: statePageSize } = this.props;\n\n    this.handleRemoveChannel(channel);\n\n    if (endCount === pageSize || (page === 1 && statePageSize === pageSize)) {\n        this.setState({ page: Math.max(page - 1, 1) });\n    }\n};", "CodeBleu_score": 27.983636621275437}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>  if (this.state.channelsToRemove.includes(channel.id)) {\n    return;\n  }\n\n  const { channels, page, pageSize } = this.state;\n\n  this.setState(\n    {\n      channelsToRemove: [...this.state.channelsToRemove, channel.id],\n    },\n    () => {\n      this.props.onRemoveChannel(channel);\n\n      if (\n        channels.length - this.state.channelsToRemove.length === 1 &&\n        page > 1 &&\n        channels.length % pageSize === 1\n      ) {\n        this.setState({\n          page: page - 1,\n        });\n      }\n    }\n  );\n};", "CodeBleu_score": 32.01035267511788}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>  if (this.state.channels.find((c) => c.id === channel.id)?.markedForRemoval) {\n    return;\n  }\n  const {\n    page: {\n      state: { page, pageSize },\n      endCount,\n    },\n  } = this.state;\n\n  this.handleChannelRemoval(channel);\n\n  if (endCount === pageSize && page > 1) {\n    this.setState((prevState) => ({\n      page: {\n        ...prevState.page,\n        state: {\n          ...prevState.page.state,\n          page: prevState.page.state.page - 1,\n        },\n      },\n    }));\n  }\n\n  this.updateState({\n    page: {\n      ...this.state.page,\n      state: {\n        ...this.state.page.state,\n        page: this.state.page.state.page,\n      },\n    },\n  });\n};", "CodeBleu_score": 25.829923344076573}]}
{"instance_id": "ac41454927ac", "generation_result": [{"code": "addToRemovedChannels = (channel: ChannelWithTeamData) =>     if (removedChannels.includes(channel)) {\n        removedChannels.splice(removedChannels.indexOf(channel), 1);\n    } else {\n        removedChannels.push(channel);\n    }\n    setRemovedChannelsCount(removedChannels.length);\n    setRemovedChannels(removedChannels);\n    setNavigationBlocked(true);\n};\n", "CodeBleu_score": 16.436381513712544}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) =>     const { removedChannels, setRemovedChannels, newChannels, setNewChannels, setNavigationBlocked } = useNavigation();\n    if (!removedChannels.includes(channel)) {\n        setRemovedChannels([...removedChannels, channel]);\n        setNewChannels(newChannels.filter((c) => c !== channel));\n        setNavigationBlocked(true);\n    }\n}", "CodeBleu_score": 17.862684275145547}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) =>   if (!removedChannels.includes(channel)) {\n    setRemovedChannels((prev) => [...prev, channel]);\n  }\n  if (newChannels.includes(channel)) {\n    setNewChannels((prev) => prev.filter((c) => c.id !== channel.id));\n  }\n  setNavigationBlocked(true);\n};", "CodeBleu_score": 12.177919729329236}]}
{"instance_id": "bdc81f9a884e", "generation_result": [{"code": "private removeTeam = (team: Team) =>    const { teams, pageNumber, pageSize, pagination } = this.state;\n    const index = teams.findIndex((t) => t.id === team.id);\n\n    if (index === -1) {\n        return;\n    }\n\n    const updatedTeams = [...teams];\n    updatedTeams.splice(index, 1);\n\n    const newPageNumber = pagination.totalItems === pageSize ? pageNumber - 1 : pageNumber;\n\n    this.setState({\n        teams: updatedTeams,\n        pagination: {\n            ...pagination,\n            totalItems: pagination.totalItems - 1,\n        },\n        pageNumber: newPageNumber,\n    }, () => {\n        this.props.onTeamRemoved(team);\n    });\n};\n", "CodeBleu_score": 27.97729595109}, {"code": "private removeTeam = (team: Team) =>  if (team.isMarkedForRemoval) {\n    return;\n  }\n\n  const { pagination, currentPage } = this.state;\n  const { pageSize, totalCount } = pagination;\n  const { id } = team;\n\n  const newTeams = this.state.teams.map(t => {\n    if (t.id === id) {\n      return { ...t, isMarkedForRemoval: true };\n    }\n\n    return t;\n  });\n\n  const newPagination = { ...pagination, totalCount: totalCount - 1 };\n  const newCurrentPage =\n    currentPage > 1 && totalCount % pageSize === 1 ? currentPage - 1 : currentPage;\n\n  this.setState({\n    teams: newTeams,\n    pagination: newPagination,\n    currentPage: newCurrentPage,\n  });\n\n  this.props.onTeamRemoved(team);\n};", "CodeBleu_score": 32.470487160993386}, {"code": "private removeTeam = (team: Team) =>    if (this.state.removedTeams.includes(team)) {\n        return;\n    }\n\n    const updatedRemovedTeams = [...this.state.removedTeams, team];\n    const updatedPageNumber = this.state.pageNumber;\n\n    if (this.state.teams.length === 1) {\n        this.setState({\n            pageNumber: 0,\n            teams: [],\n            removedTeams: updatedRemovedTeams,\n        });\n        return;\n    }\n\n    if (this.state.teams.length <= this.state.pageSize) {\n        this.setState({\n            teams: [],\n            removedTeams: updatedRemovedTeams,\n        });\n        return;\n    }\n\n    const updatedTeams = this.state.teams.filter((t) => !updatedRemovedTeams.includes(t));\n\n    if (this.state.pageNumber * this.state.pageSize >= updatedTeams.length) {\n        this.setState({\n            pageNumber: Math.max(0, updatedTeams.length / this.state.pageSize - 1),\n        });\n    }\n\n    this.setState({\n        teams: updatedTeams,\n        removedTeams: updatedRemovedTeams,\n    });\n};", "CodeBleu_score": 26.138524059160172}]}
{"instance_id": "e55dd105e5d2", "generation_result": [{"code": "async function loadListInPageNumber(page: number)  try {\n    const { data } = await api.get(`/teams?page=${page}`);\n    const teams = data.teams.map((team: any) => {\n      return {\n        id: team.id,\n        name: team.displayName,\n        image: team.crestUrl,\n      };\n    });\n    teams.sort((a: any, b: any) => a.name.localeCompare(b.name));\n    if (page === 1) {\n      setList(teams);\n    } else {\n      setList([...list, ...teams]);\n    }\n    setPageNumber(page);\n  } catch (error) {\n    console.log(error);\n  }\n}\n", "CodeBleu_score": 33.19984474228549}, {"code": "async function loadListInPageNumber(page: number)  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/teams?page=${page}`\n    );\n    const data = await response.json();\n    const teams = data.teams.map((team: Team) => ({\n      id: team.id,\n      name: team.displayName,\n      abbreviation: team.abbreviation,\n      logo: team.logos[0].href,\n      conference: team.conference.name,\n      division: team.division.name,\n    }));\n    teams.sort((a: Team, b: Team) => a.name.localeCompare(b.name));\n    if (page === 1) {\n      setList(teams);\n    } else {\n      setList((prevList) => [...prevList, ...teams]);\n    }\n    setPageNumber(page);\n  } catch (error) {\n    console.error(error);\n  }\n}", "CodeBleu_score": 51.75286941044172}, {"code": "async function loadListInPageNumber(page: number)  try {\n    const teams = await getTeams(page);\n    const mappedTeams = teams.map((team) => ({\n      id: team.id,\n      name: team.displayName,\n    }));\n    const sortedTeams = mappedTeams.sort((a, b) => a.name.localeCompare(b.name));\n\n    if (page === 1) {\n      setList(sortedTeams);\n    } else {\n      setList((prevList) => [...prevList, ...sortedTeams]);\n    }\n\n    setPageNumber(page);\n  } catch (error) {\n    console.error(error);\n  }\n}\n", "CodeBleu_score": 37.66252967764621}]}
{"instance_id": "2de31ed13207", "generation_result": [{"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void)  try {\n    const teams = await searchTeams({\n      query: term,\n      pagination: {\n        limit: 10,\n      },\n    });\n\n    if (teams.length > 0) {\n      const options = teams.map((team) => ({\n        label: team.name,\n        value: team.id,\n      }));\n\n      callBack(options);\n    } else {\n      callBack([]);\n    }\n  } catch (error) {\n    console.error(error);\n    callBack([]);\n  }\n}\n", "CodeBleu_score": 49.53457458052537}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void)  try {\n    const teams = await searchTeams({\n      searchTerm: term,\n      paginationOptions: {\n        limit: 10,\n      },\n    });\n    if (teams.length > 0) {\n      const options = teams.map(team => ({\n        label: team.name,\n        value: team.id,\n      }));\n      callBack(options);\n    } else {\n      callBack([]);\n    }\n  } catch (error) {\n    console.error(error);\n    callBack([]);\n  }\n}", "CodeBleu_score": 48.95221164685012}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void)  try {\n    const {data} = await searchTeams({\n      search: term,\n      pagination: {\n        first: 10,\n      },\n    })\n\n    if (data.teams.length === 0) {\n      callBack({options: []})\n      return\n    }\n\n    const options = data.teams.map((team) => ({\n      label: team.name,\n      value: team.id,\n    }))\n\n    callBack({options})\n  } catch (error) {\n    console.error(error)\n    callBack({options: []})\n  }\n}", "CodeBleu_score": 42.91970636977611}]}
{"instance_id": "845d63ff0f74", "generation_result": [{"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>    const {\n        currentRoles,\n        groupTeams,\n        groupChannels,\n    } = this.state;\n\n    let listToUpdate = [];\n    if (type === 'team') {\n        listToUpdate = groupTeams;\n    } else if (type === 'channel') {\n        listToUpdate = groupChannels;\n    }\n\n    const newList = listToUpdate.map((item) => {\n        if (item.id === id) {\n            return {\n                ...item,\n                schemeAdmin,\n            };\n        }\n        return item;\n    });\n\n    if (type === 'team') {\n        this.setState({\n            groupTeams: newList,\n            currentRoles: {\n                ...currentRoles,\n                teams: newList,\n            },\n            saving: true,\n        });\n    } else if (type === 'channel') {\n        this.setState({\n            groupChannels: newList,\n            currentRoles: {\n                ...currentRoles,\n                channels: newList,\n            },\n            saving: true,\n        });\n    }\n\n    this.props.actions.setNavigationBlocked(true);\n};", "CodeBleu_score": 36.919239491183305}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>    const {\n        rolesToChange,\n        groupTeams,\n        groupChannels,\n    } = this.state;\n\n    const updateRoles = type === 'team' ? groupTeams : groupChannels;\n\n    const newRoles = updateRoles.map((item) => {\n        if (item.id === id) {\n            return {\n                ...item,\n                schemeAdmin,\n            };\n        }\n\n        return item;\n    });\n\n    const newState = type === 'team' ? {\n        groupTeams: newRoles,\n    } : {\n        groupChannels: newRoles,\n    };\n\n    this.setState({\n        ...newState,\n        rolesToChange: true,\n    });\n\n    this.props.actions.setNavigationBlocked(true);\n};", "CodeBleu_score": 29.879419175553235}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>    const { rolesToChange, groupTeams, groupChannels } = this.state;\n    const list = type === 'team' ? groupTeams : groupChannels;\n    const newList = list.map((item) => {\n        if (item.id === id) {\n            return { ...item, schemeAdmin };\n        }\n        return item;\n    });\n    this.setState({\n        rolesToChange: {\n            ...rolesToChange,\n            [type]: newList,\n        },\n        saving: true,\n    });\n    this.props.actions.blockNavigation(true);\n};", "CodeBleu_score": 25.129693491945105}]}
{"instance_id": "02b54f0774f3", "generation_result": [{"code": "handleRolesToUpdate = async () =>  const { rolesToChange } = this.state;\n  const promises = [];\n\n  if (rolesToChange.length) {\n    rolesToChange.forEach(role => {\n      const { syncableId, syncableType } = role;\n\n      const promise = new Promise((resolve, reject) => {\n        this.props\n          .updateRole(syncableId, syncableType)\n          .then(response => {\n            resolve(response);\n          })\n          .catch(error => {\n            reject(error);\n          });\n      });\n\n      promises.push(promise);\n    });\n\n    const results = await Promise.allSettled(promises);\n\n    const errors = results.filter(result => result.status === 'rejected');\n\n    if (errors.length) {\n      this.setState({\n        error: 'Error updating roles',\n        rolesToChange: [],\n      });\n      return false;\n    } else {\n      this.setState({\n        error: null,\n        rolesToChange: [],\n      });\n      return true;\n    }\n  }\n};", "CodeBleu_score": 41.01116692139876}, {"code": "handleRolesToUpdate = async () =>  const { rolesToChange } = this.state;\n\n  if (rolesToChange.length === 0) {\n    return false;\n  }\n\n  const promises = [];\n\n  rolesToChange.forEach((role) => {\n    const { syncableId, syncableType } = role;\n\n    const updatePromise = this.props.updateRole(syncableId, syncableType);\n    promises.push(updatePromise);\n  });\n\n  const results = await Promise.allSettled(promises);\n\n  const errors = results.filter((result) => result.status === 'rejected');\n\n  if (errors.length > 0) {\n    this.setState({\n      errorMessage: 'Error updating roles. Please try again later.',\n      rolesToChange: [],\n    });\n    return false;\n  }\n\n  this.setState({ rolesToChange: [] });\n  return true;\n};", "CodeBleu_score": 31.11047364797786}, {"code": "handleRolesToUpdate = async () =>  const { rolesToChange } = this.state;\n  const promises = [];\n  if (rolesToChange.length > 0) {\n    rolesToChange.forEach((role) => {\n      const { syncableId, syncableType } = role;\n      const promise = this.updateRole(syncableId, syncableType);\n      promises.push(promise);\n    });\n    const results = await Promise.all(promises);\n    const errors = results.filter((result) => result.error);\n    if (errors.length > 0) {\n      this.setState({\n        error:\n          'An error occurred while updating roles. Please try again later.',\n        rolesToChange: [],\n      });\n      return false;\n    }\n    this.setState({ rolesToChange: [] });\n  }\n  return true;\n};\n", "CodeBleu_score": 31.2747328736517}]}
{"instance_id": "30463a7bcb15", "generation_result": [{"code": "nextPage = async () =>  if (\n    this.state.members.length + 20 > this.state.totalMembers ||\n    this.state.loading\n  ) {\n    return;\n  }\n\n  this.setState({ loading: true });\n  let response = await fetch(\n    `${this.state.url}?page=${this.state.page + 1}&per_page=20`\n  );\n  let data = await response.json();\n\n  this.setState({\n    members: [...this.state.members, ...data],\n    page: this.state.page + 1,\n    loading: false,\n  });\n};", "CodeBleu_score": 25.701147131055357}, {"code": "nextPage = async () =>    const { page, totalMembers } = this.state;\n    const nextPage = page + 1;\n    const nextPageStart = nextPage * 10;\n\n    if (nextPageStart >= totalMembers) return;\n\n    this.setState({ loading: true });\n\n    const members = await fetchMembers(nextPage);\n\n    this.setState(prevState => ({\n        members: [...prevState.members, ...members],\n        page: nextPage,\n        loading: false\n    }));\n}\n", "CodeBleu_score": 18.098500377563116}, {"code": "nextPage = async () =>  const { members, page, total, loading } = this.state;\n  if (members.length === total) return;\n  if (loading) return;\n\n  this.setState({ loading: true });\n\n  const pageNumber = page + 1;\n\n  const response = await fetch(`https://api.github.com/orgs/rocketseat/members?page=${pageNumber}`);\n\n  const data = await response.json();\n\n  this.setState({\n    members: [...members, ...data],\n    page: pageNumber,\n    loading: false\n  });\n}\n", "CodeBleu_score": 22.76281758919319}]}
{"instance_id": "d6aba286f65f", "generation_result": [{"code": "public handleGroupSearchKeyUp(e: any)    if (e.key === 'Enter') {\n      this.setState({ page: 0 });\n      this.searchGroups();\n    }\n\n    const newState = { ...this.state };\n    if (e.target.value.length > 0) {\n      newState.groupSearch.isValid = true;\n    } else {\n      newState.groupSearch.isValid = false;\n    }\n    this.setState(newState);\n  }", "CodeBleu_score": 36.74257307594843}, {"code": "public handleGroupSearchKeyUp(e: any)    if (e.key === 'Enter') {\n      this.setState({ page: 0 });\n      this.props.searchGroups(this.state.groupSearchString);\n    }\n\n    const newState = { ...this.state };\n    newState.groupSearchString = e.target.value;\n\n    const map = {\n      '': 'all',\n      'all': 'all',\n      'my': 'my',\n      'other': 'other',\n      'public': 'public',\n      'private': 'private',\n    };\n\n    if (map[newState.groupSearchString]) {\n      newState.groupSearchString = map[newState.groupSearchString];\n    }\n\n    this.setState(newState);\n  }", "CodeBleu_score": 34.146377246211735}, {"code": "public handleGroupSearchKeyUp(e: any)    if (e.key === 'Enter') {\n      this.setState({ page: 0 });\n      this.searchGroups();\n    }\n\n    const state = { ...this.state };\n    const mapping = {\n      'Search for groups': e.target.value.length > 0,\n      'No groups found': e.target.value.length === 0,\n      'Search for groups using at least 3 characters': e.target.value.length > 2,\n    };\n\n    Object.entries(mapping).forEach(([key, value]) => {\n      state[key] = value;\n    });\n\n    this.setState(state);\n  }", "CodeBleu_score": 37.938081920523445}]}
{"instance_id": "f0ab31c8ac4b", "generation_result": [{"code": "reloadPercentage = async () =>   const { percentage, error } = await window.electron.upgrade.getUpgradePercentage();\n  if (percentage > 0 && !this.interval) {\n    this.interval = setInterval(this.reloadPercentage, 2000);\n  }\n  if (percentage >= 100) {\n    clearInterval(this.interval);\n    this.interval = null;\n    window.electron.log.info('Upgrade complete');\n    this.props.onUpgradeComplete();\n  }\n  if (error) {\n    clearInterval(this.interval);\n    this.interval = null;\n    window.electron.log.error(`Upgrade error: ${error}`);\n    this.props.onUpgradeError(error);\n  }\n  this.setState({ percentage, error });\n}\n", "CodeBleu_score": 42.06572745782009}, {"code": "reloadPercentage = async () =>     const { percentage, error } = await getUpgradeStatus();\n    if (percentage >= 100) {\n      clearInterval(this.interval);\n      this.interval = null;\n      this.setState({\n        percentage: percentage,\n        error: error,\n      });\n      if (error) {\n        console.log('Error during upgrade:', error);\n      } else {\n        console.log('Upgrade completed successfully.');\n      }\n    } else {\n      if (percentage > 0 && !this.interval) {\n        this.interval = setInterval(this.reloadPercentage, 2000);\n      }\n      this.setState({\n        percentage: percentage,\n        error: error,\n      });\n    }\n  }", "CodeBleu_score": 44.083208013970086}, {"code": "reloadPercentage = async () =>     const {percentage, error} = await window.electron.ipcRenderer.invoke('get-upgrade-status');\n    if (percentage === 0 && !error) {\n        clearInterval(this.interval);\n        this.interval = null;\n        window.electron.ipcRenderer.send('log-event', {\n            event: 'upgrade-complete',\n            properties: {\n                version: this.state.version,\n            },\n        });\n    } else if (error) {\n        clearInterval(this.interval);\n        this.interval = null;\n        window.electron.ipcRenderer.send('log-event', {\n            event: 'upgrade-error',\n            properties: {\n                version: this.state.version,\n                error: error,\n            },\n        });\n    }\n    this.setState({percentage, error});\n}\n", "CodeBleu_score": 33.99564139841133}]}
{"instance_id": "f91ab43e6fe1", "generation_result": [{"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) =>     e.preventDefault();\n    if (file) {\n      setUploading(true);\n      dispatch(uploadLicense(file));\n      if (serverError) {\n        setFile(null);\n        setServerError('');\n        setUploading(false);\n      } else {\n        dispatch(getLicenseConfig());\n        setFile(null);\n        setServerError('');\n        setUploading(false);\n        setUploadSuccess(true);\n      }\n    }\n  };\n\n  /**\n   * This function, handleChange, handles the change event of a file input element.\\nIt sets the file object to the selected file and updates the file name state.\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n    }\n  };\n\n  return (\n    <div className=\"upload-license\">\n      <h2>Upload License</h2>\n      <form>\n        <label htmlFor=\"file\">Choose a file:</label>\n        <input type=\"file\" id=\"file\" name=\"file\" onChange={handleChange} />\n        {file ? <p>{fileName}</p> : null}\n        <button type=\"submit\" onClick={handleSubmit}>\n          {uploading ? 'Uploading...' : 'Upload'}\n        </button>\n        {serverError ? <p className=\"error\">{serverError}</p> : null}\n        {uploadSuccess ? <p className=\"success\">Upload successful</p> : null}\n      </form>\n    </div>\n  );\n};\n", "CodeBleu_score": 35.65228574131755}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) =>     e.preventDefault();\n    if (file) {\n      setUploading(true);\n      const result = await dispatch(uploadFile(file));\n      if (result.meta.requestStatus === 'rejected') {\n        setFile(null);\n        setServerError(result.payload);\n        setUploading(false);\n      } else {\n        dispatch(getLicenseConfig());\n        setFile(null);\n        setServerError('');\n        setUploading(false);\n        setUploadSuccess(true);\n      }\n    }\n  };\n\n  /**\n * This function, handleChange, handles the change event of a file input element.\\nIt extracts the file object from the event target and sets it as the current file.\\nIf the file is not of type 'application/zip', it sets an error message.\\nIf the file is of the correct type, it sets the error message to an empty string.\n */\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    setFile(file);\n    if (file && file.type !== 'application/zip') {\n      setError('Please upload a zip file');\n    } else {\n      setError('');\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen\">\n      <div className=\"flex flex-col items-center justify-center w-full max-w-md p-6 bg-white rounded-lg shadow-md\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Upload License File</h2>\n        <form className=\"flex flex-col w-full\">\n          <input\n            type=\"file\"\n            className=\"mb-4\"\n            onChange={handleChange}\n          />\n          {error && <p className=\"text-red-500\">{error}</p>}\n          {serverError && <p className=\"text-red-500\">{serverError}</p>}\n          <button\n            className=\"bg-blue-", "CodeBleu_score": 38.06963224227295}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) =>   e.preventDefault();\n  if (file) {\n    setUploading(true);\n    dispatch(uploadLicense(file));\n  }\n};\n", "CodeBleu_score": 13.595321371765001}]}
{"instance_id": "840d965d4dcc", "generation_result": [{"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>    e.preventDefault();\n    if (this.props.confirmationNeeded && !this.state.confirmation) {\n      this.setState({ confirmation: true });\n      return;\n    }\n\n    this.setState({ saving: true });\n    this.props.clearServerErrors();\n\n    if (this.props.saveNeeded) {\n      if (this.props.permissions) {\n        const roleBindings = this.props.permissions.map((setting) => {\n          const roleBinding = setting.roles.find((role) => role.name === setting.roleName);\n          if (roleBinding) {\n            roleBinding.subjects = setting.subjects;\n            return roleBinding;\n          }\n          return {\n            name: setting.roleName,\n            subjects: setting.subjects,\n          };\n        });\n        try {\n          await this.props.updateRoles(roleBindings);\n        } catch (err) {\n          this.props.setServerErrors(err);\n          this.setState({ saving: false });\n          return;\n        }\n      } else {\n        try {\n          await this.props.submitSettings();\n        } catch (err) {\n          this.props.setServerErrors(err);\n          this.setState({ saving: false });\n          return;\n        }\n      }\n    }\n\n    this.setState({ confirmation: false });\n    this.props.resetState();\n    this.props.unblockNavigation();\n  };", "CodeBleu_score": 39.20743685130809}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>  e.preventDefault();\n  if (this.state.confirmation) {\n    this.setState({ confirmation: false });\n    return;\n  }\n\n  if (this.state.saveNeeded) {\n    this.setState({ saving: true, serverError: null });\n    if (this.props.settingsType === 'permissions') {\n      const roleBindings = this.mapSettingsToRoleBindings(this.state.settings);\n      this.updateRoles(roleBindings).then(() => {\n        this.setState({ saving: false });\n        this.props.onSave();\n      }).catch(err => {\n        this.setState({ saving: false, serverError: err.message });\n      });\n    } else {\n      this.props.onSubmit(this.state.settings).then(() => {\n        this.setState({ saving: false });\n        this.props.onSave();\n      }).catch(err => {\n        this.setState({ saving: false, serverError: err.message });\n      });\n    }\n  } else {\n    this.props.onSave();\n  }\n};", "CodeBleu_score": 25.582110353728453}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>    e.preventDefault();\n    if (this.state.confirmation) {\n        this.setState({\n            confirmation: false,\n        });\n        return;\n    }\n    if (this.state.saveNeeded) {\n        this.setState({\n            saving: true,\n            serverError: \"\",\n        });\n        if (this.props.permissions) {\n            const roleBindings = this.getRoleBindings();\n            try {\n                await this.props.updateRoles(roleBindings);\n            } catch (err) {\n                this.setState({\n                    serverError: err.message,\n                });\n            }\n        } else {\n            try {\n                await this.props.submit(this.state.settings);\n                this.props.history.push(this.props.nextPath);\n                this.props.unblockNavigation();\n            } catch (err) {\n                this.setState({\n                    serverError: err.message,\n                });\n            }\n        }\n        this.setState({\n            saving: false,\n        });\n    }\n};", "CodeBleu_score": 27.533750336177548}]}
{"instance_id": "86453b2860e5", "generation_result": [{"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>  const { text, customClass } = props;\n  const { openSalesLink } = useSalesLink();\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    trackEvent('Contact Us Button Clicked');\n    openSalesLink();\n  };\n\n  return (\n    <button\n      className={`${customClass}`}\n      onClick={handleClick}\n    >\n      {text}\n    </button>\n  );\n};\n", "CodeBleu_score": 27.117877883939766}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>  const { trackEvent } = useTrackEvent();\n  const { openSalesLink } = useSalesContactLink();\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    trackEvent({\n      eventName: 'ContactUsButtonClick',\n      eventData: {\n        buttonText: props.text,\n      },\n    });\n    openSalesLink();\n  };\n\n  return (\n    <button\n      className={`${props.className} contact-us-button`}\n      onClick={handleClick}\n    >\n      {props.text}\n    </button>\n  );\n};", "CodeBleu_score": 32.98942988485105}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>    const { openSalesLink } = useSalesLink();\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        openSalesLink();\n        trackEvent('contact_us_button_clicked', {\n            category: 'Contact Us',\n            label: 'Button Clicked',\n            value: 'Button Clicked',\n        });\n    };\n\n    return (\n        <button className={props.customClass} onClick={handleClick}>\n            {props.text}\n        </button>\n    );\n};\n", "CodeBleu_score": 31.935736027238793}]}
{"instance_id": "49713e95ae2e", "generation_result": [{"code": "const RenewalLink = (props: RenewalLinkProps) =>   const { openContactSales } = useContactSales();\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <Button\n      className=\"renewal-link\"\n      disabled={props.disabled}\n      onClick={handleClick}\n      type=\"button\"\n    >\n      {props.message}\n    </Button>\n  );\n};\n", "CodeBleu_score": 26.726947416548462}, {"code": "const RenewalLink = (props: RenewalLinkProps) =>   const { formatMessage } = useIntl();\n  const { openContactSales } = useContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <Button\n      variant=\"primary\"\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      {formatMessage(messages.renewalLink)}\n    </Button>\n  );\n};", "CodeBleu_score": 31.387312199913165}, {"code": "const RenewalLink = (props: RenewalLinkProps) =>   const { openContactSales } = useContactSales();\n  const { isDisabled, message } = props;\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <Button\n      className=\"renewal-link\"\n      disabled={isDisabled}\n      onClick={handleClick}\n    >\n      {message}\n    </Button>\n  );\n};", "CodeBleu_score": 34.87567148149238}]}
{"instance_id": "23618eba67aa", "generation_result": [{"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>    let hasErrors = false;\n    const errorMap: {[x: string]: string} = {};\n\n    if (formError) {\n        hasErrors = true;\n        errorMap['form'] = formError;\n    }\n\n    if (fieldErrors) {\n        hasErrors = true;\n        for (const fieldName in fieldErrors) {\n            const element = elements.find((element) => element.name === fieldName);\n            if (element) {\n                errorMap[fieldName] = fieldErrors[fieldName];\n            } else {\n                errorMap[fieldName] = 'Unknown error';\n            }\n        }\n    }\n\n    this.setState({errorMap});\n\n    return hasErrors;\n}", "CodeBleu_score": 34.43859119173198}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>    let hasErrors = false;\n    const elementsWithErrors: DialogElement[] = [];\n    const errorMessages: string[] = [];\n    if (formError) {\n        hasErrors = true;\n        errorMessages.push(formError);\n    }\n    if (fieldErrors) {\n        for (const element of elements) {\n            const error = fieldErrors[element.name];\n            if (error) {\n                hasErrors = true;\n                elementsWithErrors.push(element);\n                errorMessages.push(error);\n            }\n        }\n    }\n    if (hasErrors) {\n        this.setState({\n            elementsWithErrors,\n            errorMessages: errorMessages.map(error => {\n                return (\n                    <Markdown\n                        key={error}\n                        text={error}\n                    />\n                );\n            }),\n        });\n    }\n    return hasErrors;\n};", "CodeBleu_score": 41.053237790178144}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>    let hasErrors = false;\n    if (formError) {\n        hasErrors = true;\n        setState({\n            formError: {\n                message: formError,\n                type: \"message\"\n            }\n        });\n    }\n    if (fieldErrors) {\n        for (const element of elements) {\n            if (element.type === \"TextInput\" || element.type === \"TextArea\") {\n                const fieldError = fieldErrors[element.name];\n                if (fieldError) {\n                    hasErrors = true;\n                    element.error = {\n                        message: fieldError,\n                        type: \"message\"\n                    };\n                }\n            }\n        }\n    }\n    if (hasErrors) {\n        setState({\n            elements\n        });\n        return true;\n    }\n    return false;\n}\n", "CodeBleu_score": 34.45368784752215}]}
{"instance_id": "10be7e79f7e0", "generation_result": [{"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>  const lowerCaseInput = userInput.toLowerCase();\n  const channels = await autocomplete(lowerCaseInput);\n  return channels.map((channel) => ({\n    label: channel.display_name,\n    value: channel.id,\n  }));\n};\n", "CodeBleu_score": 33.878027849145774}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>    const lowerCaseInput = userInput.toLowerCase();\n    const channels = await autocompleteChannels(lowerCaseInput);\n    return channels.map((channel) => {\n        return {\n            label: channel.display_name,\n            value: channel.id,\n        };\n    });\n};", "CodeBleu_score": 40.49316367650446}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>  const lowerCaseInput = userInput.trim().toLowerCase();\n  const channelSearch = await client.channels.autocomplete({\n    name: lowerCaseInput,\n    limit: 20,\n  });\n  const options: AppSelectOption[] = channelSearch.map((channel) => ({\n    label: channel.data.name,\n    value: channel.data.id,\n  }));\n  return options;\n};", "CodeBleu_score": 39.016012206266836}]}
{"instance_id": "b44d060ba306", "generation_result": [{"code": "handleJoin = async (channel: Channel, done: () => void) =>     const { actions, currentUserId, teamId, teamName } = this.props;\n    const { joinChannel } = actions;\n    const channelId = channel.id;\n    const channelName = channel.display_name;\n\n    if (!channel.is_member) {\n        try {\n            await joinChannel(currentUserId, teamId, channelId);\n            this.updateChannelMemberCount(channelId);\n            this.props.history.push(`/${teamName}/channels/${channelName}`);\n            this.props.toggleRHS();\n            if (done) {\n                done();\n            }\n        } catch (error) {\n            this.setState({ serverError: error.message });\n        }\n    }\n};\n", "CodeBleu_score": 37.87844801092723}, {"code": "handleJoin = async (channel: Channel, done: () => void) =>     const { actions, currentUserId, teamId, teamName } = this.props;\n\n    if (!channel.members.some((member) => member.user_id === currentUserId)) {\n        try {\n            await actions.joinChannel(channel.id);\n        } catch (error) {\n            this.setState({ serverError: error.message });\n            return;\n        }\n    }\n\n    this.updateChannelMemberCount(channel.id);\n\n    navigate(`/${teamName}/channels/${channel.name}`);\n\n    if (this.props.onClose) {\n        this.props.onClose();\n    }\n\n    if (done) {\n        done();\n    }\n};\n", "CodeBleu_score": 39.831701824453376}, {"code": "handleJoin = async (channel: Channel, done: () => void) =>     const { actions, currentUserId, teamId, teamName } = this.props;\n    const channelId = channel.id;\n    const channelName = channel.name;\n\n    if (!channel.member) {\n        try {\n            await actions.joinChannel(teamId, channelId);\n        } catch (error) {\n            this.setState({ serverError: error.message });\n            return;\n        }\n    }\n\n    this.updateChannelMemberCount(channelId);\n    this.props.history.push(`/${teamName}/channels/${channelName}`);\n    this.props.closeRhs();\n\n    if (done) {\n        done();\n    }\n}\n", "CodeBleu_score": 37.29235543758182}]}
{"instance_id": "c6636f0c9c0b", "generation_result": [{"code": "const CardHeader: React.FC<Props> = (props: Props) =>  const { children, onClick, expanded } = props;\n  const classNames = ['card-header'];\n\n  if (expanded) {\n    classNames.push('expanded');\n  }\n\n  return (\n    <div className={classNames.join(' ')} onClick={onClick}>\n      {children}\n      {expanded && <hr />}\n    </div>\n  );\n};\n", "CodeBleu_score": 35.35675335731827}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>  const { children, className, expanded, onClick } = props;\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    event.preventDefault();\n    onClick();\n  };\n\n  return (\n    <div\n      className={`card-header ${className} ${expanded ? 'expanded' : ''}`}\n      onClick={handleClick}\n    >\n      {children}\n      {expanded && <hr />}\n    </div>\n  );\n};\n", "CodeBleu_score": 43.71972383544628}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>  const { children, expanded, onClick } = props;\n  return (\n    <div\n      className={`card-header ${expanded ? \"expanded\" : \"\"}`}\n      onClick={onClick}\n    >\n      {children}\n      {expanded && <hr />}\n    </div>\n  );\n};\n", "CodeBleu_score": 31.779381125423043}]}
{"instance_id": "230cb3cd6dd5", "generation_result": [{"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>  const { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n  return (\n    <div className=\"flex justify-between items-center\">\n      <div>\n        <h1 className=\"text-xl font-bold\">{title}</h1>\n        {subtitle && <h2 className=\"text-sm text-gray-500\">{subtitle}</h2>}\n      </div>\n      {buttonText && onClick && (\n        <button\n          className={`${\n            isDisabled ? \"bg-gray-300\" : \"bg-blue-500 hover:bg-blue-600\"\n          } text-white font-bold py-2 px-4 rounded`}\n          onClick={onClick}\n          disabled={isDisabled}\n        >\n          {buttonText}\n        </button>\n      )}\n    </div>\n  );\n};\n", "CodeBleu_score": 26.076558910040337}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>  const { title, subtitle, buttonText, onClick, isDisabled } = props;\n  return (\n    <div className=\"flex flex-row justify-between items-center\">\n      <div className=\"flex flex-col\">\n        <span className=\"text-lg font-semibold\">{title}</span>\n        {subtitle && <span className=\"text-sm text-gray-500\">{subtitle}</span>}\n      </div>\n      {buttonText && onClick && (\n        <button\n          className={`${\n            isDisabled ? 'bg-gray-500' : 'bg-blue-500 hover:bg-blue-700'\n          } text-white font-bold py-2 px-4 rounded`}\n          onClick={onClick}\n          disabled={isDisabled}\n        >\n          {buttonText}\n        </button>\n      )}\n    </div>\n  );\n};\n", "CodeBleu_score": 26.310710739191713}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>  const { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n  return (\n    <div className=\"flex justify-between items-center\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\n        {subtitle && <p className=\"text-sm text-gray-500\">{subtitle}</p>}\n      </div>\n      {buttonText && onClick && (\n        <button\n          className={`${\n            isDisabled\n              ? \"bg-gray-300 text-gray-500 cursor-not-allowed\"\n              : \"bg-blue-500 text-white hover:bg-blue-600\"\n          } px-4 py-2 rounded-md`}\n          onClick={onClick}\n          disabled={isDisabled}\n        >\n          {buttonText}\n        </button>\n      )}\n    </div>\n  );\n};\n", "CodeBleu_score": 27.14191961780391}]}
{"instance_id": "eb5c7946fd59", "generation_result": [{"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {    if (!services.notifications) {\n        throw new Error('Notifications service is not available');\n    }\n\n    const show = (\n        title: string,\n        body: string,\n        color: string,\n        icon: string,\n        lifetime: number,\n        onClose: () => void\n    ) => {\n        services.notifications.toasts.add({\n            title,\n            text: body,\n            color,\n            iconType: icon,\n            toastLifeTimeMs: lifetime,\n            onClose,\n        });\n    };\n\n    const success = (title: string, body: string, lifetime = 3000, onClose?: () => void) => {\n        show(title, body, 'success', 'check', lifetime, onClose);\n    };\n\n    const warning = (title: string, body: string, lifetime = 3000, onClose?: () => void) => {\n        show(title, body, 'warning', 'help', lifetime, onClose);\n    };\n\n    const danger = (title: string, body: string, lifetime = 3000, onClose?: () => void) => {\n        show(title, body, 'danger', 'alert', lifetime, onClose);\n    };\n\n    return {\n        show,\n        success,\n        warning,\n        danger,\n    };\n}\n\n};", "CodeBleu_score": 32.34575783793611}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {    const {\n        notifications: { toasts: toastsService },\n    } = services;\n\n    if (!toastsService) {\n        throw new Error('The notification service is unavailable.');\n    }\n\n    const show = ({\n        title,\n        body,\n        color,\n        icon,\n        lifetime,\n        onClose,\n    }: KibanaReactNotificationsOptions) => {\n        toastsService.add({\n            title,\n            text: body,\n            color,\n            iconType: icon,\n            toastLifeTimeMs: lifetime,\n            onClose,\n        });\n    };\n\n    const success = (options: KibanaReactNotificationsOptions) => {\n        show({\n            color: 'success',\n            icon: 'check',\n            ...options,\n        });\n    };\n\n    const warning = (options: KibanaReactNotificationsOptions) => {\n        show({\n            color: 'warning',\n            icon: 'help',\n            ...options,\n        });\n    };\n\n    const danger = (options: KibanaReactNotificationsOptions) => {\n        show({\n            color: 'danger',\n            icon: 'alert',\n            ...options,\n        });\n    };\n\n    return {\n        show,\n        success,\n        warning,\n        danger,\n    };\n};", "CodeBleu_score": 39.23012133391811}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {  const { notifications } = services;\n  if (!notifications) {\n    throw new Error('Could not find the Kibana notifications service');\n  }\n\n  const show = ({\n    title,\n    body,\n    color,\n    icon,\n    lifetime,\n    onClose,\n  }: KibanaReactNotificationsOptions) => {\n    notifications.toasts.add({\n      title,\n      body,\n      color,\n      icon,\n      toastLifeTimeMs: lifetime,\n      onClose,\n    });\n  };\n\n  const success = (options: KibanaReactNotificationsOptions) => {\n    show({\n      ...options,\n      color: 'success',\n      icon: 'check',\n    });\n  };\n\n  const warning = (options: KibanaReactNotificationsOptions) => {\n    show({\n      ...options,\n      color: 'warning',\n      icon: 'help',\n    });\n  };\n\n  const danger = (options: KibanaReactNotificationsOptions) => {\n    show({\n      ...options,\n      color: 'danger',\n      icon: 'alert',\n    });\n  };\n\n  return {\n    show,\n    success,\n    warning,\n    danger,\n  };\n}", "CodeBleu_score": 35.761392114291915}]}
{"instance_id": "e8c4d43e5232", "generation_result": [{"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>  if (core.overlays.openFlyout) {\n    const mount = createMountPoint(node, options);\n    return core.overlays.openFlyout(mount, options);\n  }\n};", "CodeBleu_score": 35.95478276718694}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>  const {\n    theme,\n    'data-test-subj': dataTestSubj,\n    ownFocus = true,\n    'aria-label': ariaLabel,\n    size,\n    maxWidth,\n    closeButtonAriaLabel,\n    onClose = noop,\n  } = options || {};\n\n  const flyoutSession = overlays.openFlyout(\n    toMountPoint(node, { theme$: theme.theme$ }),\n    {\n      ownFocus,\n      'data-test-subj': dataTestSubj,\n      'aria-label': ariaLabel,\n      maxWidth,\n      closeButtonAriaLabel,\n      onClose,\n      size,\n    }\n  );\n\n  return {\n    close: flyoutSession.close,\n  };\n};\n", "CodeBleu_score": 31.74642960570727}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>  if (!core) {\n    throw new Error('Core services not available at this point.');\n  }\n\n  const flyoutSession = core.overlays.openFlyout(\n    mountPointToUnmountCallback(node, core.theme, core.i18n),\n    options\n  );\n  return {\n    close: flyoutSession.close,\n  };\n};\n", "CodeBleu_score": 36.41069465395512}]}
{"instance_id": "89d99efaa3c9", "generation_result": [{"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>    if (onClickCallback) {\n      onClickCallback();\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.target instanceof HTMLAnchorElement && event.target.target !== '') {\n      return;\n    }\n\n    if (event.button !== 0 || event.metaKey || event.altKey || event.ctrlKey || event.shiftKey) {\n      return;\n    }\n\n    event.preventDefault();\n    history.push(to);\n  };", "CodeBleu_score": 44.81163214625729}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>    if (onClickCallback) {\n      onClickCallback(event);\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.target instanceof HTMLElement && event.target.hasAttribute('target')) {\n      return;\n    }\n\n    if (event.button !== 0 || event.metaKey || event.altKey || event.ctrlKey || event.shiftKey) {\n      return;\n    }\n\n    event.preventDefault();\n    history.push(to);\n  };", "CodeBleu_score": 49.45316780669165}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>    if (onClickCallback) {\n      onClickCallback(event);\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.target instanceof HTMLAnchorElement && event.target.target !== '') {\n      return;\n    }\n\n    if (event.button !== 0) {\n      return;\n    }\n\n    if (event.metaKey || event.altKey || event.ctrlKey || event.shiftKey) {\n      return;\n    }\n\n    event.preventDefault();\n    history.push(to);\n  };", "CodeBleu_score": 48.87442446996132}]}
{"instance_id": "8d8e28c04bbd", "generation_result": [{"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] =>   const { services } = useKibana();\n\n  if (!services.uiSettings) {\n    throw new Error('uiSettings service unavailable');\n  }\n\n  const setting$ = services.uiSettings.get$(key, defaultValue);\n  const [setting, setSetting] = useState<T>(setting$.value);\n\n  useEffect(() => {\n    const subscription = setting$.subscribe((value) => {\n      setSetting(value);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [setting$]);\n\n  const setter = (value: T) => {\n    services.uiSettings.set(key, value);\n  };\n\n  return [setting, setter];\n};", "CodeBleu_score": 38.211027676811554}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] =>   const { services } = useKibana();\n  const { globalUiSettings } = services;\n\n  if (!globalUiSettings) {\n    throw new Error('Global UI Settings service is not available');\n  }\n\n  const [value, setValue] = useState<T>(globalUiSettings.get(key, defaultValue));\n\n  useEffect(() => {\n    const subscription = globalUiSettings.get$(key).subscribe((newValue) => {\n      setValue(newValue);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [key, globalUiSettings]);\n\n  const setter = useCallback(\n    (newValue: T) => {\n      globalUiSettings.set(key, newValue);\n    },\n    [key, globalUiSettings]\n  );\n\n  return [value, setter];\n};", "CodeBleu_score": 39.02292520585118}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] =>   const { services } = useKibana();\n  const uiSettings = services.uiSettings;\n\n  if (!uiSettings) {\n    throw new Error('uiSettings service unavailable');\n  }\n\n  const [value, setValue] = useState(uiSettings.get(key, defaultValue));\n\n  useEffect(() => {\n    const subscription = uiSettings.get$(key).subscribe((newValue) => {\n      setValue(newValue);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [key, uiSettings]);\n\n  const setter = (newValue: T) => {\n    uiSettings.set(key, newValue);\n  };\n\n  return [value, setter];\n};", "CodeBleu_score": 39.503172112105275}]}
{"instance_id": "7da631faf620", "generation_result": [{"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>  const panel = panels[id];\n  if (!panel) {\n    return;\n  }\n\n  const { items, ...rest } = panel;\n  const visibleItems = items.slice(0, 3);\n  const submenuItems = items.slice(3);\n\n  if (submenuItems.length === 0) {\n    return;\n  }\n\n  const submenuPanel: PanelDescriptor = {\n    ...rest,\n    items: submenuItems,\n  };\n\n  const moreItem: PanelItem = {\n    id: `${id}-more`,\n    type: 'submenu',\n    title: 'More',\n    panel: submenuPanel,\n  };\n\n  panels[id] = {\n    ...rest,\n    items: [...visibleItems, moreItem],\n  };\n\n  panels[submenuPanel.id] = submenuPanel;\n};\n", "CodeBleu_score": 34.49637613320857}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>  const panel = panels[id];\n  if (!panel) return;\n\n  const { items, ...rest } = panel;\n  if (!items || items.length <= 4) return;\n\n  const visibleItems = items.slice(0, 4);\n  const submenuItems = items.slice(4);\n\n  const submenuPanel: PanelDescriptor = {\n    id: `${id}_submenu`,\n    title: '',\n    items: submenuItems,\n    ...rest,\n  };\n\n  const newPanel: PanelDescriptor = {\n    ...rest,\n    id,\n    items: visibleItems,\n    appendMenuItems(closeMenu: () => void) {\n      return [\n        {\n          icon: 'arrow-down',\n          label: 'More',\n          panel: submenuPanel.id,\n          onClick: closeMenu,\n        },\n      ];\n    },\n  };\n\n  panels[id] = newPanel;\n  panels[submenuPanel.id] = submenuPanel;\n};\n", "CodeBleu_score": 41.63364561720421}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>  const panel = panels[id];\n  if (!panel) return;\n\n  const { items: panelItems, ...rest } = panel;\n  const { limit = 5 } = panel;\n  const visibleItems = panelItems.slice(0, limit);\n  const submenuItems = panelItems.slice(limit);\n\n  const subpanel = {\n    ...rest,\n    items: submenuItems,\n    isSubpanel: true,\n  };\n\n  panels[id] = {\n    ...panel,\n    items: visibleItems,\n    more: {\n      id: `${id}_more`,\n      title: 'More',\n      icon: 'more',\n      onClick: () => {\n        // eslint-disable-next-line no-console\n        console.log('More clicked');\n      },\n    },\n  };\n\n  panels[`${id}_more`] = subpanel;\n};\n", "CodeBleu_score": 31.576905306215735}]}
{"instance_id": "7a1a98211380", "generation_result": [{"code": "private scheduleFlush()    if (this.pendingTasks.length > 0) {\n        setTimeout(() => {\n            this.processPendingTasks();\n        }, 100);\n    }\n    else {\n        const tasks = Array.from(this.batchingQueue);\n        this.batchingQueue.clear();\n        if (tasks.some(task => task.alwaysShowPopup)) {\n            this.showPopup(tasks);\n        }\n        else if (tasks.length === 1) {\n            tasks[0].execute();\n        }\n        else if (tasks.length > 1) {\n            this.showPopup(tasks);\n        }\n    }\n}", "CodeBleu_score": 41.58350993442978}, {"code": "private scheduleFlush()  if (this.pending) {\n    clearTimeout(this.pending);\n  }\n  this.pending = setTimeout(() => {\n    const tasks = this.batchingQueue.length ? this.batchingQueue : [...new Set(this.queue)];\n    if (tasks.some(task => task.alwaysShowPopup)) {\n      this.showPopupMenu(tasks);\n    } else if (tasks.length === 1) {\n      tasks[0].execute();\n    } else if (tasks.length > 1) {\n      this.showPopupMenu(tasks);\n    }\n    this.queue = [];\n    this.batchingQueue = [];\n  }, 0);\n}", "CodeBleu_score": 45.341662334581166}, {"code": "private scheduleFlush()    if (this.pendingTasks.length === 0) {\n        this.pendingTasks = Array.from(this.batchingQueue);\n        this.batchingQueue.clear();\n    }\n    if (this.pendingTasks.some((task) => task.alwaysShowPopup)) {\n        this.showPopupMenu();\n    }\n    else {\n        if (this.pendingTasks.length === 1) {\n            this.executeTask(this.pendingTasks[0]);\n        }\n        else {\n            this.showPopupMenu();\n        }\n    }\n    this.pendingTasks = [];\n}", "CodeBleu_score": 20.52640237548646}]}
{"instance_id": "702779fd9f4a", "generation_result": [{"code": "public async execute(context: Context, alwaysShowPopup?: boolean)  const actions = await this.actionService.getCompatibleActions(context);\n  const promises = actions.map(async (action) => {\n    await this.executionService.executeAction(action, context, this, alwaysShowPopup);\n  });\n  await Promise.all(promises);\n}", "CodeBleu_score": 43.65470944192949}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean)  const actions = await this.getCompatibleActions(context, this.trigger);\n\n  if (actions.length === 0) {\n    return;\n  }\n\n  return Promise.allSettled(\n    actions.map((action) => {\n      return this.executionService.execute(action, context, this.trigger, alwaysShowPopup);\n    })\n  );\n}", "CodeBleu_score": 41.04106048289171}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean)    const actions = await this.getActions(context, this.trigger);\n\n    if (!actions.length) {\n        return;\n    }\n\n    await this.executionService.executeActions(\n        actions,\n        context,\n        this.trigger,\n        alwaysShowPopup,\n    );\n}", "CodeBleu_score": 41.62553807496903}]}
{"instance_id": "16fd1e46a9be", "generation_result": [{"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[]     const images: Uint8Array[] = [];\n    let chunkData = chunk.slice(0);\n\n    for (let i = 0; i < frameCount; i++) {\n        const subChunk = new Chunk(chunkData);\n        if (subChunk.type !== 'icon') {\n            throw new Error(`Invalid sub-chunk type at index ${i}: ${subChunk.type}`);\n        }\n        images.push(subChunk.slice(0));\n        chunkData = chunkData.slice(subChunk.length + 8);\n    }\n\n    return images;\n}\n", "CodeBleu_score": 39.79646429211767}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[]   const images: Uint8Array[] = [];\n  let chunkOffset = 8;\n  for (let i = 0; i < frameCount; i++) {\n    const subChunk = new Chunk(chunk.data, chunkOffset);\n    if (subChunk.type !== 'icon') {\n      throw new Error(`Invalid sub-chunk type for frame ${i}: ${subChunk.type}`);\n    }\n    const imageData = chunk.data.slice(chunkOffset + 8, chunkOffset + 8 + subChunk.length);\n    images.push(imageData);\n    chunkOffset += subChunk.length + 8;\n  }\n  return images;\n}\n", "CodeBleu_score": 40.513360250544814}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[]   const images = [];\n  let offset = 0;\n\n  for (let i = 0; i < frameCount; i++) {\n    const subChunk = chunk.slice(offset);\n    if (subChunk.type !== 'icon') {\n      throw new Error(`Invalid sub-chunk type at offset ${offset}: ${subChunk.type}`);\n    }\n    images.push(subChunk.data);\n    offset += subChunk.length;\n  }\n\n  return images;\n}\n", "CodeBleu_score": 40.616359858311995}]}
{"instance_id": "6b6f91239073", "generation_result": [{"code": "function readAni(contents: Uint8Array): AniCursorImage  const view = new DataView(contents.buffer, contents.byteOffset, contents.byteLength);\n  const magic = readString(view, 0, 4);\n  if (magic !== \"RIFF\") {\n    throw new Error(\"Invalid ANI file format\");\n  }\n\n  const fileSize = view.getUint32(4, true);\n  const fileType = readString(view, 8, 4);\n  if (fileType !== \"ACON\") {\n    throw new Error(\"Invalid ANI file format\");\n  }\n\n  const headerSize = view.getUint32(12, true);\n  const version = view.getUint32(16, true);\n  const numFrames = view.getUint32(20, true);\n  const numSteps = view.getUint32(24, true);\n  const width = view.getUint32(28, true);\n  const height = view.getUint32(32, true);\n  const colorCount = view.getUint32(36, true);\n  const displayRate = view.getUint32(40, true);\n\n  const frameDataOffset = 48;\n  const frames: AniCursorFrame[] = [];\n\n  for (let i = 0; i < numFrames; i++) {\n    const frameOffset = frameDataOffset + i * 20;\n    const frameData = readString(view, frameOffset, 20);\n    const frame: AniCursorFrame = {\n      url: `data:image/png;base64,${btoa(frameData)}`,\n      percentages: [],\n    };\n    frames.push(frame);\n  }\n\n  const totalDuration = (numFrames / displayRate) * 1000;\n\n  for (let i = 0; i < numFrames; i++) {\n    const frame = frames[i];\n    const elapsedTime = (i / displayRate) * 1000;\n    const elapsedPercentage = (elapsedTime / totalDuration) * 100;\n    frame.percentages", "CodeBleu_score": 27.09861681457666}, {"code": "function readAni(contents: Uint8Array): AniCursorImage  const view = new DataView(contents.buffer);\n\n  const header = {\n    magic: view.getUint16(0, true),\n    frames: view.getUint16(2, true),\n    steps: view.getUint16(4, true),\n    width: view.getUint16(6, true),\n    height: view.getUint16(8, true),\n    flags: view.getUint16(10, true),\n    speed: view.getUint16(12, true),\n    background: view.getUint32(14, true),\n    aspect: view.getUint16(18, true),\n  };\n\n  const displayRate = header.speed / 60;\n\n  const totalDuration = header.frames * displayRate * 1000;\n\n  const frames: Frame[] = [];\n\n  for (let i = 0; i < header.frames; i++) {\n    const frame = {\n      image: `frame${i}.png`,\n      percentage: [],\n    };\n\n    frames.push(frame);\n  }\n\n  for (let i = 0; i < header.frames; i++) {\n    const frame = frames[i];\n    const elapsed = i * displayRate * 1000;\n    const percentage = (elapsed / totalDuration) * 100;\n    frame.percentage.push(percentage);\n  }\n\n  return {\n    totalDuration,\n    frames,\n  };\n}", "CodeBleu_score": 31.241448201232934}, {"code": "function readAni(contents: Uint8Array): AniCursorImage  const frames: AniFrame[] = [];\n  const header = contents.slice(0, 32);\n  const frameCount = header.readUInt32LE(24);\n  const displayRate = header.readUInt32LE(12);\n  const totalDuration = Math.floor(1000 / displayRate);\n\n  for (let i = 0; i < frameCount; i++) {\n    const offset = 36 + i * 4;\n    const frameOffset = header.readUInt32LE(offset);\n    const frame = contents.slice(frameOffset, frameOffset + 40);\n    const width = frame.readUInt16LE(0);\n    const height = frame.readUInt16LE(2);\n    const x = frame.readUInt16LE(4);\n    const y = frame.readUInt16LE(6);\n    const hotspotX = frame.readUInt16LE(12);\n    const hotspotY = frame.readUInt16LE(14);\n    const dataSize = frame.readUInt32LE(20);\n    const dataOffset = frame.readUInt32LE(24);\n    const data = contents.slice(dataOffset, dataOffset + dataSize);\n    const image = new Image();\n    image.src = URL.createObjectURL(new Blob([data], { type: \"image/png\" }));\n    const frameObject: AniFrame = {\n      image,\n      url: image.src,\n      width,\n      height,\n      x,\n      y,\n      hotspotX,\n      hotspotY,\n      percentages: [],\n    };\n    frames.push(frameObject);\n  }\n\n  let elapsedDisplayPercentage = 0;\n  for (let i = 0; i < frameCount; i++) {\n    const frame = frames[i];\n    const frameDuration = Math.floor(1000 / displayRate);\n    elapsedDisplayPercentage += frameDuration;\n    frame.percentages.push(elapsedDisplayPercentage);\n  }\n\n  return {\n    totalDuration,\n    frames", "CodeBleu_score": 26.79513926736971}]}
{"instance_id": "f059427111a8", "generation_result": [{"code": "export async function checkInternetArchiveMetadata(): Promise<void>  const items = await getItems();\n\n  const tooManyFiles = [];\n  const tooFewFiles = [];\n  const missingSkinFile = [];\n\n  for (const item of items) {\n    if (item.metadata) {\n      const metadata = JSON.parse(item.metadata);\n      const files = metadata.files;\n      const skinFile = files.find((file: any) => file.name.includes('skin.png'));\n\n      if (files.length > 1000) {\n        tooManyFiles.push({ identifier: item.identifier, files: files.length });\n      }\n      if (files.length < 100) {\n        tooFewFiles.push({ identifier: item.identifier, files: files.length });\n      }\n      if (!skinFile) {\n        missingSkinFile.push({ identifier: item.identifier });\n      }\n    }\n  }\n\n  console.table({\n    'Too many files': tooManyFiles,\n    'Too few files': tooFewFiles,\n    'Missing skin file': missingSkinFile,\n  });\n}\n", "CodeBleu_score": 32.62682495849694}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>  const items = await db.query(\n    \"SELECT * FROM items WHERE metadata IS NOT NULL AND metadata != '{}'\",\n  );\n\n  const tooManyFiles = [];\n  const tooFewFiles = [];\n  const missingSkinFile = [];\n\n  for (const item of items) {\n    const metadata = JSON.parse(item.metadata);\n    const files = metadata.files;\n\n    if (files.length > 100) {\n      tooManyFiles.push(item.identifier);\n    } else if (files.length < 10) {\n      tooFewFiles.push(item.identifier);\n    }\n\n    const skinFile = files.find((file) => file.name.endsWith(\".skin\"));\n    if (!skinFile) {\n      missingSkinFile.push(item.identifier);\n    }\n  }\n\n  console.table({\n    \"Too Many Files\": tooManyFiles,\n    \"Too Few Files\": tooFewFiles,\n    \"Missing Skin File\": missingSkinFile,\n  });\n}", "CodeBleu_score": 31.93702468149625}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>  const db = new lf.Database();\n  const items = await db.select().from(lf.schema.item);\n\n  const tooManyFiles = [];\n  const tooFewFiles = [];\n  const missingSkin = [];\n\n  for (const item of items) {\n    const metadata = JSON.parse(item.metadata);\n    const files = metadata.files;\n\n    if (files.length > 100) {\n      tooManyFiles.push({ id: item.id, files: files.length });\n    } else if (files.length < 10) {\n      tooFewFiles.push({ id: item.id, files: files.length });\n    } else {\n      const hasSkinFile = files.some((file) => file.name.includes('skin'));\n      if (!hasSkinFile) {\n        missingSkin.push({ id: item.id });\n      }\n    }\n  }\n\n  console.log('Items with too many files:');\n  console.table(tooManyFiles);\n  console.log('Items with too few files:');\n  console.table(tooFewFiles);\n  console.log('Items missing skin file:');\n  console.table(missingSkin);\n}", "CodeBleu_score": 36.24203351659689}]}
{"instance_id": "9d9b04763521", "generation_result": [{"code": "function useSkinKeyboardControls()  const {\n    dispatch,\n    state: {\n      selectedSkin,\n      skins,\n    },\n  } = useContext(SkinsContext);\n\n  const selectSkin = (skin) => dispatch({ type: 'SELECT_SKIN', payload: skin });\n\n  const selectNextSkin = () => {\n    const currentIndex = skins.indexOf(selectedSkin);\n    const nextIndex = (currentIndex + 1) % skins.length;\n    selectSkin(skins[nextIndex]);\n  };\n\n  const selectPreviousSkin = () => {\n    const currentIndex = skins.indexOf(selectedSkin);\n    const previousIndex = (currentIndex - 1 + skins.length) % skins.length;\n    selectSkin(skins[previousIndex]);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === 'ArrowRight') {\n        selectNextSkin();\n      } else if (event.key === 'ArrowLeft') {\n        selectPreviousSkin();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedSkin]);\n}", "CodeBleu_score": 33.98969028709294}, {"code": "function useSkinKeyboardControls()    const [selectedSkin, setSelectedSkin] = useState(skins[0]);\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === \"ArrowRight\") {\n                setSelectedSkin((prevSkin) => {\n                    const currentIndex = skins.indexOf(prevSkin);\n                    const nextIndex = (currentIndex + 1) % skins.length;\n                    return skins[nextIndex];\n                });\n            } else if (event.key === \"ArrowLeft\") {\n                setSelectedSkin((prevSkin) => {\n                    const currentIndex = skins.indexOf(prevSkin);\n                    const prevIndex = (currentIndex - 1 + skins.length) % skins.length;\n                    return skins[prevIndex];\n                });\n            }\n        };\n\n        window.addEventListener(\"keydown\", handleKeyDown);\n\n        return () => {\n            window.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, []);\n\n    return selectedSkin;\n}", "CodeBleu_score": 33.29270882482265}, {"code": "function useSkinKeyboardControls()  const { setSelectedSkin } = useSkinSelection();\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === \"ArrowRight\") {\n        setSelectedSkin((prevSelectedSkin) => prevSelectedSkin + 1);\n      } else if (event.key === \"ArrowLeft\") {\n        setSelectedSkin((prevSelectedSkin) => prevSelectedSkin - 1);\n      }\n    },\n    [setSelectedSkin]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleKeyDown]);\n}\n", "CodeBleu_score": 38.23267474419699}]}
{"instance_id": "c49e878d86ad", "generation_result": [{"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk  return (dispatch) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = accept;\n    input.multiple = true;\n\n    input.onchange = () => {\n      const files = input.files;\n      if (files) {\n        dispatch(setFileType(expectedType));\n        dispatch(setNumberOfFiles(files.length));\n        dispatch(setFirstFileName(files[0].name));\n        dispatch(loadFiles(files));\n      }\n    };\n\n    input.click();\n  };\n}", "CodeBleu_score": 51.32689334652611}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk  return (dispatch) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.multiple = true;\n    input.accept = accept;\n    input.click();\n\n    input.onchange = () => {\n      const files = input.files;\n      if (files) {\n        dispatch(\n          setFileDialog({\n            expectedType,\n            numFiles: files.length,\n            firstFileName: files[0].name,\n          })\n        );\n        dispatch(loadFiles(files));\n      }\n    };\n  };\n}", "CodeBleu_score": 52.28633224903887}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk  return (dispatch) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.multiple = true;\n    if (accept) input.accept = accept;\n    input.click();\n\n    input.onchange = async () => {\n      const files = input.files;\n      if (!files || files.length === 0) return;\n      const firstFile = files[0];\n      dispatch({\n        type: \"SET_FILE_INFO\",\n        payload: {\n          expectedType,\n          fileCount: files.length,\n          fileName: firstFile.name,\n        },\n      });\n      dispatch(loadFiles(files));\n    };\n  };\n}\n", "CodeBleu_score": 52.521936154357896}]}
{"instance_id": "afa715d20f88", "generation_result": [{"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk  return async (dispatch) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const files = e.dataTransfer.files;\n\n    if (handleTrackDropEvent) {\n      handleTrackDropEvent(files, (file: File) => {\n        dispatch(loadFile(file, loadStyle, atIndex));\n      });\n    } else {\n      for (const file of files) {\n        dispatch(loadFile(file, loadStyle, atIndex));\n      }\n    }\n  };\n}", "CodeBleu_score": 45.74189804224441}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk  return async (dispatch) => {\n    const files = e.dataTransfer.files;\n    const references = Array.from(files).map((file) =>\n      window.URL.createObjectURL(file)\n    );\n\n    if (typeof handleTrackDropEvent === 'function') {\n      const event = await handleTrackDropEvent(e);\n      if (event) {\n        dispatch(loadMediaAction(event, loadStyle, atIndex));\n      } else {\n        dispatch(loadMediaAction(references, loadStyle, atIndex));\n      }\n    } else {\n      dispatch(loadMediaAction(references, loadStyle, atIndex));\n    }\n  };\n}", "CodeBleu_score": 49.333224606151425}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk  return async (dispatch) => {\n    const files = e.dataTransfer.files;\n    const references = await Promise.all(\n      Array.from(files).map((file) => {\n        return file.text();\n      })\n    );\n    if (handleTrackDropEvent) {\n      handleTrackDropEvent(e, (tracks) => {\n        dispatch(loadMediaFiles(tracks, loadStyle, atIndex));\n      });\n    } else {\n      dispatch(loadMediaFiles(references, loadStyle, atIndex));\n    }\n  };\n}\n", "CodeBleu_score": 49.638211472581744}]}
{"instance_id": "0faea0aa350c", "generation_result": [{"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>    dispatch(fetchMediaTagsStart());\n\n    try {\n      const metadata = await requireMusicMetadata(file);\n\n      const { artist, title, album, picture } = metadata.common;\n      const albumArt = picture ? `data:${picture.format};base64,${picture.data.toString('base64')}` : null;\n\n      dispatch(fetchMediaTagsSuccess({ artist, title, album, albumArt }, id));\n    } catch (error) {\n      dispatch(fetchMediaTagsFailure(error));\n    }\n  };\n}", "CodeBleu_score": 25.31789811686907}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>    dispatch({ type: 'FETCH_MEDIA_TAGS_REQUEST' });\n    try {\n      const metadata = await requireMusicMetadata(file);\n      const { artist, title, album, picture } = metadata.common;\n      const albumArt = picture ? `data:${picture.format};base64,${picture.data.toString('base64')}` : null;\n      dispatch({ type: 'FETCH_MEDIA_TAGS_SUCCESS', payload: { id, artist, title, album, albumArt } });\n    } catch (error) {\n      dispatch({ type: 'FETCH_MEDIA_TAGS_FAILURE', payload: error.message });\n    }\n  };\n}", "CodeBleu_score": 28.28425848886979}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>    dispatch(fetchMediaTagsStart(id));\n    try {\n      const metadata = await requireMusicMetadata(file);\n      const { artist, title, album, picture } = metadata.common;\n      const albumArt = picture ? `data:${picture.format};base64,${picture.data.toString('base64')}` : null;\n      dispatch(fetchMediaTagsSuccess(id, artist, title, album, albumArt));\n    } catch (error) {\n      dispatch(fetchMediaTagsFailure(id, error));\n    }\n  };\n}", "CodeBleu_score": 24.748072087139445}]}
{"instance_id": "02174213852f", "generation_result": [{"code": "export function playTrack(id: number): Thunk {  return (dispatch, getState) => {\n    const { media } = getState();\n    if (media.status === 'stopped') {\n      dispatch({ type: 'BUFFER_TRACK', payload: id });\n    } else {\n      dispatch({ type: 'PLAY_TRACK', payload: id });\n    }\n  };\n}\n", "CodeBleu_score": 46.38621924265095}, {"code": "export function playTrack(id: number): Thunk {  return (dispatch, getState) => {\n    const state = getState();\n    const mediaStatus = state.media.status;\n    if (mediaStatus === 'stopped') {\n      dispatch(bufferTrack(id));\n    } else {\n      dispatch(playTrack(id));\n    }\n  };\n}\n", "CodeBleu_score": 47.53255803979466}, {"code": "export function playTrack(id: number): Thunk {    return (dispatch, getState) => {\n        const state = getState();\n        const mediaStatus = state.media.status;\n        if (mediaStatus === 'STOPPED') {\n            dispatch({\n                type: 'BUFFER_TRACK',\n                payload: {\n                    id: id\n                }\n            });\n        } else {\n            dispatch({\n                type: 'PLAY_TRACK',\n                payload: {\n                    id: id\n                }\n            });\n        }\n    }\n}\n", "CodeBleu_score": 46.30414291984783}]}
{"instance_id": "643b829015d2", "generation_result": [{"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk    e.preventDefault();\n    return (dispatch, getState) => {\n        const volume = getState().volume;\n        dispatch(setVolume(volume + e.deltaY * 0.01));\n    };\n}\n", "CodeBleu_score": 61.696715357171215}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk  e.preventDefault();\n  return (dispatch, getState) => {\n    const { volume } = getState().player;\n    dispatch(setVolume(volume + e.deltaY / 100));\n  };\n}", "CodeBleu_score": 60.9810025387039}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk    e.preventDefault();\n    return (dispatch, getState) => {\n        const { volume } = getState().player;\n        dispatch(setVolume(volume + e.deltaY / 1000));\n    };\n}", "CodeBleu_score": 61.06105381918561}]}
{"instance_id": "d97c127090ce", "generation_result": [{"code": "function FullScreen(props: Props)  const { enabled, onChange, children } = props;\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const fullscreenElementRef = useRef(null);\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(\n        document.fullscreenElement === fullscreenElementRef.current\n      );\n    };\n\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (enabled && !isFullscreen) {\n      fullscreenElementRef.current.requestFullscreen();\n    } else if (!enabled && isFullscreen) {\n      document.exitFullscreen();\n    }\n  }, [enabled, isFullscreen]);\n\n  return (\n    <div\n      ref={fullscreenElementRef}\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        display: enabled ? \"block\" : \"none\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n", "CodeBleu_score": 46.327661829249614}, {"code": "function FullScreen(props: Props)  const { children, enabled } = props;\n  const targetRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const target = targetRef.current;\n    if (target) {\n      const handleFullscreenChange = () => {\n        if (document.fullscreenElement === target) {\n          // Fullscreen mode activated\n        } else {\n          // Fullscreen mode deactivated\n        }\n      };\n      target.addEventListener('fullscreenchange', handleFullscreenChange);\n      return () => {\n        target.removeEventListener('fullscreenchange', handleFullscreenChange);\n      };\n    }\n  }, []);\n\n  useLayoutEffect(() => {\n    const target = targetRef.current;\n    if (target) {\n      if (enabled) {\n        target.requestFullscreen();\n      } else {\n        document.exitFullscreen();\n      }\n    }\n  }, [enabled]);\n\n  return (\n    <div\n      ref={targetRef}\n      style={{\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n", "CodeBleu_score": 49.85713419319639}, {"code": "function FullScreen(props: Props)  const { enabled, onChange, children } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const handleFullscreenChange = () => {\n      onChange?.(document.fullscreenElement === element);\n    };\n\n    element.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n    return () => {\n      element.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n    };\n  }, [onChange]);\n\n  useLayoutEffect(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    if (enabled) {\n      if (!document.fullscreenElement) {\n        element.requestFullscreen();\n      }\n    } else {\n      if (document.fullscreenElement === element) {\n        document.exitFullscreen();\n      }\n    }\n  }, [enabled]);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n", "CodeBleu_score": 51.38373062377604}]}
{"instance_id": "d333738337a8", "generation_result": [{"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>  const clipPaths = {};\n  for (const region in skinRegion) {\n    const polygons = skinRegion[region];\n    if (polygons.length > 0) {\n      clipPaths[region] = `url(#${region})`;\n    }\n  }\n  return clipPaths;\n});\n", "CodeBleu_score": 40.22760852929964}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>  const clipPaths = {};\n  Object.keys(skinRegion).forEach((regionName) => {\n    const region = skinRegion[regionName];\n    if (region.polygon) {\n      clipPaths[regionName] = region.polygon.map((polygon) => polygon.id);\n    }\n  });\n  return clipPaths;\n});\n", "CodeBleu_score": 27.825965663434673}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>  const clipPaths = {};\n  for (const regionName in skinRegion) {\n    const region = skinRegion[regionName];\n    if (region.polygons) {\n      clipPaths[regionName] = region.polygons.map((polygon) => `${regionName}-${polygon.id}`);\n    }\n  }\n  return clipPaths;\n});\n", "CodeBleu_score": 47.02180623098315}]}
{"instance_id": "6d30b280ffbe", "generation_result": [{"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]  const buckets = new Array(12).fill(0);\n  const minHz = 32.7;\n  const maxHz = 16000;\n  const freqStep = Math.pow(2, 1 / 12);\n  let currentFreq = minHz;\n  let currentBucket = 0;\n\n  while (currentFreq < maxHz) {\n    const bucketIndex = Math.floor((currentFreq / maxHz) * bufferLength);\n    buckets[currentBucket] = bucketIndex;\n    currentFreq *= freqStep;\n    currentBucket++;\n  }\n\n  return buckets;\n}\n", "CodeBleu_score": 36.34277910114832}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]  const buckets = new Array(10).fill(0);\n  const minHz = 20;\n  const maxHz = 20000;\n  const minLog = Math.log(minHz);\n  const maxLog = Math.log(maxHz);\n  const stepLog = (maxLog - minLog) / 10;\n\n  for (let i = 0; i < buckets.length; i++) {\n    const freq = Math.exp(minLog + stepLog * i);\n    const index = Math.round((freq / 44100) * bufferLength);\n    buckets[i] = index;\n  }\n\n  return buckets;\n}\n", "CodeBleu_score": 39.04688777423435}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]  const minHz = 20;\n  const maxHz = 22050;\n  const octaves = 7;\n  const octaveMultiplier = 2;\n  const buckets = new Array(octaves);\n  const frequencySteps = Math.pow(octaveMultiplier, 1 / octaves);\n  let frequency = minHz;\n  let index = 0;\n  for (let i = 0; i < octaves; i++) {\n    buckets[i] = Math.round(\n      (Math.log(frequency / minHz) / Math.log(frequencySteps)) * bufferLength\n    );\n    frequency *= frequencySteps;\n    index = buckets[i];\n  }\n  return buckets;\n}\n", "CodeBleu_score": 38.164469513998}]}
{"instance_id": "e7c399fb0db4", "generation_result": [{"code": "function EqGraph()  const [canvas, setCanvas] = useState(null);\n  const [ctx, setCtx] = useState(null);\n  const [node, setNode] = useState(null);\n  const [image, setImage] = useState(null);\n  const [colorPattern, setColorPattern] = useState(null);\n\n  const slider1 = useSelector((state) => state.slider1);\n  const slider2 = useSelector((state) => state.slider2);\n  const slider3 = useSelector((state) => state.slider3);\n  const slider4 = useSelector((state) => state.slider4);\n  const slider5 = useSelector((state) => state.slider5);\n  const slider6 = useSelector((state) => state.slider6);\n  const slider7 = useSelector((state) => state.slider7);\n  const slider8 = useSelector((state) => state.slider8);\n  const slider9 = useSelector((state) => state.slider9);\n  const slider10 = useSelector((state) => state.slider10);\n  const slider11 = useSelector((state) => state.slider11);\n  const slider12 = useSelector((state) => state.slider12);\n  const slider13 = useSelector((state) => state.slider13);\n  const slider14 = useSelector((state) => state.slider14);\n  const slider15 = useSelector((state) => state.slider15);\n  const slider16 = useSelector((state) => state.slider16);\n  const slider17 = useSelector((state) => state.slider17);\n  const slider18 = useSelector((state) => state.slider18);\n  const slider19 = useSelector((state) => state.slider19);\n  const slider20 = useSelector((state) => state.slider20);\n  const slider21 = useSelector((state) => state.slider21);\n  const slider22 = useSelector", "CodeBleu_score": 17.494564166063025}, {"code": "function EqGraph()  const canvas = useRef(null);\n  const [ctx, setCtx] = useState(null);\n  const node = useSelector((state) => state.node);\n  const image = useSelector((state) => state.image);\n  const colorPattern = useSelector((state) => state.colorPattern);\n\n  useLayoutEffect(() => {\n    if (!canvas.current) return;\n    const ctx = canvas.current.getContext(\"2d\");\n    setCtx(ctx);\n  }, [canvas]);\n\n  useLayoutEffect(() => {\n    if (!ctx) return;\n    const canvasWidth = canvas.current.width;\n    const canvasHeight = canvas.current.height;\n    const node = useSelector((state) => state.node);\n    const image = useSelector((state) => state.image);\n    const colorPattern = useSelector((state) => state.colorPattern);\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the equalizer line\n    ctx.beginPath();\n    ctx.moveTo(0, canvasHeight / 2);\n    ctx.lineTo(canvasWidth, canvasHeight / 2);\n    ctx.strokeStyle = \"#fff\";\n    ctx.stroke();\n\n    // Draw the sliders\n    const sliders = document.querySelectorAll(\".slider\");\n    sliders.forEach((slider, index) => {\n      const value = parseFloat(slider.value);\n      const x = index * (canvasWidth / (sliders.length - 1));\n      const y = canvasHeight / 2 - value * (canvasHeight / 2);\n      ctx.beginPath();\n      ctx.arc(x, y, 10, 0, 2 * Math.PI);\n      ctx.fillStyle = colorPattern[index];\n      ctx.fill();\n    });\n\n    // Draw the image\n    if (image) {\n      const img = new Image();\n      img.src = image;\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, canvasWidth, canvasHeight);\n      };\n    }\n  }, [node,", "CodeBleu_score": 36.624086469370475}, {"code": "function EqGraph()  const [canvas, setCanvas] = useState(null);\n  const [ctx, setCtx] = useState(null);\n  const [node, setNode] = useState(null);\n  const [image, setImage] = useState(null);\n  const [colorPattern, setColorPattern] = useState(null);\n\n  const slider1 = useSelector((state) => state.slider1);\n  const slider2 = useSelector((state) => state.slider2);\n  const slider3 = useSelector((state) => state.slider3);\n  const slider4 = useSelector((state) => state.slider4);\n  const slider5 = useSelector((state) => state.slider5);\n  const slider6 = useSelector((state) => state.slider6);\n\n  useLayoutEffect(() => {\n    if (!canvas || !ctx || !node || !image || !colorPattern) {\n      return;\n    }\n\n    const canvasWidth = canvas.width;\n    const canvasHeight = canvas.height;\n    const lineWidth = canvasWidth / 6;\n    const lineHeight = canvasHeight;\n    const lineSpacing = canvasWidth / 6;\n    const lineColor = \"rgba(255, 255, 255, 0.5)\";\n    const lineGradient = ctx.createLinearGradient(0, 0, 0, lineHeight);\n    lineGradient.addColorStop(0, colorPattern);\n    lineGradient.addColorStop(1, \"transparent\");\n\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    ctx.drawImage(image, 0, 0, canvasWidth, canvasHeight);\n\n    ctx.fillStyle = lineGradient;\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n    ctx.beginPath();\n    ctx.moveTo(lineSpacing * 1, lineHeight - slider1 * lineHeight);\n    ctx.lineTo(lineSpacing * 2, lineHeight - slider2 * lineHeight);\n    ctx.lineTo(lineSpacing * 3, line", "CodeBleu_score": 25.16464224002663}]}
{"instance_id": "b858f410c3f3", "generation_result": [{"code": "const ClutterBar = memo(() =>  const { setFocus, setMouseUp } = useActionCreators(actionCreators);\n  const doubled = useSelector(selectDoubled);\n\n  const onMouseDown = useCallback(\n    (e: MouseEvent) => {\n      e.stopPropagation();\n      setFocus(true);\n    },\n    [setFocus]\n  );\n\n  const onMouseUp = useCallback(\n    (e: MouseEvent) => {\n      e.stopPropagation();\n      setFocus(false);\n      setMouseUp(true);\n    },\n    [setFocus, setMouseUp]\n  );\n\n  const toggleDoubled = useCallback(() => {\n    setMouseUp(true);\n    setDoubled(!doubled);\n  }, [doubled, setDoubled, setMouseUp]);\n\n  return (\n    <div\n      className={`clutter-bar ${doubled ? \"doubled\" : \"\"}`}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n    >\n      <button onClick={toggleDoubled}>\n        <img src={doubled ? double : single} alt=\"doubled\" />\n      </button>\n      <button>\n        <img src={sort} alt=\"sort\" />\n      </button>\n      <button>\n        <img src={filter} alt=\"filter\" />\n      </button>\n      <button>\n        <img src={search} alt=\"search\" />\n      </button>\n      <button>\n        <img src={settings} alt=\"settings\" />\n      </button>\n      <button>\n        <img src={contextMenu} alt=\"context menu\" />\n      </button>\n    </div>\n  );\n});", "CodeBleu_score": 34.388287016094985}, {"code": "const ClutterBar = memo(() =>  const doubled = useSelector(selectDoubled);\n  const dispatch = useDispatch();\n\n  const handleSetFocus = (e) => {\n    dispatch(setFocus(e.target.id));\n  };\n\n  const handleMouseUp = (e) => {\n    dispatch(setFocus(null));\n  };\n\n  const handleToggleDoubled = (e) => {\n    dispatch(toggleDoubled());\n  };\n\n  return (\n    <div className=\"clutter-bar\">\n      <button\n        id=\"clutter\"\n        className={`clutter-bar__button ${doubled ? \"doubled\" : \"\"}`}\n        onMouseDown={handleSetFocus}\n        onMouseUp={handleMouseUp}\n      >\n        Clutter\n      </button>\n      <button\n        id=\"all\"\n        className=\"clutter-bar__button\"\n        onMouseDown={handleSetFocus}\n        onMouseUp={handleMouseUp}\n      >\n        All\n      </button>\n      <button\n        id=\"doubled\"\n        className=\"clutter-bar__button\"\n        onMouseDown={handleToggleDoubled}\n        onMouseUp={handleMouseUp}\n      >\n        Doubled\n      </button>\n      <button\n        id=\"tripled\"\n        className=\"clutter-bar__button\"\n        onMouseDown={handleSetFocus}\n        onMouseUp={handleMouseUp}\n      >\n        Tripled\n      </button>\n      <button\n        id=\"quadrupled\"\n        className=\"clutter-bar__button\"\n        onMouseDown={handleSetFocus}\n        onMouseUp={handleMouseUp}\n      >\n        Quadrupled\n      </button>\n      <button\n        id=\"quintupled\"\n        className=\"clutter-bar__button\"\n        onMouseDown={handleSetFocus}\n        onMouseUp={handleMouseUp}\n      >\n        Quintupled\n      </button>\n      <button\n        id=\"sextupled\"\n        className=\"clutter-bar__button", "CodeBleu_score": 23.455986810106317}, {"code": "const ClutterBar = memo(() =>  const dispatch = useDispatch();\n  const doubled = useSelector(getDoubled);\n\n  const handleMouseDown = (e) => {\n    e.preventDefault();\n    dispatch(setFocus(true));\n  };\n\n  const handleMouseUp = (e) => {\n    e.preventDefault();\n    dispatch(setFocus(false));\n  };\n\n  const toggleDoubled = (e) => {\n    e.preventDefault();\n    dispatch(toggleDoubledMode());\n  };\n\n  return (\n    <div\n      className=\"clutter-bar\"\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n    >\n      <div className=\"clutter-bar__buttons\">\n        <button\n          className={`clutter-bar__button ${\n            doubled ? \"clutter-bar__button--doubled\" : \"\"\n          }`}\n          onClick={toggleDoubled}\n        >\n          Doubled\n        </button>\n        <button className=\"clutter-bar__button\">Dotted</button>\n        <button className=\"clutter-bar__button\">Inverted</button>\n        <button className=\"clutter-bar__button\">Mirrored</button>\n        <button className=\"clutter-bar__button\">Tied</button>\n      </div>\n      <ContextMenu />\n    </div>\n  );\n});\n", "CodeBleu_score": 30.51841903498888}]}
{"instance_id": "5946b13d68ba", "generation_result": [{"code": "const PlaylistToggleButton = memo(() =>  const selected = useSelector(selectPlaylistToggle);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(togglePlaylist());\n  };\n\n  return (\n    <button\n      id=\"playlist-toggle\"\n      className={`playlist-toggle ${selected ? \"selected\" : \"\"}`}\n      onClick={handleClick}\n      title=\"Toggle Playlist\"\n    >\n      <span className=\"icon\">\n        <FontAwesomeIcon icon={faMusic} />\n      </span>\n    </button>\n  );\n});\n", "CodeBleu_score": 31.56065256692373}, {"code": "const PlaylistToggleButton = memo(() =>  const isPlaylistOpen = useSelector(selectIsPlaylistOpen);\n  const dispatch = useDispatch();\n  const handleToggle = () => {\n    dispatch(togglePlaylist());\n  };\n\n  return (\n    <button\n      id=\"playlist-toggle-button\"\n      className={`playlist-toggle-button ${\n        isPlaylistOpen ? \"playlist-open\" : \"\"\n      }`}\n      onClick={handleToggle}\n      title={isPlaylistOpen ? \"Close Playlist\" : \"Open Playlist\"}\n    >\n      <span className=\"playlist-toggle-button-icon\">\n        <i className=\"fa fa-list\"></i>\n      </span>\n    </button>\n  );\n});\n", "CodeBleu_score": 26.675748517217958}, {"code": "const PlaylistToggleButton = memo(() =>  const selected = useSelector((state) => state.playlist.selected);\n  const dispatch = useDispatch();\n\n  const handleToggle = () => {\n    dispatch(togglePlaylist());\n  };\n\n  return (\n    <button\n      id=\"playlist-toggle\"\n      className={`playlist-toggle ${selected ? \"selected\" : \"\"}`}\n      onClick={handleToggle}\n      title=\"Toggle Playlist\"\n    >\n      <FontAwesomeIcon icon={faList} />\n    </button>\n  );\n});\n", "CodeBleu_score": 29.798504194553608}]}
{"instance_id": "39ecf0db7a99", "generation_result": [{"code": "const Desktop = React.memo(({ children }: Props) =>  const [container] = React.useState(() => {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"webamp-desktop\");\n    return div;\n  });\n\n  React.useEffect(() => {\n    document.body.appendChild(container);\n    return () => {\n      document.body.removeChild(container);\n    };\n  }, [container]);\n\n  return ReactDOM.createPortal(children, container);\n});\n", "CodeBleu_score": 56.72091834219164}, {"code": "const Desktop = React.memo(({ children }: Props) =>  const desktopRef = useRef(null);\n  useEffect(() => {\n    const desktopDiv = document.createElement(\"div\");\n    desktopDiv.classList.add(\"webamp-desktop\");\n    document.body.appendChild(desktopDiv);\n    desktopRef.current = desktopDiv;\n    return () => {\n      document.body.removeChild(desktopDiv);\n    };\n  }, []);\n\n  if (!desktopRef.current) {\n    return null;\n  }\n\n  return createPortal(children, desktopRef.current);\n});\n", "CodeBleu_score": 52.756515225328904}, {"code": "const Desktop = React.memo(({ children }: Props) =>  const [div] = React.useState(() => {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"webamp-desktop\");\n    return div;\n  });\n\n  React.useEffect(() => {\n    document.body.appendChild(div);\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n\n  return ReactDOM.createPortal(children, div);\n});\n", "CodeBleu_score": 57.387542311355176}]}
{"instance_id": "41be320578a4", "generation_result": [{"code": "export default function PlaylistScrollBar()  const playlistHeight = useAppSelector((state) => state.playlist.height);\n  const scrollPosition = useAppSelector((state) => state.playlist.scrollPosition);\n  const allTracksVisible = useAppSelector(\n    (state) => state.playlist.allTracksVisible\n  );\n  const dispatch = useAppDispatch();\n\n  const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n    const { scrollTop } = event.currentTarget;\n    dispatch(updateScrollPosition(scrollTop));\n  };\n\n  return (\n    <div\n      className={`playlist-scrollbar ${allTracksVisible ? \"disabled\" : \"\"}`}\n      style={{ height: `${playlistHeight}px` }}\n      onScroll={handleScroll}\n    >\n      <VerticalSlider\n        handle={\n          <div className=\"playlist-scrollbar-handle\">\n            <div className=\"playlist-scrollbar-handle-bar\" />\n          </div>\n        }\n        value={scrollPosition}\n        onChange={(value) => dispatch(updateScrollPosition(value))}\n      />\n    </div>\n  );\n}", "CodeBleu_score": 36.84549116326588}, {"code": "export default function PlaylistScrollBar()  const playlistHeight = useSelector(selectPlaylistHeight);\n  const scrollPosition = useSelector(selectPlaylistScrollPosition);\n  const allTracksVisible = useSelector(selectAllTracksVisible);\n  const dispatch = useDispatch();\n\n  const handleScroll = (event: React.ChangeEvent<{}>, value: number | number[]) => {\n    dispatch(updatePlaylistScrollPosition(value as number));\n  };\n\n  return (\n    <VerticalScrollbar\n      height={playlistHeight}\n      scrollPosition={scrollPosition}\n      disabled={allTracksVisible}\n      onScroll={handleScroll}\n    />\n  );\n}", "CodeBleu_score": 26.76502748897557}, {"code": "export default function PlaylistScrollBar()  const playlistHeight = useSelector((state) => state.playlist.height);\n  const scrollPosition = useSelector((state) => state.playlist.scrollPosition);\n  const allTracksVisible = useSelector((state) => state.playlist.allTracksVisible);\n  const dispatch = useDispatch();\n\n  const handleScroll = (event, newValue) => {\n    dispatch(setPlaylistScrollPosition(newValue));\n  };\n\n  return (\n    <VerticalScrollbar\n      className=\"playlist-scrollbar\"\n      style={{\n        height: `${playlistHeight}px`,\n        marginRight: \"10px\",\n        marginLeft: \"10px\",\n      }}\n      value={scrollPosition}\n      onChange={handleScroll}\n      disabled={allTracksVisible}\n      trackStyle={{\n        backgroundColor: \"transparent\",\n        borderRadius: \"0\",\n      }}\n      thumbStyle={{\n        backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n        borderRadius: \"0\",\n      }}\n      railStyle={{\n        backgroundColor: \"transparent\",\n        borderRadius: \"0\",\n      }}\n      handleStyle={{\n        backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n        borderRadius: \"0\",\n        width: \"5px\",\n        marginLeft: \"2px\",\n        marginRight: \"2px\",\n      }}\n    />\n  );\n}", "CodeBleu_score": 33.404595878557316}]}
{"instance_id": "fccf51432007", "generation_result": [{"code": "export function genMediaDuration(url: string): Promise<number>  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('durationchange', () => {\n      resolve(audio.duration);\n      audio.removeEventListener('durationchange', () => {});\n    });\n    audio.addEventListener('error', (error) => {\n      reject(error);\n      audio.removeEventListener('error', () => {});\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 37.895082262373556}, {"code": "export function genMediaDuration(url: string): Promise<number>  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('durationchange', () => {\n      resolve(audio.duration);\n      audio.removeEventListener('durationchange', () => {});\n    });\n    audio.addEventListener('error', (e) => {\n      reject(e);\n      audio.removeEventListener('error', () => {});\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 38.57645016810164}, {"code": "export function genMediaDuration(url: string): Promise<number>  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = \"anonymous\";\n    audio.addEventListener(\"durationchange\", () => {\n      resolve(audio.duration);\n      audio.removeEventListener(\"durationchange\", () => {});\n    });\n    audio.addEventListener(\"error\", (err) => {\n      reject(err);\n      audio.removeEventListener(\"error\", () => {});\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 39.5027916110026}]}
{"instance_id": "8055da9c9425", "generation_result": [{"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>  return new Promise((resolve, reject) => {\n    if (!fileReference) {\n      reject(\"No file reference provided\");\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      if (event.target?.result) {\n        resolve(event.target.result);\n      } else {\n        reject(\"Failed to read file\");\n      }\n    };\n\n    reader.onerror = (error) => {\n      reject(error);\n    };\n\n    reader.readAsArrayBuffer(fileReference);\n  });\n}", "CodeBleu_score": 60.6444904013583}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>  if (!fileReference) {\n    throw new Error(\"No file reference provided\");\n  }\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsArrayBuffer(fileReference);\n  });\n}", "CodeBleu_score": 57.262882591079034}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>  return new Promise((resolve, reject) => {\n    if (!fileReference) {\n      reject(\"No file reference provided\");\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result as ArrayBuffer);\n    };\n\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n\n    reader.readAsArrayBuffer(fileReference);\n  });\n}", "CodeBleu_score": 74.89894352650023}]}
{"instance_id": "b3dc12d7d309", "generation_result": [{"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null  const [value, setValue] = useState<T | null>(null);\n  const [disposed, setDisposed] = useState(false);\n\n  useEffect(() => {\n    propValue.then((v) => {\n      if (!disposed) {\n        setValue(v);\n      }\n    });\n\n    return () => {\n      setDisposed(true);\n    };\n  }, [propValue, disposed]);\n\n  return value;\n}", "CodeBleu_score": 45.73934404596213}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null  const [value, setValue] = useState<T | null>(null);\n  const [disposed, setDisposed] = useState(false);\n\n  useEffect(() => {\n    propValue.then((val) => {\n      if (!disposed) {\n        setValue(val);\n      }\n    });\n    return () => {\n      setDisposed(true);\n    };\n  }, [propValue, disposed]);\n\n  return value;\n}", "CodeBleu_score": 45.83240687489576}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null  const [value, setValue] = useState<T | null>(null);\n  const isDisposed = useRef(false);\n\n  useEffect(() => {\n    propValue.then((resolvedValue) => {\n      if (!isDisposed.current) {\n        setValue(resolvedValue);\n      }\n    });\n\n    return () => {\n      isDisposed.current = true;\n    };\n  }, [propValue]);\n\n  return value;\n}", "CodeBleu_score": 51.170478085548375}]}
{"instance_id": "7fc14a50df16", "generation_result": [{"code": "export default function regionParser(regionStr: string): RegionData  const sections = regionStr.split(\"[\");\n  const output: RegionData = {};\n\n  for (let i = 1; i < sections.length; i++) {\n    const section = sections[i];\n    const sectionName = section.split(\"]\")[0];\n    const polygonStr = section.split(\"]\")[1];\n\n    const polygonPoints = polygonStr\n      .split(\"\\n\")\n      .map((line) => line.trim())\n      .filter((line) => line.length > 0)\n      .map((line) => line.split(\",\").map((coord) => parseFloat(coord)));\n\n    const validPolygons = polygonPoints.filter((polygon) => {\n      const xCoords = polygon.map((point) => point[0]);\n      const yCoords = polygon.map((point) => point[1]);\n\n      const minX = Math.min(...xCoords);\n      const maxX = Math.max(...xCoords);\n      const minY = Math.min(...yCoords);\n      const maxY = Math.max(...yCoords);\n\n      const xRange = maxX - minX;\n      const yRange = maxY - minY;\n\n      return xRange >= 1 && yRange >= 1;\n    });\n\n    output[sectionName] = validPolygons;\n  }\n\n  return output;\n}\n", "CodeBleu_score": 36.50067854834165}, {"code": "export default function regionParser(regionStr: string): RegionData  const output: RegionData = {};\n\n  const sections = regionStr.split(/\\r?\\n\\r?\\n/);\n\n  for (const section of sections) {\n    const [sectionName, ...points] = section.split(/\\r?\\n/);\n\n    const polygonPoints = points\n      .map((point) => {\n        const [x, y] = point.split(/\\s+/);\n        return { x: parseFloat(x), y: parseFloat(y) };\n      })\n      .filter((point) => !isNaN(point.x) && !isNaN(point.y));\n\n    if (polygonPoints.length >= 3) {\n      output[sectionName] = polygonPoints;\n    }\n  }\n\n  return output;\n}\n", "CodeBleu_score": 25.016993537854876}, {"code": "export default function regionParser(regionStr: string): RegionData  // Split the input string into sections\n  const sections = regionStr.split(/^\\[([^\\]]+)\\]/gm);\n\n  // Create an empty object to store the output data\n  const output: RegionData = {};\n\n  // Process each section\n  for (let i = 0; i < sections.length; i += 2) {\n    const sectionName = sections[i].trim();\n    const sectionData = sections[i + 1].trim();\n\n    // Extract polygon points from the section data\n    const points = sectionData.split(/\\n/).map((line) => {\n      const [x, y] = line.trim().split(/\\s+/);\n      return { x: parseFloat(x), y: parseFloat(y) };\n    });\n\n    // Filter out invalid polygons\n    const validPoints = points.filter((point) => {\n      const { x, y } = point;\n      return !isNaN(x) && !isNaN(y);\n    });\n\n    // Store the valid polygons under the section name\n    if (validPoints.length > 0) {\n      output[sectionName] = validPoints;\n    }\n  }\n\n  return output;\n}\n", "CodeBleu_score": 34.928163377101875}]}
{"instance_id": "6e97ec2706cf", "generation_result": [{"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector(\tmedia: ( state ) => state.media,\n\tcurrentTrack: ( state ) => state.currentTrack,\n} )( ( state ) => {\n\tif ( ! state.media.isPlaying ) {\n\t\treturn null;\n\t}\n\n\tif ( ! state.currentTrack ) {\n\t\treturn null;\n\t}\n\n\tif ( state.currentTrack.mediaTags.isInitialized === false ) {\n\t\treturn null;\n\t}\n\n\treturn state.currentTrack.id;\n} );", "CodeBleu_score": 38.37632604011185}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector(\tselect: ( state ) => state.media.isPlaying,\n\tselect: ( state ) => state.media.currentTrackId,\n\tselect: ( state ) => state.media.mediaTags.state,\n\t( isPlaying, currentTrackId, mediaTagsState ) => {\n\t\tif ( ! isPlaying ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ! currentTrackId ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( mediaTagsState === 'initialized' ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn currentTrackId;\n\t},\n} );", "CodeBleu_score": 41.72178810673227}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector(\tmedia: getMedia,\n\tcurrentTrack: getCurrentTrack,\n} )( ( { media, currentTrack } ) => {\n\tif ( ! media.isPlaying || ! currentTrack ) {\n\t\treturn null;\n\t}\n\n\tconst { mediaTags } = currentTrack;\n\n\tif ( ! mediaTags || mediaTags.state === 'initial' ) {\n\t\treturn null;\n\t}\n\n\treturn currentTrack.id;\n} );", "CodeBleu_score": 33.758020539669374}]}
{"instance_id": "5dbbdd07f829", "generation_result": [{"code": " async renderWhenReady(node: HTMLElement): Promise<void>    const {\n      dispatch,\n      media,\n      filePickerOptions,\n      theme,\n      store,\n      instanceId,\n    } = this;\n  \n    dispatch(actions.centerWindows());\n  \n    await waitForSkin();\n  \n    if (this.disposed) {\n      return;\n    }\n  \n    const root = createRoot(node);\n  \n    this.cleanup = () => {\n      root.unmount();\n    };\n  \n    root.render(\n      <ReduxProvider store={store}>\n        <App\n          media={media}\n          filePickerOptions={filePickerOptions}\n          theme={theme}\n          instanceId={instanceId}\n        />\n      </ReduxProvider>\n    );\n  }", "CodeBleu_score": 48.06872045463162}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>  const {\n    centerWindows,\n    dispatch,\n    filePickerOptions,\n    media,\n    skin,\n    unmount,\n  } = this;\n\n  dispatch(centerWindows());\n\n  await skin.load();\n\n  if (!unmount) {\n    const root = createRoot(node);\n\n    root.render(\n      <ReduxProvider store={store}>\n        <Application\n          filePickerOptions={filePickerOptions}\n          media={media}\n          skin={skin}\n        />\n      </ReduxProvider>,\n    );\n\n    unmount = () => root.unmount();\n  }\n}", "CodeBleu_score": 41.45619982499624}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>    const {\n      store,\n      media,\n      filePicker,\n      options,\n      actions,\n      dispatch,\n      dispatchEvent,\n      dispatchError,\n      dispatchWarning,\n      dispatchInfo,\n      dispatchSuccess,\n      dispatchLog,\n      dispatchDebug,\n      dispatchTrace,\n      dispatchFatal,\n      dispatchException,\n      dispatchEventAsync,\n      dispatchErrorAsync,\n      dispatchWarningAsync,\n      dispatchInfoAsync,\n      dispatchSuccessAsync,\n      dispatchLogAsync,\n      dispatchDebugAsync,\n      dispatchTraceAsync,\n      dispatchFatalAsync,\n      dispatchExceptionAsync,\n      dispatchEventSync,\n      dispatchErrorSync,\n      dispatchWarningSync,\n      dispatchInfoSync,\n      dispatchSuccessSync,\n      dispatchLogSync,\n      dispatchDebugSync,\n      dispatchTraceSync,\n      dispatchFatalSync,\n      dispatchExceptionSync,\n      getState,\n      getStateSync,\n      getStateAsync,\n      getStateWithSelector,\n      getStateWithSelectorSync,\n      getStateWithSelectorAsync,\n      getStateWithSelectorSyncAsync,\n      getStateWithSelectorAsyncSync,\n      getStateWithSelectorAsyncSyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsync,\n      getStateWithSelectorAsyncSyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsyncAsync", "CodeBleu_score": 28.370977942160824}]}
{"instance_id": "2598a3bbc50d", "generation_result": [{"code": "handleContextMenu(e: any)  const activeElement = document.activeElement;\n  const isTextInput =\n    activeElement &&\n    (activeElement.tagName === 'TEXTAREA' ||\n      (activeElement.tagName === 'INPUT' &&\n        activeElement.getAttribute('type') === 'text'));\n  const hasSelection = window.getSelection().toString().length > 0;\n  if (isTextInput || hasSelection) {\n    this.contextEditMenu(e, {\n      cut: true,\n      copy: true,\n      paste: true,\n      delete: true,\n    });\n  }\n}", "CodeBleu_score": 32.82981149457693}, {"code": "handleContextMenu(e: any)    let activeElement = document.activeElement;\n    let isNonTerminalInputField = activeElement.tagName === 'TEXTAREA' || (activeElement.tagName === 'INPUT' && activeElement.type !== 'text');\n    let isAnyTextSelected = window.getSelection().toString().trim().length > 0;\n\n    if (isNonTerminalInputField || isAnyTextSelected) {\n        this.contextEditMenu(e, {\n            isNonTerminalInputField: isNonTerminalInputField,\n            isAnyTextSelected: isAnyTextSelected\n        });\n    }\n}\n", "CodeBleu_score": 30.59237821423911}, {"code": "handleContextMenu(e: any)    const options = {\n        isSelection: this.isSelection,\n        isInput: this.isInput,\n    };\n    this.contextEditMenu(e, options);\n}\n", "CodeBleu_score": 10.770035229046105}]}
{"instance_id": "9a7475588195", "generation_result": [{"code": "handleChangeFontSize(fontSize: string): void  const newFontSize = Number(fontSize);\n  if (newFontSize !== this.terminal.fontSize) {\n    this.terminal.fontSize = newFontSize;\n    this.terminal.handleCommandReturnValue();\n  }\n}", "CodeBleu_score": 37.71492586371512}, {"code": "handleChangeFontSize(fontSize: string): void    const newFontSize = parseInt(fontSize);\n    if (isNaN(newFontSize)) {\n      this.commandReturn = 'Invalid font size. Please enter a valid number.';\n      return;\n    }\n    if (newFontSize !== this.fontSize) {\n      this.fontSize = newFontSize;\n      this.handleCommandReturn();\n    }\n  }", "CodeBleu_score": 36.43232537827355}, {"code": "handleChangeFontSize(fontSize: string): void  const newFontSize = Number(fontSize);\n  if (newFontSize !== this.terminal.fontSize) {\n    this.terminal.fontSize = newFontSize;\n    this.handleCommandReturnValue();\n  }\n}", "CodeBleu_score": 37.33064189975327}]}
{"instance_id": "d4d74a9c8035", "generation_result": [{"code": "handleChangeTermTheme(theme: string): void  const currentTheme = this.terminalService.getOption('theme');\n  if (currentTheme.name === theme) {\n    return;\n  }\n  this.terminalService.setOption('theme', {\n    background: currentTheme.background,\n    foreground: currentTheme.foreground,\n    name: theme,\n  });\n  this.handleCommandReturnValue(this.terminalService.setOption('theme', {\n    background: currentTheme.background,\n    foreground: currentTheme.foreground,\n    name: theme,\n  }));\n}", "CodeBleu_score": 36.97082489008569}, {"code": "handleChangeTermTheme(theme: string): void  const currentTheme = this.terminalService.getTheme();\n  if (currentTheme === theme) {\n    return;\n  }\n\n  this.terminalService.setTheme(theme);\n  this.handleCommandReturnValue(this.terminalService.changeTermTheme(theme));\n}", "CodeBleu_score": 37.65572980469806}, {"code": "handleChangeTermTheme(theme: string): void  const currentTheme = this.terminal.getOption('theme');\n\n  if (currentTheme.name === theme) {\n    return;\n  }\n\n  this.terminal.setOption('theme', {\n    background: currentTheme.background,\n    foreground: currentTheme.foreground,\n    cursor: currentTheme.cursor,\n    cursorAccent: currentTheme.cursorAccent,\n    selection: currentTheme.selection,\n    black: currentTheme.black,\n    red: currentTheme.red,\n    green: currentTheme.green,\n    yellow: currentTheme.yellow,\n    blue: currentTheme.blue,\n    magenta: currentTheme.magenta,\n    cyan: currentTheme.cyan,\n    white: currentTheme.white,\n    brightBlack: currentTheme.brightBlack,\n    brightRed: currentTheme.brightRed,\n    brightGreen: currentTheme.brightGreen,\n    brightYellow: currentTheme.brightYellow,\n    brightBlue: currentTheme.brightBlue,\n    brightMagenta: currentTheme.brightMagenta,\n    brightCyan: currentTheme.brightCyan,\n    brightWhite: currentTheme.brightWhite,\n    name: theme,\n  });\n\n  const commandReturnValue = this.terminal.write('\\x1b]50;SetProfile=' + theme + '\\x07');\n\n  if (commandReturnValue !== 0) {\n    throw new Error('Unable to change terminal theme');\n  }\n}", "CodeBleu_score": 39.21200249046402}]}
{"instance_id": "329444949255", "generation_result": [{"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) =>     return (\n        <div className=\"modal-header\">\n            <h4 className=\"modal-title\">{title}</h4>\n            {onClose && (\n                <button\n                    type=\"button\"\n                    className=\"close\"\n                    onClick={onClose}\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                >\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            )}\n            {keybindings && <ModalKeybindings keybindings={keybindings} />}\n        </div>\n    );\n}\n", "CodeBleu_score": 24.376272534624444}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) =>   return (\n    <div className=\"modal-header\">\n      <h3>{title}</h3>\n      {onClose && (\n        <button onClick={onClose}>\n          <Icon icon=\"close\" />\n        </button>\n      )}\n      {keybindings && <ModalKeybindings keybindings={keybindings} />}\n    </div>\n  );\n};\n", "CodeBleu_score": 18.959494989170516}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) =>   return (\n    <div className=\"modal-header\">\n      <div className=\"modal-title\">{title}</div>\n      {onClose && <button className=\"modal-close\" onClick={onClose}>\n        <i className=\"fa fa-times\" />\n      </button>}\n      {keybindings && <ModalKeybindings keybindings={keybindings} />}\n    </div>\n  );\n};\n", "CodeBleu_score": 23.327406442866195}]}
{"instance_id": "1da69d707d33", "generation_result": [{"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string  if (!rptr || !rptr.remoteid) {\n    return \"\";\n  }\n  let rname = rnames[rptr.remoteid];\n  if (!rname) {\n    rname = rptr.remoteid.substring(0, 8);\n  }\n  if (rptr.name) {\n    rname += \":\" + rptr.name;\n  }\n  return \"[\" + rname + \"]\";\n}\n", "CodeBleu_score": 68.90458022042027}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string  if (!rptr || !rptr.remoteid) {\n    return \"\";\n  }\n  let rname = rnames[rptr.remoteid] || rptr.remoteid.slice(0, 8);\n  if (rptr.name) {\n    rname += \":\" + rptr.name;\n  }\n  return \"[\" + rname + \"]\";\n}", "CodeBleu_score": 51.1063781351718}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string    if (!rptr || !rptr.remoteid) return \"\";\n    const rname = rnames[rptr.remoteid] || rptr.remoteid.slice(0, 8);\n    return rptr.name ? `[${rname}:${rptr.name}]` : `[${rname}]`;\n}\n", "CodeBleu_score": 34.13044051217101}]}
{"instance_id": "757ee5b9626f", "generation_result": [{"code": "adjustTextAreaHeight()    const textarea = this.textareaRef.current;\n    if (textarea) {\n      const fontSize = parseFloat(getComputedStyle(textarea).fontSize);\n      const lineHeight = parseFloat(getComputedStyle(textarea).lineHeight);\n      const maxLines = 10;\n      const minHeight = fontSize * lineHeight * 1; // Minimum height (adjust as needed)\n      const maxHeight = fontSize * lineHeight * maxLines; // Maximum height (adjust as needed)\n\n      // Set initial height to 1px to measure scrollHeight\n      textarea.style.height = '1px';\n\n      // Calculate new height within the min-max range\n      const newHeight = Math.min(Math.max(textarea.scrollHeight, minHeight), maxHeight);\n\n      // Apply new height to the textarea\n      textarea.style.height = `${newHeight}px`;\n    }\n  }", "CodeBleu_score": 38.031420846669825}, {"code": "adjustTextAreaHeight()    const textarea = this.textareaRef.current;\n    if (textarea) {\n      textarea.style.height = '1px'; // Set initial height to measure scrollHeight\n      const maxHeight = this.props.maxHeight || 200; // Maximum height for the textarea\n      const minHeight = this.props.minHeight || 20; // Minimum height for the textarea\n      const maxLines = this.props.maxLines || 10; // Maximum number of lines for the textarea\n      const fontSize = parseInt(getComputedStyle(textarea).fontSize); // Get the font size of the textarea\n      const lineHeight = parseInt(getComputedStyle(textarea).lineHeight); // Get the line height of the textarea\n      const maxHeightInLines = maxLines * lineHeight; // Calculate the maximum height in lines\n      const minHeightInLines = minHeight / lineHeight; // Calculate the minimum height in lines\n      const newHeight = Math.max(minHeightInLines, Math.min(maxHeightInLines, textarea.scrollHeight / fontSize)) * lineHeight; // Calculate the new height based on the font size and maximum number of lines\n      textarea.style.height = `${newHeight}px`; // Apply the new height to the textarea\n    }\n  }", "CodeBleu_score": 33.02418626120263}, {"code": "adjustTextAreaHeight()  const textarea = this.textAreaRef.nativeElement;\n  const fontSize = parseInt(window.getComputedStyle(textarea).fontSize);\n  const maxLines = 10; // Maximum number of lines allowed\n  const minHeight = fontSize * 1.5; // Minimum height based on font size\n  const maxHeight = fontSize * maxLines; // Maximum height based on font size and maximum lines\n\n  // Set initial height to 1px to measure scrollHeight\n  textarea.style.height = '1px';\n\n  // Calculate new height based on scrollHeight within the defined range\n  const newHeight = Math.max(minHeight, Math.min(textarea.scrollHeight, maxHeight));\n\n  // Apply new height to textarea\n  textarea.style.height = `${newHeight}px`;\n}", "CodeBleu_score": 37.74284759283353}]}
{"instance_id": "c0fa6e5d0067", "generation_result": [{"code": "onEnterKeyPressed()  if (this.isCodeBlockSelected) {\n    this.commandInput = this.selectedCodeBlock;\n    return true;\n  }\n\n  const message = this.messageInput;\n  this.submitChatMessage(message);\n  this.messageInput = \"\";\n  this.command = \"\";\n  this.output = \"\";\n  return true;\n}", "CodeBleu_score": 29.314151375497268}, {"code": "onEnterKeyPressed()    const selectedCodeBlock = document.querySelector('.selected-code-block');\n    if (selectedCodeBlock) {\n        this.commandInput = selectedCodeBlock.textContent;\n    } else {\n        const message = this.messageInput.value;\n        this.submitChatMessage(message);\n        this.messageInput.value = '';\n        this.command = '';\n        this.output = '';\n    }\n    return true;\n}", "CodeBleu_score": 41.94032402484352}, {"code": "onEnterKeyPressed()  if (this.isCodeBlockSelected) {\n    this.commandInput = this.selectedCodeBlock.textContent;\n    return true;\n  }\n\n  const currentMessage = this.messageInput.value;\n  this.submitChatMessage(currentMessage);\n  this.messageInput.value = '';\n  this.command = '';\n  this.output = '';\n  return true;\n}", "CodeBleu_score": 34.53624355797654}]}
{"instance_id": "a022487e54ff", "generation_result": [{"code": "function readAuthKey(): string  const home = os.homedir();\n  const authKeyPath = path.join(home, \".authkey\");\n  if (!fs.existsSync(authKeyPath)) {\n    const newKey = uuid.v4();\n    fs.writeFileSync(authKeyPath, newKey, { mode: 0o600 });\n    return newKey;\n  }\n  const key = fs.readFileSync(authKeyPath, \"utf8\").trim();\n  if (!uuid.validate(key)) {\n    throw new Error(\"Invalid auth key\");\n  }\n  return key;\n}\n", "CodeBleu_score": 27.207033761824263}, {"code": "function readAuthKey(): string  const home = os.homedir();\n  const authKeyPath = path.join(home, \".electron-auth-key\");\n  let authKey: string;\n\n  if (!fs.existsSync(authKeyPath)) {\n    authKey = uuid.v4();\n    fs.writeFileSync(authKeyPath, authKey, {\n      encoding: \"utf-8\",\n      mode: 0o600,\n    });\n    return authKey;\n  }\n\n  authKey = fs.readFileSync(authKeyPath, { encoding: \"utf-8\" });\n  if (!uuid.validate(authKey)) {\n    throw new Error(\"Invalid auth key\");\n  }\n  return authKey;\n}\n", "CodeBleu_score": 22.624365680492367}, {"code": "function readAuthKey(): string  const home = getHomeDir();\n  const authKeyPath = path.join(home, \".authkey\");\n  let authKey: string;\n  if (!fs.existsSync(authKeyPath)) {\n    authKey = uuidv4();\n    fs.writeFileSync(authKeyPath, authKey, { mode: 0o600 });\n  } else {\n    authKey = fs.readFileSync(authKeyPath, \"utf8\");\n    if (!uuidValidate(authKey)) {\n      throw new Error(\"Invalid auth key\");\n    }\n  }\n  reloadAcceleratorKey = isMac ? \"Cmd+R\" : \"Ctrl+R\";\n  cmdOrAlt = isMac ? \"Cmd\" : \"Alt\";\n  return authKey;\n}", "CodeBleu_score": 27.609469573862068}]}
{"instance_id": "9c3e2f93e1c1", "generation_result": [{"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void    if (!this.isRunning) {\n        return;\n    }\n\n    for (let i = 0; i < data.length; i += this.chunkSize) {\n        const chunk = data.slice(i, i + this.chunkSize);\n        this.processChunk(chunk, renderer);\n    }\n}", "CodeBleu_score": 53.75116638713324}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void  if (!this.isRunning) {\n    return;\n  }\n\n  const chunkSize = 100; // Define the chunk size\n\n  for (let i = 0; i < data.length; i += chunkSize) {\n    const chunk = data.slice(i, i + chunkSize);\n    this.processChunk(chunk, renderer);\n  }\n}\n", "CodeBleu_score": 52.29289213559053}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void  if (!this.isRunning) {\n    return;\n  }\n\n  const chunkSize = 1000;\n  const totalChunks = Math.ceil(data.length / chunkSize);\n\n  for (let i = 0; i < totalChunks; i++) {\n    const start = i * chunkSize;\n    const end = start + chunkSize;\n    const chunk = data.slice(start, end);\n    this.processDataChunk(chunk, renderer);\n  }\n}\n", "CodeBleu_score": 39.34722655016472}]}
{"instance_id": "37ad09d7b939", "generation_result": [{"code": "function checkValidServiceWorker(swUrl)     fetch(swUrl)\n    .then((response) => {\n        if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n            navigator.serviceWorker.ready.then((registration) => {\n                registration.unregister().then(() => {\n                    window.location.reload();\n                });\n            });\n        } else {\n            registerValidSW(swUrl);\n        }\n    })\n    .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n    });\n}\n", "CodeBleu_score": 88.16189530884088}, {"code": "function checkValidServiceWorker(swUrl)   // Check if the service worker can be found. If not, this will usually\n  // indicate (1) that the service worker failed to register due to\n  // accidental omissions in blacklisting the host page's origin, or (2)\n  // the service worker is disabled due to the host page being served over\n  // HTTP.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n", "CodeBleu_score": 77.30175798367944}, {"code": "function checkValidServiceWorker(swUrl)   // Check if the service worker can be found. If not, this is a single page app and the service worker can be omitted.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a single page app.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n", "CodeBleu_score": 79.46225310538249}]}
{"instance_id": "27dabe0c40aa", "generation_result": [{"code": "function areAllRequiredElementsHighlighted    const highlightedElements = document.querySelectorAll(\".highlighted\");\n    const highlighted = Array.from(highlightedElements).map((element) => element.id);\n    const required = Array.from(document.querySelectorAll(\".required\")).map(\n        (element) => element.id\n    );\n    const highlightedSet = new Set(highlighted);\n    const requiredSet = new Set(required);\n    const intersection = new Set(\n        [...highlightedSet].filter((element) => requiredSet.has(element))\n    );\n    if (intersection.size === 0) {\n        return \"UNCHECKED\";\n    } else if (intersection.size === required.length) {\n        return \"CHECKED\";\n    } else {\n        return \"INDETERMINATE\";\n    }\n}\n", "CodeBleu_score": 31.930389968656115}, {"code": "function areAllRequiredElementsHighlighted  const highlighted = this.highlightedElements;\n  const required = this.requiredElements;\n  const highlightedCount = highlighted.length;\n  const requiredCount = required.length;\n  let state = CheckboxState.UNCHECKED;\n\n  if (highlightedCount === 0) {\n    state = CheckboxState.UNCHECKED;\n  } else if (highlightedCount === requiredCount) {\n    state = CheckboxState.CHECKED;\n  } else {\n    state = CheckboxState.INDETERMINATE;\n  }\n\n  return state;\n}\n", "CodeBleu_score": 29.090446036006632}, {"code": "function areAllRequiredElementsHighlighted  const {\n    requiredElements,\n    highlightedElements,\n  } = this.state;\n\n  const numberOfHighlightedElements = highlightedElements.length;\n  const numberOfRequiredElements = requiredElements.length;\n\n  if (numberOfHighlightedElements === 0) {\n    return CheckboxState.UNCHECKED;\n  }\n\n  if (numberOfHighlightedElements === numberOfRequiredElements) {\n    return CheckboxState.CHECKED;\n  }\n\n  return CheckboxState.INDETERMINATE;\n}\n", "CodeBleu_score": 26.517025164053475}]}
{"instance_id": "c60e532809af", "generation_result": [{"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) =>   const actions = actionsFn(...handles);\n  const handlers = [];\n  for (const [key, action] of Object.entries(actions)) {\n    const [eventName, selector] = key.split(\":\");\n    const handler = (event: any) => {\n      if (!selector || event.target.matches(selector)) {\n        action(event);\n      }\n    };\n    handlers.push({ eventName, handler });\n  }\n  return handlers;\n}\n", "CodeBleu_score": 45.957104326840906}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) =>   const actions = actionsFn(...handles);\n\n  return Object.entries(actions).map(([key, action]) => {\n    const [event, selector] = key.split(\":\");\n    return {\n      event,\n      handler: (event: Event) => {\n        if (!selector || event.target.matches(selector)) {\n          action(event);\n        }\n      },\n    };\n  });\n};\n", "CodeBleu_score": 45.4055279753948}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) =>     const actions = actionsFn(...handles);\n    const handlers = [];\n  \n    for (const [key, action] of Object.entries(actions)) {\n      const [eventName, selector] = key.split(':');\n  \n      const handler = (event: Event) => {\n        if (!selector || event.target.matches(selector)) {\n          event.preventDefault();\n          action(event);\n        }\n      };\n  \n      handlers.push({ eventName, handler });\n    }\n  \n    return handlers;\n  };\n", "CodeBleu_score": 44.49510530782747}]}
{"instance_id": "8c81ca953249", "generation_result": [{"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>  const root = document.getElementById(\"storybook-root\");\n\n  useEffect(() => {\n    if (root) {\n      handles.forEach((handle) => {\n        root.addEventListener(handle, actionsFn);\n      });\n    }\n\n    return () => {\n      if (root) {\n        handles.forEach((handle) => {\n          root.removeEventListener(handle, actionsFn);\n        });\n      }\n    };\n  }, [root, actionsFn, ...handles]);\n};", "CodeBleu_score": 35.26349905551412}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>  const root = document.getElementById('storybook-root');\n\n  if (root) {\n    handles.forEach((handle) => {\n      root.addEventListener(handle, actionsFn);\n    });\n  }\n\n  return () => {\n    if (root) {\n      handles.forEach((handle) => {\n        root.removeEventListener(handle, actionsFn);\n      });\n    }\n  };\n};\n", "CodeBleu_score": 29.852678273586193}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>    const root = document.getElementById('storybook-root');\n\n    if (!root) {\n        return;\n    }\n\n    const eventHandlers = handles.map((handle) => {\n        const eventName = handle.split('|')[0];\n        const eventHandler = actionsFn[handle];\n\n        return { eventName, eventHandler };\n    });\n\n    eventHandlers.forEach(({ eventName, eventHandler }) => {\n        root.addEventListener(eventName, eventHandler);\n    });\n\n    return () => {\n        eventHandlers.forEach(({ eventName, eventHandler }) => {\n            root.removeEventListener(eventName, eventHandler);\n        });\n    };\n};\n", "CodeBleu_score": 39.56479441693428}]}
{"instance_id": "3b9dc9070ef1", "generation_result": [{"code": "addAction = (action: ActionDisplay) =>  const { state, options } = this.props;\n  const { actions } = state;\n  const lastAction = actions[actions.length - 1];\n\n  if (lastAction && lastAction.data === action.data) {\n    lastAction.count++;\n  } else {\n    action.count = 1;\n    actions.push(action);\n  }\n\n  this.setState({\n    actions: actions.slice(-options.maxActions),\n  });\n};", "CodeBleu_score": 42.745381264313906}, {"code": "addAction = (action: ActionDisplay) =>  const { actions, options } = this.state;\n  const lastAction = actions[actions.length - 1];\n  if (lastAction && lastAction.data === action.data) {\n    lastAction.count++;\n  } else {\n    action.count = 1;\n    actions.push(action);\n  }\n  this.setState({\n    actions: actions.slice(-options.maxActions),\n  });\n};", "CodeBleu_score": 42.79941935622645}, {"code": "addAction = (action: ActionDisplay) =>  const { state, options } = this.props;\n  const { actions } = state;\n  const lastAction = actions[actions.length - 1];\n  if (lastAction && lastAction.data === action.data) {\n    lastAction.count++;\n  } else {\n    action.count = 1;\n    actions.push(action);\n  }\n  this.setState({\n    actions: actions.slice(-options.maxActions),\n  });\n};", "CodeBleu_score": 42.745381264313906}]}
{"instance_id": "c58b95bdb84e", "generation_result": [{"code": "export const addGridStyle = (selector: string, css: string) =>   const style = document.getElementById(selector)\n  if (style) {\n    if (style.innerHTML !== css) {\n      style.innerHTML = css\n    }\n  } else {\n    const styleEl = document.createElement('style')\n    styleEl.setAttribute('id', selector)\n    styleEl.innerHTML = css\n    document.head.appendChild(styleEl)\n  }\n}", "CodeBleu_score": 48.7008158006125}, {"code": "export const addGridStyle = (selector: string, css: string) =>     let style = document.getElementById(selector);\n    if (style) {\n        if (style.innerHTML !== css) {\n            style.innerHTML = css;\n        }\n    } else {\n        style = document.createElement(\"style\");\n        style.setAttribute(\"id\", selector);\n        style.innerHTML = css;\n        document.head.appendChild(style);\n    }\n}", "CodeBleu_score": 50.983516143555164}, {"code": "export const addGridStyle = (selector: string, css: string) =>     const style = document.getElementById(selector)\n    if (style) {\n        if (style.innerHTML !== css) {\n            style.innerHTML = css\n        }\n    } else {\n        const style = document.createElement('style')\n        style.setAttribute('id', selector)\n        style.innerHTML = css\n        document.head.appendChild(style)\n    }\n}", "CodeBleu_score": 51.96529349668455}]}
{"instance_id": "882d870a20b2", "generation_result": [{"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>  const style = document.querySelector(`#${selector}`);\n  if (style && style.textContent !== css) {\n    style.textContent = css;\n  } else if (!style) {\n    const newStyle = document.createElement('style');\n    newStyle.id = selector;\n    newStyle.textContent = css;\n    const gridStyle = document.querySelector(`#grid-${storyId}`);\n    if (gridStyle) {\n      document.head.insertBefore(newStyle, gridStyle);\n    } else {\n      document.head.appendChild(newStyle);\n    }\n  }\n};", "CodeBleu_score": 35.324008387753004}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>  const styleElement = document.getElementById(selector);\n  if (styleElement) {\n    if (styleElement.innerHTML !== css) {\n      styleElement.innerHTML = css;\n    }\n  } else {\n    const newStyleElement = document.createElement(\"style\");\n    newStyleElement.setAttribute(\"id\", selector);\n    newStyleElement.innerHTML = css;\n    document.head.appendChild(newStyleElement);\n  }\n\n  const gridStyleElement = document.getElementById(`${storyId}-grid`);\n  if (gridStyleElement) {\n    document.head.insertBefore(newStyleElement, gridStyleElement);\n  } else {\n    document.head.appendChild(newStyleElement);\n  }\n};", "CodeBleu_score": 42.41342445661353}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>  const existingStyle = document.getElementById(selector);\n  const gridStyle = document.getElementById(`grid-${storyId}`);\n\n  if (existingStyle) {\n    if (existingStyle.textContent !== css) {\n      existingStyle.textContent = css;\n    }\n  } else {\n    const style = document.createElement('style');\n    style.id = selector;\n    style.textContent = css;\n\n    if (gridStyle) {\n      document.head.insertBefore(style, gridStyle);\n    } else {\n      document.head.appendChild(style);\n    }\n  }\n};", "CodeBleu_score": 44.650030850468795}]}
{"instance_id": "c17e647327b5", "generation_result": [{"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>  event.preventDefault();\n\n  if (isCreating || isSaving) {\n    return;\n  }\n\n  setErrorMessage(\"\");\n  setIsCreating(true);\n\n  try {\n    const sanitizedStoryName = sanitizeStoryName(storyName);\n    await createStory(sanitizedStoryName);\n  } catch (error) {\n    setErrorMessage(\"Failed to create story. Please try again later.\");\n  }\n\n  setIsCreating(false);\n  setIsSaving(false);\n};", "CodeBleu_score": 33.22663024074778}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>    event.preventDefault();\n    if (isCreating) return;\n    setErrorMessage(\"\");\n    setIsSaving(true);\n    try {\n      await createStory({\n        variables: {\n          storyName: sanitizeName(storyName),\n        },\n      });\n      setIsCreating(false);\n    } catch (error) {\n      setErrorMessage(error.message);\n      setIsSaving(false);\n    }\n  };\n\n  /**\n * This function, sanitizeName, takes a string and returns a sanitized version of it.\\nIt removes any non-alphanumeric characters and replaces spaces with hyphens.\\nIt also limits the length of the sanitized name to 20 characters.\n */", "CodeBleu_score": 35.90071171638123}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>    event.preventDefault();\n    if (isCreating) return;\n    setErrorMessage(\"\");\n    setIsSaving(true);\n    try {\n      const sanitizedStoryName = sanitizeStoryName(storyName);\n      await createStory(sanitizedStoryName);\n      setIsCreating(false);\n    } catch (error) {\n      setErrorMessage(\"Error creating story\");\n      setIsSaving(false);\n    }\n  };\n", "CodeBleu_score": 34.85011821102038}]}
{"instance_id": "2d58c69eda27", "generation_result": [{"code": "function Title()  const { argTypes } = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) => argType?.control && argType?.control !== 'none'\n  ).length;\n\n  const suffix = controlsCount ? (\n    <Badge\n      style={{\n        marginLeft: 4,\n        fontSize: 12,\n        fontWeight: 600,\n      }}\n    >\n      {controlsCount}\n    </Badge>\n  ) : null;\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      <div>Controls</div>\n      {suffix}\n    </div>\n  );\n}\n", "CodeBleu_score": 45.74225048923637}, {"code": "function Title()  const { argTypes } = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) => argType?.control && argType?.control !== 'none'\n  ).length;\n  const suffix = controlsCount ? (\n    <span\n      style={{\n        background: 'rgba(0,0,0,0.1)',\n        borderRadius: 10,\n        color: '#333',\n        display: 'inline-block',\n        fontSize: 12,\n        fontWeight: 'normal',\n        lineHeight: '1',\n        minWidth: 20,\n        padding: '0 6px',\n        textAlign: 'center',\n      }}\n    >\n      {controlsCount}\n    </span>\n  ) : null;\n  return (\n    <div\n      style={{\n        color: '#333',\n        fontSize: 16,\n        marginBottom: 10,\n        padding: '0 5px',\n      }}\n    >\n      Controls {suffix}\n    </div>\n  );\n}\n", "CodeBleu_score": 43.62945873953106}, {"code": "function Title()  const { argTypes } = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) =>\n      argType?.control &&\n      argType?.control !== 'none' &&\n      !argType?.parameters?.controls?.disable\n  ).length;\n  const suffix = controlsCount ? (\n    <Badge\n      className=\"addon-controls-badge\"\n      status=\"neutral\"\n      data-testid=\"badge\"\n    >\n      {controlsCount}\n    </Badge>\n  ) : null;\n  return (\n    <div className=\"addon-controls-title\">\n      <span>Controls</span>\n      {suffix && <span>{suffix}</span>}\n    </div>\n  );\n}", "CodeBleu_score": 45.81980927513341}]}
{"instance_id": "b8fba20204d6", "generation_result": [{"code": "const highlight = (infos: HighlightInfo) =>  const { elements, style } = infos;\n\n  // Reset any existing highlights\n  resetHighlights();\n\n  // Ensure no duplicate selectors in the elements array\n  const uniqueElements = [...new Set(elements)];\n\n  // Create a new style element\n  const highlightStyle = document.createElement(\"style\");\n\n  // Set the style element's ID\n  highlightStyle.id = \"highlight-style\";\n\n  // Define CSS rules for each element based on the provided highlight information\n  const cssRules = uniqueElements.map((element) => {\n    const { tagName, id, className, style: elementStyle } = element;\n    const selector = id ? `#${id}` : className ? `.${className}` : tagName;\n    const cssProperties = Object.entries(elementStyle)\n      .map(([key, value]) => `${key}: ${value}`)\n      .join(\"; \");\n    return `${selector} { ${cssProperties} }`;\n  });\n\n  // Set the CSS rules as the style element's inner HTML\n  highlightStyle.innerHTML = cssRules.join(\"\\n\");\n\n  // Append the style element to the document head\n  document.head.appendChild(highlightStyle);\n};\n", "CodeBleu_score": 40.24666099676274}, {"code": "const highlight = (infos: HighlightInfo) =>  const { elements, style, id } = infos;\n  const uniqueElements = Array.from(new Set(elements));\n  const styleElement = document.createElement('style');\n  styleElement.id = id;\n  const cssRules = uniqueElements.map((element) => `${element} { ${style} }`).join('\\n');\n  styleElement.innerHTML = cssRules;\n  document.head.appendChild(styleElement);\n};\n", "CodeBleu_score": 38.27623348339678}, {"code": "const highlight = (infos: HighlightInfo) =>  const { elements, color, label } = infos;\n  const uniqueElements = Array.from(new Set(elements));\n\n  // Remove any existing highlights\n  const existingHighlights = document.querySelectorAll(\n    'style[id^=\"highlight-\"]'\n  );\n  existingHighlights.forEach((highlight) => highlight.remove());\n\n  // Create a new style element\n  const style = document.createElement('style');\n  style.id = `highlight-${Date.now()}`;\n\n  // Define CSS rules for each element\n  const cssRules = uniqueElements.map((element) => {\n    const selector = element.tagName.toLowerCase();\n    const css = `\n      ${selector} {\n        outline: 2px solid ${color};\n        outline-offset: 2px;\n        position: relative;\n        z-index: 9999;\n      }\n      ${selector}::before {\n        content: '${label}';\n        position: absolute;\n        top: -20px;\n        left: 50%;\n        transform: translateX(-50%);\n        background-color: ${color};\n        color: white;\n        padding: 2px 4px;\n        border-radius: 2px;\n        font-size: 12px;\n        font-family: sans-serif;\n        z-index: 9999;\n      }\n    `;\n    return css;\n  });\n\n  // Set the CSS rules for the style element\n  style.innerHTML = cssRules.join('\\n');\n\n  // Append the style element to the document head\n  document.head.appendChild(style);\n};\n", "CodeBleu_score": 37.39089482807441}]}
{"instance_id": "08a3fb827e48", "generation_result": [{"code": "const resetHighlight = () =>  const element = document.getElementById('highlight');\n  if (element) {\n    element.parentNode.removeChild(element);\n  }\n};\n", "CodeBleu_score": 24.10082200419727}, {"code": "const resetHighlight = () =>  const highlightStyle = document.getElementById('highlight-style');\n  if (highlightStyle) {\n    highlightStyle.remove();\n  }\n};\n", "CodeBleu_score": 18.91999961259225}, {"code": "const resetHighlight = () =>  const stylesheet = document.getElementById(\"highlight-stylesheet\");\n  if (stylesheet) {\n    stylesheet.parentNode.removeChild(stylesheet);\n  }\n};\n", "CodeBleu_score": 26.447279308895872}]}
{"instance_id": "1287df4e99b3", "generation_result": [{"code": "function parseQuery(queryString: string)  const queryObject: Record<string, string> = {};\n  const query = queryString.startsWith(\"?\") ? queryString.slice(1) : queryString;\n\n  if (!query) {\n    return queryObject;\n  }\n\n  query.split(\"&\").forEach((pair) => {\n    const [key, value] = pair.split(\"=\");\n    const decodedKey = decodeURIComponent(key);\n    const decodedValue = decodeURIComponent(value);\n    queryObject[decodedKey] = decodedValue;\n  });\n\n  return queryObject;\n}\n", "CodeBleu_score": 39.26943651979023}, {"code": "function parseQuery(queryString: string)  const query: { [key: string]: string } = {};\n  const pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n  for (let i = 0; i < pairs.length; i++) {\n    const pair = pairs[i].split('=');\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n  }\n  return query;\n}\n", "CodeBleu_score": 73.47405264344226}, {"code": "function parseQuery(queryString: string)  const query: Record<string, string> = {}\n  const pairs = (queryString[0] === \"?\" ? queryString.substr(1) : queryString).split(\"&\")\n  for (let i = 0; i < pairs.length; i++) {\n    const pair = pairs[i].split(\"=\")\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || \"\")\n  }\n  return query\n}\n", "CodeBleu_score": 67.43496665684474}]}
{"instance_id": "83c4f520b99a", "generation_result": [{"code": "const linksListener = (e: Event) =>  const target = e.target as HTMLElement;\n  if (target.dataset.sbKind && target.dataset.sbStory) {\n    e.preventDefault();\n    navigate(target.dataset.sbKind, target.dataset.sbStory);\n  }\n};\n", "CodeBleu_score": 21.114235729792917}, {"code": "const linksListener = (e: Event) =>    if (!(e.target instanceof HTMLElement)) return;\n    const { sbKind, sbStory } = e.target.dataset;\n    if (sbKind || sbStory) {\n        e.preventDefault();\n        navigate(sbKind, sbStory);\n    }\n};\n", "CodeBleu_score": 29.146405816832388}, {"code": "const linksListener = (e: Event) =>  const target = e.target as HTMLElement;\n  if (target instanceof HTMLElement) {\n    const { sbKind, sbStory } = target.dataset;\n    if (sbKind && sbStory) {\n      e.preventDefault();\n      navigate(sbKind, sbStory);\n    }\n  }\n};\n", "CodeBleu_score": 31.772310175451818}]}
{"instance_id": "8b8e277eb593", "generation_result": [{"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>  const root = node.getRootNode() as HTMLElement;\n  const nested = root.shadowRoot?.elementFromPoint(\n    node.offsetLeft,\n    node.offsetTop\n  ) as HTMLElement;\n\n  if (nested === root) {\n    return root;\n  }\n\n  if (nested?.shadowRoot) {\n    return crawlShadows(nested);\n  }\n\n  return nested ?? node;\n};\n", "CodeBleu_score": 39.12538710568248}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>  const root = node.getRootNode() as Document | ShadowRoot;\n  if (root.constructor.name !== 'ShadowRoot') return node;\n\n  const nestedElement = root.elementFromPoint(node.offsetLeft, node.offsetTop);\n  if (nestedElement === node) return node;\n\n  if (nestedElement.getRootNode().constructor.name === 'ShadowRoot') {\n    return crawlShadows(nestedElement as HTMLElement);\n  }\n\n  return nestedElement as HTMLElement;\n};\n", "CodeBleu_score": 33.65663628382281}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>  const root = node.getRootNode() as HTMLElement;\n  const nested = root.shadowRoot?.elementFromPoint(\n    node.offsetLeft + node.offsetWidth / 2,\n    node.offsetTop + node.offsetHeight / 2\n  );\n\n  if (nested === root) {\n    return root;\n  }\n\n  if (nested && nested.shadowRoot) {\n    return crawlShadows(nested);\n  }\n\n  return nested ?? root;\n};\n", "CodeBleu_score": 40.36822810186754}]}
{"instance_id": "2fa298c35659", "generation_result": [{"code": "function createCanvas(): CanvasState  const canvas = document.createElement(\"canvas\");\n  canvas.id = \"canvas\";\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    throw new Error(\"Failed to obtain 2D drawing context\");\n  }\n  canvas.width = document.documentElement.clientWidth;\n  canvas.height = document.documentElement.clientHeight;\n  canvas.style.position = \"absolute\";\n  canvas.style.top = \"0\";\n  canvas.style.left = \"0\";\n  canvas.style.zIndex = \"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "CodeBleu_score": 32.475586890353284}, {"code": "function createCanvas(): CanvasState  const canvas = document.createElement('canvas');\n  canvas.id = 'canvas';\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw new Error('Failed to get 2D context');\n  canvas.width = document.documentElement.clientWidth;\n  canvas.height = document.documentElement.clientHeight;\n  canvas.style.position = 'absolute';\n  canvas.style.top = '0';\n  canvas.style.left = '0';\n  canvas.style.zIndex = '10000';\n  canvas.style.pointerEvents = 'none';\n  document.body.appendChild(canvas);\n  return { canvas, ctx, width: canvas.width, height: canvas.height };\n}\n", "CodeBleu_score": 45.69130569617866}, {"code": "function createCanvas(): CanvasState  const canvas = document.createElement(\"canvas\");\n  canvas.id = \"canvas\";\n  const ctx = canvas.getContext(\"2d\");\n\n  if (ctx === null) {\n    throw new Error(\"Failed to get 2D context\");\n  }\n\n  canvas.width = document.documentElement.clientWidth;\n  canvas.height = document.documentElement.clientHeight;\n\n  canvas.style.position = \"absolute\";\n  canvas.style.top = \"0\";\n  canvas.style.left = \"0\";\n  canvas.style.zIndex = \"9999\";\n  canvas.style.pointerEvents = \"none\";\n\n  document.body.appendChild(canvas);\n\n  return {\n    canvas,\n    ctx,\n    width: canvas.width,\n    height: canvas.height,\n  };\n}\n", "CodeBleu_score": 40.896390529002055}]}
{"instance_id": "0484eaeba359", "generation_result": [{"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>  if (!options.telemetry) {\n    return channel;\n  }\n\n  const telemetryVersion = await getVersion('@storybook/addon-onboarding');\n\n  channel.on('addon:onboarding:event', (event) => {\n    channel.emit('telemetry', {\n      event,\n      version: telemetryVersion,\n    });\n  });\n\n  return channel;\n};", "CodeBleu_score": 19.500593020932822}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>  const { telemetry, serverChannelUrl, configDir } = options;\n  if (telemetry === false) {\n    return channel;\n  }\n  const addonVersion = await getVersion('@storybook/addon-onboarding');\n  channel.addListener('onboarding/telemetry', (event) => {\n    const data = {\n      addonVersion,\n      event,\n    };\n    fetch(serverChannelUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  });\n  return channel;\n};", "CodeBleu_score": 26.962776052654313}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>  const { telemetry } = options;\n  if (telemetry?.isDisabled) {\n    return channel;\n  }\n  const addonVersion = await getVersion();\n  channel.addListener('telemetry', (event) => {\n    channel.emit('telemetry', {\n      ...event,\n      addonVersion,\n    });\n  });\n  return channel;\n};", "CodeBleu_score": 19.938800009740447}]}
{"instance_id": "8552de1f8368", "generation_result": [{"code": "export const addOutlineStyles = (selector: string, css: string) =>   const styleElement = document.getElementById(selector);\n  if (styleElement) {\n    if (styleElement.innerHTML !== css) {\n      styleElement.innerHTML = css;\n    }\n  } else {\n    const newStyleElement = document.createElement('style');\n    newStyleElement.setAttribute('id', selector);\n    newStyleElement.innerHTML = css;\n    document.head.appendChild(newStyleElement);\n  }\n};", "CodeBleu_score": 50.58032210592949}, {"code": "export const addOutlineStyles = (selector: string, css: string) =>   const existingStyleElement = document.querySelector(`style#${selector}`);\n\n  if (existingStyleElement) {\n    if (existingStyleElement.innerHTML !== css) {\n      existingStyleElement.innerHTML = css;\n    }\n  } else {\n    const styleElement = document.createElement('style');\n    styleElement.id = selector;\n    styleElement.innerHTML = css;\n    document.head.appendChild(styleElement);\n  }\n};\n", "CodeBleu_score": 49.61407156570862}, {"code": "export const addOutlineStyles = (selector: string, css: string) =>     const existingStyle = document.getElementById(selector)\n    if (existingStyle && existingStyle.innerHTML !== css) {\n        existingStyle.innerHTML = css\n    } else if (!existingStyle) {\n        const style = document.createElement('style')\n        style.setAttribute('id', selector)\n        style.innerHTML = css\n        document.head.appendChild(style)\n    }\n}\n", "CodeBleu_score": 50.911070068578255}]}
{"instance_id": "2472b6d48b9a", "generation_result": [{"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n)  if (!i18n) {\n    return;\n  }\n\n  const { locales, defaultLocale, loadTranslations, duplicateTranslation } = i18n;\n\n  for (const locale of locales) {\n    if (!locale.inline && locale.locale !== defaultLocale) {\n      continue;\n    }\n\n    if (locale.translations) {\n      const loader = new TranslationLoader(locale.translations, context.logger);\n      await loader.loadTranslations(\n        locale.locale,\n        duplicateTranslation ? duplicateTranslation : 'warn',\n      );\n    }\n  }\n}", "CodeBleu_score": 37.122470542680134}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n)  const { logger } = context;\n  const { duplicateTranslation } = i18n;\n\n  for (const locale of i18n.locales) {\n    if (locale === i18n.sourceLocale) {\n      continue;\n    }\n\n    if (locale.inline) {\n      continue;\n    }\n\n    const translationFiles = await context.getTarget().getTranslationFiles(locale.locale);\n\n    if (translationFiles.length > 0) {\n      const loader = new TranslationLoader(locale, duplicateTranslation);\n\n      for (const translationFile of translationFiles) {\n        try {\n          await loader.loadTranslations(translationFile);\n        } catch (error) {\n          logger.warn(`Error loading translations from \"${translationFile}\": ${error}`);\n        }\n      }\n\n      loader.logWarnings();\n    }\n  }\n}", "CodeBleu_score": 40.860986864907204}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n)  const logger = context.logger.createChild('@nguniversal/builders');\n\n  const locales = i18n.locales;\n  const inlineLocales = i18n.inlineLocales;\n  const sourceLocale = i18n.sourceLocale;\n  const duplicateTranslationBehavior = i18n.duplicateTranslationBehavior;\n\n  for (const locale of locales) {\n    if (locale === sourceLocale || inlineLocales.includes(locale)) {\n      continue;\n    }\n\n    const translationFiles = i18n.translationFiles[locale];\n    if (translationFiles) {\n      const translationLoader = new TranslationLoader(logger);\n      await translationLoader.loadTranslations(\n        translationFiles,\n        duplicateTranslationBehavior,\n      );\n    }\n  }\n}", "CodeBleu_score": 38.59340206464861}]}
{"instance_id": "24579c798101", "generation_result": [{"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>  const {\n    plugins,\n    extensions,\n    ...otherOptions\n  } = typeof pluginsOrExtensions === 'object' ? pluginsOrExtensions : {\n    plugins: pluginsOrExtensions,\n    extensions: {},\n  };\n\n  return build(\n    {\n      ...otherOptions,\n      plugins: Array.isArray(plugins) ? plugins : [plugins],\n    },\n    context,\n  );\n}", "CodeBleu_score": 37.549827903843905}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>  const {\n    builder,\n    builderConfig,\n    builderConfigPath,\n    target,\n    tsConfigPath,\n    watch,\n  } = options;\n\n  const {\n    createProgram,\n    createWatchProgram,\n    createBuilder,\n    scheduleTarget,\n    build,\n  } = createBuilder(builder);\n\n  const normalizedPluginsOrExtensions = normalizePluginsOrExtensions(\n    pluginsOrExtensions,\n  );\n\n  const { plugins, extensions } = normalizedPluginsOrExtensions;\n\n  const normalizedBuilderConfig = normalizeBuilderConfig(builderConfig);\n\n  const program = watch\n    ? createWatchProgram(builderConfigPath)\n    : createProgram(builderConfigPath);\n\n  const buildOptions = {\n    program,\n    tsConfigPath,\n    target,\n    watch,\n  };\n\n  const buildContext = {\n    ...context,\n    builder: createBuilder(builder),\n    normalizedPluginsOrExtensions,\n    normalizedBuilderConfig,\n    program,\n    buildOptions,\n  };\n\n  const results = build(buildOptions, buildContext);\n\n  return scheduleTarget(results, buildContext);\n}", "CodeBleu_score": 28.036605521624796}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>  const {\n    plugins: pluginsOrExtensionsArray = [],\n    extensions = [],\n    ...restOptions\n  } = typeof pluginsOrExtensions === 'object' ? pluginsOrExtensions : { plugins: pluginsOrExtensions };\n\n  const plugins = Array.isArray(pluginsOrExtensionsArray) ? pluginsOrExtensionsArray : [pluginsOrExtensionsArray];\n\n  const {\n    plugins: pluginsFromExtensions = [],\n    extensions: extensionsFromExtensions = [],\n  } = extensions.reduce(\n    (acc, extension) => {\n      const { plugins: extensionPlugins = [], extensions: extensionExtensions = [] } = typeof extension === 'function' ? extension(context) : extension;\n      return {\n        plugins: [...acc.plugins, ...extensionPlugins],\n        extensions: [...acc.extensions, ...extensionExtensions],\n      };\n    },\n    { plugins: [], extensions: [] },\n  );\n\n  const allPlugins = [...plugins, ...pluginsFromExtensions];\n\n  const allExtensions = [...extensionsFromExtensions, ...extensions];\n\n  const { success, ...result } = build(allPlugins, { ...restOptions, extensions: allExtensions }, context);\n\n  return success ? result : Promise.reject(result);\n}", "CodeBleu_score": 31.270478752613606}]}
{"instance_id": "126e9e9e4010", "generation_result": [{"code": "const diagnostics = checkDuplicateMessages  checkFileSystem: any,\n  messages: any,\n  severity: 'warning',\n  basePath: any,\n};\n", "CodeBleu_score": 20.980634290148412}, {"code": "const diagnostics = checkDuplicateMessages  checkFileSystem,\n  messages: extractionResult.messages,\n  level: 'warning',\n  basePath: extractionResult.basePath,\n};", "CodeBleu_score": 23.61140070337109}, {"code": "const diagnostics = checkDuplicateMessages  checkFileSystem: any,\n  messages: any,\n  type: 'warning',\n  basePath: any,\n}\n", "CodeBleu_score": 20.51368881399246}]}
{"instance_id": "349518a072df", "generation_result": [{"code": "function isTslibHelperName(name: string): boolean  const [originalName, version] = name.split(\"$\");\n  if (version === undefined || !/^\\d+$/.test(version)) {\n    return false;\n  }\n  return tslibHelpers.has(originalName);\n}\n", "CodeBleu_score": 43.927866777292394}, {"code": "function isTslibHelperName(name: string): boolean  const [originalName, number] = name.split('$');\n\n  if (number === undefined || isNaN(Number(number))) {\n    return false;\n  }\n\n  return tslibHelpers.has(originalName);\n}\n", "CodeBleu_score": 45.313436320738035}, {"code": "function isTslibHelperName(name: string): boolean  const [originalName, index] = name.split('$');\n\n  if (index === undefined) {\n    return false;\n  }\n\n  const indexNumber = Number(index);\n\n  if (isNaN(indexNumber)) {\n    return false;\n  }\n\n  return tslibHelpers.has(originalName);\n}", "CodeBleu_score": 50.90541104209719}]}
{"instance_id": "0a9b3093b5bc", "generation_result": [{"code": "async bundle(): Promise<BundleContextResult>  if (this.cachedResult) {\n    return this.cachedResult;\n  }\n\n  const result = await this.bundleOperation();\n\n  if (this.cacheEnabled) {\n    this.cachedResult = result;\n  }\n\n  return result;\n}", "CodeBleu_score": 53.97352857181661}, {"code": "async bundle(): Promise<BundleContextResult>  const { cached, result } = await this.getCachedResult()\n  if (cached) {\n    return result\n  }\n  const result = await this.performBundleOperation()\n  if (this.cacheEnabled) {\n    this.cache.set(this.cacheKey, result)\n  }\n  return result\n}", "CodeBleu_score": 38.37451172555173}, {"code": "async bundle(): Promise<BundleContextResult>  if (this.cache.has(this.key)) {\n    return this.cache.get(this.key);\n  }\n\n  const result = await this.operation();\n\n  if (this.cacheEnabled) {\n    this.cache.set(this.key, result);\n  }\n\n  return result;\n}", "CodeBleu_score": 42.545652240746016}]}
{"instance_id": "f4fe3e6ac648", "generation_result": [{"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string>   const changedFiles = new Set<string>();\n\n  for (const [filePath, currentHash] of this.outputHashes.entries()) {\n    const previousHash = previousOutputHashes.get(filePath);\n\n    if (previousHash === undefined || previousHash !== currentHash) {\n      changedFiles.add(filePath);\n    }\n  }\n\n  return changedFiles;\n}", "CodeBleu_score": 66.8517836965594}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string>   const changedFiles = new Set<string>();\n  for (const [filePath, currentHash] of this.outputHashes.entries()) {\n    const previousHash = previousOutputHashes.get(filePath);\n    if (!previousHash || previousHash !== currentHash) {\n      changedFiles.add(filePath);\n    }\n  }\n  return changedFiles;\n}\n", "CodeBleu_score": 61.85977377879056}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string>   const changedFiles: Set<string> = new Set();\n\n  for (const [filePath, currentHash] of this.outputHashes.entries()) {\n    const previousHash = previousOutputHashes.get(filePath);\n    if (!previousHash || previousHash !== currentHash) {\n      changedFiles.add(filePath);\n    }\n  }\n\n  return changedFiles;\n}", "CodeBleu_score": 58.08739358643638}]}
{"instance_id": "8969b8ce5198", "generation_result": [{"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule>   return localizeTools ??= await import('@angular/localize/tools');\n}", "CodeBleu_score": 32.502674084428804}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule>   return localizeTools ??= await import('@angular/localize/tools');\n}\n", "CodeBleu_score": 32.502674084428804}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule>     return localizeTools ??= await import('@angular/localize/tools');\n}\n", "CodeBleu_score": 32.948357625128956}]}
{"instance_id": "d7c4df80e1ac", "generation_result": [{"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined)  const { init, t } = await import('@angular/localize');\n  init({\n    missingTranslation: 'error',\n  });\n\n  const diagnostics = new Diagnostics();\n  const localePlugin = createLocalePlugin(locale, diagnostics);\n  const translationPlugin = createTranslationPlugin(translation, diagnostics);\n  const missingTranslationPlugin = createMissingTranslationPlugin(diagnostics);\n\n  return {\n    diagnostics,\n    plugins: [missingTranslationPlugin, translationPlugin, localePlugin],\n  };\n}", "CodeBleu_score": 35.139298130378414}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined)  const { init, t } = await import('@angular/localize');\n  init({\n    missingTranslation: 'error',\n  });\n\n  const diagnostics = new Diagnostics();\n  const localeId = getLocaleId(locale);\n  const translatePlugin = new InlineTranslationPlugin(\n    locale,\n    translation ?? {},\n    diagnostics,\n    undefined,\n    undefined,\n    undefined,\n  );\n  const missingTranslationPlugin = new MissingTranslationPlugin(diagnostics);\n  const inlineLocalePlugin = new InlineLocalePlugin(locale, diagnostics);\n\n  return {\n    diagnostics,\n    plugins: [missingTranslationPlugin, inlineLocalePlugin, translatePlugin],\n  };\n}", "CodeBleu_score": 36.42819759876813}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined)  const { loadTranslations } = await import('@angular/localize');\n  const diagnostics = new Diagnostics();\n  const localePlugin = createLocalePlugin(locale, diagnostics);\n  const missingTranslation = 'MISSING';\n  const translationPlugin = createTranslationPlugin(translation, missingTranslation, diagnostics);\n\n  return {\n    diagnostics,\n    plugins: [loadTranslations(), localePlugin, translationPlugin],\n  };\n}", "CodeBleu_score": 34.59719913031637}]}
{"instance_id": "9486259c4631", "generation_result": [{"code": "const readAsset = async function (filePath: string): Promise<string>  const path = filePath.replace(/^\\//, \"\");\n  const file = browserOutputFiles.find((file) => file.path === path);\n  if (file) {\n    return file.text;\n  } else {\n    throw new Error(`File ${filePath} does not exist`);\n  }\n};\n", "CodeBleu_score": 48.22947202754867}, {"code": "const readAsset = async function (filePath: string): Promise<string>  const relativePath = filePath.replace(process.cwd(), '');\n  const file = browserOutputFiles.find((file) => file.path === relativePath);\n  if (file) {\n    return file.text;\n  } else {\n    throw new Error(`File ${relativePath} does not exist`);\n  }\n};\n", "CodeBleu_score": 50.598768329364496}, {"code": "const readAsset = async function (filePath: string): Promise<string>  const path = filePath.replace(/^\\//, '');\n  const file = browserOutputFiles.find((f) => f.path === path);\n  if (file) {\n    return file.text;\n  } else {\n    throw new Error(`File ${filePath} does not exist`);\n  }\n};\n", "CodeBleu_score": 43.270065538531824}]}
{"instance_id": "2206ca03c7ec", "generation_result": [{"code": "async put(path: string, result: OnLoadResult): Promise<void>  this.loadResults.set(path, result);\n  if (result.watchFiles) {\n    const normalizedWatchFiles = result.watchFiles.map((file) => normalizePath(file));\n    for (const file of normalizedWatchFiles) {\n      let files = this.fileDependencies.get(file);\n      if (!files) {\n        files = new Set();\n        this.fileDependencies.set(file, files);\n      }\n      files.add(path);\n    }\n  }\n}", "CodeBleu_score": 55.293625429875185}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>  if (result.watchFiles) {\n    const normalizedWatchFiles = await Promise.all(\n      result.watchFiles.map(async (watchFile) => {\n        return normalizePath(watchFile);\n      })\n    );\n\n    this.fileDependencies.set(path, normalizedWatchFiles);\n  }\n\n  this.loadResults.set(path, result);\n}", "CodeBleu_score": 39.04687660334004}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>    this.loadResults.set(path, result);\n\n    if (result.watchFiles) {\n        const normalizedWatchFiles = result.watchFiles.map((file) =>\n            normalizePath(file)\n        );\n\n        for (const watchFile of normalizedWatchFiles) {\n            if (!this.fileDependencies.has(watchFile)) {\n                this.fileDependencies.set(watchFile, new Set());\n            }\n            this.fileDependencies.get(watchFile)!.add(path);\n        }\n    }\n}", "CodeBleu_score": 53.63575630103027}]}
{"instance_id": "a261d85630d0", "generation_result": [{"code": "invalidate(path: string): boolean    let deleted = false;\n    const deps = this.fileDependencies.get(path);\n    if (deps) {\n        for (const dep of deps) {\n            if (this.loadResults.delete(dep)) {\n                deleted = true;\n            }\n        }\n    }\n    this.fileDependencies.delete(path);\n    return deleted;\n}", "CodeBleu_score": 50.045269672899416}, {"code": "invalidate(path: string): boolean  const affectedPaths = this.fileDependencies.get(path);\n  let deleted = false;\n\n  if (affectedPaths) {\n    affectedPaths.forEach((affectedPath) => {\n      if (this.loadResults.delete(affectedPath)) {\n        deleted = true;\n      }\n    });\n  }\n\n  this.fileDependencies.delete(path);\n  return deleted;\n}", "CodeBleu_score": 59.75303797948146}, {"code": "invalidate(path: string): boolean  const affected = this.fileDependencies.get(path)\n  if (!affected) return false\n\n  let deleted = false\n  for (const affectedPath of affected) {\n    if (this.loadResults.delete(affectedPath)) deleted = true\n  }\n\n  this.fileDependencies.delete(path)\n  return deleted\n}", "CodeBleu_score": 46.35355093711745}]}
{"instance_id": "8fa6dee0ba79", "generation_result": [{"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void  const duration = process.hrtime.bigint() - startTime;\n  if (cumulative) {\n    if (!cumulativeDurations.has(name)) {\n      cumulativeDurations.set(name, BigInt(0));\n    }\n    cumulativeDurations.set(name, cumulativeDurations.get(name) + duration);\n  } else {\n    console.log(`${name}: ${Number(duration) / 1000000000} seconds`);\n  }\n}\n", "CodeBleu_score": 40.536428693734344}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void  const endTime = process.hrtime.bigint();\n  const duration = endTime - startTime;\n\n  if (cumulative) {\n    const durationMap = new Map<string, bigint>();\n    const cumulativeDuration = durationMap.get(name) ?? BigInt(0);\n    durationMap.set(name, cumulativeDuration + duration);\n    console.log(`Cumulative duration for ${name}: ${cumulativeDuration / BigInt(1e9)} seconds`);\n  } else {\n    console.log(`Duration for ${name}: ${duration / BigInt(1e9)} seconds`);\n  }\n}\n", "CodeBleu_score": 45.740104366528314}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void  const duration = process.hrtime.bigint() - startTime;\n  if (cumulative) {\n    if (!cumulativeDurations.has(name)) {\n      cumulativeDurations.set(name, BigInt(0));\n    }\n    const cumulativeDuration = cumulativeDurations.get(name)!;\n    cumulativeDurations.set(name, cumulativeDuration + duration);\n  } else {\n    console.log(`${name} took ${(Number(duration) / 1000000000).toFixed(9)} seconds`);\n  }\n}\n", "CodeBleu_score": 43.38938320843318}]}
{"instance_id": "0c530cbeb386", "generation_result": [{"code": "export function ensureSourceFileVersions(program: ts.Program): void  const originalGetSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = () => {\n    const sourceFiles = originalGetSourceFiles.call(program);\n    for (const sourceFile of sourceFiles) {\n      if (!sourceFile.version) {\n        sourceFile.version = computeSourceFileVersion(sourceFile);\n      }\n    }\n    return sourceFiles;\n  };\n}\n", "CodeBleu_score": 43.88225443343215}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void  const originalGetSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = () => {\n    const sourceFiles = originalGetSourceFiles.call(program);\n    for (const sourceFile of sourceFiles) {\n      if (!sourceFile.version) {\n        sourceFile.version = createHash('sha256').update(sourceFile.text).digest('hex');\n      }\n    }\n    return sourceFiles;\n  };\n}", "CodeBleu_score": 52.00785210447809}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void  const originalGetSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = () => {\n    const sourceFiles = originalGetSourceFiles.call(program);\n    sourceFiles.forEach((sourceFile) => {\n      if (!sourceFile.version) {\n        const version = computeSourceFileVersion(sourceFile);\n        sourceFile.version = version;\n      }\n    });\n    return sourceFiles;\n  };\n}\n", "CodeBleu_score": 42.29989081712225}]}
{"instance_id": "3faf480d56ae", "generation_result": [{"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>  if (resolvedModule) {\n    const normalizedFileName = normalizeFileName(resolvedModule.resolvedFileName);\n    const replacement = replacements.get(normalizedFileName);\n    if (replacement) {\n      return {\n        fileName: replacement.fileName,\n        isExternalLibraryImport: replacement.isExternalLibraryImport,\n      };\n    }\n  }\n  return resolvedModule;\n};", "CodeBleu_score": 48.518117198785546}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>  if (!resolvedModule) return resolvedModule;\n  const { resolvedFileName } = resolvedModule;\n  const replacement = replacements[resolvedFileName];\n  if (replacement) {\n    return {\n      resolvedFileName: replacement,\n      isExternalLibraryImport: true,\n    };\n  }\n  return resolvedModule;\n};", "CodeBleu_score": 46.70559762273419}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>  if (resolvedModule && resolvedModule.resolvedFileName) {\n    const normalizedFileName = path.normalize(resolvedModule.resolvedFileName);\n    const replacement = replacements[normalizedFileName];\n    if (replacement) {\n      return {\n        fileName: replacement,\n        isExternalLibraryImport: true,\n      };\n    }\n  }\n  return resolvedModule;\n};\n", "CodeBleu_score": 48.838504773092104}]}
{"instance_id": "382672b61228", "generation_result": [{"code": "get waitUntilReady(): Promise<boolean>    if (!this.compilationReadyPromise) {\n        this.compilationReadyPromise = new Promise((resolve, reject) => {\n            this.compilationReadyResolve = resolve;\n            this.compilationReadyReject = reject;\n        });\n    }\n    return this.compilationReadyPromise;\n}", "CodeBleu_score": 26.27438217570105}, {"code": "get waitUntilReady(): Promise<boolean>    return this._waitUntilReady();\n}", "CodeBleu_score": 4.165280198422838}, {"code": "get waitUntilReady(): Promise<boolean>    if (this.compilationReadyPromise) {\n        return this.compilationReadyPromise;\n    }\n    if (this.pendingCompilation) {\n        return this.compilationReadyPromise = this.pendingCompilation.then(() => {\n            this.compilationReadyPromise = undefined;\n            return true;\n        }, () => {\n            this.compilationReadyPromise = undefined;\n            return false;\n        });\n    }\n    return Promise.resolve(this.compilationError);\n}", "CodeBleu_score": 15.178876967719116}]}
{"instance_id": "27f631043b39", "generation_result": [{"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>    const namespace = 'angular:styles/component';\n    const context = new bundler.BundlerContext(this.workspaceRoot, this.incremental);\n    const stylesheetBundleOptions = {\n        bundleName: 'angular-component-styles.css',\n        entrypoints: [entry],\n    };\n    context.setup(stylesheetBundleOptions);\n    context.addPlugin(new bundler.plugins.StylesheetPlugin({\n        path: entry,\n        namespace,\n        content: (stylesheet) => stylesheet.content,\n        loader: (stylesheet) => stylesheet.content,\n        resolveDirectory: (stylesheet) => this.workspaceRoot,\n    }));\n    return context;\n});", "CodeBleu_score": 26.16081255136321}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>    const ctx = new bundler.BundlerContext(this.workspaceRoot, this.incremental);\n\n    ctx.setup({\n        stylesheetBundleOptions: {\n            inline: true,\n            minify: true,\n            inject: false,\n        },\n    });\n\n    ctx.entryPoints.set(entry, {\n        resolvedPath: entry,\n        namespace: 'angular:styles/component',\n        content: '',\n        loadChildren: [],\n        loadSelf: false,\n        symbol: '',\n        runtime: '',\n        entryModule: '',\n        isEntry: false,\n    });\n\n    ctx.plugins.add(\n        new bundler.plugin.StylesheetPlugin({\n            loader: 'style-loader',\n            resolveDir: entry,\n            path: (url: string) => {\n                return this.resolve(url);\n            },\n            content: (url: string) => {\n                return this.read(url);\n            },\n        })\n    );\n\n    return ctx;\n});\n", "CodeBleu_score": 26.701714940435412}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>  const context = new BundlerContext(this.workspaceRoot, {\n    incremental: this.incremental,\n  });\n\n  const stylesheetBundleOptions = new StylesheetBundleOptions(\n    this.workspaceRoot,\n    this.target,\n    this.optimization,\n    this.outputHashing,\n    this.sourceMap,\n    this.vendorChunk,\n    this.namedChunks,\n    this.extractLicenses,\n    this.subresourceIntegrity,\n    this.experimentalRuntime,\n    this.crossOrigin,\n    this.showCircularDependencies,\n    this.localize,\n    this.scripts,\n    this.styles,\n    this.assets,\n    this.stylePreprocessorOptions,\n    this.bundleDependencies,\n    this.cache,\n    this.maximumThreads,\n    this.allowedCommonJsDependencies,\n    this.allowedNonPeerDependencies,\n    this.analytics,\n    this.fileReplacements,\n    this.optimizationConfiguration,\n    this.sourceMapOptions,\n    this.buildOptimizer,\n    this.budgets,\n    this.extraPlugins,\n    this.extraOptions,\n    this.progress,\n    this.initialStats,\n    this.indexHtml,\n    this.inlineStyleLanguage,\n    this.localize\n  );\n\n  context.entry('angular:styles/component', entry);\n  context.addPlugin(\n    new AngularComponentStylesheetPlugin({\n      path: this.path,\n      workspaceRoot: this.workspaceRoot,\n      workspaceProject: this.workspaceProject,\n      loader: this.loader,\n      resolveDirectory: this.resolveDirectory,\n      stylesheetBundleOptions,\n      content,\n      sourceMap: this.sourceMap,\n      crossOrigin: this.crossOrigin,\n      subresourceIntegrity: this.subresourceIntegrity,\n      experimentalRuntime: this.experimentalRuntime,\n    })\n  );\n\n  return context;\n});", "CodeBleu_score": 29.443527821562874}]}
{"instance_id": "b89b44b794a7", "generation_result": [{"code": "invalidate(files: Iterable<string>)     const normalizedFiles = new Set(\n      [...files].map((file) => normalizePath(file))\n    );\n\n    for (const bundler of this.fileContexts.values()) {\n      bundler.invalidate(normalizedFiles);\n    }\n\n    for (const bundler of this.inlineContexts.values()) {\n      bundler.invalidate(normalizedFiles);\n    }\n  }", "CodeBleu_score": 63.46181111129881}, {"code": "invalidate(files: Iterable<string>)     const normalizedFiles = new Set(\n      files.map(file => normalizePath(file))\n    );\n\n    for (const bundler of this.fileContexts.values()) {\n      bundler.invalidate(normalizedFiles);\n    }\n\n    for (const bundler of this.inlineContexts.values()) {\n      bundler.invalidate(normalizedFiles);\n    }\n  }", "CodeBleu_score": 58.74213174055745}, {"code": "invalidate(files: Iterable<string>)     const normalizedFiles = new Set(\n      Array.from(files).map((file) => path.normalize(file))\n    );\n\n    this.fileContexts.forEach((bundler) => bundler.invalidate(normalizedFiles));\n    this.inlineContexts.forEach((bundler) => bundler.invalidate(normalizedFiles));\n  }", "CodeBleu_score": 42.91605234290734}]}
{"instance_id": "aa3aa0817adf", "generation_result": [{"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage   const prefix = diagnostic.source === 'typescript' ? 'TS' : 'NG';\n  const code = prefix + diagnostic.code;\n  const message = convertTypeScriptDiagnosticInfo(typescript, diagnostic.messageText, code);\n  if (diagnostic.relatedInformation) {\n    for (const relatedInformation of diagnostic.relatedInformation) {\n      message.notes.push(convertTypeScriptDiagnosticInfo(typescript, relatedInformation.messageText, code));\n    }\n  }\n  return message;\n}\n", "CodeBleu_score": 43.02346934937443}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage   const { messageText, code } = typescript.flattenDiagnosticMessageText(\n    diagnostic.messageText,\n    '\\n',\n  );\n  const [codePrefix, codeNumber] = code.split('-');\n  const prefixedCode =\n    codePrefix === 'TS' ? `NG${codeNumber}` : `NG${codePrefix}${codeNumber}`;\n  const message = convertTypeScriptDiagnosticInfo(\n    typescript,\n    diagnostic,\n    prefixedCode,\n    messageText,\n  );\n  if (diagnostic.relatedInformation) {\n    for (const info of diagnostic.relatedInformation) {\n      message.notes.push(\n        convertTypeScriptDiagnosticInfo(\n          typescript,\n          diagnostic,\n          prefixedCode,\n          info.messageText,\n        ),\n      );\n    }\n  }\n  return message;\n}", "CodeBleu_score": 40.94171553858605}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage   const codePrefix = diagnostic.source === 'typescript' ? 'TS' : 'NG';\n  const code = codePrefix + diagnostic.code;\n  const message = convertTypeScriptDiagnosticInfo(typescript, diagnostic.messageText, code);\n\n  if (diagnostic.relatedInformation) {\n    for (const relatedInfo of diagnostic.relatedInformation) {\n      const relatedMessage = convertTypeScriptDiagnosticInfo(typescript, relatedInfo.messageText, code);\n      message.notes.push(relatedMessage);\n    }\n  }\n\n  return message;\n}\n", "CodeBleu_score": 44.916667385096154}]}
{"instance_id": "0cd0285018f1", "generation_result": [{"code": "add(containingFile: string, referencedFiles: Iterable<string>): void    const normalizedContainingFile = this.#normalizePath(containingFile);\n    for (const referencedFile of referencedFiles) {\n        const normalizedReferencedFile = this.#normalizePath(referencedFile);\n        if (normalizedContainingFile === normalizedReferencedFile) {\n            continue;\n        }\n        let referencingFiles = this.#referencingFiles.get(normalizedReferencedFile);\n        if (!referencingFiles) {\n            referencingFiles = new Set();\n            this.#referencingFiles.set(normalizedReferencedFile, referencingFiles);\n        }\n        referencingFiles.add(normalizedContainingFile);\n    }\n}", "CodeBleu_score": 55.56908522317979}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void    const normalizedContainingFile = normalizePath(containingFile);\n    for (const referencedFile of referencedFiles) {\n        const normalizedReferencedFile = normalizePath(referencedFile);\n        if (normalizedContainingFile === normalizedReferencedFile) {\n            continue;\n        }\n        let referencingFiles = this.referencingFiles.get(normalizedReferencedFile);\n        if (!referencingFiles) {\n            referencingFiles = new Set<string>();\n            this.referencingFiles.set(normalizedReferencedFile, referencingFiles);\n        }\n        referencingFiles.add(normalizedContainingFile);\n    }\n}\n", "CodeBleu_score": 60.62784666355364}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void    const normalizedContainingFile = this.normalizePath(containingFile);\n    for (const referencedFile of referencedFiles) {\n        const normalizedReferencedFile = this.normalizePath(referencedFile);\n        if (normalizedContainingFile === normalizedReferencedFile) {\n            continue;\n        }\n        let referencingFiles = this.referencingFiles.get(normalizedReferencedFile);\n        if (!referencingFiles) {\n            referencingFiles = new Set();\n            this.referencingFiles.set(normalizedReferencedFile, referencingFiles);\n        }\n        referencingFiles.add(normalizedContainingFile);\n    }\n}\n", "CodeBleu_score": 51.40127517947217}]}
{"instance_id": "e22be1916b33", "generation_result": [{"code": "static async loadCompilerCli(): Promise<typeof ng>     return this.compilerCli ??= (await import('@angular/compiler-cli')).ng;\n}", "CodeBleu_score": 34.17726282629208}, {"code": "static async loadCompilerCli(): Promise<typeof ng>     return this.ngCompilerCli || (this.ngCompilerCli = (await import('@angular/compiler-cli')) as typeof ng);\n}", "CodeBleu_score": 26.772655503654708}, {"code": "static async loadCompilerCli(): Promise<typeof ng>     return this.ngCompilerCli || (this.ngCompilerCli = await import('@angular/compiler-cli'));\n}", "CodeBleu_score": 25.21223892557573}]}
{"instance_id": "64e42342101f", "generation_result": [{"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>    if (jit) {\n        const { JitCompilation } = await import('./jit-compilation');\n        return new JitCompilation();\n    } else {\n        const { AotCompilation } = await import('./aot-compilation');\n        return new AotCompilation();\n    }\n}", "CodeBleu_score": 61.83672734240482}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>  if (useParallelTs) {\n    const { ParallelCompilation } = await import('./parallel-compilation');\n    return new ParallelCompilation(jit);\n  } else {\n    const { JitCompilation, AotCompilation } = await import('./jit-compilation');\n    return jit ? new JitCompilation() : new AotCompilation();\n  }\n}", "CodeBleu_score": 64.0725695916077}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>    if (useParallelTs) {\n        const { ParallelCompilation } = await import('./parallel-compilation');\n        return new ParallelCompilation();\n    } else if (jit) {\n        const { JitCompilation } = await import('./jit-compilation');\n        return new JitCompilation();\n    } else {\n        const { AotCompilation } = await import('./aot-compilation');\n        return new AotCompilation();\n    }\n}", "CodeBleu_score": 81.21423887809259}]}
{"instance_id": "37804d74eb2d", "generation_result": [{"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string  const map = {\n    ...sourceMap,\n    sources: sourceMap.sources.map((source) =>\n      path.relative(root, source),\n    ),\n  };\n\n  const json = JSON.stringify(map);\n  const base64 = Buffer.from(json).toString('base64');\n\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64}`;\n}", "CodeBleu_score": 54.14869706169394}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string  const relativeSources = sourceMap.sources.map((source) => {\n    if (source.startsWith(root)) {\n      return source.slice(root.length);\n    }\n    return source;\n  });\n\n  const updatedSourceMap = {\n    ...sourceMap,\n    sources: relativeSources,\n  };\n\n  const base64EncodedSourceMap = Buffer.from(\n    JSON.stringify(updatedSourceMap),\n  ).toString('base64');\n\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64EncodedSourceMap}`;\n}\n", "CodeBleu_score": 49.849057865739645}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string  // Convert sources to relative paths\n  sourceMap.sources = sourceMap.sources.map((source) => {\n    const relativePath = path.relative(root, source);\n    return relativePath;\n  });\n\n  // Serialize source map to JSON\n  const json = JSON.stringify(sourceMap);\n\n  // Encode JSON to base64\n  const base64 = Buffer.from(json, 'utf8').toString('base64');\n\n  // Return source map URL comment\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64}`;\n}", "CodeBleu_score": 56.96235144116761}]}
{"instance_id": "bccb5eeb4c4d", "generation_result": [{"code": "function* extractFilesFromStack(stack: string): Iterable<string>  const cwd = process.cwd();\n  const lines = stack.split('\\n');\n  for (const line of lines) {\n    const segments = line.split(' ');\n    const fileSegments: string[] = [];\n    for (const segment of segments) {\n      if (segment.includes(':') || segment.includes(':')) {\n        break;\n      }\n      fileSegments.push(segment);\n    }\n    const filePath = fileSegments.join(' ');\n    const relativeFilePath = path.relative(cwd, filePath);\n    yield relativeFilePath;\n  }\n}\n", "CodeBleu_score": 44.108772771083274}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>  const lines = stack.split('\\n');\n  for (const line of lines) {\n    const segments = line.split(' ');\n    let filePath = '';\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      if (segment.includes(':') || segment.includes('@')) {\n        break;\n      }\n      filePath += segment + ' ';\n    }\n    filePath = filePath.trim();\n    if (filePath.startsWith('file://')) {\n      filePath = filePath.slice(7);\n    }\n    if (filePath.startsWith('http://') || filePath.startsWith('https://')) {\n      continue;\n    }\n    if (filePath.startsWith('(') && filePath.endsWith(')')) {\n      filePath = filePath.slice(1, -1);\n    }\n    if (filePath.startsWith('at ')) {\n      filePath = filePath.slice(3);\n    }\n    if (filePath.startsWith('from ')) {\n      filePath = filePath.slice(5);\n    }\n    if (filePath.startsWith('./') || filePath.startsWith('../')) {\n      filePath = filePath.slice(2);\n    }\n    if (filePath.startsWith('/')) {\n      filePath = filePath.slice(1);\n    }\n    if (filePath.startsWith('~/')) {\n      filePath = filePath.slice(2);\n    }\n    if (filePath.startsWith('~\\\\')) {\n      filePath = filePath.slice(2);\n    }\n    if (filePath.startsWith('~')) {\n      filePath = filePath.slice(1);\n    }\n    if (filePath.startsWith('./') || filePath.startsWith('../')) {\n      filePath = filePath.slice(2);\n    }\n    if (filePath.startsWith('/')) {\n      filePath = filePath.slice(1);\n    }\n    if (filePath.starts", "CodeBleu_score": 33.49070471747121}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>  const lines = stack.split('\\n');\n  for (const line of lines) {\n    const segments = line.split(' ');\n    const file = segments\n      .slice(0, segments.indexOf(':'))\n      .join(' ')\n      .replace('file://', '');\n    yield file;\n  }\n}\n", "CodeBleu_score": 39.942989286356344}]}
{"instance_id": "e73986d88a00", "generation_result": [{"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean  if (typeof contents === \"string\") {\n    return tailwindKeywords.some((keyword) => contents.includes(keyword));\n  } else {\n    const buffer = Buffer.from(contents);\n    const stringContents = buffer.toString(\"utf8\");\n    return tailwindKeywords.some((keyword) => stringContents.includes(keyword));\n  }\n}\n", "CodeBleu_score": 58.51220563537374}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean  if (typeof contents === \"string\") {\n    return TAILWIND_KEYWORDS.some((keyword) => contents.includes(keyword));\n  } else {\n    const buffer = Buffer.from(contents);\n    return TAILWIND_KEYWORDS.some((keyword) => buffer.includes(keyword));\n  }\n}\n", "CodeBleu_score": 61.66403576760471}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean  const tailwindKeywords = [\n    'bg',\n    'text',\n    'font',\n    'border',\n    'rounded',\n    'shadow',\n    'p',\n    'm',\n    'w',\n    'h',\n    'flex',\n    'grid',\n    'items',\n    'justify',\n    'gap',\n    'container',\n    'mx',\n    'my',\n    'px',\n    'py',\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'inset',\n    'absolute',\n    'relative',\n    'z',\n    'transform',\n    'scale',\n    'rotate',\n    'skew',\n    'transition',\n    'duration',\n    'ease',\n    'hover',\n    'focus',\n    'active',\n    'responsive',\n    'sm',\n    'md',\n    'lg',\n    'xl',\n    '2xl',\n    'dark',\n    'light',\n    'divide',\n    'opacity',\n    'overflow',\n    'container',\n    'cursor',\n    'outline',\n    'ring',\n    'order',\n    'placeholder',\n    'place',\n    'content',\n    'filter',\n    'blur',\n    'brightness',\n    'contrast',\n    'grayscale',\n    'hue-rotate',\n    'invert',\n    'saturate',\n    'sepia',\n    'backdrop',\n    'bg',\n  ];\n\n  if (typeof contents === 'string') {\n    return tailwindKeywords.some((keyword) => contents.includes(keyword));\n  } else {\n    const buffer = Buffer.from(contents);\n    const stringContents = buffer.toString();\n    return tailwindKeywords.some((keyword) => stringContents.includes(keyword));\n  }\n}\n", "CodeBleu_score": 46.90355648771435}]}
{"instance_id": "ff27dc4f1deb", "generation_result": [{"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void  const headers = server.config.server.headers;\n  if (headers) {\n    for (const [name, value] of Object.entries(headers)) {\n      if (value !== undefined) {\n        res.setHeader(name, value);\n      }\n    }\n  }\n}", "CodeBleu_score": 86.38201577709461}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void  const { headers } = server.config.server;\n  if (headers) {\n    for (const name in headers) {\n      const value = headers[name];\n      if (value !== undefined) {\n        res.setHeader(name, value);\n      }\n    }\n  }\n}", "CodeBleu_score": 64.39995242096815}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void  const headers = server.config.server.headers;\n  if (headers) {\n    for (const key in headers) {\n      const value = headers[key];\n      if (value !== undefined) {\n        res.setHeader(key, value);\n      }\n    }\n  }\n}", "CodeBleu_score": 70.33869350522062}]}
{"instance_id": "1d547de72724", "generation_result": [{"code": "export async function createTranslationLoader(): Promise<TranslationLoader>  const { parsers, diagnostics } = await import('./parser');\n\n  return async function loadTranslation(filePath) {\n    const fileContent = await fs.promises.readFile(filePath, 'utf-8');\n\n    for (const parser of parsers) {\n      const result = parser.canParse(filePath, fileContent);\n\n      if (result.canParse) {\n        const { format, locale, translations } = await parser.parse(filePath, fileContent);\n\n        return {\n          format,\n          locale,\n          translations,\n          diagnostics: result.diagnostics,\n          integrity: await calculateIntegrity(fileContent),\n        };\n      } else {\n        diagnostics.push(...result.diagnostics);\n      }\n    }\n\n    throw new Error(\n      `No parser found for file \"${filePath}\". The following parsers were tried:\\n${diagnostics\n        .map((d) => `- ${d.message}`)\n        .join('\\n')}`,\n    );\n  };\n}", "CodeBleu_score": 35.738179236432124}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>  const { parsers, diagnostics } = await import('./parsers');\n  return async function loadTranslation(filePath: string) {\n    const fileContent = await readFile(filePath, 'utf8');\n    const fileHash = createHash('md5').update(fileContent).digest('hex');\n    const fileDiagnostics = [];\n    for (const parser of parsers) {\n      const result = await parser.canParse(filePath, fileContent, fileHash);\n      if (result.canParse) {\n        const { format, locale, translations } = await parser.parse(filePath, fileContent);\n        return {\n          format,\n          locale,\n          translations,\n          diagnostics: fileDiagnostics,\n          integrity: fileHash,\n        };\n      } else {\n        fileDiagnostics.push(...result.diagnostics);\n      }\n    }\n    throw new Error(diagnostics.formatDiagnostics(fileDiagnostics));\n  };\n}", "CodeBleu_score": 39.71900338625917}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>  const parsers = await Promise.all([\n    import('./parsers/json').then((m) => m.default),\n    import('./parsers/yaml').then((m) => m.default),\n    import('./parsers/po').then((m) => m.default),\n  ]);\n  const diagnostics = await import('./diagnostics').then((m) => m.default);\n\n  return async function loadTranslation(filePath) {\n    const fileContent = await fs.readFile(filePath, 'utf8');\n\n    for (const parser of parsers) {\n      const { canParse, parse } = parser;\n      if (canParse(fileContent)) {\n        const { format, locale, translations } = parse(fileContent);\n        const contentIntegrityHash = hash(fileContent);\n        return {\n          format,\n          locale,\n          translations,\n          diagnostics: [],\n          contentIntegrityHash,\n        };\n      }\n    }\n\n    throw new Error(\n      diagnostics.unsupportedFileFormat({\n        filePath,\n        diagnostics: parsers.flatMap((parser) => parser.diagnostics),\n      })\n    );\n  };\n}\n", "CodeBleu_score": 36.39456661850846}]}
{"instance_id": "0c0d3dcf983c", "generation_result": [{"code": "toggleSidebar(): boolean  this.sidebarService.toggle(true, 'menu-sidebar');\n  this.layoutService.changeLayoutSize();\n  return false;\n}", "CodeBleu_score": 62.50187280433668}, {"code": "toggleSidebar(): boolean  this.sidebarService.toggle(true, 'menu-sidebar');\n  this.layoutService.changeLayoutSize();\n  return false;\n}", "CodeBleu_score": 62.50187280433668}, {"code": "toggleSidebar(): boolean    this.sidebarService.toggle(true, 'menu-sidebar');\n    this.layoutService.changeLayoutSize();\n\n    return false;\n}", "CodeBleu_score": 61.80622615267016}]}
{"instance_id": "c5ebbdd1dadf", "generation_result": [{"code": "loadNext(cardData)  if (!this.loading) {\n    this.loading = true;\n    this.createPlaceholders();\n    this.newsService.load(this.page, this.perPage)\n      .subscribe(nextNews => {\n        this.news.push(...nextNews);\n        this.loading = false;\n        this.page++;\n      });\n  }\n}\n", "CodeBleu_score": 19.180481745816234}, {"code": "loadNext(cardData)  if (!this.isLoading) {\n    this.isLoading = true;\n    this.createPlaceholders();\n\n    this.newsService.load(cardData).subscribe(news => {\n      this.news = this.news.concat(news);\n      this.isLoading = false;\n      this.page++;\n    });\n  }\n}", "CodeBleu_score": 19.984700499323537}, {"code": "loadNext(cardData)  if (!this.loading) {\n    this.loading = true;\n    this.placeholders = new Array(this.pageSize);\n    this.newsService.load(cardData)\n      .subscribe(this.nextNewsBatchObserver);\n  }\n}", "CodeBleu_score": 18.270276363716658}]}
{"instance_id": "1bd87ab8efa2", "generation_result": [{"code": "backToTop()  if (!this.isScrolling) {\n    this.isScrolling = true;\n    let scrollPosition = window.pageYOffset;\n    let scrollInterval = setInterval(() => {\n      if (scrollPosition > 0) {\n        window.scrollBy(0, -50);\n        scrollPosition -= 50;\n      } else {\n        clearInterval(scrollInterval);\n        this.isScrolling = false;\n      }\n    }, 16.7);\n  }\n}", "CodeBleu_score": 40.55671866481353}, {"code": "backToTop()  if (this.isScrolling) return;\n  this.isScrolling = true;\n  let currentTime = 0;\n  const scrollInterval = setInterval(() => {\n    currentTime += 16.7;\n    const easeInOutQuad = (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n    const scrollPosition = easeInOutQuad(currentTime / 500);\n    window.scrollTo(0, scrollPosition * window.scrollY);\n    if (currentTime >= 500) {\n      clearInterval(scrollInterval);\n      this.isScrolling = false;\n    }\n  }, 16.7);\n}", "CodeBleu_score": 37.88555463905569}, {"code": "backToTop()  if (!this.isBacking) {\n    this.isBacking = true;\n    let scrollTop =\n      document.documentElement.scrollTop || document.body.scrollTop;\n    let timeId = setInterval(() => {\n      scrollTop -= Math.ceil((scrollTop * 1) / 10);\n      if (scrollTop <= 0) {\n        scrollTop = 0;\n        clearInterval(timeId);\n        this.isBacking = false;\n      }\n      document.documentElement.scrollTop = scrollTop;\n      document.body.scrollTop = scrollTop;\n    }, 16.7);\n  }\n}", "CodeBleu_score": 34.99918644299131}]}
{"instance_id": "0ef728b56235", "generation_result": [{"code": "getBreadcrumb()  const matched = this.$route.matched.filter(route => route.meta.title);\n  if (matched[0].meta.title !== 'Dashboard') {\n    matched.unshift({\n      path: '/dashboard',\n      meta: {\n        title: 'Dashboard',\n      },\n    });\n  }\n  this.levelList = matched.filter(route => !route.meta.excludeFromBreadcrumb);\n},", "CodeBleu_score": 44.158464508895825}, {"code": "getBreadcrumb()  const matched = this.$route.matched.filter((route) => route.meta.title);\n  if (matched[0].name !== 'dashboard') {\n    matched.unshift({\n      name: 'dashboard',\n      meta: {\n        title: 'Dashboard',\n      },\n    });\n  }\n\n  this.levelList = matched.filter((route) => !route.meta.excludeFromBreadcrumb);\n},", "CodeBleu_score": 42.2304723736179}, {"code": "getBreadcrumb()  let matched = this.$route.matched.filter(route => route.meta && route.meta.title);\n  if (matched[0].path !== '/') {\n    matched.unshift({ path: '/', meta: { title: 'Dashboard' } });\n  }\n  let levelList = matched.filter(route => !route.meta.excludeFromBreadcrumb);\n  return levelList;\n}", "CodeBleu_score": 49.64689238159225}]}
{"instance_id": "4431fde0a559", "generation_result": [{"code": "destroyListener()    window.removeEventListener('resize', this.resizeHandler);\n    this.resizeHandler = null;\n    if (this.sidebar) {\n        this.sidebar.removeEventListener('transitionend', this.sidebarTransitionHandler);\n    }\n}", "CodeBleu_score": 39.994166434312184}, {"code": "destroyListener()    window.removeEventListener('resize', this.resizeHandler);\n    this.resizeHandler = null;\n    if (this.sidebar) {\n        this.sidebar.removeEventListener('transitionend', this.sidebarTransitionHandler);\n    }\n}\n", "CodeBleu_score": 39.994166434312184}, {"code": "destroyListener()    if (this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n    }\n    if (this.sidebar) {\n        this.sidebar.removeEventListener('transitionend', this.transitionHandler);\n    }\n}\n", "CodeBleu_score": 36.71283753275156}]}
{"instance_id": "7215170e04cd", "generation_result": [{"code": "deleteEle(ele)    let current = this.head;\n    while (current.next) {\n      if (current.next.id === ele) {\n        const deleted = current.next;\n        current.next = current.next.next;\n        if (!this.isNotInList2(deleted)) {\n          deleted.next = this.head2;\n          this.head2 = deleted;\n        }\n        return;\n      }\n      current = current.next;\n    }\n  }\n", "CodeBleu_score": 28.983374095821056}, {"code": "deleteEle(ele)    let current = this.head;\n    let previous = null;\n    while (current !== null) {\n        if (current.id === ele) {\n            if (previous === null) {\n                this.head = current.next;\n            } else {\n                previous.next = current.next;\n            }\n            if (!this.isNotInList2(current)) {\n                this.prepend(current);\n            }\n            return;\n        }\n        previous = current;\n        current = current.next;\n    }\n}", "CodeBleu_score": 24.756603961324174}, {"code": "deleteEle(ele)  let prev = null;\n  let curr = this.head;\n  while (curr) {\n    if (curr.data.id === ele.id) {\n      if (prev) {\n        prev.next = curr.next;\n      } else {\n        this.head = curr.next;\n      }\n      if (!this.isNotInList2(ele)) {\n        this.prepend(ele);\n      }\n      return;\n    }\n    prev = curr;\n    curr = curr.next;\n  }\n}", "CodeBleu_score": 35.17271886735374}]}
{"instance_id": "b2acc5757074", "generation_result": [{"code": "generateRoutes(routes, basePath = '/', prefixTitle = [])    const result = [];\n    routes.forEach((route) => {\n        if (route.meta && route.meta.hidden) {\n            return;\n        }\n        const data = {\n            path: resolvePath(route.path, basePath),\n            title: [...prefixTitle],\n        };\n        if (route.meta && route.meta.title && !route.meta.noRedirect) {\n            data.title = [...data.title, route.meta.title];\n            result.push(data);\n        }\n        if (route.children) {\n            result.push(...generateRoutes(route.children, data.path, data.title));\n        }\n    });\n    return result;\n}", "CodeBleu_score": 47.93490315846603}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = [])  const result = [];\n  for (const route of routes) {\n    if (route.meta && route.meta.hidden) {\n      continue;\n    }\n    const path = resolvePath(route.path, basePath);\n    const title = [...prefixTitle];\n    if (route.meta && route.meta.title) {\n      title.push(route.meta.title);\n    }\n    if (route.meta && route.meta.title && !route.meta.noRedirect) {\n      result.push({\n        path,\n        title: title.join(' - ')\n      });\n    }\n    if (route.children) {\n      result.push(...generateRoutes(route.children, path, title));\n    }\n  }\n  return result;\n}", "CodeBleu_score": 41.79091789258537}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = [])    const result = [];\n\n    routes.forEach((route) => {\n        if (route.meta && route.meta.hidden) return;\n\n        const path = resolvePath(route.path, basePath);\n        const title = [...prefixTitle];\n\n        if (route.meta && route.meta.title) {\n            title.push(route.meta.title);\n        }\n\n        if (route.meta && route.meta.title && !route.meta.noRedirect) {\n            result.push({\n                path,\n                title: title.join(' | '),\n            });\n        }\n\n        if (route.children) {\n            result.push(...generateRoutes(route.children, path, title));\n        }\n    });\n\n    return result;\n},", "CodeBleu_score": 37.68545435065478}]}
{"instance_id": "c4e47c376d30", "generation_result": [{"code": "closeSidebar(evt)    if (!evt.target.closest('.rightPanel')) {\n        this.show = false;\n        document.removeEventListener('click', this.closeSidebar);\n    }\n}\n", "CodeBleu_score": 38.04287098220677}, {"code": "closeSidebar(evt)    if (!evt.target.closest('.rightPanel')) {\n        this.show = false;\n        document.removeEventListener('click', this.closeSidebar);\n    }\n}", "CodeBleu_score": 38.04287098220677}, {"code": "closeSidebar(evt)    if (!evt.target.closest('.rightPanel')) {\n        this.show = false;\n        document.removeEventListener('click', this.closeSidebar);\n    }\n}\n", "CodeBleu_score": 38.04287098220677}]}
{"instance_id": "ab91e02736a1", "generation_result": [{"code": "click()    if (!screenfull.enabled) {\n        console.warn('your browser cannot work');\n        return false;\n    }\n    screenfull.toggle();\n}", "CodeBleu_score": 31.247568342236093}, {"code": "click()  if (!screenfull.enabled) {\n    alert('your browser cannot work');\n    return false;\n  }\n  screenfull.toggle();\n}", "CodeBleu_score": 28.500843311690225}, {"code": "click()  if (screenfull.enabled) {\n    screenfull.toggle();\n  } else {\n    this.$message({\n      message: 'your browser cannot work',\n      type: 'warning'\n    });\n    return false;\n  }\n}", "CodeBleu_score": 43.135828732180535}]}
{"instance_id": "3f27cb09d8c2", "generation_result": [{"code": "function checkPermission(el, binding)   const { value } = binding\n  if (value && value instanceof Array && value.length > 0) {\n    const roles = getRoles()\n    const permissionRoles = value\n    const hasPermission = roles.some(role => {\n      return permissionRoles.includes(role)\n    })\n    if (!hasPermission) {\n      el.parentNode && el.parentNode.removeChild(el)\n    }\n  } else {\n    throw new Error(`need roles: ${binding.expression}`)\n  }\n}\n", "CodeBleu_score": 58.41037810468457}, {"code": "function checkPermission(el, binding)   const { value } = binding\n  if (value && value instanceof Array && value.length > 0) {\n    const roles = store.state && store.state.user.roles\n    const permissionRoles = value\n    const hasPermission = roles.some(role => {\n      return permissionRoles.includes(role)\n    })\n    if (!hasPermission) {\n      el.parentNode && el.parentNode.removeChild(el)\n    }\n  } else {\n    throw new Error(`need roles: ${binding.expression}`)\n  }\n}\n", "CodeBleu_score": 64.0817869836374}, {"code": "function checkPermission(el, binding)     const { value } = binding;\n    if (value && value instanceof Array && value.length > 0) {\n        const roles = store.state.user.roles;\n        if (value.length > 0) {\n            const permissionRoles = value;\n            const hasPermission = roles.some(role => {\n                return permissionRoles.includes(role);\n            });\n            if (!hasPermission) {\n                el.parentNode && el.parentNode.removeChild(el);\n            }\n        } else {\n            throw new Error(`need roles: ${value}`);\n        }\n    }\n}\n", "CodeBleu_score": 62.088662310187146}]}
{"instance_id": "04e47e771281", "generation_result": [{"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>    const invitedUser = await this.adminService.inviteNewUser(\n      adminUser,\n      inviteeEmail,\n    );\n    if (!invitedUser) {\n      throw new Error('Invitation failed');\n    }\n    return invitedUser;\n  }\n}", "CodeBleu_score": 39.576734051459056}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>    try {\n      const invitedUser = await this.adminService.inviteNewUser(\n        adminUser,\n        inviteeEmail,\n      );\n      return invitedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }", "CodeBleu_score": 36.371294136493454}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>    try {\n      const invitedUser = await this.adminService.inviteUser(\n        adminUser,\n        inviteeEmail,\n      );\n      return invitedUser;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        `Error inviting new user: ${error.message}`,\n      );\n    }\n  }", "CodeBleu_score": 37.54665507900346}]}
{"instance_id": "3f25736bfbcd", "generation_result": [{"code": "async googleAuthRedirect(@Request() req, @Res() res)  const { user } = req;\n  if (!user) {\n    return 'No user from google';\n  }\n  const { accessToken, refreshToken } = await this.authService.generateTokens(\n    user,\n  );\n  res.cookie('accessToken', accessToken, {\n    httpOnly: true,\n    sameSite: 'lax',\n    secure: true,\n    domain: 'localhost',\n    path: '/',\n  });\n  res.cookie('refreshToken', refreshToken, {\n    httpOnly: true,\n    sameSite: 'lax',\n    secure: true,\n    domain: 'localhost',\n    path: '/',\n  });\n  res.redirect('http://localhost:3000/');\n}", "CodeBleu_score": 39.36461967322143}, {"code": "async googleAuthRedirect(@Request() req, @Res() res)  try {\n    const { user } = await this.authService.googleLogin(req);\n    const { accessToken, refreshToken } =\n      await this.authService.getCookieWithJwtAccessToken(user.id);\n\n    await this.usersService.setCurrentRefreshToken(refreshToken, user.id);\n\n    req.res.setHeader('Set-Cookie', [accessToken, refreshToken]);\n\n    if (user.isTemporaryPassword) {\n      return res.redirect(`${this.configService.get('CLIENT_REDIRECT_URI')}/set-password`);\n    }\n\n    return res.redirect(`${this.configService.get('CLIENT_REDIRECT_URI')}/home`);\n  } catch (error) {\n    return {\n      statusCode: HttpStatus.BAD_REQUEST,\n      message: error.message,\n    };\n  }\n}", "CodeBleu_score": 39.6178929454498}, {"code": "async googleAuthRedirect(@Request() req, @Res() res)    const { user } = req;\n    const { accessToken, refreshToken } = await this.authService.generateAuthTokens(user);\n    if (!accessToken || !refreshToken) {\n        throw new UnauthorizedException();\n    }\n    res.cookie('access_token', accessToken, {\n        httpOnly: true,\n        domain: process.env.DOMAIN,\n        path: '/',\n        sameSite: 'none',\n        secure: true,\n    });\n    res.cookie('refresh_token', refreshToken, {\n        httpOnly: true,\n        domain: process.env.DOMAIN,\n        path: '/',\n        sameSite: 'none',\n        secure: true,\n    });\n    res.redirect(process.env.REDIRECT_URI);\n}\n", "CodeBleu_score": 40.524261666537775}]}
{"instance_id": "52aa108e3521", "generation_result": [{"code": "const mousewheel = function(element, callback)    if (element && element.addEventListener) {\n        element.addEventListener(\n            'DOMMouseScroll' in document ? 'DOMMouseScroll' : 'mousewheel',\n            function(event) {\n                const normalized = normalizeWheelDelta(event);\n                callback && callback.call(this, event, normalized);\n            },\n            false\n        );\n    }\n};\n", "CodeBleu_score": 54.90319186270051}, {"code": "const mousewheel = function(element, callback)  let previousEvent = null;\n\n  element.addEventListener(\"DOMMouseScroll\", event => {\n    const normalized = normalize(event);\n    callback(event, normalized);\n    previousEvent = event;\n  });\n\n  element.addEventListener(\"mousewheel\", event => {\n    const normalized = normalize(event);\n    callback(event, normalized);\n    previousEvent = event;\n  });\n\n  element.addEventListener(\"wheel\", event => {\n    if (previousEvent && event.timeStamp - previousEvent.timeStamp < 40) {\n      event.deltaX = 0;\n      event.deltaY = 0;\n      return;\n    }\n\n    const normalized = normalize(event);\n    callback(event, normalized);\n    previousEvent = event;\n  });\n\n  function normalize(event) {\n    const delta = {\n      x: 0,\n      y: 0,\n      z: 0,\n      mode: 0\n    };\n\n    if (\"detail\" in event) delta.z = event.detail;\n    if (\"wheelDelta\" in event) delta.z = -event.wheelDelta / 120;\n    if (\"wheelDeltaY\" in event) delta.z = -event.wheelDeltaY / 120;\n    if (\"wheelDeltaX\" in event) delta.z = -event.wheelDeltaX / 120;\n\n    // Additionnal normalization for Firefox.\n    if (navigator.userAgent.indexOf(\"Firefox\") !== -1) delta.z /= 3;\n\n    // Normalize the delta.\n    delta.mode = Math.abs(delta.x) > Math.abs(delta.y) ? 0 : 1;\n    if (delta.mode) {\n      delta.x = 0;\n      delta.z = Math.max(-1, Math.min(1, delta.z));\n    } else {\n      delta.y = 0;\n      delta.z = Math.max(-1, Math.min(1, delta.z));\n    }\n\n    return delta;\n  }\n};\n", "CodeBleu_score": 28.45610607992689}, {"code": "const mousewheel = function(element, callback)    if (element && element.addEventListener) {\n        element.addEventListener(\n            'DOMMouseScroll' in document ? 'DOMMouseScroll' : 'mousewheel',\n            function(event) {\n                const normalized = normalizeWheel(event);\n                callback && callback.call(this, event, normalized);\n            },\n            false\n        );\n    }\n};\n", "CodeBleu_score": 57.89741101392466}]}
{"instance_id": "bb9e14122636", "generation_result": [{"code": "let i18nHandler = function()    let $t = this.$t;\n    if (typeof $t !== 'function') {\n        throw new Error('$t is not a function');\n    }\n    if (!this.$i18n) {\n        throw new Error('Vue.locale is not defined');\n    }\n    if (!this.$i18n.merged) {\n        this.$i18n.merged = true;\n        this.$i18n.locale = Object.assign(this.$i18n.locale, this.$i18n.language);\n    }\n    return $t.apply(this, arguments);\n};\n", "CodeBleu_score": 21.951956964241926}, {"code": "let i18nHandler = function()  let $t = this.$t;\n  if (typeof $t === 'function') {\n    if (this.$i18n && this.$i18n.locale) {\n      if (!this.$i18n.merged) {\n        this.$i18n.merged = true;\n        this.$i18n.locale = Object.assign(this.$i18n.locale, this.$i18n.languageData);\n      }\n    }\n    return $t.apply(this, arguments);\n  }\n};\n", "CodeBleu_score": 23.791753074573975}, {"code": "let i18nHandler = function()  let $t = Vue.prototype.$t;\n  if (typeof $t !== 'function') {\n    return;\n  }\n\n  if (!Vue.locale) {\n    return;\n  }\n\n  let locale = Vue.locale;\n  let merged = locale._merged;\n  let lang = this.lang;\n  let data = this.$options.i18n;\n\n  if (!merged) {\n    Vue.locale(lang, Object.assign(locale, data));\n    locale._merged = true;\n  }\n\n  return $t.apply(this, arguments);\n};\n", "CodeBleu_score": 29.518315262354978}]}
{"instance_id": "b0608b85127a", "generation_result": [{"code": "function broadcast(componentName, eventName, params)  this.$children.forEach(child => {\n    const name = child.$options.componentName\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params))\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]))\n    }\n  })\n}", "CodeBleu_score": 76.92581854860369}, {"code": "function broadcast(componentName, eventName, params)  this.$children.forEach(child => {\n    const name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]));\n    }\n  });\n}", "CodeBleu_score": 87.68085285048114}, {"code": "function broadcast(componentName, eventName, params)  this.$children.forEach((child) => {\n    const name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]));\n    }\n  });\n}", "CodeBleu_score": 86.75993135571265}]}
{"instance_id": "da57b9dc5023", "generation_result": [{"code": "aria.Utils.focusFirstDescendant = function(element)  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (aria.Utils.attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n};", "CodeBleu_score": 71.48410021220283}, {"code": "aria.Utils.focusFirstDescendant = function(element)  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n};\n", "CodeBleu_score": 64.84003313604892}, {"code": "aria.Utils.focusFirstDescendant = function(element)  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n};\n", "CodeBleu_score": 64.84003313604892}]}
{"instance_id": "a029702e104d", "generation_result": [{"code": "highlight(index)  if (!this.suggestionsVisible || this.isLoading) {\n    return;\n  }\n\n  index = Math.max(0, Math.min(index, this.suggestions.length - 1));\n\n  const activeDescendantId = `autocomplete-item-${index}`;\n  const activeDescendantElement = this.element.querySelector(`#${activeDescendantId}`);\n\n  if (activeDescendantElement) {\n    const { top } = activeDescendantElement.getBoundingClientRect();\n    const { top: containerTop } = this.listElement.getBoundingClientRect();\n\n    if (top < containerTop || top > containerTop + this.listElement.clientHeight) {\n      this.listElement.scrollTop = top + this.listElement.scrollTop - containerTop;\n    }\n  }\n\n  this.highlightedIndex = index;\n  this.inputElement.setAttribute('aria-activedescendant', activeDescendantId);\n}", "CodeBleu_score": 34.94071390429585}, {"code": "highlight(index)    if (!this.suggestionsVisible || this.loading) {\n        return;\n    }\n    index = Math.max(0, Math.min(index, this.suggestions.length - 1));\n    const activeDescendantId = `autocomplete-option-${index}`;\n    this.setState({ highlightedIndex: index });\n    this.inputElement.setAttribute('aria-activedescendant', activeDescendantId);\n}", "CodeBleu_score": 17.985524578720042}, {"code": "highlight(index)    if (!this.suggestionsVisible || this.loading) {\n        return;\n    }\n\n    const { suggestions } = this;\n    const suggestionCount = suggestions.length;\n\n    if (index < 0) {\n        index = suggestionCount - 1;\n    }\n\n    if (index >= suggestionCount) {\n        index = 0;\n    }\n\n    this.highlightedIndex = index;\n\n    // Adjust scroll position\n    const activeSuggestion = this.shadowRoot.querySelector('.suggestion.active');\n    const listbox = this.shadowRoot.querySelector('div');\n\n    if (activeSuggestion) {\n        const posY = activeSuggestion.offsetTop + activeSuggestion.clientHeight - listbox.offsetHeight;\n        if (posY > 0) {\n            listbox.scrollTop = posY;\n        }\n        else {\n            listbox.scrollTop = 0;\n        }\n    }\n\n    this.setAttribute('aria-activedescendant', `${this._id}-${index}`);\n}", "CodeBleu_score": 41.47363352454105}]}
{"instance_id": "2db32f7ad18f", "generation_result": [{"code": "translateItem(index, activeIndex, oldIndex)  const { type, vertical, loop, rtl } = this.props;\n  const position = this.getItemPosition(index, activeIndex, oldIndex);\n  const translate = rtl ? position * -100 : position * 100;\n  const scale = this.getDistanceFactor(index, activeIndex, oldIndex);\n  const animState = this.getAnimationState(index, activeIndex, oldIndex);\n  const isActive = index === activeIndex;\n  const isPrev = index === activeIndex - 1;\n  const isNext = index === activeIndex + 1;\n  const isClone = index === activeIndex - 2 || index === activeIndex + 2;\n  let itemState = '';\n  if (type === 'card') {\n    if (vertical) {\n      console.warn('vertical not supported, use horizontal');\n      return;\n    }\n    itemState = this.getCardItemState(index, activeIndex);\n  }\n  if (type !== 'card') {\n    if (isActive) {\n      itemState = animState;\n    } else if (isPrev || isNext) {\n      itemState = 'next';\n    } else if (isClone) {\n      itemState = 'clone';\n    }\n  }\n  return {\n    itemState,\n    translate,\n    scale,\n    isActive,\n    isClone,\n    isNext,\n    isPrev,\n  };\n}", "CodeBleu_score": 41.50577825033755}, {"code": "translateItem(index, activeIndex, oldIndex)    const { card, vertical, rtl } = this.props;\n    const { translate, scale } = this.state;\n    const localIndex = this.getLocalIndex(index);\n    const active = localIndex === activeIndex;\n    const prev = localIndex === activeIndex - 1;\n    const next = localIndex === activeIndex + 1;\n    let itemState = '';\n    if (card) {\n        if (vertical) {\n            console.warn('React-owl-carousel does not support vertical mode');\n            return;\n        }\n        if (active)\n            itemState = 'active';\n        else if (prev || next)\n            itemState = 'prev';\n        else\n            itemState = 'next';\n    }\n    else {\n        if (active)\n            itemState = 'active';\n        else {\n            const diff = activeIndex - index;\n            if (diff === -1 || (diff === itemsLength - 1 && rtl))\n                itemState = 'prev';\n            else if (diff === 1 || (diff === -itemsLength + 1 && rtl))\n                itemState = 'next';\n        }\n    }\n    this.setState({\n        translate: translate[itemState],\n        scale: scale[itemState],\n        ready: {\n            ...this.state.ready,\n            [index]: true,\n        },\n    });\n}", "CodeBleu_score": 29.897860646544377}, {"code": "translateItem(index, activeIndex, oldIndex)  const { props, state } = this;\n  const { items, card, vertical, loop } = props;\n  const { translate, scale } = state;\n  const item = items[index];\n\n  if (index !== activeIndex) {\n    const isActive = index === activeIndex;\n    const isPrev = index === activeIndex - 1;\n    const isNext = index === activeIndex + 1;\n    const isNextOrPrev = isPrev || isNext;\n\n    if (card && (isNext || isPrev)) {\n      if (vertical) {\n        console.warn('Loop carousels do not support vertical direction');\n      }\n\n      const offset = isNext ? -1 : 1;\n      const translateItem = isNext ? translate + loopCloneOffset(offset) : translate;\n      const translateActive = isActive ? translateItem : translateItem + offset;\n\n      return {\n        ...item,\n        translate: translateActive,\n        scale: scale,\n        active: isActive,\n        ready: true,\n      };\n    }\n\n    if (isNextOrPrev || (loop && isActive)) {\n      const translateItem = isActive ? 0 : translate + loopCloneOffset();\n      const translateActive = isActive ? translateItem : translateItem + (isNext ? -1 : 1);\n\n      return {\n        ...item,\n        translate: translateActive,\n        scale: scale,\n        active: isActive,\n        ready: true,\n      };\n    }\n\n    return {\n      ...item,\n      translate: translate,\n      scale: scale,\n      active: false,\n      ready: false,\n    };\n  }\n\n  const translateActive = translate + loopCloneOffset();\n  const translatePrev = translate + loopCloneOffset(-1);\n  const translateNext = translate + loopCloneOffset(1);\n\n  if (oldIndex !== undefined && oldIndex > -1) {\n    const oldItem = items[oldIndex];\n    const oldTranslate = oldItem.translate;\n    const oldScale = oldItem.scale;\n\n    if (index > oldIndex) {\n      return {\n        ...item,\n        translate: translateActive,", "CodeBleu_score": 25.053646205245673}]}
{"instance_id": "49b9aa91f62e", "generation_result": [{"code": "handleButtonEnter(arrow)    if (this.props.direction === 'vertical') return;\n    this.setState(prevState => {\n        return {\n            items: prevState.items.map((item, i) => {\n                let itemInStage = this.getItemInStage(arrow, i);\n                return {\n                    ...item,\n                    hover: itemInStage === arrow\n                };\n            })\n        };\n    });\n}", "CodeBleu_score": 37.30079803840946}, {"code": "handleButtonEnter(arrow)    if (this.direction === 'vertical') return;\n    this.items.forEach((item, i) => {\n        if (arrow === item.itemInStage) {\n            this.setState({ [`item${i}Hover`]: true });\n        }\n    });\n}", "CodeBleu_score": 51.400361480262866}, {"code": "handleButtonEnter(arrow)  if (this.direction === 'vertical') {\n    return;\n  }\n\n  for (let i = 0; i < this.items.length; i++) {\n    const item = this.items[i];\n    const itemInStage = this.itemInStage(arrow, item);\n\n    if (itemInStage === arrow) {\n      item.hover = true;\n    } else {\n      item.hover = false;\n    }\n  }\n}", "CodeBleu_score": 44.79841274660649}]}
{"instance_id": "85cdf6991b1f", "generation_result": [{"code": "scrollIntoView()    if (typeof document === 'undefined') {\n        return;\n    }\n    this.menuRefs.forEach((menuRef) => {\n        const menu = menuRef.nativeElement;\n        const scrollableContainer = menu.querySelector('.p-menu-scrollable-content');\n        const activeNode = menu.querySelector('.p-menuitem-active');\n        const inActivePathNode = menu.querySelector('.p-menuitem-inactive-path');\n        if (scrollableContainer && activeNode) {\n            scrollableContainer.scrollTop = activeNode.offsetTop - scrollableContainer.offsetTop;\n        }\n        if (scrollableContainer && inActivePathNode) {\n            scrollableContainer.scrollTop = inActivePathNode.offsetTop - scrollableContainer.offsetTop;\n        }\n    });\n}", "CodeBleu_score": 35.6800089579554}, {"code": "scrollIntoView()  if (typeof window === \"undefined\") {\n    return;\n  }\n\n  for (const menuRef of this.menuRefs) {\n    const scrollableContainer = menuRef.querySelector(\".scrollable-container\");\n    const activeNode = menuRef.querySelector(\".active-path\");\n    const inactiveNode = menuRef.querySelector(\".inactive-path\");\n\n    if (scrollableContainer && activeNode) {\n      scrollableContainer.scrollTop = activeNode.offsetTop;\n    }\n\n    if (scrollableContainer && inactiveNode) {\n      scrollableContainer.scrollTop = inactiveNode.offsetTop;\n    }\n  }\n}", "CodeBleu_score": 32.38732547878349}, {"code": "scrollIntoView()    if (typeof window === 'undefined') {\n      return;\n    }\n    const menuRefs = this.menuRefs;\n    if (!menuRefs) {\n      return;\n    }\n    for (const menuRef of menuRefs) {\n      const container = menuRef.current;\n      if (!container) {\n        continue;\n      }\n      const activeNode = container.querySelector('.active-path');\n      if (!activeNode) {\n        continue;\n      }\n      const scrollable = container.querySelector('.scrollable');\n      if (!scrollable) {\n        continue;\n      }\n      scrollable.scrollTop = activeNode.offsetTop;\n    }\n  }", "CodeBleu_score": 36.54687128710823}]}
{"instance_id": "fc6784c79aa5", "generation_result": [{"code": "const rgb2hsv = function(r, g, b)  const rgb = [r, g, b]\n  const max = Math.max(...rgb)\n  const min = Math.min(...rgb)\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n  const v = max / 255\n  let h\n  switch (max) {\n    case min:\n      h = 0\n      break\n    case r:\n      h = g - b + d * (g < b ? 6 : 0)\n      h /= 6 * d\n      break\n    case g:\n      h = b - r + d * 2\n      h /= 6 * d\n      break\n    case b:\n      h = r - g + d * 4\n      h /= 6 * d\n      break\n  }\n  return {\n    h: h * 360,\n    s: s * 100,\n    v: v * 100\n  }\n}\n", "CodeBleu_score": 40.282947636879335}, {"code": "const rgb2hsv = function(r, g, b)  let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n  rabs = r / 255;\n  gabs = g / 255;\n  babs = b / 255;\n  v = Math.max(rabs, gabs, babs),\n  diff = v - Math.min(rabs, gabs, babs);\n  diffc = c => (v - c) / 6 / diff + 1 / 2;\n  percentRoundFn = num => Math.round(num * 100) / 100;\n  if (diff == 0) {\n    h = s = 0;\n  } else {\n    s = diff / v;\n    rr = diffc(rabs);\n    gg = diffc(gabs);\n    bb = diffc(babs);\n\n    if (rabs === v) {\n      h = bb - gg;\n    }else if (gabs === v) {\n      h = (1 / 3) + rr - bb;\n    }else if (babs === v) {\n      h = (2 / 3) + gg - rr;\n    }\n    if (h < 0) {\n      h += 1;\n    }else if (h > 1) {\n      h -= 1;\n    }\n  }\n  return {\n    h: Math.round(h * 360),\n    s: percentRoundFn(s * 100),\n    v: percentRoundFn(v * 100)\n  };\n}\n", "CodeBleu_score": 26.931406315667537}, {"code": "const rgb2hsv = function(r, g, b)  r /= 255;\n  g /= 255;\n  b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const v = max;\n  const d = max - min;\n  const s = max === 0 ? 0 : d / max;\n  let h;\n  if (max === min) {\n    h = 0;\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return [h * 360, s * 100, v * 100];\n};\n", "CodeBleu_score": 61.99945709542948}]}
{"instance_id": "37b868b6a5cc", "generation_result": [{"code": "handleDrag(event)    // Get the bounding rectangle of the element\n    const rect = this.element.getBoundingClientRect();\n\n    // Calculate the position of the drag relative to the element's bounding rectangle\n    let position;\n    if (this.orientation === 'vertical') {\n        position = event.clientY - rect.top;\n    } else {\n        position = event.clientX - rect.left;\n    }\n\n    // Adjust the alpha value based on the position of the drag\n    let alpha = position / this.element.clientHeight;\n    alpha = Math.max(Math.min(alpha, 1), 0);\n    this.color.alpha = alpha;\n\n    // Update the color value in the input element\n    this.input.value = this.color.toHex();\n\n    // Trigger the input event on the input element\n    const inputEvent = new Event('input', { bubbles: true });\n    this.input.dispatchEvent(inputEvent);\n\n    // Update the color preview element\n    this.preview.style.backgroundColor = this.color.toHex();\n\n    // Update the gradient preview element\n    this.gradientPreview.style.backgroundImage = `linear-gradient(to right, ${this.color.toHex()}, ${this.color.toHex()})`;\n}\n", "CodeBleu_score": 34.56794028328945}, {"code": "handleDrag(event)    const { orientation, value, onChange } = this.props;\n    const { currentTarget } = event;\n    const { width, height, left, top } = currentTarget.getBoundingClientRect();\n    const x = Math.max(0, Math.min(event.clientX - left, width));\n    const y = Math.max(0, Math.min(event.clientY - top, height));\n    const alpha = orientation === 'vertical' ? y / height : x / width;\n    onChange({ ...value, a: alpha });\n}\n", "CodeBleu_score": 24.336155779721885}, {"code": "handleDrag(event)    const { orientation, onChange } = this.props;\n    const { element } = this.state;\n\n    const { clientX, clientY } = event.touches ? event.touches[0] : event;\n\n    const { width, height, left, top } = element.getBoundingClientRect();\n\n    const x = Math.max(0, Math.min(clientX - left, width));\n    const y = Math.max(0, Math.min(clientY - top, height));\n\n    let alpha;\n\n    if (orientation === 'vertical') {\n        alpha = y / height;\n    } else {\n        alpha = x / width;\n    }\n\n    onChange(alpha);\n}\n", "CodeBleu_score": 27.964310547252335}]}
{"instance_id": "a3b2c61b5a1e", "generation_result": [{"code": "displayValue()    const { input, format, type, rangeSeparator } = this.props;\n    if (Array.isArray(input)) {\n        if (format) {\n            return input.map(value => format(value));\n        }\n        return input;\n    }\n    if (input !== null) {\n        return input;\n    }\n    if (this.formattedValue) {\n        if (type === 'multi-select' || type === 'multi-select-tag') {\n            return this.formattedValue.join(rangeSeparator);\n        }\n        return this.formattedValue;\n    }\n    return '';\n}", "CodeBleu_score": 28.593384760211983}, {"code": "displayValue()    const {\n      input,\n      format,\n      type,\n      rangeSeparator,\n    } = this.props;\n    if (Array.isArray(input)) {\n      if (format) {\n        return input.map((value) => format(value)).join(rangeSeparator);\n      }\n      return input.join(rangeSeparator);\n    }\n    if (input !== null) {\n      return input;\n    }\n    if (this.formattedValue) {\n      if (type === 'range' || type === 'multiRange') {\n        return this.formattedValue.join(rangeSeparator);\n      }\n      return this.formattedValue;\n    }\n    return '';\n  }", "CodeBleu_score": 31.542363994174003}, {"code": "displayValue()  const { format, type, value, rangeSeparator } = this.props;\n  const parsedValue = parseValue(value, format);\n  const formattedValue = formatValue(parsedValue, format, type);\n  if (Array.isArray(parsedValue)) {\n    if (formattedValue) {\n      return formattedValue.join(rangeSeparator);\n    }\n    return parsedValue.join(rangeSeparator);\n  }\n  if (parsedValue !== null) {\n    return parsedValue;\n  }\n  if (formattedValue) {\n    if (type === 'date' || type === 'date-range') {\n      return formattedValue.join(rangeSeparator);\n    }\n    return formattedValue;\n  }\n  return '';\n}", "CodeBleu_score": 39.01895290811666}]}
{"instance_id": "305dba2399e1", "generation_result": [{"code": "handleStartChange(event)  const start = parseInt(event.detail.value);\n  this.userInput = [`${start}`, this.userInput[1]];\n  this.pickerValue = [start, this.pickerValue[1]];\n  if (this.isValid(start, this.pickerValue[1])) {\n    this.input.emit(this.pickerValue);\n    this.userInput = null;\n  }\n}", "CodeBleu_score": 32.86817418163971}, {"code": "handleStartChange(event)  const value = parseInt(event.target.value);\n  this.userInput = [\n    this.formatValue(value),\n    this.displayValue[1]\n  ];\n  this.pickerValue = [\n    value,\n    this.pickerValue[1]\n  ];\n  if (this.isValidValue(value)) {\n    this.$emit('input', this.pickerValue);\n    this.userInput = null;\n  }\n}\n", "CodeBleu_score": 39.64478997255004}, {"code": "handleStartChange(event)    const start = parseInt(event.target.value);\n    this.userInput = [start, this.endDisplay];\n    this.pickerValue = [start, this.endValue];\n    if (this.isValid(start, this.endValue)) {\n        this.$emit('input', this.userInput);\n        this.userInput = null;\n    }\n}\n", "CodeBleu_score": 30.365049839215096}]}
{"instance_id": "0f76d5fb83b3", "generation_result": [{"code": "bindScrollEvent()  const bindFunction = (type) => {\n    this.hours.wrap.onscroll = (e) => this.handleScroll(type, e);\n    this.minutes.wrap.onscroll = (e) => this.handleScroll(type, e);\n    this.seconds.wrap.onscroll = (e) => this.handleScroll(type, e);\n  };\n\n  bindFunction(\"hours\");\n  bindFunction(\"minutes\");\n  bindFunction(\"seconds\");\n}\n", "CodeBleu_score": 59.22318846102856}, {"code": "bindScrollEvent()    const bindFunction = (type) => {\n        this.hours.wrap.onscroll = (event) => this.handleScroll(type, event);\n        this.minutes.wrap.onscroll = (event) => this.handleScroll(type, event);\n        this.seconds.wrap.onscroll = (event) => this.handleScroll(type, event);\n    };\n\n    bindFunction('hours');\n    bindFunction('minutes');\n    bindFunction('seconds');\n}", "CodeBleu_score": 56.608682899815356}, {"code": "bindScrollEvent()    const bindFunction = (type) => {\n      this[type].wrap.onscroll = (event) => this.handleScroll(type, event);\n    };\n    bindFunction('hours');\n    bindFunction('minutes');\n    bindFunction('seconds');\n  }", "CodeBleu_score": 65.46884621954992}]}
{"instance_id": "fe8ad366d911", "generation_result": [{"code": "scrollDown(step)    if (!this.scrollbar) {\n        this.selectRange('hours');\n        return;\n    }\n    if (this.scrollbar === 'hours') {\n        const hours = this.hours;\n        let index = hours.findIndex(hour => hour.value === this.value);\n        while (true) {\n            index = (index + 1) % hours.length;\n            if (hours[index].available) {\n                break;\n            }\n        }\n        this.value = hours[index].value;\n    }\n    else {\n        this.value = (this.value + step) % 60;\n    }\n    this.date = new Date(this.value);\n    this.adjustSpinner();\n    this.selectRange(this.scrollbar);\n}", "CodeBleu_score": 30.826217912241027}, {"code": "scrollDown(step)    const { scrollbar, date } = this;\n    const { hours, minutes, ampm } = this.getTime();\n    const { hoursList } = this.props;\n    let value = scrollbar.value;\n    if (!scrollbar) {\n        this.selectRange('hours');\n        return;\n    }\n    if (scrollbar.type === 'hours') {\n        for (let i = 0; i < hoursList.length; i++) {\n            if (hoursList[i] === hours && (i + step) < hoursList.length && (i + step) >= 0) {\n                value = hoursList[i + step];\n                break;\n            }\n        }\n    }\n    else {\n        value = value + step;\n        if (value > 59)\n            value = 0;\n        if (value < 0)\n            value = 59;\n    }\n    scrollbar.value = value;\n    this.updateDate(date);\n    this.adjustSpinner(scrollbar);\n    this.selectRange(scrollbar.type);\n}", "CodeBleu_score": 35.691900700277266}, {"code": "scrollDown(step)    if (!this.activeScrollbar) {\n        this.selectRange.emit('hours');\n        return;\n    }\n\n    const scrollbar = this.scrollbars[this.activeScrollbar];\n    if (scrollbar.name === 'hours') {\n        for (let i = 0; i < this.hours.length; i++) {\n            if (this.hours[i].disabled) {\n                continue;\n            }\n            this.hours[i].selected = false;\n            scrollbar.value = this.hours[i].value;\n            if (i === this.hours.length - 1) {\n                this.hours[0].selected = true;\n                scrollbar.value = this.hours[0].value;\n            } else {\n                this.hours[i + 1].selected = true;\n            }\n            break;\n        }\n    } else {\n        scrollbar.value = scrollbar.value + step;\n        if (scrollbar.value > 60) {\n            scrollbar.value = 0;\n        }\n    }\n\n    this.updateDate();\n    this.adjustSpinner();\n    this.selectRange.emit(this.activeScrollbar);\n}", "CodeBleu_score": 25.781171950711123}]}
{"instance_id": "9b22163fdfde", "generation_result": [{"code": "imgStyle()    let style = {\n        transform: `scale(${this.scale}) rotate(${this.rotate}deg)`,\n        transition: this.enableTransition ? 'all 0.3s' : '',\n        top: this.offsetY + 'px',\n        left: this.offsetX + 'px'\n    };\n\n    if (this.mode === 'CONTAIN') {\n        style.maxWidth = '100%';\n        style.maxHeight = '100%';\n    }\n\n    return style;\n}", "CodeBleu_score": 42.382574235865114}, {"code": "imgStyle()    const { scale, rotation, offsetX, offsetY, mode, enableTransition } = this.state;\n\n    const style = {\n        transform: `scale(${scale}) rotate(${rotation}deg)`,\n        position: 'absolute',\n        left: `${offsetX}px`,\n        top: `${offsetY}px`,\n    };\n\n    if (enableTransition) {\n        style.transition = 'transform 0.3s ease-in-out';\n    }\n\n    if (mode === 'CONTAIN') {\n        style.maxWidth = '100%';\n        style.maxHeight = '100%';\n    }\n\n    return style;\n}", "CodeBleu_score": 58.34183432491754}, {"code": "imgStyle()  const { scale, rotation, offsetX, offsetY, mode, enableTransition } = this.state;\n  const style = {\n    transform: `scale(${scale}) rotate(${rotation}deg)`,\n    ...(enableTransition ? { transition: 'transform 0.3s ease-out' } : {}),\n    position: 'absolute',\n    top: `${offsetY}px`,\n    left: `${offsetX}px`,\n  };\n\n  if (mode === 'CONTAIN') {\n    style.maxWidth = '100%';\n    style.maxHeight = '100%';\n  }\n\n  return style;\n}", "CodeBleu_score": 60.609987915545396}]}
{"instance_id": "3bf2230ab870", "generation_result": [{"code": "addLazyLoadListener()    if (isServer()) {\n        return;\n    }\n    const scrollContainer = this.scrollContainer || this.element;\n    const lazyLoadHandler = throttle(() => this.lazyLoadHandler(), 200);\n    scrollContainer.addEventListener('scroll', lazyLoadHandler);\n    lazyLoadHandler();\n}", "CodeBleu_score": 17.596640113892956}, {"code": "addLazyLoadListener()  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const scrollContainer = this.getScrollContainer();\n\n  if (!scrollContainer) {\n    return;\n  }\n\n  const lazyLoadHandler = throttle(() => {\n    this.lazyLoad();\n  }, 100);\n\n  scrollContainer.addEventListener('scroll', lazyLoadHandler);\n  lazyLoadHandler();\n}", "CodeBleu_score": 22.698786205102945}, {"code": "addLazyLoadListener()    if (isServer) {\n        return;\n    }\n    const scrollContainer = this.getScrollContainer();\n    if (!scrollContainer) {\n        return;\n    }\n    const lazyLoadHandler = this.throttle(() => {\n        this.handleLazyLoad();\n    }, 200);\n    scrollContainer.addEventListener('scroll', lazyLoadHandler);\n    lazyLoadHandler();\n}", "CodeBleu_score": 24.429881715125447}]}
{"instance_id": "7180fba29076", "generation_result": [{"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState   if (result.error instanceof TRPCClientError) {\n    const newError = new TRPCClientError(\n      result.error.message,\n      result.error.data,\n      result.error.shape,\n    );\n    return {\n      ...result,\n      error: newError,\n    };\n  }\n  return result;\n}", "CodeBleu_score": 38.91847615776772}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState   if (result.error instanceof TRPCClientError) {\n    return {\n      ...result,\n      error: new TRPCClientError(\n        result.error.message,\n        result.error.data,\n        result.error.shape,\n      ),\n    } as TState;\n  }\n  return result;\n}\n", "CodeBleu_score": 28.528872114889374}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState   if (result.error instanceof TRPCClientError) {\n    const error = new TRPCClientError(\n      result.error.message,\n      result.error.data,\n      result.error.shape,\n    );\n    return { ...result, error } as TState;\n  }\n  return result;\n}\n", "CodeBleu_score": 36.07064355847858}]}
{"instance_id": "b0ff12e8aa0d", "generation_result": [{"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) =>   const appOrPageProps = await appOrPageCtx.Component.getInitialProps(appOrPageCtx.ctx)\n\n  return {\n    ...appOrPageProps,\n    trpcState: appOrPageCtx.ctx.trpcState,\n  }\n}\n", "CodeBleu_score": 8.728348386988422}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) =>   const appProps = await appOrPageCtx.ctx.trpc.getInitialProps();\n\n  if (appOrPageCtx.Component.getInitialProps) {\n    const pageProps = await appOrPageCtx.Component.getInitialProps(appOrPageCtx.ctx);\n    return { ...appProps, ...pageProps };\n  }\n\n  return { ...appProps };\n};\n", "CodeBleu_score": 17.874853244616528}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) =>   if (typeof appOrPageCtx.ctx.req === 'undefined') {\n    // We are on the server\n    return {\n      pageProps: {\n        trpcState: ssr.dehydrate()\n      }\n    }\n  }\n\n  // We are on the client\n  if (appOrPageCtx.Component.getInitialProps) {\n    const pageProps = await appOrPageCtx.Component.getInitialProps(appOrPageCtx.ctx)\n    return {\n      pageProps: {\n        ...pageProps,\n        trpcState: ssr.dehydrate()\n      }\n    }\n  }\n\n  return {\n    pageProps: {\n      trpcState: ssr.dehydrate()\n    }\n  }\n}\n", "CodeBleu_score": 20.314422865578845}]}
{"instance_id": "b46c87572278", "generation_result": [{"code": "export function formDataToObject(formData: FormData)\tconst result: Record<string, any> = {};\n\n\tformData.forEach((value, key) => {\n\t\tconst keys = key.split('.');\n\t\tlet current = result;\n\n\t\tfor (let i = 0; i < keys.length - 1; i++) {\n\t\t\tconst k = keys[i];\n\t\t\tif (!current[k]) {\n\t\t\t\tcurrent[k] = {};\n\t\t\t}\n\t\t\tcurrent = current[k];\n\t\t}\n\n\t\tcurrent[keys[keys.length - 1]] = value;\n\t});\n\n\treturn result;\n}", "CodeBleu_score": 34.57698898710572}, {"code": "export function formDataToObject(formData: FormData)  const result: Record<string, any> = {};\n\n  formData.forEach((value, key) => {\n    const keys = key.split('.');\n    let current = result;\n\n    for (let i = 0; i < keys.length - 1; i++) {\n      const currentKey = keys[i];\n      if (!current[currentKey]) {\n        current[currentKey] = {};\n      }\n      current = current[currentKey];\n    }\n\n    current[keys[keys.length - 1]] = value;\n  });\n\n  return result;\n}", "CodeBleu_score": 34.95107083782196}, {"code": "export function formDataToObject(formData: FormData)  const result: Record<string, any> = {};\n  for (const [key, value] of formData.entries()) {\n    const keys = key.split('.');\n    let current = result;\n    for (let i = 0; i < keys.length - 1; i++) {\n      const k = keys[i];\n      if (!current[k]) {\n        current[k] = {};\n      }\n      current = current[k];\n    }\n    current[keys[keys.length - 1]] = value;\n  }\n  return result;\n}", "CodeBleu_score": 49.271548954424524}]}
{"instance_id": "b63467546c58", "generation_result": [{"code": "export async function experimental_revalidateEndpoint(req: Request)  const { cacheTag } = await req.json();\n\n  if (!cacheTag || typeof cacheTag !== \"string\") {\n    return new Response(\n      JSON.stringify({ error: \"invalid cacheTag provided\" }),\n      {\n        status: 400,\n      }\n    );\n  }\n\n  await revalidateTag(cacheTag);\n\n  return new Response(\n    JSON.stringify({\n      message: `revalidated tag ${cacheTag}`,\n      timestamp: Date.now(),\n    }),\n    {\n      status: 200,\n    }\n  );\n}", "CodeBleu_score": 66.49570257710384}, {"code": "export async function experimental_revalidateEndpoint(req: Request)  const { cacheTag } = await req.json();\n\n  if (typeof cacheTag !== 'string') {\n    return new Response(\n      JSON.stringify({\n        message: 'Invalid cache tag',\n      }),\n      {\n        status: 400,\n      }\n    );\n  }\n\n  await revalidateTag(cacheTag);\n\n  return new Response(\n    JSON.stringify({\n      message: `Revalidated tag ${cacheTag}`,\n      timestamp: Date.now(),\n    }),\n    {\n      status: 200,\n    }\n  );\n}\n", "CodeBleu_score": 70.47708900551237}, {"code": "export async function experimental_revalidateEndpoint(req: Request)  const { cacheTag } = (await req.json()) as { cacheTag?: unknown };\n\n  if (typeof cacheTag !== 'string') {\n    return new Response(\n      JSON.stringify({ error: 'invalid cacheTag, must be a string' }),\n      {\n        status: 400,\n      },\n    );\n  }\n\n  await revalidateTag(cacheTag);\n\n  return new Response(\n    JSON.stringify({\n      message: `revalidated tag ${cacheTag}`,\n      timestamp: Date.now(),\n    }),\n    {\n      status: 200,\n    },\n  );\n}", "CodeBleu_score": 53.43045089367936}]}
{"instance_id": "4cc5d9754d1f", "generation_result": [{"code": "export function createUseProxy<TRouter extends AnyRouter>  return function useProxy<TOutput = unknown>(\n    path: string[],\n    options: UseProxyOptions<TRouter, TOutput> = {},\n  ) {\n    const { trpcClient, trpcContext, batchRequests = false } = options;\n\n    const proxy = createRecursiveProxy<TRouter>(trpcClient, trpcContext, batchRequests);\n\n    return path.reduce((acc, key) => acc[key], proxy);\n  };\n}", "CodeBleu_score": 24.547153792937458}, {"code": "export function createUseProxy<TRouter extends AnyRouter>  const useProxy = createRecursiveProxy<TRouter>();\n\n  return function useProxyInner<TPath extends TRouter['_def']['_config']['$path']>(\n    path: TPath,\n    options?: UseProxyOptions,\n  ): UseProxyReturnType<TRouter, TPath> {\n    const pathString = path.toString();\n    const pathArray = pathString.split('.');\n\n    const proxy = useProxy(pathArray);\n\n    return proxy as UseProxyReturnType<TRouter, TPath>;\n  };\n}", "CodeBleu_score": 41.63317655513944}, {"code": "export function createUseProxy<TRouter extends AnyRouter>  return function useProxy<\n    TClient extends TRPCSubscriptionClient<TRouter>,\n    TOptions extends UseProxyOptions<TClient>,\n  >(client: TClient, options: TOptions) {\n    const path = createPath(options);\n\n    return createRecursiveProxy(\n      (...args: any[]) =>\n        client.query(path, args.length === 1 ? args[0] : args),\n    );\n  };\n}", "CodeBleu_score": 37.55097158145152}]}
{"instance_id": "ec07b15792dd", "generation_result": [{"code": "const Accordion = ({ child, name }: AccordionProps) =>  return (\n    <AccordionPrimitive.Root type=\"single\" collapsible>\n      <AccordionPrimitive.Item value=\"item-1\">\n        <AccordionPrimitive.Trigger\n          className={\n            \"group flex w-full items-center justify-between rounded-md bg-gray-100 px-4 py-2 text-gray-900 hover:bg-gray-200\"\n          }\n        >\n          <span className=\"text-sm font-medium\">{name}</span>\n          <AccordionPrimitive.Chevron className=\"h-5 w-5 text-gray-700 group-hover:text-gray-900\" />\n        </AccordionPrimitive.Trigger>\n        <AccordionPrimitive.Content>\n          <div className=\"p-4\">{child}</div>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n};\n", "CodeBleu_score": 46.37566965349602}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>  return (\n    <AccordionPrimitive.Root type=\"single\" collapsible>\n      <AccordionPrimitive.Item value=\"item-1\">\n        <AccordionPrimitive.Trigger\n          className={`${\n            buttonStyles() +\n            \" \" +\n            \"flex w-full items-center justify-between px-4 py-2 text-sm font-medium text-gray-800 dark:text-gray-200\"\n          }`}\n        >\n          <span>{name}</span>\n          <ChevronDownIcon className=\"h-5 w-5 text-gray-600 dark:text-gray-400\" />\n        </AccordionPrimitive.Trigger>\n        <AccordionPrimitive.Content>\n          <div className=\"mt-2\">{child}</div>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n};\n", "CodeBleu_score": 46.57189062688669}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>  return (\n    <AccordionPrimitive.Root\n      type=\"single\"\n      collapsible\n      defaultValue=\"item-1\"\n      className=\"flex flex-col\"\n    >\n      <AccordionPrimitive.Item value=\"item-1\" className=\"flex flex-col\">\n        <AccordionPrimitive.Header className=\"flex\">\n          <AccordionPrimitive.Trigger className=\"group flex w-full items-center justify-between rounded-t-md border border-slate-200 px-4 py-2 text-left text-sm font-medium text-slate-900 hover:bg-slate-100 focus:z-10 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75 dark:border-slate-700 dark:text-slate-100\">\n            <span>{name}</span>\n            <ChevronDownIcon\n              className=\"h-5 w-5 text-slate-700 transition duration-200 group-radix-state-open:rotate-180 dark:text-slate-400\"\n              aria-hidden=\"true\"\n            />\n          </AccordionPrimitive.Trigger>\n        </AccordionPrimitive.Header>\n        <AccordionPrimitive.Content className=\"rounded-b-md border border-slate-200 px-4 py-2 dark:border-slate-700\">\n          {child}\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n};\n", "CodeBleu_score": 44.6885657072457}]}
{"instance_id": "728fa96ca3cf", "generation_result": [{"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps)  return (\n    <MenuPrimitive.Root>\n      <MenuPrimitive.Trigger asChild>\n        <button className=\"flex items-center gap-2\">\n          {icon}\n          {name && <span>{name}</span>}\n          {chevron && <ChevronDownIcon />}\n        </button>\n      </MenuPrimitive.Trigger>\n      <MenuPrimitive.Content\n        className={clsx(\n          \"absolute z-50 mt-2 w-56 origin-top-right rounded-md bg-white p-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\n          buttonPosition === \"top\" && \"bottom-full\",\n          buttonPosition === \"bottom\" && \"top-full\"\n        )}\n      >\n        <MenuPrimitive.Item>\n          {({ active }) => (\n            <a\n              className={clsx(\n                \"flex w-full items-center rounded-md px-2 py-2 text-sm\",\n                active && \"bg-gray-100\"\n              )}\n              href=\"/account-settings\"\n            >\n              Account settings\n            </a>\n          )}\n        </MenuPrimitive.Item>\n        <MenuPrimitive.Item>\n          {({ active }) => (\n            <a\n              className={clsx(\n                \"flex w-full items-center rounded-md px-2 py-2 text-sm\",\n                active && \"bg-gray-100\"\n              )}\n              href=\"/account-settings\"\n            >\n              Documentation\n            </a>\n          )}\n        </MenuPrimitive.Item>\n        <MenuPrimitive.Item disabled>\n          <span className=\"flex w-full cursor-not-allowed items-center rounded-md px-2 py-2 text-sm opacity-70\">\n            Invite a friend (coming soon!)\n          </span>\n        </MenuPrimitive.Item>\n      </MenuPrimitive.Content>\n    </MenuPrimitive.Root>\n  );\n}", "CodeBleu_score": 42.91924707319947}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps)  return (\n    <MenuPrimitive.Root>\n      <MenuPrimitive.Trigger asChild>\n        <button className=\"flex items-center gap-2 rounded-md px-2 py-1 text-sm font-medium text-slate-600 hover:bg-slate-100\">\n          {icon && <span className=\"text-lg\">{icon}</span>}\n          {name && <span className=\"text-sm\">{name}</span>}\n          {chevron && <span className=\"text-lg\">{chevron}</span>}\n        </button>\n      </MenuPrimitive.Trigger>\n      <MenuPrimitive.Content\n        className={clsx(\n          \"z-50 w-56 rounded-md border border-slate-200 bg-white p-1 shadow-lg outline-none\",\n          buttonPosition === \"top\" && \"mb-2\",\n          buttonPosition === \"bottom\" && \"mt-2\"\n        )}\n      >\n        <MenuPrimitive.Group className=\"flex flex-col gap-1\">\n          {items.map((item, i) => (\n            <MenuPrimitive.Item\n              key={i}\n              asChild\n              onSelect={item.onSelect}\n              disabled={item.disabled}\n            >\n              <button\n                className={clsx(\n                  \"flex w-full cursor-default items-center gap-2 rounded-md px-2 py-1 text-sm outline-none\",\n                  item.disabled && \"cursor-not-allowed opacity-50\",\n                  item.active && \"bg-slate-100\"\n                )}\n              >\n                {item.icon && <span className=\"text-lg\">{item.icon}</span>}\n                <span className=\"flex-1 text-left\">{item.label}</span>\n                {item.shortcut && (\n                  <span className=\"text-xs font-medium text-slate-400\">\n                    {item.shortcut}\n                  </span>\n                )}\n              </button>\n            </MenuPrimitive", "CodeBleu_score": 41.83498983826755}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps)  return (\n    <MenuPrimitive.Root>\n      <MenuPrimitive.Trigger asChild>\n        <button className=\"flex items-center gap-1\">\n          {icon}\n          {name && <span>{name}</span>}\n          {chevron && <ChevronDownIcon />}\n        </button>\n      </MenuPrimitive.Trigger>\n      <MenuPrimitive.Content\n        className={clsx(\n          \"absolute z-50 w-56 rounded-md border border-gray-100 bg-white p-1 shadow-lg dark:border-gray-800 dark:bg-gray-800\",\n          {\n            \"left-0\": buttonPosition === \"left\",\n            \"right-0\": buttonPosition === \"right\",\n          }\n        )}\n      >\n        <MenuPrimitive.Group className=\"flex flex-col gap-1\">\n          {items.map((item, index) => (\n            <MenuPrimitive.Item\n              key={`${item.name}-${index}`}\n              asChild\n              disabled={item.disabled}\n            >\n              <button\n                className={clsx(\n                  \"flex w-full cursor-default items-center gap-2 rounded-md px-2 py-2 text-sm outline-none focus:bg-gray-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-900\",\n                  {\n                    \"text-red-500\": item.color === \"danger\",\n                  }\n                )}\n                onClick={item.onClick}\n              >\n                {item.icon}\n                <span>{item.name}</span>\n              </button>\n            </MenuPrimitive.Item>\n          ))}\n        </MenuPrimitive.Group>\n      </MenuPrimitive.Content>\n    </MenuPrimitive.Root>\n  );\n}\n", "CodeBleu_score": 42.242138849641805}]}
{"instance_id": "a2733fb19224", "generation_result": [{"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) =>     const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10; // Adjust the threshold value as needed\n  \n    if (scrollTop + clientHeight >= scrollHeight - threshold) {\n      setIsScrolledUp(true);\n    } else {\n      setIsScrolledUp(false);\n    }\n  };", "CodeBleu_score": 43.48182774278831}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) =>     const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const isBottom = scrollTop + clientHeight >= scrollHeight - threshold;\n    if (isBottom) {\n        setIsScrolledUp(true);\n    } else {\n        setIsScrolledUp(false);\n    }\n}\n", "CodeBleu_score": 45.78409513091811}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) =>     const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const isScrolledUp = scrollTop + clientHeight >= scrollHeight - threshold;\n    if (isScrolledUp) {\n      setIsScrolledUp(true);\n    } else {\n      setIsScrolledUp(false);\n    }\n  };\n\n  /**\n   * This function, handleScroll, handles the scroll event of a div element.\\nIt checks if the user has scrolled up from the bottom by comparing scrollTop, scrollHeight, and clientHeight values with a threshold of 10 pixels.\\nIt then updates the state to indicate whether the user has scrolled up.\n   */\n  const handleScroll = (event: React.UIEvent<HTMLDivElement>) =>  {\n    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const isScrolledUp = scrollTop + clientHeight >= scrollHeight - threshold;\n    if (isScrolledUp) {\n      setIsScrolledUp(true);\n    } else {\n      setIsScrolledUp(false);\n    }\n  };", "CodeBleu_score": 44.007811636130846}]}
{"instance_id": "128baf9be3e8", "generation_result": [{"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>  const scrollRef = document.getElementById(\"messages\");\n  if (scrollRef && scrollRef.current) {\n    scrollRef.current.scrollIntoView({\n      behavior: behaviour,\n    });\n  }\n};\n", "CodeBleu_score": 38.778699276341186}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>  const scrollRef = document.getElementById(\"scroll-container\");\n  if (scrollRef && scrollRef.current) {\n    scrollRef.current.scrollIntoView({ behavior: behaviour });\n  }\n};\n", "CodeBleu_score": 35.91042865980336}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>  const scrollRef = document.getElementById(\"messages\");\n  if (scrollRef && scrollRef.current) {\n    scrollRef.current.scrollIntoView({\n      behavior: behaviour,\n    });\n  }\n};\n", "CodeBleu_score": 38.778699276341186}]}
{"instance_id": "070c4b1ac0b5", "generation_result": [{"code": "const saveElementAsImage = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (element) {\n    htmlToImage\n      .toJpeg(element, {\n        style: {\n          border: \"1px solid #f0f0f0\",\n          padding: \"10px\",\n          margin: \"20px\",\n          boxShadow: \"0 0 10px rgba(0, 0, 0, 0.5)\",\n          backgroundColor: \"white\",\n        },\n      })\n      .then((dataUrl) => {\n        const link = document.createElement(\"a\");\n        link.download = \"agent-gpt-output.png\";\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch((error) => {\n        alert(\"Failed to save image: \" + error.message);\n      });\n  } else {\n    alert(\"Element not found.\");\n  }\n};", "CodeBleu_score": 42.779714558466395}, {"code": "const saveElementAsImage = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (element) {\n    htmlToImage\n      .toJpeg(element, {\n        style: {\n          height: \"auto\",\n          width: \"100%\",\n          margin: \"0\",\n          padding: \"0\",\n          \"border-radius\": \"0\",\n          \"box-shadow\": \"none\",\n          \"background-color\": \"transparent\",\n        },\n      })\n      .then((dataUrl) => {\n        const link = document.createElement(\"a\");\n        link.download = \"agent-gpt-output.png\";\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch((error) => {\n        alert(\"Sorry, something went wrong. Please try again.\");\n      });\n  } else {\n    alert(\"Sorry, the element you are trying to save does not exist.\");\n  }\n};\n", "CodeBleu_score": 41.721270218791766}, {"code": "const saveElementAsImage = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (!element) {\n    alert(\"Element not found. Please try again.\");\n    return;\n  }\n\n  htmlToImage\n    .toJpeg(element, {\n      style: {\n        border: \"none\",\n        padding: \"0\",\n        margin: \"0\",\n        width: \"100%\",\n        height: \"auto\",\n        backgroundColor: \"transparent\",\n      },\n    })\n    .then((dataUrl) => {\n      const link = document.createElement(\"a\");\n      link.download = \"agent-gpt-output.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((error) => {\n      alert(\"An error occurred while saving the image. Please try again.\");\n      console.error(\"Error saving image:\", error);\n    });\n};\n", "CodeBleu_score": 46.72828894735963}]}
{"instance_id": "346ea48343da", "generation_result": [{"code": "const copyElementText = (elementId: string) =>  const element = document.getElementById(elementId) as HTMLInputElement;\n  const text = element.value;\n\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text);\n  } else {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n  }\n};\n", "CodeBleu_score": 39.89734200132643}, {"code": "const copyElementText = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (!element) {\n    console.error(`Element with ID '${elementId}' not found.`);\n    return;\n  }\n\n  const text = element.innerText;\n\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        console.log(`Text copied to clipboard: ${text}`);\n      },\n      (err) => {\n        console.error(`Failed to copy text to clipboard: ${err}`);\n      }\n    );\n  } else {\n    const textarea = document.createElement(\"textarea\");\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textarea);\n    console.log(`Text copied to clipboard: ${text}`);\n  }\n};\n", "CodeBleu_score": 51.98101520541597}, {"code": "const copyElementText = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (!element) {\n    console.error(`Element with ID ${elementId} not found.`);\n    return;\n  }\n\n  const text = element.innerText;\n\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        console.log(\"Text copied to clipboard successfully.\");\n      },\n      (error) => {\n        console.error(\"Error copying text to clipboard:\", error);\n      }\n    );\n  } else {\n    const textarea = document.createElement(\"textarea\");\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textarea);\n  }\n};\n", "CodeBleu_score": 53.88948327379952}]}
{"instance_id": "25f193a0eddf", "generation_result": [{"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) =>   const match = /language-(\\w+)/.exec(className || '')\n  return !inline && match ? (\n    <SyntaxHighlighter\n      style={dracula}\n      language={match[1]}\n      PreTag=\"div\"\n      {...props}\n    >\n      {String(children).replace(/\\n$/, '')}\n    </SyntaxHighlighter>\n  ) : (\n    <code className={className} {...props}>\n      {children}\n    </code>\n  )\n}\n", "CodeBleu_score": 24.264128300575912}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) =>   const language = className?.replace(/language-/, '')\n  const code = inline ? children : children.trim()\n\n  if (inline) {\n    return <code className=\"inline-code\">{code}</code>\n  }\n\n  return (\n    <pre className={`code-block ${language}`}>\n      <code\n        className={`language-${language}`}\n        dangerouslySetInnerHTML={{ __html: highlight.highlight(code, { language }).value }}\n      />\n    </pre>\n  )\n}\n", "CodeBleu_score": 44.531776210088495}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) =>   const language = className?.replace(/language-/, '');\n  if (inline) {\n    return <code className={className}>{children}</code>;\n  }\n  return (\n    <pre className={`hljs ${language}`}>\n      <code className={className}>{children}</code>\n    </pre>\n  );\n};\n", "CodeBleu_score": 42.539401093101255}]}
{"instance_id": "7ba7dfdc0ab6", "generation_result": [{"code": "const extractTextFromNode = (node: React.ReactNode): string =>  if (typeof node === 'string') {\n    return node;\n  } else if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  } else if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  } else {\n    return '';\n  }\n};\n", "CodeBleu_score": 63.3501249908344}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>  if (typeof node === 'string') {\n    return node;\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  }\n\n  if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n\n  return '';\n};", "CodeBleu_score": 67.21461735539069}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>  if (typeof node === 'string') {\n    return node;\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  }\n\n  if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n\n  return '';\n};\n", "CodeBleu_score": 67.21461735539069}]}
{"instance_id": "a67cb8d31dde", "generation_result": [{"code": "const Summarize = () =>  const { agent, lifecycle, tasks, summary, setSummary } = useContext(AppContext);\n\n  const canSummarize =\n    agent.available &&\n    lifecycle.state === \"stopped\" &&\n    tasks.filter((task) => task.result).length > 0 &&\n    !summary;\n\n  return (\n    <>\n      {canSummarize && (\n        <div className=\"summarize\">\n          <p>\n            You can summarize the conversation by clicking the button below.\n          </p>\n          <button\n            className=\"button\"\n            onClick={() => {\n              setSummary(true);\n              agent.summarize();\n            }}\n          >\n            Summarize\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n", "CodeBleu_score": 25.31818140359406}, {"code": "const Summarize = () =>  const { agent, lifecycle, tasks, summary } = useContext(AppContext);\n  const { available } = agent;\n  const { state: lifecycleState } = lifecycle;\n  const { completed } = tasks;\n  const { results } = completed;\n  const { length: resultsLength } = results;\n  const { setSummary } = summary;\n\n  if (\n    available &&\n    lifecycleState === \"stopped\" &&\n    resultsLength > 0 &&\n    !summary\n  ) {\n    return (\n      <div className=\"summarize\">\n        <div className=\"summarize-prompt\">\n          You can now summarize the conversation.\n        </div>\n        <button\n          className=\"summarize-button\"\n          onClick={() => {\n            setSummary(true);\n            agent.summarize();\n          }}\n        >\n          Summarize\n        </button>\n      </div>\n    );\n  }\n};", "CodeBleu_score": 25.356931288914847}, {"code": "const Summarize = () =>  const {\n    agent,\n    lifecycle,\n    completedTasksWithResults,\n    summary,\n    setSummary,\n  } = useContext(AppContext);\n\n  if (\n    agent.available &&\n    lifecycle === \"stopped\" &&\n    completedTasksWithResults.length > 0 &&\n    !summary\n  ) {\n    return (\n      <div className=\"summarize-container\">\n        <div className=\"summarize-prompt\">\n          Summarize the conversation so far:\n        </div>\n        <button\n          className=\"summarize-button\"\n          onClick={() => {\n            setSummary(true);\n            agent.summarize();\n          }}\n        >\n          Summarize\n        </button>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};", "CodeBleu_score": 27.42411630739545}]}
{"instance_id": "983031b20224", "generation_result": [{"code": "export default function DashboardLayout({ children }: PropsWithChildren)  return (\n    <ClerkProvider\n      appearance={{\n        elements: {\n          footer: {\n            textAlign: \"center\",\n            padding: \"1rem\",\n            backgroundColor: \"white\",\n            color: \"black\",\n          },\n        },\n        variables: {\n          colorPrimary: \"#000000\",\n        },\n        layout: {\n          socialButtonsVariant: \"iconButton\",\n        },\n      }}\n      {...pageProps}\n    >\n      <TRPCReactProvider>{children}</TRPCReactProvider>\n    </ClerkProvider>\n  );\n}", "CodeBleu_score": 36.38676868951348}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren)  return (\n    <ClerkProvider\n      appearance={{\n        elements: {\n          formFieldInput: \"w-full rounded-md border-gray-300 shadow-sm\",\n          formFieldLabel: \"text-gray-700\",\n          formFieldError: \"text-red-500\",\n          button: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\",\n        },\n        variables: {\n          colorPrimary: \"#0070f3\",\n        },\n      }}\n      theme={dark}\n    >\n      <TRPCReactProvider>{children}</TRPCReactProvider>\n    </ClerkProvider>\n  );\n}", "CodeBleu_score": 34.68874090381462}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren)  return (\n    <ClerkProvider\n      appearance={{\n        baseTheme: dark,\n        variables: {\n          colorPrimary: \"#ff0000\",\n        },\n        elements: {\n          card: \"bg-[#15181C]\",\n          footer: \"bg-[#15181C]\",\n          header: \"bg-[#15181C]\",\n          pageBackground: \"bg-[#15181C]\",\n        },\n      }}\n    >\n      <TRPCReactProvider>{children}</TRPCReactProvider>\n    </ClerkProvider>\n  );\n}", "CodeBleu_score": 70.85872603217028}]}
{"instance_id": "0ba912ee94c7", "generation_result": [{"code": "export function ActiveButton({ href, label, icon }: Props)  const router = useRouter();\n  const active = router.pathname === href;\n  return (\n    <Button\n      variant=\"ghost\"\n      className={clsx(\n        \"w-full justify-start\",\n        active ? \"bg-gray-200\" : \"hover:bg-gray-200\"\n      )}\n    >\n      <Link href={href} className=\"flex w-full items-center gap-2\">\n        {icon}\n        <span className=\"truncate\">{label}</span>\n      </Link>\n    </Button>\n  );\n}", "CodeBleu_score": 61.66224703888029}, {"code": "export function ActiveButton({ href, label, icon }: Props)  const router = useRouter();\n\n  return (\n    <Button\n      component={Link}\n      href={href}\n      variant=\"ghost\"\n      className={\n        router.pathname === href ? \"active-button\" : \"inactive-button\"\n      }\n    >\n      <Group>\n        <ThemeIcon variant=\"light\">{icon}</ThemeIcon>\n\n        <Text size=\"sm\">{label}</Text>\n      </Group>\n    </Button>\n  );\n}", "CodeBleu_score": 46.8642831177443}, {"code": "export function ActiveButton({ href, label, icon }: Props)  const { pathname } = useLocation();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      className={`${\n        pathname === href ? \"bg-gray-200\" : \"\"\n      } w-full justify-start`}\n    >\n      <Link to={href} className=\"flex items-center space-x-3\">\n        {icon}\n        <span className=\"truncate\">{label}</span>\n      </Link>\n    </Button>\n  );\n}\n", "CodeBleu_score": 57.33166472107168}]}
{"instance_id": "1fd5b7fdcc9b", "generation_result": [{"code": "export default function RootLayout({ children }: PropsWithChildren)   return (\n    <html lang=\"en\">\n      <head />\n      <body className={`${inter.className} suppress-hydration-warning`}>\n        <ThemeProvider\n          disableTransitionOnChange\n          attribute=\"class\"\n          defaultTheme=\"dark\"\n          value={{\n            light: lightTheme.className,\n            dark: darkTheme.className,\n          }}\n        >\n          {children}\n          <Analytics />\n          <Toaster />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 40.10675807942833}, {"code": "export default function RootLayout({ children }: PropsWithChildren)   return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={`${inter.className} ${roboto_mono.className}`}>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n          {children}\n          <Toaster />\n          <Analytics />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 50.025727755639096}, {"code": "export default function RootLayout({ children }: PropsWithChildren)   return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={`${inter.className} ${roboto.variable}`}>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n          {children}\n        </ThemeProvider>\n        <Toaster />\n        <Analytics />\n        <SpeedInsights />\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 45.40183241053653}]}
{"instance_id": "390ef9405b57", "generation_result": [{"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps)  return (\n    <a\n      className={twMerge(\n        \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[underline=true]:underline hover:underline\",\n        intent && [\n          intent === \"primary\" && \"text-primary-foreground bg-primary-background hover:bg-primary-background/90\",\n          intent === \"secondary\" &&\n            \"text-secondary-foreground bg-secondary-background hover:bg-secondary-background/90\",\n          intent === \"tertiary\" &&\n            \"text-tertiary-foreground bg-tertiary-background hover:bg-tertiary-background/90\",\n        ],\n        size && [\n          size === \"sm\" && \"h-9 rounded-md px-2\",\n          size === \"lg\" && \"h-11 rounded-md px-8\",\n          size === \"icon\" && \"h-9 w-9\",\n        ],\n        className\n      )}\n      {...props}\n    />\n  );\n}", "CodeBleu_score": 10.402680522644904}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps)  return (\n    <a\n      className={twMerge(\n        'rounded-md transition',\n        intent === 'primary' && [\n          'bg-gray-800 px-3 py-1.5 text-white',\n          'hover:bg-gray-700 active:bg-gray-800 active:text-white/70',\n        ],\n        intent === 'secondary' && [\n          'bg-gray-50 px-3 py-1.5 text-gray-900',\n          'hover:bg-gray-100 active:bg-gray-100',\n        ],\n        size === 'small' && 'text-xs font-medium',\n        size === 'medium' && 'text-sm font-semibold',\n        size === 'large' && 'text-sm font-semibold',\n        underline && 'underline',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n", "CodeBleu_score": 12.022450115428718}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps)  return (\n    <a\n      className={twMerge(\n        \"inline-block rounded-full border-2 border-gray-800 bg-white px-5 py-2.5 text-sm font-medium text-gray-800 hover:bg-gray-800 hover:text-white\",\n        intent === \"primary\" && \"bg-gray-800 text-white hover:bg-white hover:text-gray-800\",\n        size === \"small\" && \"px-3 py-1.5 text-xs\",\n        underline === \"none\" && \"no-underline hover:underline\",\n        className\n      )}\n      {...props}\n    >\n      {props.children}\n    </a>\n  );\n}\n", "CodeBleu_score": 14.005578743886113}]}
{"instance_id": "aa655671cb7e", "generation_result": [{"code": "export function middleware(request: NextRequest)  const url = request.nextUrl.clone();\n  if (url.hostname === 'next-enterprise.vercel.app') {\n    url.pathname = '/open-source/nextjs-enterprise-boilerplate';\n    return NextResponse.redirect(url, 301);\n  }\n}", "CodeBleu_score": 24.20755412030368}, {"code": "export function middleware(request: NextRequest)  if (request.nextUrl.host.includes(\"next-enterprise.vercel.app\")) {\n    return NextResponse.redirect(\n      \"https://blazity.com/open-source/nextjs-enterprise-boilerplate\",\n      301\n    );\n  }\n}", "CodeBleu_score": 30.75072453512191}, {"code": "export function middleware(request: NextRequest)  if (request.nextUrl.host.includes('next-enterprise.vercel.app')) {\n    return NextResponse.redirect(\n      'https://blazity.com/open-source/nextjs-enterprise-boilerplate',\n      301,\n    )\n  }\n}", "CodeBleu_score": 29.823548139823174}]}
{"instance_id": "b33fa69187fb", "generation_result": [{"code": "app.lazyrouter = function lazyrouter()    if (!this._router) {\n        this._router = new Router({\n            caseSensitive: this.get('case sensitive routing'),\n            strict: this.get('strict routing')\n        });\n\n        this.use(this._router.queryParser());\n        this.use(this._router.middleware.init());\n    }\n};", "CodeBleu_score": 47.131503688798325}, {"code": "app.lazyrouter = function lazyrouter()  if (app.router) return;\n  app.router = new Router({\n    caseSensitive: app.get('case sensitive routing'),\n    strict: app.get('strict routing')\n  });\n  app.router.use(query());\n  app.router.use(initialize());\n};\n", "CodeBleu_score": 23.401837579294206}, {"code": "app.lazyrouter = function lazyrouter()  if (this._router) {\n    return;\n  }\n  this._router = new Router({\n    caseSensitive: this.enabled('case sensitive routing'),\n    strict: this.enabled('strict routing')\n  });\n\n  this.use(query(this.get('query parser')));\n  this.use(this.middleware.init(this));\n};\n", "CodeBleu_score": 52.548731534846574}]}
{"instance_id": "7aadf79801c0", "generation_result": [{"code": "function createApplication()  var app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app },\n  });\n\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app },\n  });\n\n  app.init();\n  return app;\n}\n", "CodeBleu_score": 78.11237440627772}, {"code": "function createApplication()  var app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app },\n  });\n\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app },\n  });\n\n  app.init();\n  return app;\n}", "CodeBleu_score": 78.11237440627772}, {"code": "function createApplication()  var app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app },\n  });\n\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app },\n  });\n\n  app.init();\n  return app;\n}\n", "CodeBleu_score": 78.11237440627772}]}
{"instance_id": "2b4af4a14e81", "generation_result": [{"code": "res.sendFile = function sendFile(path, options, callback)     // ...\n}\n", "CodeBleu_score": 3.373203616900878}, {"code": "res.sendFile = function sendFile(path, options, callback)     var root = options.root;\n    var opts = options || {};\n\n    // support callback function as second arg\n    if (typeof options === 'function') {\n      callback = options;\n      opts = {};\n    }\n\n    // assign defaults / normalize\n    if (typeof root !== 'string') {\n      root = process.cwd();\n    }\n\n    if (typeof callback !== 'function') {\n      callback = function (err) {\n        if (err) {\n          if (err.status !== 404) {\n            self.error(err);\n          }\n        }\n      };\n    }\n\n    // create stream for file\n    var stream = fs.createReadStream(path);\n    stream.on('error', callback);\n    stream.pipe(this);\n  };", "CodeBleu_score": 30.45305800322961}, {"code": "res.sendFile = function sendFile(path, options, callback)   var next;\n  if (typeof options === 'function') {\n    next = options;\n    options = {};\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string');\n  }\n\n  if (options.root) {\n    path = options.root + path;\n  }\n\n  if (options.headers) {\n    res.writeHead(200, options.headers);\n  }\n\n  if (typeof callback === 'function') {\n    next = callback;\n  }\n\n  fs.createReadStream(path)\n    .on('error', function onError(err) {\n      if (!next) throw err;\n      next(err);\n    })\n    .pipe(res);\n};", "CodeBleu_score": 34.163989303370386}]}
{"instance_id": "24ba2258749d", "generation_result": [{"code": "View.prototype.lookup = function lookup(name)  var path, dir, file;\n  var roots = this.root.length ? this.root : [this.root];\n\n  for (var i = 0; i < roots.length; i++) {\n    path = roots[i];\n    dir = path.split('/').slice(0, -1).join('/');\n    file = path.split('/').slice(-1)[0];\n\n    if ('/' == dir) {\n      if (fs.existsSync(file)) {\n        return file;\n      }\n      continue;\n    }\n\n    if (fs.existsSync(path)) {\n      return path;\n    }\n\n    path = this.resolve(dir, file);\n    if (fs.existsSync(path)) {\n      return path;\n    }\n  }\n};", "CodeBleu_score": 35.53355556049531}, {"code": "View.prototype.lookup = function lookup(name)  var path;\n  var dirs = this.root.concat(this.root);\n  var dirname;\n  var filename;\n  var i = 0;\n  var len = dirs.length;\n\n  // <name>.<engine>\n  var ext = this.ext;\n\n  // <path>/<name>.<engine>\n  var fileName = name;\n  if (ext) {\n    fileName += '.' + ext;\n  }\n\n  while (i < len) {\n    path = dirs[i++];\n    dirname = path + '/' + this.name;\n    filename = dirname + '/' + fileName;\n\n    if (this.exists(filename)) {\n      return filename;\n    }\n\n    // <path>/<name>/index.<engine>\n    filename = dirname + '/index.' + ext;\n    if (this.exists(filename)) {\n      return filename;\n    }\n  }\n\n  // not found\n  return null;\n};\n", "CodeBleu_score": 28.44286744328677}, {"code": "View.prototype.lookup = function lookup(name)  var path;\n  var roots = this.root;\n\n  for (var i = 0; i < roots.length; i++) {\n    var root = roots[i];\n    var loc = path = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    var resolved = this.resolve(dir, file);\n    if (resolved) {\n      return resolved;\n    }\n  }\n};\n", "CodeBleu_score": 55.97472741766825}]}
{"instance_id": "4a3a45242878", "generation_result": [{"code": "module.exports = function query(options)  var opts = options || {};\n  var queryparse = opts.parser || queryparse;\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      req.query = ~req.url.indexOf('?')\n        ? queryparse(req.url.split('?')[1], opts)\n        : {};\n    }\n\n    next();\n  };\n};\n", "CodeBleu_score": 29.827325758029836}, {"code": "module.exports = function query(options)  var opts = options || {};\n  var queryparse = opts.parser || queryparse;\n\n  if (typeof queryparse !== 'function') {\n    throw new TypeError('option `parser` must be a function');\n  }\n\n  var enableProto = opts.enableProto || true;\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      var val = req.url.slice(req.path.length).replace(/^\\?/, '');\n      req.query = queryparse(val, enableProto);\n    }\n\n    next();\n  };\n};\n", "CodeBleu_score": 50.07935402350449}, {"code": "module.exports = function query(options)  var opts = options || {};\n  var queryparse = opts.parser || require('./queryparse');\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      req.query = ~req.url.indexOf('?')\n        ? queryparse(req.url.split('?')[1], opts)\n        : {};\n    }\n\n    next();\n  };\n};", "CodeBleu_score": 31.879786992451564}]}
{"instance_id": "786ae7051b03", "generation_result": [{"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basePath=\"activitypub\" modals={modals}>\n        <DesignSystemApp designSystem={designSystem} className=\"activitypub\">\n          <AppLayout />\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n};\n", "CodeBleu_score": 44.88943569221997}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basePath=\"activitypub\" modals={modals}>\n        <DesignSystemApp designSystem={designSystem} className=\"activitypub\">\n          <Main />\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n};\n", "CodeBleu_score": 45.03846535035467}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basePath=\"activitypub\" modals={modals}>\n        <DesignSystemApp designSystem={designSystem} className=\"activitypub\">\n          <AppLayout>\n            <AppRoutes />\n          </AppLayout>\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n};", "CodeBleu_score": 44.73481897659318}]}
{"instance_id": "8100930f7ce7", "generation_result": [{"code": "const darkMode = () =>  if (\n    localStorage.theme === \"light\" ||\n    (!(\"theme\" in localStorage) &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n  ) {\n    return false;\n  } else {\n    return true;\n  }\n};\n", "CodeBleu_score": 14.007929338270436}, {"code": "const darkMode = () =>  const colorScheme = localStorage.getItem('colorScheme');\n  if (colorScheme === 'light') {\n    return false;\n  } else if (colorScheme === 'dark') {\n    return true;\n  } else {\n    const parentBackgroundColor = window\n      .getComputedStyle(document.body.parentElement, null)\n      .getPropertyValue('background-color');\n    const rgb = parentBackgroundColor.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n    const r = parseInt(rgb[1]);\n    const g = parseInt(rgb[2]);\n    const b = parseInt(rgb[3]);\n    const contrastRatio = (r * 299 + g * 587 + b * 114) / 255000;\n    return contrastRatio < 5;\n  }\n};\n", "CodeBleu_score": 45.391353002567634}, {"code": "const darkMode = () =>  if (window.getComputedStyle(document.body).getPropertyValue('color-scheme') === 'light') {\n    return false;\n  }\n  if (window.getComputedStyle(document.body).getPropertyValue('color-scheme') === 'dark') {\n    return true;\n  }\n  const bgColor = window.getComputedStyle(document.body.parentElement).backgroundColor;\n  const rgb = bgColor.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n  if (rgb) {\n    const brightness = Math.round((parseInt(rgb[1]) * 299 + parseInt(rgb[2]) * 587 + parseInt(rgb[3]) * 114) / 1000);\n    return brightness < 125;\n  }\n  return false;\n};\n", "CodeBleu_score": 34.8436154804552}]}
{"instance_id": "7da55fac8ceb", "generation_result": [{"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>    if (!title || !showCount) {\n        return null;\n    }\n    return (\n        <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-2xl font-bold\">{title}</h2>\n            <span className=\"text-gray-500\">{count}</span>\n        </div>\n    );\n};\n", "CodeBleu_score": 32.91122935194257}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>    if (!title && !showCount) {\n        return null;\n    }\n\n    return (\n        <div className=\"flex items-center justify-between\">\n            {title && <h2 className=\"text-xl font-bold text-gray-900 dark:text-gray-100\">{title}</h2>}\n            {showCount && <span className=\"text-sm text-gray-600 dark:text-gray-400\">{count}</span>}\n        </div>\n    );\n};\n", "CodeBleu_score": 35.30293873388744}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>    if (!title && !showCount) return null;\n    return (\n        <div className=\"content-title\">\n            {title && <h1 className=\"title\">{title}</h1>}\n            {showCount && count && <p className=\"count\">{count}</p>}\n        </div>\n    );\n}\n", "CodeBleu_score": 24.695466230357795}]}
{"instance_id": "1d104e0b7fc7", "generation_result": [{"code": "def union_queryset(*args, base_queryset=None)\n    if not args:\n        raise ValueError(\"At least one queryset must be provided.\")\n    querysets = list(args)\n    if base_queryset is None:\n        base_queryset = querysets[0].model.objects\n    querysets = [qs.order_by(\"pk\") for qs in querysets]\n    union_qs = querysets[0].union(*querysets[1:])\n    ids = union_qs.values_list(\"pk\", flat=True)\n    return base_queryset.filter(id__in=ids)", "CodeBleu_score": 48.41545988828469}, {"code": "def union_queryset(*args, base_queryset=None)\n    if len(args) == 0:\n        raise ValueError(\"At least one queryset must be provided.\")\n    if len(args) == 1:\n        return args[0]\n    if base_queryset is None:\n        base_queryset = args[0].model.objects.all()\n    queryset_ids = base_queryset.order_by().values_list('id', flat=True)\n    for queryset in args:\n        queryset_ids = queryset_ids.union(queryset.order_by().values_list('id', flat=True))\n    return base_queryset.filter(id__in=queryset_ids)\n\n", "CodeBleu_score": 49.361988818517645}, {"code": "def union_queryset(*args, base_queryset=None)\n    if len(args) == 0:\n        raise ValueError(\"At least one queryset must be provided.\")\n    if len(args) == 1:\n        return args[0]\n    if base_queryset is None:\n        base_queryset = args[0].model.objects.all()\n    ordered_querysets = [qs.order_by('pk') for qs in args]\n    combined_queryset = ordered_querysets[0].union(*ordered_querysets[1:])\n    combined_ids = combined_queryset.values_list('pk', flat=True)\n    return base_queryset.filter(pk__in=combined_ids)\n", "CodeBleu_score": 56.07769776054947}]}
{"instance_id": "96fe55f8e114", "generation_result": [{"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n    with translation.override('en'):\n        resource_type = model._meta.verbose_name\n        operation_log = OperationLog.objects.update_or_create(\n            id=ids[0],\n            defaults={\n                'action': action,\n                'resource_type': resource_type,\n                'resource_ids': ids,\n                'detail': detail,\n                'user': self.request.user,\n                'organization': self.request.user.organization\n            }\n        )[0]\n        activity_logs = []\n        for resource_id in ids:\n            activity_log = ActivityLog(\n                organization=self.request.user.organization,\n                resource_id=resource_id,\n                resource_type=resource_type,\n                action=action,\n                detail=detail,\n                user=self.request.user,\n                operation_log=operation_log\n            )\n            activity_logs.append(activity_log)\n        ActivityLog.objects.bulk_create(activity_logs)\n\n", "CodeBleu_score": 44.35433499199056}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n    with translation.override('en'):\n        resource_type = model._meta.verbose_name\n        operation_log, _ = OperationLog.objects.get_or_create(\n            resource_type=resource_type,\n            resource_id=ids[0],\n            action=action,\n            defaults=kwargs\n        )\n        activity_logs = []\n        for id in ids:\n            activity_log = ActivityLog(\n                operation_log=operation_log,\n                resource_id=id,\n                details=detail,\n                organization=self.request.user.organization,\n                organization_id=self.request.user.organization_id,\n            )\n            activity_logs.append(activity_log)\n        ActivityLog.objects.bulk_create(activity_logs)", "CodeBleu_score": 45.58988324121967}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n    with translation.override(\"en\"):\n        model = model or self.model\n        resource_type = model._meta.verbose_name\n        operation_log, _ = OperationLog.objects.update_or_create(\n            action=action,\n            resource_type=resource_type,\n            defaults={\n                \"resource_type\": resource_type,\n                \"action\": action,\n                \"detail\": detail,\n            },\n        )\n        activity_logs = []\n        for id in ids:\n            activity_log = ActivityLog(\n                resource_type=resource_type,\n                resource_id=id,\n                operation_log=operation_log,\n                detail=detail,\n                **kwargs\n            )\n            activity_logs.append(activity_log)\n        ActivityLog.objects.bulk_create(activity_logs)\n", "CodeBleu_score": 54.96772226059596}]}
{"instance_id": "9e851c424f45", "generation_result": [{"code": "def prepare_django_request(self, request)\n    return {\n        'secure': request.is_secure(),\n        'http_host': request.META.get('HTTP_HOST', ''),\n        'script_name': request.META.get('PATH_INFO', ''),\n        'get_data': request.GET.copy(),\n        'post_data': request.POST.copy(),\n    }\n\n", "CodeBleu_score": 42.14302954636561}, {"code": "def prepare_django_request(self, request)\n    return {\n        'secure': request.is_secure(),\n        'http_host': request.get_host(),\n        'script_name': request.META['PATH_INFO'],\n        'get_data': request.GET.copy(),\n        'post_data': request.POST.copy()\n    }\n\n", "CodeBleu_score": 51.111965353358144}, {"code": "def prepare_django_request(self, request)\n    return {\n        \"secure\": request.is_secure(),\n        \"http_host\": request.get_host(),\n        \"script_name\": request.path,\n        \"get_data\": request.GET.copy(),\n        \"post_data\": request.POST.copy(),\n    }\n\n", "CodeBleu_score": 34.59764885366122}]}
{"instance_id": "dcea4bd482c4", "generation_result": [{"code": "function getUserLang()     var lang = navigator.language;\n    if (lang.indexOf('en') != -1) {\n        return 'en-US';\n    } else {\n        return 'zh-CN';\n    }\n}\n", "CodeBleu_score": 35.006307279675916}, {"code": "function getUserLang()   var lang = navigator.language || navigator.userLanguage;\n  if (lang.startsWith('en')) {\n    return 'en-US';\n  } else {\n    return 'zh-CN';\n  }\n}\n", "CodeBleu_score": 32.7158162829524}, {"code": "function getUserLang()     var lang = 'zh-CN';\n    var cookie = document.cookie;\n    if (cookie.indexOf('django_language=en') !== -1) {\n        lang = 'en-US';\n    }\n    return lang;\n}\n", "CodeBleu_score": 39.74716336124517}]}
{"instance_id": "fd6824a005d5", "generation_result": [{"code": "function reloadPage()  setTimeout(function () {\n    location.reload();\n  }, 300);\n}\n", "CodeBleu_score": 30.591591816011654}, {"code": "function reloadPage()    setTimeout(function () {\n        window.location.reload();\n    }, 300);\n}\n", "CodeBleu_score": 60.06711489842229}, {"code": "function reloadPage()  setTimeout(function () {\n    window.location.reload();\n  }, 300);\n}\n", "CodeBleu_score": 57.25715350767124}]}
{"instance_id": "b32d5862b6b1", "generation_result": [{"code": "function fillKey(key)  const filledKey = Buffer.alloc(16);\n  key.copy(filledKey);\n  return filledKey;\n}\n", "CodeBleu_score": 10.486633619212354}, {"code": "function fillKey(key)  const filledKey = Buffer.alloc(16);\n  filledKey.fill(key);\n  return filledKey;\n}\n", "CodeBleu_score": 11.373837476054943}, {"code": "function fillKey(key)    const keyBuffer = Buffer.alloc(16);\n    keyBuffer.fill(key);\n    return keyBuffer;\n}\n", "CodeBleu_score": 10.969104216977927}]}
{"instance_id": "c839d19e0833", "generation_result": [{"code": "function rsaEncrypt(text, pubKey)    if (text === \"\") {\n        return text;\n    }\n    const encrypt = new JSEncrypt();\n    encrypt.setPublicKey(pubKey);\n    return encrypt.encrypt(text);\n}\n", "CodeBleu_score": 57.597622364858616}, {"code": "function rsaEncrypt(text, pubKey)  if (text == '') {\n    return text;\n  }\n  var encrypt = new JSEncrypt();\n  encrypt.setPublicKey(pubKey);\n  return encrypt.encrypt(text);\n}\n", "CodeBleu_score": 52.802591850175105}, {"code": "function rsaEncrypt(text, pubKey)  if (text === \"\") {\n    return text;\n  }\n  let encrypt = new JSEncrypt();\n  encrypt.setPublicKey(pubKey);\n  return encrypt.encrypt(text);\n}\n", "CodeBleu_score": 54.0443530753835}]}
{"instance_id": "c73bc91399b9", "generation_result": [{"code": "function checkAll(id, name)    let checkboxes = document.getElementsByName(name);\n    let master = document.getElementById(id);\n    for (let i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = master.checked;\n    }\n}", "CodeBleu_score": 27.965360526320644}, {"code": "function checkAll(id, name)    var checkboxes = document.getElementsByName(name);\n    var master = document.getElementById(id);\n    for (var i = 0, n = checkboxes.length; i < n; i++) {\n        checkboxes[i].checked = master.checked;\n    }\n}", "CodeBleu_score": 29.79316149440668}, {"code": "function checkAll(id, name)    var checkboxes = document.getElementsByName(name);\n    var master = document.getElementById(id);\n    for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = master.checked;\n    }\n}", "CodeBleu_score": 32.39097728867445}]}
{"instance_id": "5164f2c2d67e", "generation_result": [{"code": "function getCookie(name)    if (document.cookie) {\n        const cookies = document.cookie.split(\";\");\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            if (cookie.startsWith(name + \"=\")) {\n                return decodeURIComponent(cookie.substring(name.length + 1));\n            }\n        }\n    }\n    return null;\n}\n", "CodeBleu_score": 44.030021129202815}, {"code": "function getCookie(name)    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.startsWith(name + '=')) {\n            return decodeURIComponent(cookie.substring(name.length + 1));\n        }\n    }\n    return null;\n}\n", "CodeBleu_score": 30.804905830051453}, {"code": "function getCookie(name)  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n    var cookie = cookies[i].trim();\n    if (cookie.startsWith(name + \"=\")) {\n      return decodeURIComponent(cookie.substring(name.length + 1));\n    }\n  }\n  return null;\n}\n", "CodeBleu_score": 36.914858557450145}]}
{"instance_id": "7ce6dc0f1f24", "generation_result": [{"code": "def post(self, request)\n    image_model = self.get_image_model()\n    image_form = self.get_image_creation_form()\n    if image_form.is_valid():\n        image = image_form.save(commit=False)\n        image.user = request.user\n        image.save()\n        if request.POST.get(\"url\"):\n            image_url = request.POST.get(\"url\")\n            image_name = \"{}.{}\".format(slugify(image.title), image_url.rsplit(\".\", 1)[1].lower())\n            response = request.urlopen(image_url)\n            image.image.save(image_name, ContentFile(response.read()), save=False)\n            if commit:\n                image.save()\n            return HttpResponse(\"OK\")\n        else:\n            return render(request, \"images/image/create.html\", {\"section\": \"images\", \"form\": image_form})\n\n", "CodeBleu_score": 37.438348152427224}, {"code": "def post(self, request)\n    image_model = ImageModel.objects.get(\n        id=self.kwargs[\"image_id\"])\n    creation_form = ImageCreationForm(request.POST, request.FILES)\n    if creation_form.is_valid():\n        image = creation_form.save(commit=False)\n        image.image_model = image_model\n        image.save()\n        duplicate = image_model.check_for_duplicate(image.image)\n        if duplicate:\n            return render(request, 'image_model/duplicate.html', {'duplicate': duplicate})\n        if 'select_format' in request.POST:\n            return render(request, 'image_model/select_format.html', {'image': image})\n        else:\n            return redirect('image_model:image_detail', pk=image.pk)\n    else:\n        return render(request, 'image_model/image_create.html', {'form': creation_form})\n\n", "CodeBleu_score": 29.59414622597058}, {"code": "def post(self, request)\n    image_model = self.get_image_model()\n    form = self.get_form(image_model=image_model)\n    if form.is_valid():\n        image = form.save()\n        if self.is_duplicate(image):\n            return self.duplicate_response(image)\n        if self.request.GET.get('select_format'):\n            return self.select_format_response(image)\n        return self.create_update_response(image)\n    return self.multiple_response(self.serialize_form_errors(form))", "CodeBleu_score": 20.321684614899088}]}
{"instance_id": "2ee66e343cd1", "generation_result": [{"code": "def _annotate_queryset(self, pages)\n    from wagtail.core.models import Page\n    from wagtail.core.query import PageQuerySet\n    from wagtail.models import Site\n    from wagtail.workflow.models import WorkflowState\n    pages = pages.prefetch_related(\"content_type\", \"live_revision\", \"alias_of\", \"alias_of__content_type\", \"alias_of__live_revision\")\n    if self.user_perms.can_explore():\n        pages = pages.filter(self.user_perms.explorable_pages_conditions())\n    pages = pages.defer_streamfields()\n    if self.user_perms.workflow_supported():\n        pages = pages.prefetch_related(Prefetch(\"workflow_states\", queryset=WorkflowState.objects.select_related(\"workflow\")))\n    pages = pages.annotate(is_site_root=Case(When(depth=1, then=True), default=False, output_field=BooleanField()))\n    pages = pages.annotate(is_scheduled=Case(When(go_live_at__isnull=False, go_live_at__gt=timezone.now(), then=True), default=False, output_field=BooleanField()))\n    return pages\n\n", "CodeBleu_score": 43.07828224030194}, {"code": "def _annotate_queryset(self, pages)\n    pages = pages.prefetch_related(\"content_type\", \"site_root\").defer_streamfields()\n    if self.request.user.has_perm(\"wagtailadmin.access_admin\"):\n        pages = pages.filter(live=True)\n    else:\n        pages = pages.filter(live=True, show_in_menus=True)\n    if self.request.user.has_perm(\"wagtailcore.view_all_pages\"):\n        pages = pages.filter(Q(owner=self.request.user) | Q(group__in=self.request.user.groups.all()))\n    elif self.request.user.has_perm(\"wagtailcore.view_pages_you_own\"):\n        pages = pages.filter(owner=self.request.user)\n    elif self.request.user.has_perm(\"wagtailcore.view_pages_in_moderation\"):\n        pages = pages.filter(Q(owner=self.request.user) | Q(group__in=self.request.user.groups.all())).filter(Q(live_revision__isnull=True) | Q(live_revision__approved_go_live_at__lte=timezone.now())).distinct()\n    else:\n        pages = pages.none()\n    if WAGTAIL_WORKFLOW_ENABLED:\n        pages = pages.prefetch_workflow_states()\n    pages = pages.annotate(site_root_state=RootSiteState(site_root=OuterRef(\"site_root\")))\n    pages = pages.annotate(approved_schedule=ApprovedSchedule(page=OuterRef(\"pk\")))\n    return pages\n\n", "CodeBleu_score": 46.15322848476393}, {"code": "def _annotate_queryset(self, pages)\n    pages = pages.prefetch_related(\"content_type\", \"site_root\")\n    if WORKFLOW_ENABLED:\n        pages = pages.prefetch_related(\"workflow_states\")\n    pages = pages.defer_streamfield_from_instance(self.request.user)\n    pages = self._annotate_site_root_state(pages)\n    pages = self._annotate_approved_schedule(pages)\n    return pages\n\n", "CodeBleu_score": 33.80625138790888}]}
{"instance_id": "970bf123b037", "generation_result": [{"code": "def search_queryset(self, queryset)\n    if self.is_searching:\n        queryset = self.filter_queryset(queryset)\n        if self.is_ordered:\n            return queryset.order_by(*self.ordering_fields)\n        return queryset\n    return queryset\n\n", "CodeBleu_score": 41.458212313889284}, {"code": "def search_queryset(self, queryset)\n    if self.is_searching:\n        queryset = self.filter_queryset(queryset)\n        if not self.is_ordered:\n            queryset = queryset.order_by(self.get_ordering())\n    return queryset", "CodeBleu_score": 55.28297125451551}, {"code": "def search_queryset(self, queryset)\n    if self.is_searching:\n        queryset = self.filter_queryset(queryset)\n        if not self.is_ordered:\n            queryset = queryset.order_by('-relevance')\n    return queryset\n\n", "CodeBleu_score": 53.8249389912481}]}
{"instance_id": "b2058bd51dfa", "generation_result": [{"code": "def user_can_access_snippets(user)\n    from django.apps import apps\n\n    for model in apps.get_models():\n        if model._meta.label_lower.startswith(\"snippets.\"):\n            if user.has_perm(f\"{model._meta.app_label}.add_{model._meta.model_name}\") or user.has_perm(\n                f\"{model._meta.app_label}.change_{model._meta.model_name}\"\n            ) or user.has_perm(f\"{model._meta.app_label}.delete_{model._meta.model_name}\") or user.has_perm(\n                f\"{model._meta.app_label}.view_{model._meta.model_name}\"\n            ):\n                return True\n\n    return False", "CodeBleu_score": 48.08081894933631}, {"code": "def user_can_access_snippets(user)\n    from django.apps import apps\n    from django.contrib.auth.models import Permission\n\n    snippet_models = [\n        model for model in apps.get_models() if model.__name__.endswith(\"Snippet\")\n    ]\n\n    for model in snippet_models:\n        permissions = Permission.objects.filter(content_type__app_label=model._meta.app_label,\n                                                content_type__model=model._meta.model_name)\n\n        for permission in permissions:\n            if user.has_perm(f\"{permission.content_type.app_label}.{permission.codename}\"):\n                return True\n\n    return False", "CodeBleu_score": 28.967328782270197}, {"code": "def user_can_access_snippets(user)\n    from django.apps import apps\n    from django.contrib.auth.models import Permission\n\n    snippet_models = [\n        model for model in apps.get_models() if model.__name__.endswith(\"Snippet\")\n    ]\n    for model in snippet_models:\n        permissions = Permission.objects.filter(content_type__model=model.__name__)\n        for permission in permissions:\n            if user.has_perm(\"{}.{}\".format(model._meta.app_label, permission.codename)):\n                return True\n    return False\n\n", "CodeBleu_score": 30.649907875033694}]}
{"instance_id": "bf09fb693900", "generation_result": [{"code": "def get_auth_backends(self, request)\n    backends = []\n    for backend in settings.AUTHENTICATION_BACKENDS:\n        backend_cls = load_backend(backend)\n        backend_name = backend_cls.name\n        if backend_name == \"saml\":\n            for idp in settings.SAML_IDPS:\n                display_name = idp.get(\"display_name\", backend_name)\n                if idp.get(\"entity_id\"):\n                    display_name += f\" ({idp['entity_id']})\"\n                params = {\"idp\": idp[\"entity_id\"]}\n                if \"next\" in request.GET:\n                    params[\"next\"] = request.GET[\"next\"]\n                backends.append(\n                    {\n                        \"name\": display_name,\n                        \"url\": reverse(f\"{self.url_namespace}:saml-login\", kwargs=params),\n                    }\n                )\n        else:\n            params = {}\n            if \"next\" in request.GET:\n                params[\"next\"] = request.GET[\"next\"]\n            backends.append(\n                {\n                    \"name\": backend_name,\n                    \"url\": reverse(f\"{self.url_namespace}:{backend_name}-login\", kwargs=params),\n                }\n            )\n    return backends", "CodeBleu_score": 29.861601859689312}, {"code": "def get_auth_backends(self, request)\n    auth_backends = []\n    for backend in settings.AUTHENTICATION_BACKENDS:\n        try:\n            auth_class = import_string(backend)\n            auth_backend = auth_class()\n        except ImportError:\n            auth_backend = None\n        if hasattr(auth_backend, 'get_login_url'):\n            params = {}\n            if 'next' in request.GET:\n                params['next'] = request.GET['next']\n            auth_backends.append({\n                'name': auth_backend.name,\n                'display_name': auth_backend.display_name,\n                'login_url': auth_backend.get_login_url(request, **params),\n            })\n        elif backend == 'django_saml.backends.SamlBackend':\n            idps = settings.SAML_IDPS\n            for idp in idps:\n                params = {'idp': idp}\n                if 'next' in request.GET:\n                    params['next'] = request.GET['next']\n                auth_backends.append({\n                    'name': idp,\n                    'display_name': idps[idp].get('name', idp),\n                    'login_url': reverse('saml_login', kwargs=params),\n                })\n    return auth_backends\n\n", "CodeBleu_score": 31.655514515974748}, {"code": "def get_auth_backends(self, request)\n    backends = []\n    for backend in settings.AUTHENTICATION_BACKENDS:\n        if backend.endswith('ModelBackend'):\n            continue\n        if backend.endswith('RemoteUserBackend'):\n            continue\n        if backend.endswith('CASBackend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):\n            continue\n        if backend.endswith('SAML2Backend'):", "CodeBleu_score": 10.345036838318267}]}
{"instance_id": "ea59163b25cc", "generation_result": [{"code": "def as_sql(self, qn, connection)\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s CONTAINS %s' % (lhs, rhs), params", "CodeBleu_score": 61.27161562210526}, {"code": "def as_sql(self, qn, connection)\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s :: inet %s' % (lhs, self.get_rhs_op(qn, connection)), params", "CodeBleu_score": 61.45426908401477}, {"code": "def as_sql(self, qn, connection)\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s @> %s' % (lhs, rhs), params", "CodeBleu_score": 61.022275663242574}]}
{"instance_id": "6658ddec6820", "generation_result": [{"code": "def get_model_urls(app_label, model_name)\n    from django.urls import URLPattern, URLResolver\n    from django.views import View\n    from django.core.exceptions import ImproperlyConfigured\n    from django.utils.module_loading import import_string\n\n    def _get_view_class(view):\n        if isinstance(view, type) and issubclass(view, View):\n            return view\n        elif callable(view):\n            return view\n        elif isinstance(view, str):\n            return import_string(view)\n        else:\n            raise ImproperlyConfigured(\n                f\"{view} is not a valid view. Views should be classes or functions.\"\n            )\n\n    try:\n        views = import_string(f\"{app_label}.views\")\n    except ImportError:\n        return []\n\n    urlpatterns = []\n    for view_name, view_config in views.items():\n        view_class = _get_view_class(view_config[\"view\"])\n        path = view_config.get(\"path\", f\"/{view_name}/\")\n        name = view_config.get(\"name\", f\"{app_label}_{model_name}_{view_name}\")\n        kwargs = view_config.get(\"kwargs\", {})\n\n        if isinstance(view_class, type) and issubclass(view_class, View):\n            view_func = view_class.as_view()\n        else:\n            view_func = view_class\n\n        urlpatterns.append(URLPattern(path, view_func, kwargs, name))\n\n    return urlpatterns\n\n", "CodeBleu_score": 32.9738808672027}, {"code": "def get_model_urls(app_label, model_name)\n    try:\n        from django.urls import NoReverseMatch, reverse\n    except ImportError:\n        from django.core.urlresolvers import NoReverseMatch, reverse\n\n    try:\n        from django.apps import apps\n        get_model = apps.get_model\n    except ImportError:\n        from django.db.models.loading import get_model\n\n    model = get_model(app_label, model_name)\n    if model is None:\n        return []\n\n    model_admin = model._meta.app_label == app_label and model._meta.model_name == model_name\n    if model_admin:\n        try:\n            model_admin = admin.site._registry[model]\n        except KeyError:\n            return []\n\n    model_admin_views = getattr(model_admin, 'get_model_admin_views', [])\n    if not model_admin_views:\n        return []\n\n    urls = []\n    for view_config in model_admin_views:\n        view = view_config.get('view', None)\n        if view is None:\n            continue\n\n        try:\n            view = import_string(view)\n        except ImportError:\n            continue\n\n        if isinstance(view, type) and issubclass(view, View):\n            view = view.as_view()\n        elif not callable(view):\n            continue\n\n        url_name = view_config.get('name', None)\n        url_kwargs = view_config.get('kwargs', {})\n        try:\n            url = reverse(url_name, kwargs=url_kwargs)\n        except NoReverseMatch:\n            continue\n\n        urls.append(url)\n\n    return urls\n\n", "CodeBleu_score": 27.197927563763024}, {"code": "def get_model_urls(app_label, model_name)\n    from django.urls import URLPattern, URLResolver\n\n    from django.apps import apps\n\n    def get_url_patterns(patterns, base_url=\"\"):\n        url_patterns = []\n        for pattern in patterns:\n            if isinstance(pattern, URLResolver):\n                url_patterns.extend(get_url_patterns(pattern.url_patterns, base_url + pattern.pattern.regex.pattern))\n            elif isinstance(pattern, URLPattern):\n                url_patterns.append((base_url + pattern.pattern.regex.pattern, pattern.callback))\n        return url_patterns\n\n    model = apps.get_model(app_label, model_name)\n    view_configs = model._meta.view_configs\n\n    if not view_configs:\n        return []\n\n    urls = []\n    for view_config in view_configs:\n        view_class = view_config.view_class\n        if isinstance(view_class, str):\n            view_module, view_name = view_class.rsplit(\".\", 1)\n            view_class = getattr(__import__(view_module, fromlist=[view_name]), view_name)\n        else:\n            view_name = view_class.__name__\n\n        url_patterns = get_url_patterns(view_class.get_urls())\n        for url_pattern in url_patterns:\n            url, callback = url_pattern\n            urls.append((url, callback, view_name))\n\n    return urls\n\n", "CodeBleu_score": 24.202907648258293}]}
{"instance_id": "9f4c69dfe312", "generation_result": [{"code": "def run_validators(instance, validators)\n    request = get_request()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_class = import_string(validator)\n        elif isinstance(validator, dict):\n            validator_class = CustomValidator(**validator)\n        else:\n            raise ImproperlyConfigured(\n                \"Validators should be either a string or a dictionary.\"\n            )\n        if not issubclass(validator_class, CustomValidator):\n            raise ImproperlyConfigured(\n                \"Validators should be a subclass of CustomValidator.\"\n            )\n        validator_class.apply(instance, request)", "CodeBleu_score": 31.055440597376837}, {"code": "def run_validators(instance, validators)\n    request = get_current_request()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_class = import_string(validator)\n        elif isinstance(validator, dict):\n            validator_class = CustomValidator(**validator)\n        else:\n            raise ImproperlyConfigured(\n                f\"{validator} is not a valid validator.\"\n            )\n        if not issubclass(validator_class, CustomValidator):\n            raise ImproperlyConfigured(\n                f\"{validator_class} is not a subclass of CustomValidator.\"\n            )\n        validator_class.apply(instance, request)", "CodeBleu_score": 30.50119532121427}, {"code": "def run_validators(instance, validators)\n    request = get_current_request()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_class = import_string(validator)\n            validator_instance = validator_class()\n        elif isinstance(validator, dict):\n            validator_instance = CustomValidator(**validator)\n        else:\n            raise ImproperlyConfigured(\"Validators must be either strings or dictionaries.\")\n        validator_instance.apply_to_instance(instance, request)", "CodeBleu_score": 32.36305683388813}]}
{"instance_id": "0b2ff7fe76f6", "generation_result": [{"code": "export function playMedia(destiny)    const panel = document.querySelector(destiny);\n    if (panel) {\n        const video = panel.querySelector('video[data-autoplay]');\n        const audio = panel.querySelector('audio[data-autoplay]');\n        if (video && typeof video.play === 'function') {\n            video.play();\n        }\n        if (audio && typeof audio.play === 'function') {\n            audio.play();\n        }\n        const youtubeIframes = panel.querySelectorAll('iframe[data-autoplay]');\n        youtubeIframes.forEach((iframe) => {\n            iframe.onload = () => {\n                playYoutube(iframe);\n            };\n        });\n    }\n}", "CodeBleu_score": 39.866831934712685}, {"code": "export function playMedia(destiny)  const panel = document.querySelector(destiny);\n  if (!panel) return;\n  const media = panel.querySelectorAll('[data-autoplay]');\n  media.forEach((element) => {\n    if (element.tagName === 'VIDEO' || element.tagName === 'AUDIO') {\n      element.play();\n    } else if (element.tagName === 'IFRAME') {\n      const url = element.getAttribute('data-autoplay');\n      if (url.includes('youtube')) {\n        playYoutube(element);\n        element.onload = () => playYoutube(element);\n      }\n    }\n  });\n}\n", "CodeBleu_score": 41.10445378861984}, {"code": "export function playMedia(destiny)  const panel = document.querySelector(destiny);\n\n  if (panel) {\n    const videoElements = panel.querySelectorAll(\"video[data-autoplay]\");\n    const audioElements = panel.querySelectorAll(\"audio[data-autoplay]\");\n\n    videoElements.forEach((video) => {\n      if (typeof video.play === \"function\") {\n        video.play();\n      }\n    });\n\n    audioElements.forEach((audio) => {\n      if (typeof audio.play === \"function\") {\n        audio.play();\n      }\n    });\n\n    const youtubeIframes = panel.querySelectorAll(\n      \"iframe[data-autoplay][src^='https://www.youtube.com/']\"\n    );\n\n    youtubeIframes.forEach((iframe) => {\n      iframe.onload = () => {\n        playYoutube(iframe);\n      };\n    });\n  }\n}\n", "CodeBleu_score": 36.83582631773395}]}
{"instance_id": "12d28719c647", "generation_result": [{"code": "export function stopMedia(destiny)  const panel = getSlideOrSection(destiny);\n  const videoElements = panel.querySelectorAll(\"video\");\n  const audioElements = panel.querySelectorAll(\"audio\");\n  const iframes = panel.querySelectorAll(\"iframe\");\n\n  // Stop HTML5 video and audio elements\n  videoElements.forEach((video) => {\n    if (!video.hasAttribute(\"data-keepplaying\")) {\n      video.pause();\n    }\n  });\n\n  audioElements.forEach((audio) => {\n    if (!audio.hasAttribute(\"data-keepplaying\")) {\n      audio.pause();\n    }\n  });\n\n  // Stop YouTube videos\n  iframes.forEach((iframe) => {\n    const iframeSrc = iframe.src;\n    if (iframeSrc.includes(\"youtube.com/embed/\") && !iframe.hasAttribute(\"data-keepplaying\")) {\n      const videoId = iframeSrc.split(\"/embed/\")[1];\n      iframe.contentWindow.postMessage(`{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"${videoId}\"}`, \"*\");\n    }\n  });\n}", "CodeBleu_score": 36.34051183335971}, {"code": "export function stopMedia(destiny)  const panel = getSlideOrSection(destiny);\n  const iframes = panel.querySelectorAll(\"iframe\");\n  const videos = panel.querySelectorAll(\"video\");\n  const audios = panel.querySelectorAll(\"audio\");\n\n  iframes.forEach((iframe) => {\n    if (iframe.getAttribute(\"data-keepplaying\") !== \"true\") {\n      iframe.contentWindow.postMessage(\n        '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\n        \"*\"\n      );\n    }\n  });\n\n  videos.forEach((video) => {\n    if (video.getAttribute(\"data-keepplaying\") !== \"true\") {\n      video.pause();\n    }\n  });\n\n  audios.forEach((audio) => {\n    if (audio.getAttribute(\"data-keepplaying\") !== \"true\") {\n      audio.pause();\n    }\n  });\n}\n", "CodeBleu_score": 37.903558219810385}, {"code": "export function stopMedia(destiny)  const panel = getSlideOrSection(destiny);\n  const iframes = panel.querySelectorAll('iframe');\n  const videos = panel.querySelectorAll('video');\n  const audios = panel.querySelectorAll('audio');\n\n  iframes.forEach((iframe) => {\n    if (!iframe.hasAttribute('data-keepplaying')) {\n      iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n    }\n  });\n\n  videos.forEach((video) => {\n    if (!video.hasAttribute('data-keepplaying')) {\n      video.pause();\n    }\n  });\n\n  audios.forEach((audio) => {\n    if (!audio.hasAttribute('data-keepplaying')) {\n      audio.pause();\n    }\n  });\n}\n", "CodeBleu_score": 40.01330547346076}]}
{"instance_id": "e0d58d76f87e", "generation_result": [{"code": "export function createSlideArrows(section)  const prevArrow = document.createElement('div');\n  prevArrow.classList.add('arrow', 'arrow--left', 'js-slider-prev');\n  prevArrow.innerHTML = arrowHTML;\n  section.slider.prepend(prevArrow);\n\n  const nextArrow = document.createElement('div');\n  nextArrow.classList.add('arrow', 'arrow--right', 'js-slider-next');\n  nextArrow.innerHTML = arrowHTML;\n  section.slider.append(nextArrow);\n\n  const arrows = section.slider.querySelectorAll('.arrow');\n  const { arrowsColor } = section.config;\n\n  if (arrowsColor) {\n    arrows.forEach((arrow) => {\n      arrow.style.fill = arrowsColor;\n    });\n  }\n\n  if (!section.config.horizontalLoop) {\n    section.slider.querySelector('.js-slider-prev').style.display = 'none';\n  }\n}\n", "CodeBleu_score": 22.27601962035565}, {"code": "export function createSlideArrows(section)  const { slideWrapper, slideList, slideConfig } = section;\n  const { arrowColor, horizontalLoop } = slideConfig;\n\n  const arrowTemplate = (direction) => `\n    <div class=\"slide-arrow slide-arrow--${direction} ${\n    arrowColor ? `slide-arrow--${arrowColor}` : \"\"\n  }\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      </svg>\n    </div>\n  `;\n\n  const arrowPrev = arrowTemplate(\"prev\");\n  const arrowNext = arrowTemplate(\"next\");\n\n  slideWrapper.insertAdjacentHTML(\"beforeend\", arrowPrev);\n  slideWrapper.insertAdjacentHTML(\"beforeend\", arrowNext);\n\n  const arrowPrevElement = slideWrapper.querySelector(\".slide-arrow--prev\");\n  const arrowNextElement = slideWrapper.querySelector(\".slide-arrow--next\");\n\n  arrowPrevElement.addEventListener(\"click\", () => {\n    slideList.prev();\n  });\n\n  arrowNextElement.addEventListener(\"click\", () => {\n    slideList.next();\n  });\n\n  if (!horizontalLoop) {\n    arrowPrevElement.style.display = \"none\";\n  }\n}", "CodeBleu_score": 23.211928542017045}, {"code": "export function createSlideArrows(section)  const {\n    slideWrapper,\n    slideConfig: {\n      horizontalLoop,\n      arrowColor,\n      arrowSize,\n      arrowStyle,\n      arrowPrev,\n      arrowNext,\n    },\n  } = section;\n\n  const arrowPrevTemplate = document.querySelector(arrowPrev);\n  const arrowNextTemplate = document.querySelector(arrowNext);\n\n  const arrowPrevClone = arrowPrevTemplate.cloneNode(true);\n  const arrowNextClone = arrowNextTemplate.cloneNode(true);\n\n  arrowPrevClone.classList.add('slide-prev');\n  arrowNextClone.classList.add('slide-next');\n\n  arrowPrevClone.style.display = horizontalLoop ? 'block' : 'none';\n\n  arrowPrevClone.style.color = arrowColor;\n  arrowNextClone.style.color = arrowColor;\n\n  arrowPrevClone.style.fontSize = arrowSize;\n  arrowNextClone.style.fontSize = arrowSize;\n\n  arrowPrevClone.style.fontFamily = arrowStyle;\n  arrowNextClone.style.fontFamily = arrowStyle;\n\n  slideWrapper.append(arrowPrevClone);\n  slideWrapper.append(arrowNextClone);\n}", "CodeBleu_score": 26.776694687078574}]}
{"instance_id": "09898985b216", "generation_result": [{"code": "function slideArrowHandler()  const arrow = this;\n  const section = arrow.closest(\"section\");\n  const isPrev = arrow.classList.contains(SLIDES_PREV);\n\n  if (isPrev && !state.leftScroll) {\n    state.leftScroll = true;\n    section.dispatchEvent(moveSlideLeft);\n  }\n\n  if (!isPrev && !state.rightScroll) {\n    state.rightScroll = true;\n    section.dispatchEvent(moveSlideRight);\n  }\n}\n", "CodeBleu_score": 29.609845916285366}, {"code": "function slideArrowHandler()  const arrow = $(this);\n  const section = arrow.closest(`.${SLIDES_SECTION}`);\n  const prev = arrow.hasClass(SLIDES_PREV);\n  const state = store.getState();\n  const {\n    slideIndex,\n    allowSlideLeft,\n    allowSlideRight,\n    slideDirection,\n    slideSpeed,\n    slidesToShow,\n    slidesToScroll,\n  } = state;\n  const slideCount = section.find(`.${SLIDES_SLIDE}`).length;\n\n  if (prev && allowSlideLeft) {\n    const newIndex = slideIndex - slidesToScroll;\n    const newSlideIndex = newIndex < 0 ? 0 : newIndex;\n    store.dispatch({\n      type: SLIDES_MOVE_LEFT,\n      payload: {\n        slideIndex: newSlideIndex,\n        slideDirection,\n        slideSpeed,\n        slidesToShow,\n        slidesToScroll,\n        slideCount,\n      },\n    });\n  } else if (!prev && allowSlideRight) {\n    const newIndex = slideIndex + slidesToScroll;\n    const newSlideIndex = newIndex > slideCount - slidesToShow ? slideCount - slidesToShow : newIndex;\n    store.dispatch({\n      type: SLIDES_MOVE_RIGHT,\n      payload: {\n        slideIndex: newSlideIndex,\n        slideDirection,\n        slideSpeed,\n        slidesToShow,\n        slidesToScroll,\n        slideCount,\n      },\n    });\n  }\n}\n", "CodeBleu_score": 35.39673062619807}, {"code": "function slideArrowHandler()  const arrow = this;\n  const section = arrow.closest(\"section\");\n  const isLeft = arrow.classList.contains(SLIDES_PREV);\n  const isRight = arrow.classList.contains(SLIDES_NEXT);\n  const isAllowed = isLeft ? state.leftScrollAllowed : isRight ? state.rightScrollAllowed : false;\n  if (isAllowed) {\n    const newState = {\n      ...state,\n      currentSlide: isLeft ? state.currentSlide - 1 : isRight ? state.currentSlide + 1 : state.currentSlide,\n      leftScrollAllowed: isLeft ? state.currentSlide > 0 : state.leftScrollAllowed,\n      rightScrollAllowed: isRight ? state.currentSlide < state.totalSlides - 1 : state.rightScrollAllowed,\n    };\n    updateState(newState);\n    triggerEvent(isLeft ? \"moveSlideLeft\" : \"moveSlideRight\", section);\n  }\n}\n", "CodeBleu_score": 28.07195130557114}]}
{"instance_id": "69ef3030fb15", "generation_result": [{"code": "export function addSlidesNavigation(section)  const {\n    slides,\n    slidesNavigation,\n    slidesNavigationPosition,\n    slidesNavigationContainer,\n    slidesNavigationBullet,\n    slidesNavigationBulletActive,\n    slidesNavigationBulletActiveClass,\n  } = section.dataset;\n\n  if (slidesNavigation === 'true') {\n    const slidesNavigationContainerElement = document.createElement('div');\n    slidesNavigationContainerElement.classList.add(slidesNavigationContainer);\n    section.appendChild(slidesNavigationContainerElement);\n\n    for (let i = 0; i < slides; i++) {\n      const slidesNavigationBulletElement = document.createElement('div');\n      slidesNavigationBulletElement.classList.add(slidesNavigationBullet);\n      if (i === 0) {\n        slidesNavigationBulletElement.classList.add(slidesNavigationBulletActive);\n        slidesNavigationBulletElement.classList.add(slidesNavigationBulletActiveClass);\n      }\n      slidesNavigationContainerElement.appendChild(slidesNavigationBulletElement);\n    }\n\n    if (slidesNavigationPosition === 'center') {\n      slidesNavigationContainerElement.style.left = `${section.offsetWidth / 2 - slidesNavigationContainerElement.offsetWidth / 2}px`;\n    }\n  }\n}", "CodeBleu_score": 22.833027247204985}, {"code": "export function addSlidesNavigation(section)    const navigation = document.createElement('div');\n    navigation.classList.add('slides-navigation');\n    navigation.classList.add(section.dataset.slidesNavigationPosition);\n    section.append(navigation);\n\n    const slides = section.querySelectorAll('.slide');\n\n    slides.forEach((slide, index) => {\n        const bullet = document.createElement('div');\n        bullet.classList.add('bullet');\n        bullet.addEventListener('click', () => {\n            section.dataset.slideActive = index;\n            updateSlidesNavigation(section);\n        });\n        navigation.append(bullet);\n    });\n\n    updateSlidesNavigation(section);\n}\n", "CodeBleu_score": 22.377220739750037}, {"code": "export function addSlidesNavigation(section)  const slides = section.querySelectorAll('.slide');\n  const slidesNavigation = document.createElement('div');\n  slidesNavigation.classList.add('slides-navigation');\n  slidesNavigation.classList.add('slides-navigation-bottom');\n  section.appendChild(slidesNavigation);\n  const slidesNavigationBullets = document.createElement('div');\n  slidesNavigationBullets.classList.add('slides-navigation-bullets');\n  slidesNavigation.appendChild(slidesNavigationBullets);\n  const slidesNavigationBulletsWrapper = document.createElement('div');\n  slidesNavigationBulletsWrapper.classList.add('slides-navigation-bullets-wrapper');\n  slidesNavigationBullets.appendChild(slidesNavigationBulletsWrapper);\n  slides.forEach((slide, index) => {\n    const slideBullet = document.createElement('div');\n    slideBullet.classList.add('slides-navigation-bullet');\n    slideBullet.classList.add('slides-navigation-bullet-default');\n    slideBullet.addEventListener('click', () => {\n      section.style.setProperty('--active-slide', index);\n    });\n    slidesNavigationBulletsWrapper.appendChild(slideBullet);\n  });\n  slidesNavigationBulletsWrapper.style.width = `${slides.length * 100}%`;\n  slidesNavigationBulletsWrapper.style.transform = `translateX(-${section.style.getPropertyValue('--active-slide')}00%)`;\n  slidesNavigationBulletsWrapper.style.transition = 'transform 0.5s';\n  slidesNavigationBulletsWrapper.style.marginLeft = `${section.style.getPropertyValue('--active-slide')}00%`;\n  slidesNavigationBulletsWrapper.style.transition = 'margin-left 0.5s';\n  const slidesNavigationBulletsActive = document.createElement('div');\n  slidesNavigationBulletsActive.classList.add('slides-navigation-bullet');\n  slidesNavigationBulletsActive.classList.add('slides-navigation-bullet-active');\n  slidesNavigationBulletsWrapper.appendChild", "CodeBleu_score": 18.78839070120764}]}
{"instance_id": "d86cd1fd918a", "generation_result": [{"code": "function menuItemsHandler(e)    if (this.scrollTrigger === \"menu\") {\n        e.preventDefault();\n        this.emit(\"onMenuClick\", this.anchors[e.target.dataset.anchor]);\n    }\n}\n", "CodeBleu_score": 10.098681464571932}, {"code": "function menuItemsHandler(e)  this.scrollTrigger = 'menu';\n  if (!this.menu || this.anchorsLocked || !this.anchors) {\n    e.preventDefault();\n    this.$emit('onMenuClick', this.anchors[e.target.getAttribute('href').replace('#', '')]);\n  }\n}\n", "CodeBleu_score": 16.69348121359959}, {"code": "function menuItemsHandler(e)    this.setState({\n        scrollTrigger: 'menu'\n    });\n\n    if (!this.menu || this.anchorsLocked || !this.anchors) {\n        e.preventDefault();\n        this.emit('onMenuClick', this.anchors[e.target.dataset.anchor]);\n    }\n}\n", "CodeBleu_score": 19.222923722892908}]}
{"instance_id": "19fb16a46144", "generation_result": [{"code": "export function setScrolling(element, val)  if (element.classList.contains(SLIDES_WRAPPER)) {\n    element.scrollLeft = val;\n  } else {\n    element.scrollTo({\n      top: val,\n      behavior: 'smooth',\n    });\n  }\n}", "CodeBleu_score": 27.603372962124617}, {"code": "export function setScrolling(element, val)    const {\n        autoScrolling,\n        scrollbar,\n        slidesWrapper,\n        slides,\n        wrapperWidth,\n        wrapperHeight,\n        slideWidth,\n        slideHeight,\n    } = this.options;\n    if (autoScrolling && !scrollbar) {\n        if (element !== window && slidesWrapper) {\n            element.scrollLeft = val;\n        }\n        else {\n            element.scrollTo(0, val);\n        }\n    }\n    else {\n        if (element !== window && slidesWrapper) {\n            element.style.top = `${val}px`;\n        }\n        else {\n            element.scrollTo(0, val);\n        }\n    }\n}", "CodeBleu_score": 46.58930450832723}, {"code": "export function setScrolling(element, val)  const {\n    autoScrolling,\n    scrollbar,\n    slidesWrapper,\n  } = this.options;\n\n  if (autoScrolling && !scrollbar) {\n    if (element !== this.wrapper && !slidesWrapper) {\n      element.scrollLeft = val;\n    } else {\n      element.scrollTo(val, 0);\n    }\n  } else {\n    element.style.top = `${val}px`;\n  }\n}", "CodeBleu_score": 36.709413779997156}]}
{"instance_id": "09a10e1f1af9", "generation_result": [{"code": "function activateMenuElement(name)  const menuOptions = document.querySelectorAll('.menu-options');\n  const menuOption = document.querySelector(`[data-menuanchor=\"${name}\"]`);\n  if (!menuOptions || !menuOption) return;\n\n  menuOptions.forEach((option) => {\n    option.classList.remove('active');\n  });\n\n  menuOption.classList.add('active');\n}\n", "CodeBleu_score": 22.423699804877636}, {"code": "function activateMenuElement(name)  const menuOptions = document.querySelectorAll(\".menu-option\");\n  if (menuOptions.length > 0) {\n    menuOptions.forEach((option) => {\n      option.classList.remove(\"active\");\n      if (option.dataset.menuanchor === name) {\n        option.classList.add(\"active\");\n      }\n    });\n  }\n}\n", "CodeBleu_score": 27.601709516359907}, {"code": "function activateMenuElement(name)    if (menuOptions && menuOptions.length > 0) {\n        menuOptions.forEach(element => {\n            if (element.classList.contains('active')) {\n                element.classList.remove('active');\n            }\n            if (element.dataset.menuanchor === name) {\n                element.classList.add('active');\n            }\n        });\n    }\n}\n", "CodeBleu_score": 46.67837029178587}]}
{"instance_id": "4556a956fd7c", "generation_result": [{"code": "export function lazyLoadOthers()    // Check if lazy loading is enabled\n    if (!this.lazyLoad) {\n        return;\n    }\n    // Check if there are any auto-height sections\n    if (this.sections.some((section) => section.autoHeight)) {\n        // Check if the responsive mode is active with responsive auto-height sections\n        if (this.responsive &&\n            this.responsive.some((responsive) => responsive.autoHeight)) {\n            // Get the active section index\n            const activeSectionIndex = this.sections.findIndex((section) => section.isActive);\n            // Get the first section index that is not active but is in the viewport\n            const firstSectionIndex = this.sections.findIndex((section) => !section.isActive && section.isInViewport);\n            // If there is a section that is not active but is in the viewport\n            if (firstSectionIndex !== -1) {\n                // Get the first section that is not active but is in the viewport\n                const firstSection = this.sections[firstSectionIndex];\n                // If the first section is not the active section\n                if (firstSectionIndex !== activeSectionIndex) {\n                    // Set the first section as the active section\n                    this.setActiveSection(firstSectionIndex);\n                }\n            }\n        }\n    }\n}", "CodeBleu_score": 27.697906530064486}, {"code": "export function lazyLoadOthers()  if (this.options.lazyLoading && (this.autoHeightSections.length || (this.responsiveAutoHeightSections.length && this.options.responsiveMode))) {\n    for (const section of this.sections) {\n      if (section.active) {\n        continue;\n      }\n      if (this.options.responsiveMode && this.responsiveAutoHeightSections.length && section.responsiveHeight) {\n        const sectionTop = section.responsiveHeight.top + section.responsiveHeight.offset;\n        const sectionBottom = section.responsiveHeight.bottom + section.responsiveHeight.offset;\n        if (sectionTop < this.window.scrollY + this.window.innerHeight && sectionBottom > this.window.scrollY) {\n          section.active = true;\n          section.lazyLoaded = true;\n          section.lazyLoadedInView = true;\n          this.updateSectionHeight(section);\n          this.updateSectionOffset(section);\n          this.updateSectionProgress(section);\n          this.updateSectionScroll(section);\n          this.updateSectionStyles(section);\n          this.updateSectionClasses(section);\n          this.updateSectionEvents(section);\n        }\n      } else if (!this.options.responsiveMode && section.autoHeight) {\n        const sectionTop = section.autoHeight.top + section.autoHeight.offset;\n        const sectionBottom = section.autoHeight.bottom + section.autoHeight.offset;\n        if (sectionTop < this.window.scrollY + this.window.innerHeight && sectionBottom > this.window.scrollY) {\n          section.active = true;\n          section.lazyLoaded = true;\n          section.lazyLoadedInView = true;\n          this.updateSectionHeight(section);\n          this.updateSectionOffset(section);\n          this.updateSectionProgress(section);\n          this.updateSectionScroll(section);\n          this.updateSectionStyles(section);\n          this.updateSectionClasses(section);\n          this.updateSectionEvents(section);\n        }\n      }\n    }\n  }\n}", "CodeBleu_score": 23.31952347540313}, {"code": "export function lazyLoadOthers()  if (\n    !this.options.lazyLoad ||\n    (this.options.autoHeight && this.options.responsiveAutoHeight)\n  ) {\n    return;\n  }\n\n  const activeIndex = this.activeIndex;\n  const prevIndex = activeIndex - 1;\n  const nextIndex = activeIndex + 1;\n  const prevSlide = this.slides[prevIndex] as HTMLElement;\n  const activeSlide = this.slides[activeIndex] as HTMLElement;\n  const nextSlide = this.slides[nextIndex] as HTMLElement;\n\n  if (\n    prevSlide &&\n    this.isPassive(prevSlide) &&\n    this.isInViewport(prevSlide)\n  ) {\n    this.setActiveIndex(prevIndex, false);\n  }\n\n  if (\n    nextSlide &&\n    this.isPassive(nextSlide) &&\n    this.isInViewport(nextSlide)\n  ) {\n    this.setActiveIndex(nextIndex, false);\n  }\n\n  if (\n    activeSlide &&\n    this.isPassive(activeSlide) &&\n    this.isInViewport(activeSlide)\n  ) {\n    this.setActiveIndex(activeIndex, false);\n  }\n}", "CodeBleu_score": 21.293315517600973}]}
{"instance_id": "a4324e094376", "generation_result": [{"code": "function keepSlidesPosition()  const activeSlides = getActiveSlides();\n  activeSlides.forEach((slide) => {\n    silentLandscapeScroll(slide, 'internal');\n  });\n}\n", "CodeBleu_score": 18.369509237422122}, {"code": "function keepSlidesPosition()  const activeSlides = getActiveSlides();\n  activeSlides.forEach((slide) => {\n    silentLandscapeScroll(slide, \"internal\");\n  });\n}\n", "CodeBleu_score": 17.56102983410178}, {"code": "function keepSlidesPosition()    var activeSlides = getActiveSlides();\n    for (var i = 0; i < activeSlides.length; i++) {\n        silentLandscapeScroll(activeSlides[i], 'internal');\n    }\n}\n", "CodeBleu_score": 37.86455117051351}]}
{"instance_id": "9eb664182655", "generation_result": [{"code": "export function updateStructuralState()  const sectionItems = this.getSectionItems();\n  const visibleSections = sectionItems.filter(section => section.visible);\n  const sectionPanels = visibleSections.map(section => new SectionPanel(section));\n  const slides = sectionPanels.reduce((acc, sectionPanel) => acc.concat(sectionPanel.slides), []);\n  const prevActiveSectionIndex = this.state.activeSectionIndex;\n  const prevActiveSlideIndex = this.state.activeSlideIndex;\n  const activeSectionIndex = Math.max(0, Math.min(prevActiveSectionIndex, sectionPanels.length - 1));\n  const activeSlideIndex = Math.max(0, Math.min(prevActiveSlideIndex, slides.length - 1));\n  const state = {\n    numSections: sectionPanels.length,\n    numSlides: slides.length,\n    sectionPanels,\n    slides,\n    activeSectionIndex,\n    activeSlideIndex,\n    prevActiveSectionIndex,\n    prevActiveSlideIndex\n  };\n  this.setState(state);\n}", "CodeBleu_score": 42.02854031897378}, {"code": "export function updateStructuralState()  // Get all section items\n  const sectionItems = this.getAllSectionItems();\n\n  // Filter out non-visible section items\n  const visibleSections = sectionItems.filter((section) => {\n    return section.getAttribute('aria-hidden') !== 'true';\n  });\n\n  // Create SectionPanel objects for each visible section\n  const panels = visibleSections.map((section) => {\n    return new SectionPanel(section);\n  });\n\n  // Gather all slides from the visible sections\n  const slides = panels.reduce((acc, panel) => {\n    return acc.concat(panel.getSlides());\n  }, []);\n\n  // Update the state with the number of sections, number of slides, and lists of sections, slides, and panels\n  this.setState({\n    numSections: panels.length,\n    numSlides: slides.length,\n    sections: panels,\n    slides: slides,\n    panels: panels,\n  });\n\n  // Keep track of the previously active section and slide indices\n  this.prevActiveSectionIdx = this.state.activeSectionIdx;\n  this.prevActiveSlideIdx = this.state.activeSlideIdx;\n}", "CodeBleu_score": 31.012619741569992}, {"code": "export function updateStructuralState()    const sectionItems = [...document.querySelectorAll('section')];\n    const visibleSections = sectionItems.filter((item) => item.style.display !== 'none');\n    const panels = visibleSections.map((section) => new SectionPanel(section));\n    const slides = visibleSections.reduce((acc, section) => acc.concat(section.querySelectorAll('slide')), []);\n    const activeSectionIndex = visibleSections.findIndex((section) => section.classList.contains('active'));\n    const activeSlideIndex = slides.findIndex((slide) => slide.classList.contains('active'));\n    const previousActiveSectionIndex = state.activeSectionIndex;\n    const previousActiveSlideIndex = state.activeSlideIndex;\n    state.sectionCount = sectionItems.length;\n    state.slideCount = slides.length;\n    state.sections = sectionItems;\n    state.slides = slides;\n    state.panels = panels;\n    state.activeSectionIndex = activeSectionIndex;\n    state.activeSlideIndex = activeSlideIndex;\n    state.previousActiveSectionIndex = previousActiveSectionIndex;\n    state.previousActiveSlideIndex = previousActiveSlideIndex;\n}", "CodeBleu_score": 43.08012396558214}]}
{"instance_id": "2b3c1077db45", "generation_result": [{"code": "function performHorizontalMove(slides, v, fireCallback)    var slidesContainer = slides.container;\n    var slidesContainerWidth = slides.containerWidth;\n    var currentSlide = slides.current;\n    var previousSlide = slides.previous;\n    var currentSlidePosition = currentSlide.position;\n    var previousSlidePosition = previousSlide.position;\n    var currentSlideWidth = currentSlide.width;\n    var previousSlideWidth = previousSlide.width;\n    var currentSlideHeight = currentSlide.height;\n    var previousSlideHeight = previousSlide.height;\n    var slidesContainerScrollLeft = slidesContainer.scrollLeft;\n    var slidesContainerScrollTop = slidesContainer.scrollTop;\n    var slidesContainerScrollLeftAfterMove = slidesContainerScrollLeft + v;\n    var slidesContainerScrollTopAfterMove = slidesContainerScrollTop;\n    var destinationPosition = currentSlidePosition + v;\n    var slidesContainerScrollLeftAfterMoveAbs = Math.abs(slidesContainerScrollLeftAfterMove);\n    var slidesContainerScrollTopAfterMoveAbs = Math.abs(slidesContainerScrollTopAfterMove);\n    var slidesContainerScrollLeftAfterMoveAbsFloor = Math.floor(slidesContainerScrollLeftAfterMoveAbs);\n    var slidesContainerScrollTopAfterMoveAbsFloor = Math.floor(slidesContainerScrollTopAfterMoveAbs);\n    var slidesContainerScrollLeftAfterMoveAbsCeil = Math.ceil(slidesContainerScrollLeftAfterMoveAbs);\n    var slidesContainerScrollTopAfterMoveAbsCeil = Math.ceil(slidesContainerScrollTopAfterMoveAbs);\n    var slidesContainerScrollLeftAfterMoveAbsRound = Math.round(slidesContainerScrollLeftAfterMoveAbs);\n    var slidesContainerScrollTopAfterMoveAbsRound = Math.round(slidesContainerScrollTopAfterMoveAbs);\n    var slidesContainerScrollLeftAfterMoveAbsFloorRound = Math.floor(slidesContainerScrollLeftAfterMoveAbsRound);\n    var slidesContainerScrollTopAfterMoveAbsFloorRound = Math.floor(slidesContainerScrollTopAfterMoveAbsRound);\n    var slidesContainerScrollLeftAfterMoveAbsCeilRound = Math.ceil(slidesContainerScrollLeftAfterMoveAbsRound);\n    var slidesContainerScrollTopAfterMoveAbsCeilRound = Math", "CodeBleu_score": 21.44281788997252}, {"code": "function performHorizontalMove(slides, v, fireCallback)  var slidesContainer = slides.slidesContainer;\n  var slideWidth = slides.slideWidth;\n  var slideHeight = slides.slideHeight;\n  var currentSlide = slides.currentSlide;\n  var currentSlidePosition = currentSlide * slideWidth;\n  var destination = currentSlidePosition - v;\n  var slideNavigation = slides.slideNavigation;\n  var slidesArray = slides.slidesArray;\n  var slidesLength = slides.slidesLength;\n  var css3 = slides.css3;\n  var callback = fireCallback;\n  var css3Support = slides.css3Support;\n  var scrollTo = slides.scrollTo;\n  var scrollToCallback = slides.scrollToCallback;\n  var scrollToCallbackParam = slides.scrollToCallbackParam;\n  var scrollToDuration = slides.scrollToDuration;\n  var scrollToEasing = slides.scrollToEasing;\n  var scrollToComplete = slides.scrollToComplete;\n  var scrollToOffset = slides.scrollToOffset;\n  var scrollToOffsetIsNumber = slides.scrollToOffsetIsNumber;\n  var scrollToOffsetIsString = slides.scrollToOffsetIsString;\n  var scrollToOffsetIsObject = slides.scrollToOffsetIsObject;\n  var scrollToOffsetLeft = slides.scrollToOffsetLeft;\n  var scrollToOffsetTop = slides.scrollToOffsetTop;\n  var scrollToOffsetCoeff = slides.scrollToOffsetCoeff;\n  var scrollToOffsetCoeffLeft = slides.scrollToOffsetCoeffLeft;\n  var scrollToOffsetCoeffTop = slides.scrollToOffsetCoeffTop;\n  var scrollToOffsetCoeffCoeff = slides.scrollToOffsetCoeffCoeff;\n  var scrollToOffsetCoeffCoeffLeft = slides.scrollToOffsetCoeffCoeffLeft;\n  var scrollToOffsetCoeffCoeffTop = slides.scrollToOffsetCoeffCoeffTop;\n  var scrollToOffsetCoeffCoeffCoeff = slides.scrollToOffsetCoeffCoeffCoeff;\n  var scrollToOffsetCoeffCoeffCoeffLeft = slides.scrollToOffsetCoeffCoe", "CodeBleu_score": 20.089565074567496}, {"code": "function performHorizontalMove(slides, v, fireCallback)  if (v !== 0) {\n    if (slides.css3) {\n      slides.css({\n        \"transform\": \"translate3d(\" + -v + \"px, 0, 0)\"\n      });\n      setTimeout(function() {\n        fireCallback();\n      }, 50);\n    } else {\n      slides.scrollTo(v, 0);\n      fireCallback();\n    }\n  } else {\n    fireCallback();\n  }\n}", "CodeBleu_score": 14.149795211744342}]}
{"instance_id": "82491a251576", "generation_result": [{"code": "buildLink (name: string, params: Record<string, any>): string    const query = Object.keys(params)\n      .sort()\n      .map(k => `${k}=${encodeURIComponent(params[k])}`)\n      .join('&')\n\n    return `${name}?${query}`\n  }", "CodeBleu_score": 42.08528141621867}, {"code": "buildLink (name: string, params: Record<string, any>): string  const query = Object.keys(params)\n    .sort()\n    .map(k => `${k}=${encodeURIComponent(params[k])}`)\n    .join('&')\n\n  return `${name}?${query}`\n}", "CodeBleu_score": 41.44992505696415}, {"code": "buildLink (name: string, params: Record<string, any>): string  const query = Object.keys(params)\n    .sort()\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`)\n    .join('&')\n  return `${name}?${query}`\n}", "CodeBleu_score": 42.22949320349711}]}
{"instance_id": "89f175570176", "generation_result": [{"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult>     return new Promise((resolve, reject) => {\n        try {\n            const { title = '\u8bf7\u7a0d\u540e', mask = true } = options\n            const { success = noop, fail = noop, complete = noop } = options\n            const opts = { title, mask, icon: 'loading', duration: 0 }\n            showToast(opts).then(success, fail).then(complete)\n            resolve(normalizeShowToastResult())\n        } catch (e) {\n            reject(e)\n        }\n    })\n}", "CodeBleu_score": 28.412961235807625}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult>     return new Promise((resolve, reject) => {\n        const { title = '\u52a0\u8f7d\u4e2d', mask = true } = options;\n        const { success, fail, complete } = options;\n        Taro.showLoading({\n            title,\n            mask,\n            success: (res) => {\n                success && success(res);\n                resolve(res);\n            },\n            fail: (res) => {\n                fail && fail(res);\n                reject(res);\n            },\n            complete: (res) => {\n                complete && complete(res);\n            }\n        });\n    });\n}\n", "CodeBleu_score": 24.131799542899472}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult>   return new Promise((resolve, reject) => {\n    const { title = '', mask = false, success, fail, complete } = options\n    if (typeof title !== 'string') {\n      console.error('showLoading:fail parameter error: parameter.title should be String')\n      reject({ errMsg: 'showLoading:fail parameter error: parameter.title should be String' })\n      return\n    }\n    const option = {\n      title,\n      icon: 'loading',\n      mask,\n      duration: 0,\n      success: function (res) {\n        success && success(res)\n        resolve(res)\n      },\n      fail: function (res) {\n        fail && fail(res)\n        reject(res)\n      },\n      complete: function (res) {\n        complete && complete(res)\n      }\n    }\n    showToast(option)\n  })\n}\n", "CodeBleu_score": 32.47558814601455}]}
{"instance_id": "7d41757a0645", "generation_result": [{"code": "export function HomepageTweets()  return (\n    <div className=\"container\">\n      <h3 className=\"text-center\">Tweets</h3>\n      <div className=\"row\">\n        {TweetList.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            name={tweet.name}\n            username={tweet.username}\n            date={tweet.date}\n            message={tweet.message}\n            comments={tweet.comments}\n            retweets={tweet.retweets}\n            likes={tweet.likes}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}", "CodeBleu_score": 54.83098271097299}, {"code": "export function HomepageTweets()  const TweetList = [\n    {\n      username: \"@ElonMusk\",\n      userhandle: \"elonmusk\",\n      tweet: \"The future is here, we are going to Mars.\",\n      avatar: \"https://pbs.twimg.com/profile_images/1590903921106231296/IY9Gx6Ok_400x400.jpg\",\n    },\n    {\n      username: \"@BillGates\",\n      userhandle: \"billgates\",\n      tweet: \"The world is changing, and we need to adapt.\",\n      avatar: \"https://pbs.twimg.com/profile_images/1587647098524405760/LK8jNH_F_400x400.jpg\",\n    },\n    {\n      username: \"@JeffBezos\",\n      userhandle: \"jeffbezos\",\n      tweet: \"The world is changing, and we need to adapt.\",\n      avatar: \"https://pbs.twimg.com/profile_images/1587647098524405760/LK8jNH_F_400x400.jpg\",\n    },\n  ];\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Tweets</h1>\n      <div className=\"row\">\n        {TweetList.map((tweet) => (\n          <Tweet\n            username={tweet.username}\n            userhandle={tweet.userhandle}\n            tweet={tweet.tweet}\n            avatar={tweet.avatar}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}", "CodeBleu_score": 32.913546768006256}, {"code": "export function HomepageTweets()  const TweetList = [\n    {\n      id: 1,\n      name: \"Joe\",\n      username: \"joe123\",\n      date: \"12/02/2023\",\n      message: \"This is my first tweet\",\n      comments: 0,\n      retweets: 0,\n      likes: 0,\n    },\n    {\n      id: 2,\n      name: \"Joe\",\n      username: \"joe123\",\n      date: \"12/02/2023\",\n      message: \"This is my second tweet\",\n      comments: 0,\n      retweets: 0,\n      likes: 0,\n    },\n    {\n      id: 3,\n      name: \"Joe\",\n      username: \"joe123\",\n      date: \"12/02/2023\",\n      message: \"This is my third tweet\",\n      comments: 0,\n      retweets: 0,\n      likes: 0,\n    },\n    {\n      id: 4,\n      name: \"Joe\",\n      username: \"joe123\",\n      date: \"12/02/2023\",\n      message: \"This is my fourth tweet\",\n      comments: 0,\n      retweets: 0,\n      likes: 0,\n    },\n    {\n      id: 5,\n      name: \"Joe\",\n      username: \"joe123\",\n      date: \"12/02/2023\",\n      message: \"This is my fifth tweet\",\n      comments: 0,\n      retweets: 0,\n      likes: 0,\n    },\n    {\n      id: 6,\n      name: \"Joe\",\n      username: \"joe123\",\n      date: \"12/02/2023\",\n      message: \"This is my sixth tweet\",\n      comments: 0,\n      retweets: 0,\n      likes: 0,\n    },\n  ];\n\n  return (\n    <div className=", "CodeBleu_score": 14.805026760547147}]}
