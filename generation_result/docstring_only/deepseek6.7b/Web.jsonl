{"instance_id": "112855ce32e1", "generation_result": [{"code": "handleOpenMarketplace = (): void =>     const { openModal } = this.props;\n    const { id, type, props } = this.getModalData();\n    openModal(id, type, props);\n};\n", "CodeBleu_score": 13.505530608902031}, {"code": "handleOpenMarketplace = (): void =>     const openMarketplaceModal = {\n        source: 'actions_menu',\n        modal: {\n            id: 'marketplace',\n            type: 'dialog',\n            dialog: {\n                title: 'Marketplace',\n                description: 'Select a marketplace to view available products',\n                buttons: [\n                    {\n                        label: 'Close',\n                        action: 'close',\n                        style: 'secondary',\n                    },\n                ],\n            },\n        },\n    };\n\n    this.triggerModal(openMarketplaceModal);\n};\n", "CodeBleu_score": 13.945048807179056}, {"code": "handleOpenMarketplace = (): void =>     this.openModal({\n        source: 'actions_menu',\n        modalId: 'marketplace',\n        dialogType: 'modal',\n        dialogProperties: {\n            title: 'Marketplace',\n            description: 'Discover and install apps and extensions from the marketplace.',\n            actions: [\n                {\n                    label: 'Install',\n                    action: 'install',\n                    icon: 'install',\n                },\n                {\n                    label: 'Learn More',\n                    action: 'learn_more',\n                    icon: 'learn_more',\n                },\n            ],\n        },\n    });\n};\n", "CodeBleu_score": 11.667268192720098}]}
{"instance_id": "421836df0bf0", "generation_result": [{"code": "onClickAppBinding = async (binding: AppBinding) =>  const context = {\n    appId: binding.appId,\n    location: binding.location,\n    channelId: binding.channelId,\n    teamId: binding.teamId,\n    postId: binding.postId,\n    rootPostId: binding.rootPostId,\n  };\n\n  const i18n = await this.i18n.getTranslations();\n\n  let response: AppBindingResponse;\n  try {\n    response = await this.handleAppBindingClick(binding, context, i18n);\n  } catch (error) {\n    this.call.ephemeralCallResponse({\n      text: `Error: ${error.message}`,\n      error: error.message,\n    });\n    return;\n  }\n\n  switch (response.type) {\n    case 'OK':\n      this.call.ephemeralCallResponse({ text: response.text });\n      break;\n    case 'NAVIGATE':\n      this.call.navigateToLocation(response.location, response.options);\n      break;\n    case 'FORM':\n      this.call.openModal(response.form);\n      break;\n    default:\n      this.call.ephemeralCallResponse({\n        text: `Unsupported response type: ${response.type}`,\n        error: `Unsupported response type: ${response.type}`,\n      });\n      break;\n  }\n};\n", "CodeBleu_score": 24.360597115721255}, {"code": "onClickAppBinding = async (binding: AppBinding) =>  const context = {\n    appId: binding.appId,\n    location: binding.location,\n    channelId: binding.channelId,\n    teamId: binding.teamId,\n    postId: binding.postId,\n    rootPostId: binding.rootPostId,\n  };\n\n  const response = await this.handleBindingClick(binding, context, this.i18n);\n\n  if (response.error) {\n    this.callResponse.postEphemeral(response.error);\n    return;\n  }\n\n  switch (response.type) {\n    case 'OK':\n      this.callResponse.postEphemeral(response.message);\n      break;\n    case 'NAVIGATE':\n      this.navigateToURL(response.url);\n      break;\n    case 'FORM':\n      this.openModal(response.form);\n      break;\n    default:\n      this.callResponse.postEphemeral(\n        `Unsupported response type: ${response.type}`,\n      );\n      break;\n  }\n};\n", "CodeBleu_score": 20.065898927148904}, {"code": "onClickAppBinding = async (binding: AppBinding) =>  try {\n    const context = {\n      app_id: binding.app_id,\n      location: binding.location,\n      channel_id: binding.channel_id,\n      team_id: binding.team_id,\n      post_id: binding.post_id,\n      root_post_id: binding.root_post_id,\n    };\n\n    const response = await handleAppBindingClick(binding, context, i18n);\n\n    if (response.type === 'OK') {\n      await callResponse(context, {\n        type: 'ephemeral',\n        text: response.text,\n      });\n    } else if (response.type === 'NAVIGATE') {\n      await handleNavigation(response.url, context);\n    } else if (response.type === 'FORM') {\n      await openForm(response.form, context);\n    } else {\n      await callResponse(context, {\n        type: 'ephemeral',\n        text: i18n.t('api.app_binding.unsupported_response_type'),\n      });\n    }\n  } catch (error) {\n    await callResponse(context, {\n      type: 'ephemeral',\n      text: error.message,\n    });\n  }\n};\n", "CodeBleu_score": 22.485273691111633}]}
{"instance_id": "7b2d58ae93e2", "generation_result": [{"code": "handleDropdownOpened = (open: boolean) =>    if (!open) {\n        return;\n    }\n    const dropdownButton = document.getElementById('dropdown-button');\n    const dropdownMenu = document.getElementById('dropdown-menu');\n    const dropdownButtonRect = dropdownButton.getBoundingClientRect();\n    const dropdownMenuRect = dropdownMenu.getBoundingClientRect();\n    const availableSpaceAbove = dropdownButtonRect.top - dropdownMenuRect.height;\n    const availableSpaceBelow = window.innerHeight - (dropdownButtonRect.bottom + dropdownMenuRect.height);\n    if (availableSpaceAbove > availableSpaceBelow) {\n        this.setState({\n            dropdownDirection: 'up',\n        });\n    } else {\n        this.setState({\n            dropdownDirection: 'down',\n        });\n    }\n};\n", "CodeBleu_score": 33.80345356467481}, {"code": "handleDropdownOpened = (open: boolean) =>    if (open) {\n      const dropdownButton = document.getElementById(\"dropdown-button\");\n      const dropdownMenu = document.getElementById(\"dropdown-menu\");\n      const dropdownButtonRect = dropdownButton?.getBoundingClientRect();\n      const dropdownMenuRect = dropdownMenu?.getBoundingClientRect();\n      const dropdownButtonTop = dropdownButtonRect?.top;\n      const dropdownMenuHeight = dropdownMenuRect?.height;\n      const dropdownMenuTop = dropdownMenuRect?.top;\n      const availableSpaceAbove = dropdownButtonTop - dropdownMenuTop;\n      const availableSpaceBelow = window.innerHeight - dropdownMenuHeight - dropdownButtonTop;\n      const isAbove = availableSpaceAbove > availableSpaceBelow;\n      this.setState({\n        isAbove,\n      });\n    }\n  };\n\n  /**\n   * This function, handleDropdownClosed, manages the state when a dropdown is closed.\\nIt triggers a prop function to handle the dropdown state.\n   */\n  handleDropdownClosed = () => {\n    this.setState({\n      isAbove: false,\n    });\n  };\n", "CodeBleu_score": 30.39203524576195}, {"code": "handleDropdownOpened = (open: boolean) =>    if (open) {\n        const {\n            dropdownRef,\n            setDropdownState,\n            setDropdownPosition,\n            setDropdownDirection,\n            setDropdownHeight,\n            setDropdownWidth,\n            setDropdownTop,\n            setDropdownLeft,\n            setDropdownRight,\n            setDropdownBottom,\n        } = this.props;\n\n        const {\n            top,\n            left,\n            width,\n            height,\n        } = dropdownRef.current.getBoundingClientRect();\n\n        const {\n            top: buttonTop,\n            left: buttonLeft,\n            width: buttonWidth,\n            height: buttonHeight,\n        } = this.state.buttonRef.current.getBoundingClientRect();\n\n        const availableSpaceTop = buttonTop - top;\n        const availableSpaceBottom = height - (window.innerHeight - buttonTop);\n\n        const direction = availableSpaceTop > availableSpaceBottom ? 'up' : 'down';\n\n        setDropdownState(true);\n        setDropdownPosition({\n            top,\n            left,\n            width,\n            height,\n        });\n        setDropdownDirection(direction);\n        setDropdownHeight(height);\n        setDropdownWidth(width);\n        setDropdownTop(buttonTop);\n        setDropdownLeft(buttonLeft);\n        setDropdownRight(buttonLeft + buttonWidth);\n        setDropdownBottom(buttonTop + buttonHeight);\n    } else {\n        const {\n            setDropdownState,\n        } = this.props;\n\n        setDropdownState(false);\n    }\n};\n", "CodeBleu_score": 21.802740330436478}]}
{"instance_id": "024f57c26061", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: Props)  const { post } = ownProps;\n  const isSystemMessage = post?.type === SYSTEM_MESSAGE_POST_TYPE;\n  const appBindings = getAppBindings(state, post);\n  const appsEnabled = Boolean(state.plugins.apps?.appsEnabled);\n  const pluginComponents = state.plugins.components;\n  const userRoles = state.entities.users.currentUser?.roles;\n  const teamId = post?.team_id;\n  const mobileView = state.views.channel.mobileView;\n  const marketplaceAccessPermissions = getMarketplaceAccessPermissions(state);\n\n  return {\n    isSystemMessage,\n    appBindings,\n    appsEnabled,\n    pluginComponents,\n    userRoles,\n    teamId,\n    mobileView,\n    marketplaceAccessPermissions,\n  };\n}\n", "CodeBleu_score": 38.75921501475611}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props)    const {\n        post,\n        isSystemMessage,\n        appBindings,\n        appsEnabled,\n        pluginComponents,\n        userRoles,\n        teamId,\n        mobileView,\n        marketplaceAccess,\n    } = ownProps;\n\n    const currentUser = state.entities.users[state.entities.currentUserId];\n    const isSystemAdmin = currentUser && currentUser.roles.includes('system_admin');\n\n    return {\n        post,\n        isSystemMessage,\n        appBindings,\n        appsEnabled,\n        pluginComponents,\n        userRoles,\n        teamId,\n        mobileView,\n        marketplaceAccess,\n        isSystemAdmin,\n    };\n}\n", "CodeBleu_score": 27.119146751179592}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props)  const {\n    post,\n    isSystemMessage,\n  } = ownProps;\n\n  const appBindings = getAppBindings(state, post.channel_id, post.id);\n\n  const appsEnabled = state.plugins.apps?.appsEnabled;\n\n  const pluginComponents = getPluginComponents(state);\n\n  const userRoles = state.entities.users.roles;\n\n  const teamId = state.entities.teams.currentTeamId;\n\n  const isMobileView = state.views.channel.isMobileView;\n\n  const marketplaceAccessPermissions = getMarketplaceAccessPermissions(state);\n\n  return {\n    appBindings,\n    appsEnabled,\n    pluginComponents,\n    userRoles,\n    teamId,\n    isMobileView,\n    marketplaceAccessPermissions,\n    isSystemMessage,\n  };\n}\n", "CodeBleu_score": 38.66989050108235}]}
{"instance_id": "ae0a07f4dbea", "generation_result": [{"code": "export default function DeviceIcon(props: Props)  const { devicePicture, deviceTitle, ...rest } = props;\n  const intl = useIntl();\n\n  const title =\n    typeof deviceTitle === \"object\"\n      ? intl.formatMessage(deviceTitle)\n      : deviceTitle;\n\n  return (\n    <Icon\n      className={`device-icon device-icon--${devicePicture}`}\n      title={title}\n      {...rest}\n    />\n  );\n}\n", "CodeBleu_score": 32.897861990817276}, {"code": "export default function DeviceIcon(props: Props)  const { devicePicture, deviceTitle, ...rest } = props;\n  const { formatMessage } = useIntl();\n\n  const title =\n    typeof deviceTitle === 'object'\n      ? formatMessage(deviceTitle)\n      : deviceTitle;\n\n  return (\n    <Icon\n      className={devicePicture}\n      title={title}\n      {...rest}\n    />\n  );\n}\n", "CodeBleu_score": 26.882470065160984}, {"code": "export default function DeviceIcon(props: Props)  const { devicePicture, deviceTitle, ...rest } = props;\n  const intl = useIntl();\n  const title =\n    typeof deviceTitle === \"string\"\n      ? deviceTitle\n      : intl.formatMessage(deviceTitle);\n  return (\n    <Icon\n      className={devicePicture}\n      title={title}\n      {...rest}\n    />\n  );\n}\n", "CodeBleu_score": 33.34825150430389}]}
{"instance_id": "e0a805402908", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)   const { searchTerm, groups } = state;\n  const { channel, teamId } = ownProps;\n  const filteredGroups = groups.filter((group) => {\n    return !channel.groups.includes(group.id);\n  });\n  return {\n    channelName: channel.name,\n    channelId: channel.id,\n    teamId,\n    ...ownProps,\n    searchTerm,\n    filteredGroups,\n  };\n}\n", "CodeBleu_score": 30.13550268781217}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)   const { currentChannelId, currentTeamId, groups } = state.entities.channels;\n  const { currentUserId } = state.entities.users;\n  const { currentChannel } = ownProps;\n  const searchTerm = state.views.channel.searchTerm;\n  const currentChannelGroups = groups.filter((group) => group.id === currentChannelId);\n  const filteredGroups = searchTerm ? currentChannelGroups.filter((group) => group.name.toLowerCase().includes(searchTerm.toLowerCase())) : currentChannelGroups;\n  return {\n    currentChannel,\n    currentChannelId,\n    currentTeamId,\n    currentUserId,\n    searchTerm,\n    filteredGroups,\n  };\n}\n", "CodeBleu_score": 36.26657598634158}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)   const { groups } = state;\n  const { searchTerm, channelId } = ownProps;\n  const channel = state.channels[channelId];\n\n  if (!channel) {\n    return {};\n  }\n\n  const filteredGroups = groups.filter((group) => {\n    if (channel.groups.includes(group.id)) {\n      return true;\n    }\n    if (searchTerm) {\n      return group.name.toLowerCase().includes(searchTerm.toLowerCase());\n    }\n    return false;\n  });\n\n  return {\n    channelName: channel.name,\n    channelId: channel.id,\n    channelTeamId: channel.teamId,\n    ...ownProps,\n    searchTerm,\n    filteredGroups,\n  };\n}\n", "CodeBleu_score": 42.29375012040754}]}
{"instance_id": "a3412b1c0762", "generation_result": [{"code": "componentDidUpdate(prevProps: Props)    if (prevProps.searchTerm !== this.props.searchTerm) {\n      clearTimeout(this.searchTimeout);\n      this.searchTimeout = setTimeout(() => {\n        this.setState({ loading: true });\n        this.searchGroups(this.props.searchTerm);\n      }, 500);\n    }\n  }\n", "CodeBleu_score": 19.28531168594814}, {"code": "componentDidUpdate(prevProps: Props)  if (this.props.searchTerm !== prevProps.searchTerm) {\n    clearTimeout(this.searchTimeout);\n    this.searchTimeout = setTimeout(() => {\n      this.setState({ loading: true });\n      this.searchGroups();\n      this.setState({ loading: false });\n    }, 500);\n  }\n  if (this.props.searchTerm === \"\") {\n    return;\n  }\n}\n", "CodeBleu_score": 27.797865218523178}, {"code": "componentDidUpdate(prevProps: Props)  if (this.props.searchTerm !== prevProps.searchTerm) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.setState({ loading: true });\n      this.searchGroups(this.props.searchTerm);\n    }, 500);\n  }\n\n  if (this.props.searchTerm === '') {\n    return;\n  }\n}\n", "CodeBleu_score": 27.96896699104414}]}
{"instance_id": "0f47faf97411", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)  const {\n    currentChannel,\n    groups: { groups, excludedGroups },\n    search: { searchTerm },\n  } = state;\n  const { channel } = ownProps;\n  const currentChannelId = currentChannel?.id || channel?.id;\n  const currentChannelName = currentChannel?.name || channel?.name;\n  const currentChannelType = currentChannel?.type || channel?.type;\n  const currentChannelIsPrivate = currentChannel?.isPrivate || channel?.isPrivate;\n  const currentChannelIsProtected = currentChannel?.isProtected || channel?.isProtected;\n  const currentChannelIsArchived = currentChannel?.isArchived || channel?.isArchived;\n  const currentChannelIsMuted = currentChannel?.isMuted || channel?.isMuted;\n  const currentChannelIsFrozen = currentChannel?.isFrozen || channel?.isFrozen;\n  const currentChannelIsDeleted = currentChannel?.isDeleted || channel?.isDeleted;\n  const currentChannelIsReadOnly = currentChannel?.isReadOnly || channel?.isReadOnly;\n  const currentChannelIsDirect = currentChannel?.isDirect || channel?.isDirect;\n  const currentChannelIsGroup = currentChannel?.isGroup || channel?.isGroup;\n  const currentChannelIsChannel = currentChannel?.isChannel || channel?.isChannel;\n  const currentChannelIsTeam = currentChannel?.isTeam || channel?.isTeam;\n  const currentChannelIsMpim = currentChannel?.isMpim || channel?.isMpim;\n  const currentChannelIsIm = currentChannel?.isIm || channel?.isIm;\n  const currentChannelIsOrgShared = currentChannel?.isOrgShared || channel?.isOrgShared;\n  const currentChannelIsOrgDefault = currentChannel?.isOrgDefault || channel?.isOrgDefault;\n  const currentChannelIsShared = currentChannel?.isShared || channel?.isShared;\n  const currentChannelIsGlobalShared = currentChannel?.isGlobalShared || channel?.isGlobalShared;\n  const currentChannelIsOrg = currentChannel?.isOrg || channel?.isOrg;\n  const currentChannelIsUser = currentChannel?.isUser || channel?.isUser;\n  const currentChannelIsBot = currentChannel?.isBot", "CodeBleu_score": 17.525427851176328}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)  const { searchTerm, currentChannel } = state.group;\n  const { channel } = ownProps;\n  const excludedGroups = state.group.groups.filter((group) => group.channel !== channel);\n  const filteredGroups = searchTerm\n    ? excludedGroups.filter((group) => group.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    : excludedGroups;\n  return {\n    currentChannel,\n    onSelectGroup: ownProps.onSelectGroup,\n    excludedGroups,\n    searchTerm,\n    filteredGroups,\n  };\n}\n", "CodeBleu_score": 36.21303402454464}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps)  const { searchTerm } = state.search;\n  const currentChannel = ownProps.channel ?? state.channels.current;\n  const excludedGroups = state.groups.excluded;\n\n  const filteredGroups = searchTerm\n    ? state.groups.all.filter(\n        (group) =>\n          !excludedGroups.includes(group.id) &&\n          group.name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    : state.groups.all.filter((group) => !excludedGroups.includes(group.id));\n\n  return {\n    currentChannel,\n    excludedGroups,\n    filteredGroups,\n    onChannelChange: ownProps.onChannelChange,\n    onGroupExclude: ownProps.onGroupExclude,\n    searchTerm,\n  };\n}\n", "CodeBleu_score": 41.59698482405197}]}
{"instance_id": "923c0c472c01", "generation_result": [{"code": "private handlePageChange = (page: number, prevPage: number): void =>     if (page > prevPage) {\n        this.setState({ loading: true });\n        this.fetchProfiles(page);\n    }\n};\n", "CodeBleu_score": 23.40016062934363}, {"code": "private handlePageChange = (page: number, prevPage: number): void =>     if (page > prevPage) {\n        this.setState({ loading: true });\n        this.props.groupId\n            ? this.props.getGroupMembers(this.props.groupId, page)\n            : this.props.getNextPage(page);\n    }\n    this.setState({ loading: false });\n};\n", "CodeBleu_score": 39.058264850261686}, {"code": "private handlePageChange = (page: number, prevPage: number): void =>     if (page > prevPage) {\n        this.setState({ loading: true });\n        if (this.state.groupId) {\n            this.fetchUserProfiles(this.state.groupId, page);\n        } else {\n            this.fetchUserProfiles(page);\n        }\n    }\n    this.setState({ loading: false });\n};\n", "CodeBleu_score": 36.58130303221071}]}
{"instance_id": "4614bb3319bb", "generation_result": [{"code": "public search = (searchTerm: string): void =>     const trimmedTerm = searchTerm.trim();\n    clearTimeout(this.searchTimeout);\n    this.setState({ searchTerm: trimmedTerm });\n    if (trimmedTerm) {\n      this.setState({ isLoading: true });\n      this.searchTimeout = setTimeout(() => {\n        this.fetchUserProfiles(trimmedTerm);\n      }, this.searchDelay);\n    }\n  };", "CodeBleu_score": 31.746337448933136}, {"code": "public search = (searchTerm: string): void =>     const trimmedTerm = searchTerm.trim();\n    this.clearSearchTimeout();\n    this.setState({ searchTerm: trimmedTerm });\n    if (trimmedTerm) {\n      this.setState({ userLoading: true });\n      setTimeout(() => {\n        this.setState({ userLoading: false });\n      }, 500);\n    }\n  };\n", "CodeBleu_score": 23.88933327333758}, {"code": "public search = (searchTerm: string): void =>     const trimmedTerm = searchTerm.trim();\n    this.clearSearchTimeout();\n    this.setState({ searchTerm: trimmedTerm });\n    if (trimmedTerm) {\n      this.setState({ userLoading: true });\n      this.searchTimeout = setTimeout(() => {\n        this.searchUsers(trimmedTerm);\n      }, this.searchDelay);\n    }\n  };", "CodeBleu_score": 29.49776262480181}]}
{"instance_id": "aeafe2d0ee11", "generation_result": [{"code": "visibleSections = () =>  const {\n    config,\n    license,\n    buildEnterpriseReady,\n    consoleAccess,\n    adminDefinition,\n    cloud,\n  } = this.props;\n\n  const result = [];\n  for (const section of config) {\n    if (section.schema && section.title) {\n      const sectionUrl = section.url;\n      const isHidden =\n        section.hidden !== undefined\n          ? section.hidden\n          : section.url === '/'\n          ? false\n          : section.url === '/admin'\n          ? !adminDefinition\n          : section.url === '/console'\n          ? !consoleAccess\n          : section.url === '/license'\n          ? !license\n          : section.url === '/enterprise'\n          ? !buildEnterpriseReady\n          : section.url === '/cloud'\n          ? !cloud\n          : false;\n\n      if (!isHidden) {\n        result.push(sectionUrl);\n      }\n\n      if (section.sections) {\n        for (const subsection of section.sections) {\n          if (subsection.schema && subsection.title) {\n            const subsectionUrl = sectionUrl + subsection.url;\n            const isHidden =\n              subsection.hidden !== undefined\n                ? subsection.hidden\n                : section.url === '/'\n                ? false\n                : section.url === '/admin'\n                ? !adminDefinition\n                : section.url === '/console'\n                ? !consoleAccess\n                : section.url === '/license'\n                ? !license\n                : section.url === '/enterprise'\n                ? !buildEnterpriseReady\n                : section.url === '/cloud'\n                ? !cloud\n                : false;\n\n            if (!isHidden) {\n              result.push(subsectionUrl);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return result;\n};\n", "CodeBleu_score": 28.86036851617674}, {"code": "visibleSections = () =>    const result = [];\n    const {\n        config,\n        license,\n        buildEnterpriseReady,\n        consoleAccess,\n        adminDefinition,\n        cloud\n    } = this.props;\n\n    const isEnterprise = buildEnterpriseReady || license.isEnterprise();\n    const isCloud = cloud.isCloud();\n\n    for (const section of config.sections) {\n        if (section.schema && section.title) {\n            const isHidden =\n                section.hidden !== undefined\n                    ? section.hidden\n                    : !isEnterprise ||\n                      !isCloud ||\n                      (section.name === 'license' &&\n                          !license.isEnterprise());\n            if (!isHidden) {\n                result.push(section.url);\n            }\n            if (section.subsections) {\n                for (const subsection of section.subsections) {\n                    if (subsection.schema && subsection.title) {\n                        const isHidden =\n                            subsection.hidden !== undefined\n                                ? subsection.hidden\n                                : !isEnterprise ||\n                                  !isCloud ||\n                                  (subsection.name === 'license' &&\n                                      !license.isEnterprise());\n                        if (!isHidden) {\n                            result.push(subsection.url);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n};\n", "CodeBleu_score": 36.591911571755574}, {"code": "visibleSections = () =>  const result = new Set();\n  const {\n    configuration,\n    license,\n    buildEnterpriseReady,\n    consoleAccess,\n    adminDefinition,\n    cloud,\n  } = this.props;\n\n  const isEnterpriseReady =\n    buildEnterpriseReady && license && license.isEnterpriseReady;\n\n  const isAdmin = adminDefinition && adminDefinition.isAdmin;\n\n  const isCloud = cloud && cloud.isCloud;\n\n  const isConsoleAccess = consoleAccess && consoleAccess.isConsoleAccess;\n\n  const isEnterprise = isEnterpriseReady && isCloud;\n\n  const isEnterpriseOrAdmin = isEnterpriseReady || isAdmin;\n\n  const isEnterpriseOrConsoleAccess = isEnterpriseReady || isConsoleAccess;\n\n  const isEnterpriseOrAdminOrConsoleAccess =\n    isEnterpriseReady || isAdmin || isConsoleAccess;\n\n  const isEnterpriseOrAdminOrCloud =\n    isEnterpriseReady || isAdmin || isCloud;\n\n  const isEnterpriseOrAdminOrConsoleAccessOrCloud =\n    isEnterpriseReady || isAdmin || isConsoleAccess || isCloud;\n\n  const isEnterpriseOrAdminOrConsoleAccessOrCloudOrAdmin =\n    isEnterpriseReady || isAdmin || isConsoleAccess || isCloud || isAdmin;\n\n  const isEnterpriseOrAdminOrConsoleAccessOrCloudOrAdminOrCloud =\n    isEnterpriseReady ||\n    isAdmin ||\n    isConsoleAccess ||\n    isCloud ||\n    isAdmin ||\n    isCloud;\n\n  const isEnterpriseOrAdminOrConsoleAccessOrCloudOrAdminOrCloudOrAdmin =\n    isEnterpriseReady ||\n    isAdmin ||\n    isConsoleAccess ||\n    isCloud ||\n    isAdmin ||\n    isCloud ||\n    isAdmin;\n\n  const isEnterpriseOrAdminOrConsoleAccessOrCloudOrAdminOrCloudOrAdminOrCloud =\n    isEnterpriseReady ||\n    isAdmin ||\n    isConsoleAccess ||\n    isCloud ||\n    isAdmin ||\n    isCloud ||\n    isAdmin ||\n    isCloud;\n\n  const isEnterpriseOrAdminOrConsoleAccessOrCloudOrAdminOrCloudOrAdminOrCloudOrAdmin =\n    isEnterpriseReady ||\n    isAdmin ||\n   ", "CodeBleu_score": 25.926503378799453}]}
{"instance_id": "e869682a1b2c", "generation_result": [{"code": "handleImageChange = () =>  if (this.state.fileInput.current && this.state.fileInput.current.files.length) {\n    this.setState({\n      saving: true,\n      image: this.state.fileInput.current.files[0],\n      delete: false\n    });\n  }\n}\n", "CodeBleu_score": 17.308922896930675}, {"code": "handleImageChange = () =>  const {\n    fileInput,\n    setSaveNeeded,\n    setImage,\n    setDelete,\n    setImagePreview,\n  } = this.state;\n  if (fileInput.current && fileInput.current.files.length > 0) {\n    setSaveNeeded(true);\n    setImage(fileInput.current.files[0]);\n    setDelete(false);\n    setImagePreview(URL.createObjectURL(fileInput.current.files[0]));\n  }\n};\n", "CodeBleu_score": 36.152646474749574}, {"code": "handleImageChange = () =>    const fileInput = document.getElementById('image');\n    if (fileInput && fileInput.files && fileInput.files.length > 0) {\n      this.setState({\n        saveNeeded: true,\n        image: fileInput.files[0],\n        delete: false\n      });\n    }\n  }", "CodeBleu_score": 26.86969374619908}]}
{"instance_id": "8bc13681a6b2", "generation_result": [{"code": "private removeChannel = (channel: ChannelWithTeamData) =>  if (this.state.removingChannels.includes(channel.id)) {\n    return;\n  }\n\n  const { page, end } = this.getPagination();\n  const { pageSize } = this.props;\n  const removingChannels = this.state.removingChannels.slice();\n  removingChannels.push(channel.id);\n\n  this.props.removeChannel(channel);\n\n  if (end - pageSize === channel.msg_count) {\n    if (page > 1) {\n      this.setState({\n        page: page - 1,\n        removingChannels,\n      });\n    }\n  }\n};\n", "CodeBleu_score": 37.45970356358694}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>  if (channel.removed) return;\n\n  const {\n    currentPage,\n    pageSize,\n    endCount,\n  } = this.state.pagination;\n\n  const currentPageCount = (currentPage + 1) * pageSize;\n  const nextPageCount = currentPageCount - pageSize;\n\n  this.setState({\n    pagination: {\n      ...this.state.pagination,\n      endCount: nextPageCount,\n    },\n  }, () => {\n    const {\n      currentPage,\n      pageSize,\n      endCount,\n    } = this.state.pagination;\n\n    const currentPageCount = (currentPage + 1) * pageSize;\n\n    if (currentPageCount <= endCount) {\n      this.setState({\n        pagination: {\n          ...this.state.pagination,\n          currentPage: currentPage - 1,\n        },\n      });\n    }\n\n    this.props.removeChannel(channel.id);\n  });\n};\n", "CodeBleu_score": 24.510449742452767}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>  const {\n    state: { channels, page, pageSize, totalCount },\n    props: { onRemoveChannel },\n  } = this;\n\n  if (channels[channel.id]) {\n    return;\n  }\n\n  const { currentPage, endCount, pageCount } = this.getPaginationProperties();\n\n  onRemoveChannel(channel);\n\n  if (endCount < pageSize && currentPage > 1) {\n    this.setState({\n      page: currentPage - 1,\n    });\n  } else if (endCount === pageSize && currentPage === pageCount) {\n    this.setState({\n      page: currentPage - 1,\n    });\n  }\n};\n", "CodeBleu_score": 30.804148482562244}]}
{"instance_id": "ac41454927ac", "generation_result": [{"code": "addToRemovedChannels = (channel: ChannelWithTeamData) =>     const {\n        removedChannels,\n        setRemovedChannels,\n        setNavigationBlocked,\n        newChannels,\n        setNewChannels,\n    } = useContext(ChannelsContext);\n\n    const isAlreadyRemoved = removedChannels.some(\n        (removedChannel) => removedChannel.id === channel.id,\n    );\n    const isNew = newChannels.some((newChannel) => newChannel.id === channel.id);\n\n    if (!isAlreadyRemoved) {\n        setRemovedChannels((prevChannels) => [...prevChannels, channel]);\n        if (isNew) {\n            setNewChannels((prevChannels) =>\n                prevChannels.filter((prevChannel) => prevChannel.id !== channel.id),\n            );\n        }\n    }\n\n    setNavigationBlocked(true);\n};\n", "CodeBleu_score": 25.715655594357568}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) =>     if (this.state.removedChannels.findIndex(c => c.id === channel.id) === -1) {\n        this.setState({\n            removedChannels: [...this.state.removedChannels, channel],\n            removedChannelsCount: this.state.removedChannelsCount + 1\n        });\n    }\n    const newChannels = this.state.newChannels.filter(c => c.id !== channel.id);\n    this.setState({\n        newChannels,\n        navigation: {\n            blocked: true\n        }\n    });\n};\n", "CodeBleu_score": 28.53698484311812}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) =>     const {\n        removedChannels,\n        setRemovedChannels,\n        setNavigationBlocked,\n        newChannels,\n        setNewChannels\n    } = useContext(ChannelsContext);\n\n    const isInRemovedChannels = removedChannels.some((channelInRemovedChannels) => channelInRemovedChannels.id === channel.id);\n    const isInNewChannels = newChannels.some((channelInNewChannels) => channelInNewChannels.id === channel.id);\n\n    if (!isInRemovedChannels) {\n        setRemovedChannels((prev) => [...prev, channel]);\n        setNavigationBlocked(true);\n    }\n\n    if (isInNewChannels) {\n        setNewChannels((prev) => prev.filter((channelInNewChannels) => channelInNewChannels.id !== channel.id));\n    }\n};\n", "CodeBleu_score": 24.485227227166334}]}
{"instance_id": "bdc81f9a884e", "generation_result": [{"code": "private removeTeam = (team: Team) =>  if (team.removed) {\n    return;\n  }\n  team.removed = true;\n  this.setState({\n    page: this.state.page,\n  });\n  this.props.onRemoveTeam(team);\n  if (this.props.pageSize * (this.state.page - 1) >= this.props.teams.length) {\n    this.setState({\n      page: this.state.page - 1,\n    });\n  }\n};\n", "CodeBleu_score": 21.034724588213972}, {"code": "private removeTeam = (team: Team) =>    if (this.state.removedTeams.includes(team.id)) {\n      return;\n    }\n  \n    const currentPage = this.state.currentPage;\n    const itemsPerPage = this.state.itemsPerPage;\n    const totalTeams = this.state.teams.length;\n  \n    if (currentPage * itemsPerPage >= totalTeams) {\n      this.setState({ currentPage: currentPage - 1 });\n    }\n  \n    this.setState({ removedTeams: [...this.state.removedTeams, team.id] });\n    this.props.onRemoveTeam(team);\n  };\n  ", "CodeBleu_score": 30.15273679086576}, {"code": "private removeTeam = (team: Team) =>    if (team.removed) {\n        return;\n    }\n\n    const {\n        currentPage,\n        pageSize,\n        teams,\n        totalTeams\n    } = this.state;\n\n    const start = (currentPage - 1) * pageSize;\n    const end = start + pageSize;\n\n    const currentPageTeams = teams.slice(start, end);\n\n    const newTeams = currentPageTeams.filter(t => t.id !== team.id);\n\n    const newTotalTeams = totalTeams - 1;\n\n    let newCurrentPage = currentPage;\n\n    if (newTeams.length < currentPageTeams.length) {\n        newCurrentPage = Math.min(currentPage, Math.ceil(newTotalTeams / pageSize));\n    }\n\n    this.setState({\n        currentPage: newCurrentPage,\n        teams: [\n            ...teams.slice(0, start),\n            ...newTeams,\n            ...teams.slice(end)\n        ],\n        totalTeams: newTotalTeams,\n        team: {\n            ...team,\n            removed: true\n        }\n    }, () => {\n        this.props.onRemoveTeam(team);\n    });\n};\n", "CodeBleu_score": 26.537649775632676}]}
{"instance_id": "e55dd105e5d2", "generation_result": [{"code": "async function loadListInPageNumber(page: number)  try {\n    const response = await fetch(`https://api.opendota.com/api/teams?page=${page}`);\n    const data = await response.json();\n    const teams = data.map((team: any) => ({\n      id: team.team_id,\n      name: team.name,\n      tag: team.tag,\n      logo: team.logo_url,\n      wins: team.wins,\n      losses: team.losses,\n      rating: team.rating,\n      players: team.players.map((player: any) => ({\n        id: player.account_id,\n        name: player.name,\n        avatar: player.avatar,\n        country: player.country_code,\n        mmr: player.mmr_estimate.estimate,\n        wins: player.wins,\n        losses: player.losses,\n      })),\n    }));\n    teams.sort((a: any, b: any) => a.name.localeCompare(b.name));\n    if (page === 1) {\n      setList(teams);\n    } else {\n      setList((prevList) => [...prevList, ...teams]);\n    }\n    setPage(page + 1);\n  } catch (error) {\n    console.error(error);\n  }\n}\n", "CodeBleu_score": 51.29788960414435}, {"code": "async function loadListInPageNumber(page: number)  try {\n    const response = await fetch(\n      `https://api.opendota.com/api/teams?page=${page}`\n    );\n    const data = await response.json();\n    const teams = data.map((team: any) => ({\n      id: team.team_id,\n      name: team.name,\n      tag: team.tag,\n      logo: team.logo_url,\n      rating: team.rating,\n    }));\n    teams.sort((a: any, b: any) => a.name.localeCompare(b.name));\n    if (page === 1) {\n      setList(teams);\n    } else {\n      setList((prevList: any) => [...prevList, ...teams]);\n    }\n    setPageNumber(page);\n  } catch (error) {\n    console.error(error);\n  }\n}\n", "CodeBleu_score": 40.671143954253516}, {"code": "async function loadListInPageNumber(page: number)  try {\n    const response = await fetch(\n      `https://api.opendota.com/api/teams?page=${page}`\n    );\n    const teams = await response.json();\n    const sortedTeams = teams.sort((a: any, b: any) =>\n      a.name.localeCompare(b.name)\n    );\n    if (page === 1) {\n      setList(sortedTeams);\n    } else {\n      setList((prevList: any) => [...prevList, ...sortedTeams]);\n    }\n    setPage(page + 1);\n  } catch (error) {\n    console.error(\"Error fetching teams:\", error);\n  }\n}\n", "CodeBleu_score": 31.72773657423569}]}
{"instance_id": "2de31ed13207", "generation_result": [{"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void)    try {\n        const teams = await searchTeams(term, {\n            page: 1,\n            perPage: 100,\n        });\n        const options: OptionsType<{label: string; value: string}> = [];\n        teams.forEach((team) => {\n            options.push({\n                label: team.name,\n                value: team.id,\n            });\n        });\n        callBack(options);\n    } catch (error) {\n        console.error(error);\n        callBack([]);\n    }\n}\n", "CodeBleu_score": 42.857724256988455}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void)    const options: OptionsType<{label: string; value: string}> = {\n        options: [],\n        hasMore: false,\n    };\n    const teams = await searchTeams({\n        search: term,\n        page: 1,\n        pageSize: 10,\n    });\n    if (teams.length > 0) {\n        options.options = teams.map((team) => ({\n            label: team.name,\n            value: team.id,\n        }));\n        options.hasMore = teams.length >= 10;\n    }\n    callBack(options);\n}\n", "CodeBleu_score": 35.411710969195774}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void)  try {\n    const teams = await searchTeams(term, {\n      page: 1,\n      per_page: 10,\n    });\n\n    const options = teams.map((team) => ({\n      label: team.name,\n      value: team.slug,\n    }));\n\n    callBack(options);\n  } catch (error) {\n    console.error(error);\n    callBack([]);\n  }\n}\n", "CodeBleu_score": 42.02677155042246}]}
{"instance_id": "845d63ff0f74", "generation_result": [{"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>  const currentRoles = this.state.currentRoles;\n  const groupTeams = this.state.groupTeams;\n  const groupChannels = this.state.groupChannels;\n  let list;\n  if (type === 'team') {\n    list = groupTeams;\n  } else if (type === 'channel') {\n    list = groupChannels;\n  }\n  const newList = list.map((item) => {\n    if (item.id === id) {\n      return {\n        ...item,\n        schemeAdmin,\n      };\n    }\n    return item;\n  });\n  this.setState({\n    currentRoles,\n    groupTeams: newList,\n    groupChannels: newList,\n    saving: true,\n  }, () => {\n    this.props.actions.blockNavigation(false);\n  });\n};\n", "CodeBleu_score": 29.827846375622258}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>    const currentRoles = this.state.currentRoles;\n    const groupTeams = this.state.groupTeams;\n    const groupChannels = this.state.groupChannels;\n\n    let list = [];\n    if (type === 'team') {\n        list = groupTeams;\n    } else {\n        list = groupChannels;\n    }\n\n    const newList = list.map((item) => {\n        if (item.id === id) {\n            item.schemeAdmin = schemeAdmin;\n        }\n        return item;\n    });\n\n    if (type === 'team') {\n        this.setState({\n            groupTeams: newList,\n            currentRoles: {\n                ...currentRoles,\n                groupTeams: newList,\n            },\n            saving: true,\n        });\n    } else {\n        this.setState({\n            groupChannels: newList,\n            currentRoles: {\n                ...currentRoles,\n                groupChannels: newList,\n            },\n            saving: true,\n        });\n    }\n\n    this.props.actions.blockNavigation();\n};\n", "CodeBleu_score": 36.30832363482561}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>    const { roles, groupTeams, groupChannels } = this.state;\n    let list;\n    let updateList;\n    if (type === 'team') {\n        list = groupTeams;\n        updateList = groupTeams;\n    } else if (type === 'channel') {\n        list = groupChannels;\n        updateList = groupChannels;\n    }\n    const currentRoles = list.filter(item => item.id === id);\n    const updatedRoles = currentRoles.map(item => {\n        if (item.id === id) {\n            return { ...item, schemeAdmin };\n        }\n        return item;\n    });\n    updateList = updateList.filter(item => item.id !== id);\n    updateList = updateList.concat(updatedRoles);\n    const newState = {\n        ...this.state,\n        roles,\n        [`group${type}s`]: updateList,\n        saving: true,\n    };\n    this.setState(newState);\n    this.props.actions.blockNavigation();\n};\n", "CodeBleu_score": 37.95886651050614}]}
{"instance_id": "02b54f0774f3", "generation_result": [{"code": "handleRolesToUpdate = async () =>    const { rolesToChange } = this.state;\n    const promises = [];\n\n    if (rolesToChange.length > 0) {\n        rolesToChange.forEach((role) => {\n            const { id, type } = role;\n            const promise = this.updateRole(id, type);\n            promises.push(promise);\n        });\n\n        const results = await Promise.allSettled(promises);\n\n        const errors = results.filter((result) => result.status === 'rejected');\n\n        if (errors.length > 0) {\n            const errorMessages = errors.map((error) => error.reason);\n            this.setState({ error: errorMessages.join(', ') });\n            return false;\n        }\n\n        this.setState({ rolesToChange: [] });\n        return true;\n    }\n\n    return false;\n};\n", "CodeBleu_score": 35.953773607438265}, {"code": "handleRolesToUpdate = async () =>    const rolesToUpdate = this.state.rolesToUpdate;\n    const promises = [];\n\n    if (rolesToUpdate.length > 0) {\n        rolesToUpdate.forEach((role) => {\n            const { syncable_id, syncable_type } = role;\n            const promise = this.updateRole(syncable_id, syncable_type, role);\n            promises.push(promise);\n        });\n\n        const results = await Promise.all(promises);\n\n        const errors = results.filter((result) => result.error);\n\n        if (errors.length > 0) {\n            this.setState({\n                rolesToUpdate: [],\n                error: \"Error updating roles\",\n            });\n        } else {\n            this.setState({\n                rolesToUpdate: [],\n                error: \"\",\n            });\n        }\n\n        return true;\n    }\n\n    return false;\n};\n", "CodeBleu_score": 35.55932271260778}, {"code": "handleRolesToUpdate = async () =>  const { rolesToUpdate, setRolesToUpdate } = this.state;\n  if (rolesToUpdate.length === 0) {\n    return true;\n  }\n  const promises = [];\n  for (const role of rolesToUpdate) {\n    const { id, type } = role;\n    const syncableId = this.getSyncableId(id, type);\n    if (syncableId) {\n      const promise = this.updateRole(syncableId, role);\n      promises.push(promise);\n    }\n  }\n  const results = await Promise.all(promises);\n  const errors = results.filter((result) => result.error);\n  if (errors.length > 0) {\n    const errorMessages = errors.map((error) => error.message).join(\", \");\n    setRolesToUpdate([]);\n    this.setState({ error: errorMessages });\n    return false;\n  } else {\n    setRolesToUpdate([]);\n    return true;\n  }\n};\n", "CodeBleu_score": 38.96542008941521}]}
{"instance_id": "30463a7bcb15", "generation_result": [{"code": "nextPage = async () =>  // Check if the next page exceeds the total number of members\n  if (this.state.nextPage > this.state.totalMembers) {\n    return;\n  }\n\n  // Set the loading state to true\n  this.setState({ loading: true });\n\n  // Fetch the members\n  const members = await fetchMembers(this.state.nextPage);\n\n  // Update the state with the fetched members\n  this.setState({\n    members: [...this.state.members, ...members],\n    loading: false,\n    nextPage: this.state.nextPage + 1,\n  });\n};\n", "CodeBleu_score": 17.707718623750807}, {"code": "nextPage = async () =>    if (this.state.nextPage > this.state.totalMembers) {\n      return;\n    }\n    this.setState({ loading: true });\n    const members = await this.getMembers(this.state.nextPage);\n    this.setState({\n      members: [...this.state.members, ...members],\n      loading: false,\n      nextPage: this.state.nextPage + 1,\n    });\n  };\n  ", "CodeBleu_score": 16.873267996369144}, {"code": "nextPage = async () =>  const {\n    members,\n    page,\n    totalMembers,\n    loading,\n    setLoading,\n    setMembers,\n    setPage,\n  } = this.state;\n\n  if (loading) return;\n\n  if (page * 10 >= totalMembers) return;\n\n  setLoading(true);\n\n  const response = await fetch(\n    `https://api.github.com/orgs/${this.state.org}/members?page=${page + 1}`\n  );\n\n  const data = await response.json();\n\n  setMembers(members.concat(data));\n  setPage(page + 1);\n  setLoading(false);\n};\n", "CodeBleu_score": 24.41422728515387}]}
{"instance_id": "d6aba286f65f", "generation_result": [{"code": "public handleGroupSearchKeyUp(e: any)  if (e.key === 'Enter') {\n    this.setState({\n      page: 0\n    });\n    this.searchGroups();\n    let state = {\n      isLoading: false,\n      isError: false,\n      isEmpty: false,\n      isSearching: false\n    };\n    if (this.state.searchString.length > 0) {\n      state.isSearching = true;\n    }\n    if (this.state.groups.length === 0) {\n      state.isEmpty = true;\n    }\n    this.setState(state);\n  }\n}\n", "CodeBleu_score": 30.880657813863895}, {"code": "public handleGroupSearchKeyUp(e: any)  if (e.key === 'Enter') {\n    this.setState({ page: 0 });\n    this.searchGroups();\n    const state = {\n      ...this.state,\n      ...this.groupSearchStateMapping[this.state.searchString.length]\n    };\n    this.setState(state);\n  }\n}", "CodeBleu_score": 29.33310749321335}, {"code": "public handleGroupSearchKeyUp(e: any)  if (e.keyCode === 13) {\n    this.setState({\n      page: 0,\n    });\n    this.searchGroups();\n    const state = {\n      search: this.state.search,\n      groupName: this.state.search,\n      groupDescription: this.state.search,\n      groupId: this.state.search,\n      groupNameOrId: this.state.search,\n    };\n    const mapping = {\n      groupName: 'groupName',\n      groupDescription: 'groupDescription',\n      groupId: 'groupId',\n      groupNameOrId: 'groupNameOrId',\n    };\n    const newState = Object.keys(mapping).reduce((acc, key) => {\n      if (state[key] === mapping[key]) {\n        acc[key] = true;\n      }\n      return acc;\n    }, {});\n    this.setState(newState);\n  }\n}\n", "CodeBleu_score": 34.378032586577476}]}
{"instance_id": "f0ab31c8ac4b", "generation_result": [{"code": "reloadPercentage = async () =>     let percentage = await this.props.upgradeStatus();\n    if (percentage > 0 && !this.interval) {\n      this.interval = setInterval(() => {\n        this.reloadPercentage();\n      }, 2000);\n    }\n    if (percentage === 100) {\n      clearInterval(this.interval);\n      this.props.onUpgradeComplete();\n    }\n    if (percentage === 0) {\n      clearInterval(this.interval);\n      this.props.onError(`Error: ${percentage}`);\n    }\n    this.setState({\n      percentage,\n      error: this.props.error\n    });\n  };\n", "CodeBleu_score": 29.6664960180324}, {"code": "reloadPercentage = async () =>   let interval = this.state.interval;\n  let percentage = await this.props.upgradeStatus();\n  if (percentage > 0 && !interval) {\n    this.setState({ interval: setInterval(this.reloadPercentage, 2000) });\n  }\n  if (percentage === 100) {\n    this.setState({ percentage: 100 });\n    clearInterval(interval);\n    this.props.onUpgradeComplete();\n  } else if (percentage === 0) {\n    this.setState({ percentage: 0 });\n    clearInterval(interval);\n    this.props.onUpgradeError();\n  } else {\n    this.setState({ percentage: percentage });\n  }\n}", "CodeBleu_score": 32.00401866137207}, {"code": "reloadPercentage = async () =>     const { percentage, error } = await this.props.upgradeStatus();\n    if (percentage > 0 && !this.interval) {\n      this.interval = setInterval(this.reloadPercentage, 2000);\n    }\n    if (percentage === 100) {\n      clearInterval(this.interval);\n      this.interval = null;\n      this.props.onComplete();\n    }\n    if (error) {\n      clearInterval(this.interval);\n      this.interval = null;\n      this.setState({ error });\n    }\n    this.setState({ percentage });\n  };\n\n  /**\n   * This function, componentDidMount, asynchronously checks the upgrade status and handles the interval for status updates.\\nIt retrieves the upgrade percentage and any error, clearing the interval and logging events if the upgrade is complete or an error occurred.\\nIf the percentage is greater than 0 and no interval is set, it sets an interval to recheck the status every 2 seconds.\\nIt updates the component state with the current upgrade percentage and any error message.\n   */\n  componentDidMount() {\n    this.reloadPercentage();\n  }\n\n  /**\n   * This function, componentWillUnmount, clears the interval for status updates.\n   */\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  /**\n   * This function, render, returns a div with a progress bar and an error message if there is one.\n   * @returns A div with a progress bar and an error message if there is one.\n   */\n  render() {\n    const { percentage, error } = this.state;\n    return (\n      <div>\n        <ProgressBar\n          variant=\"success\"\n          now={percentage}\n          label={`${percentage}%`}\n        />\n        {error && <p>{error}</p>}\n      </div>\n    );\n  }\n\n  /**\n   * This function, componentDidMount, asynchronously checks the upgrade status and handles the interval for status updates.\\nIt retrieves the upgrade percentage and any error, clearing the interval and logging events if the upgrade is complete or an error occurred", "CodeBleu_score": 48.41429354981918}]}
{"instance_id": "f91ab43e6fe1", "generation_result": [{"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) =>     e.preventDefault();\n    if (file) {\n      setUploading(true);\n      try {\n        await dispatch(upload(file));\n        setFile(null);\n        setServerError(\"\");\n        setUploading(false);\n        setUploadSuccessful(true);\n      } catch (error: any) {\n        setServerError(error.message);\n        setFile(null);\n        setUploading(false);\n      }\n    }\n  };\n\n  /**\n   * This function, handleChange, handles the change event of a file input element.\\nIt sets the file object to the selected file and sets the server error message to an empty string.\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setFile(e.target.files[0]);\n      setServerError(\"\");\n    }\n  };\n\n  /**\n   * This function, handleClose, handles the close event of the success message.\\nIt sets the upload success state to false.\n   */\n  const handleClose = () => {\n    setUploadSuccessful(false);\n  };\n\n  /**\n   * This function, handleCloseError, handles the close event of the error message.\\nIt sets the server error message to an empty string.\n   */\n  const handleCloseError = () => {\n    setServerError(\"\");\n  };", "CodeBleu_score": 42.00574532294657}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) =>     e.preventDefault();\n    if (file) {\n      setUploading(true);\n      try {\n        await dispatch(upload(file));\n        setFile(null);\n        setServerError('');\n        setUploading(false);\n        setUploadSuccess(true);\n      } catch (error) {\n        setFile(null);\n        setServerError(error.message);\n        setUploading(false);\n      }\n    }\n  };\n", "CodeBleu_score": 38.825748558568826}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) =>     e.preventDefault();\n    const file = document.getElementById('file') as HTMLInputElement;\n    if (file.files && file.files.length > 0) {\n        setUploading(true);\n        try {\n            await dispatch(uploadFile(file.files[0]));\n            setServerError('');\n            setFile(null);\n            setUploading(false);\n            setUploadSuccess(true);\n        } catch (error: any) {\n            setServerError(error.message);\n            setUploading(false);\n            setFile(null);\n        }\n    }\n};\n", "CodeBleu_score": 37.20915437741245}]}
{"instance_id": "840d965d4dcc", "generation_result": [{"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>  e.preventDefault();\n  if (this.state.confirmation) {\n    this.setState({ confirmation: false });\n    return;\n  }\n  this.setState({ saving: true, serverErrors: [] });\n  if (this.state.saveNeeded) {\n    if (this.state.settingsType === \"permissions\") {\n      this.setState({ roles: this.mapSettingsToRoles() });\n      const { roles, serverErrors } = await this.updateRoles();\n      if (serverErrors.length) {\n        this.setState({ serverErrors, saving: false });\n        return;\n      }\n      this.setState({ roles, saving: false });\n    } else {\n      const { serverErrors } = await this.updateConfig();\n      if (serverErrors.length) {\n        this.setState({ serverErrors, saving: false });\n        return;\n      }\n      this.setState({ saving: false });\n      this.props.history.push(\"/\");\n    }\n  } else {\n    this.setState({ saving: false });\n    this.props.history.push(\"/\");\n  }\n};\n", "CodeBleu_score": 24.003570627480297}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>    e.preventDefault();\n\n    if (this.state.confirmation) {\n        this.setState({ confirmation: false });\n        return;\n    }\n\n    this.setState({ saving: true, serverErrors: null });\n\n    if (this.state.saveNeeded) {\n        this.setState({ saveNeeded: false });\n        this.processPermissionSettings();\n    } else {\n        this.setState({ saveNeeded: true });\n        this.processConfigurationSettings();\n    }\n};\n", "CodeBleu_score": 12.721251529126635}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>  e.preventDefault();\n  if (this.state.confirmation) {\n    this.setState({ confirmation: false });\n    return;\n  }\n  this.setState({ saving: true, serverErrors: [] });\n  if (this.state.saveNeeded) {\n    if (this.state.settingsType === 'permissions') {\n      const { roleBindings, roleBindingsErrors } = this.mapSettingsToRoleBindings();\n      if (roleBindingsErrors.length) {\n        this.setState({ serverErrors: roleBindingsErrors });\n        return;\n      }\n      await this.updateRoles(roleBindings);\n    } else {\n      await this.submitSettings();\n    }\n  } else {\n    this.setState({ saveNeeded: true });\n  }\n  this.setState({ saving: false });\n};\n", "CodeBleu_score": 19.36798394417568}]}
{"instance_id": "86453b2860e5", "generation_result": [{"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>  const { text, className } = props;\n  const { openSalesLink } = useSalesLink();\n  const event = useEvent();\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    event.track(\"Contact Us Button Clicked\", {});\n    openSalesLink();\n  };\n  return (\n    <button\n      className={`${className} ${styles.button}`}\n      onClick={handleClick}\n      type=\"button\"\n    >\n      {text}\n    </button>\n  );\n};\n", "CodeBleu_score": 30.300441710363497}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>  const { text, customClass } = props;\n  const { openSalesLink } = useSalesLink();\n  const { trackEvent } = useTrackEvent();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    trackEvent({\n      category: \"Contact Us Button\",\n      action: \"Click\",\n      label: \"Contact Us Button Clicked\",\n    });\n    openSalesLink();\n  };\n\n  return (\n    <button\n      className={`${customClass} flex items-center justify-center text-center rounded-md bg-blue-500 hover:bg-blue-600 text-white py-2 px-4`}\n      onClick={handleClick}\n    >\n      {text}\n    </button>\n  );\n};\n", "CodeBleu_score": 33.56335371670577}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>  const { text, className } = props;\n  const { openSalesLink } = useSalesLink();\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    trackEvent(\"Contact Us\", \"Clicked\");\n    openSalesLink();\n  };\n  return (\n    <button className={className} onClick={handleClick}>\n      {text}\n    </button>\n  );\n};\n", "CodeBleu_score": 25.990028679533843}]}
{"instance_id": "49713e95ae2e", "generation_result": [{"code": "const RenewalLink = (props: RenewalLinkProps) =>   const {\n    disabled,\n    formattedMessage,\n    openContactSales,\n  } = props;\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <button\n      className=\"renewal-link\"\n      disabled={disabled}\n      onClick={handleClick}\n    >\n      {formattedMessage}\n    </button>\n  );\n};\n", "CodeBleu_score": 36.76309997172445}, {"code": "const RenewalLink = (props: RenewalLinkProps) =>     const {\n        disabled = false,\n        onClick,\n        text = '',\n        className = '',\n        style = {},\n        ...rest\n    } = props;\n\n    const { openContactSales } = useContactSales();\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        openContactSales();\n        onClick && onClick(e);\n    }\n\n    return (\n        <button\n            className={`${className} ${disabled ? 'disabled' : ''}`}\n            style={style}\n            onClick={handleClick}\n            disabled={disabled}\n            {...rest}\n        >\n            {text}\n        </button>\n    );\n}\n", "CodeBleu_score": 41.12391012804451}, {"code": "const RenewalLink = (props: RenewalLinkProps) =>   const { openContactSales, isDisabled } = useContactSales();\n\n  const onClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <button\n      className={`btn btn-primary ${isDisabled ? 'disabled' : ''}`}\n      onClick={onClick}\n    >\n      {formatMessage(messages.renewalLink)}\n    </button>\n  );\n};\n", "CodeBleu_score": 30.362474578359404}]}
{"instance_id": "23618eba67aa", "generation_result": [{"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>  let hasErrors = false;\n  elements.forEach(element => {\n    const fieldError = fieldErrors && fieldErrors[element.name];\n    if (fieldError) {\n      element.error = true;\n      element.errorMessage = fieldError;\n      element.errorMarkdown = true;\n      hasErrors = true;\n    } else if (element.error) {\n      element.error = false;\n      element.errorMessage = undefined;\n      element.errorMarkdown = false;\n    }\n  });\n  if (formError) {\n    elements.forEach(element => {\n      element.error = true;\n      element.errorMessage = formError;\n      element.errorMarkdown = true;\n    });\n    hasErrors = true;\n  }\n  return hasErrors;\n};\n", "CodeBleu_score": 29.333386844476163}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>    let hasErrors = false;\n\n    if (formError) {\n        hasErrors = true;\n        elements.forEach(element => {\n            if (element.type === 'form') {\n                element.error = formError;\n            }\n        });\n    }\n\n    if (fieldErrors) {\n        hasErrors = true;\n        elements.forEach(element => {\n            if (element.type === 'field') {\n                const error = fieldErrors[element.id];\n                if (error) {\n                    element.error = error;\n                    if (element.type === 'markdown') {\n                        element.value = error;\n                    }\n                }\n            }\n        });\n    }\n\n    return hasErrors;\n};\n", "CodeBleu_score": 33.90838172899673}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>    let hasErrors = false;\n    elements.forEach(element => {\n        if (element.type === 'textarea') {\n            if (fieldErrors && fieldErrors[element.id]) {\n                element.error = fieldErrors[element.id];\n                element.errorMarkdown = <Markdown markdown={fieldErrors[element.id]} />;\n                hasErrors = true;\n            }\n        }\n        if (element.type === 'input') {\n            if (fieldErrors && fieldErrors[element.id]) {\n                element.error = fieldErrors[element.id];\n                element.errorMarkdown = <Markdown markdown={fieldErrors[element.id]} />;\n                hasErrors = true;\n            }\n        }\n        if (element.type === 'select') {\n            if (fieldErrors && fieldErrors[element.id]) {\n                element.error = fieldErrors[element.id];\n                element.errorMarkdown = <Markdown markdown={fieldErrors[element.id]} />;\n                hasErrors = true;\n            }\n        }\n        if (element.type === 'checkbox') {\n            if (fieldErrors && fieldErrors[element.id]) {\n                element.error = fieldErrors[element.id];\n                element.errorMarkdown = <Markdown markdown={fieldErrors[element.id]} />;\n                hasErrors = true;\n            }\n        }\n        if (element.type === 'radio') {\n            if (fieldErrors && fieldErrors[element.id]) {\n                element.error = fieldErrors[element.id];\n                element.errorMarkdown = <Markdown markdown={fieldErrors[element.id]} />;\n                hasErrors = true;\n            }\n        }\n        if (element.type === 'file') {\n            if (fieldErrors && fieldErrors[element.id]) {\n                element.error = fieldErrors[element.id];\n                element.errorMarkdown = <Markdown markdown={fieldErrors[element.id]} />;\n                hasErrors = true;\n            }\n        }\n        if (element.type === 'date') {\n            if (fieldErrors && fieldErrors[element.id]) {", "CodeBleu_score": 26.064716807294865}]}
{"instance_id": "10be7e79f7e0", "generation_result": [{"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>    const inputLowerCase = userInput.toLowerCase();\n    const autocompleteResults = await autocomplete(inputLowerCase);\n\n    return autocompleteResults.map((channel) => ({\n        label: channel.displayName,\n        value: channel.id,\n    }));\n};\n", "CodeBleu_score": 34.310196222089495}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>  // Convert user input to lowercase\n  const lowercaseInput = userInput.toLowerCase();\n\n  // Call autocomplete function to search for matching channels\n  const channels = await autocomplete(lowercaseInput);\n\n  // Transform search results into selection options\n  const options = channels.map((channel) => ({\n    label: channel.display_name,\n    value: channel.id,\n  }));\n\n  return options;\n};\n", "CodeBleu_score": 36.07857764208701}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>    const input = userInput.toLowerCase();\n    const channelOptions = await autocomplete(input);\n\n    return channelOptions.map((channel: Channel) => ({\n        label: channel.displayName,\n        value: channel.id,\n    }));\n};\n", "CodeBleu_score": 32.54566751579075}]}
{"instance_id": "b44d060ba306", "generation_result": [{"code": "handleJoin = async (channel: Channel, done: () => void) =>   const { actions, currentUserId, teamId, teamName } = this.props;\n  const { joinChannel } = actions;\n\n  if (!this.isMember(channel)) {\n    try {\n      await joinChannel(teamId, channel.id);\n      this.setState({ serverError: '' });\n      this.updateChannelMemberCount(channel);\n      this.navigateToChannel(channel);\n      this.closeRightHandSide();\n    } catch (error) {\n      this.setState({ serverError: error.message });\n    }\n  }\n\n  if (typeof done === 'function') {\n    done();\n  }\n};\n", "CodeBleu_score": 36.99870836656714}, {"code": "handleJoin = async (channel: Channel, done: () => void) =>     const { actions, currentUserId, teamId, teamName } = this.props;\n    if (!channel.members.includes(currentUserId)) {\n      try {\n        await actions.joinChannel(channel.id, teamId);\n        this.setState({ serverError: '' });\n        this.setState({ channelMemberCount: channel.member_count });\n        this.props.history.push(`/${teamName}/channels/${channel.name}`);\n        this.props.closeRightHandSide();\n        done();\n      } catch (error) {\n        this.setState({ serverError: error.message });\n      }\n    }\n  }\n  ", "CodeBleu_score": 33.817721152068415}, {"code": "handleJoin = async (channel: Channel, done: () => void) =>     const { actions, currentUserId, teamId, teamName } = this.props;\n    const { joinChannel } = actions;\n\n    if (!channel.is_member) {\n        try {\n            await joinChannel(teamId, channel.id, currentUserId);\n            this.setState({\n                serverError: '',\n            });\n            this.props.navigateTo(`/${teamName}/channels/${channel.name}`);\n            this.closeRHS();\n            done();\n        } catch (error) {\n            this.setState({\n                serverError: error.message,\n            });\n        }\n    } else {\n        this.setState({\n            serverError: '',\n        });\n        this.props.navigateTo(`/${teamName}/channels/${channel.name}`);\n        this.closeRHS();\n        done();\n    }\n}\n", "CodeBleu_score": 32.97650323328916}]}
{"instance_id": "c6636f0c9c0b", "generation_result": [{"code": "const CardHeader: React.FC<Props> = (props: Props) =>  const { className, onClick, isExpanded, children } = props;\n  return (\n    <div\n      className={`${className} ${isExpanded ? \"expanded\" : \"\"}`}\n      onClick={onClick}\n    >\n      {children}\n      {isExpanded && <hr />}\n    </div>\n  );\n};\n", "CodeBleu_score": 33.29997833861884}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>  return (\n    <div\n      className={`${props.expanded ? \"expanded\" : \"\"} card-header`}\n      onClick={() => props.onClick()}\n    >\n      {props.children}\n      {props.expanded && <hr />}\n    </div>\n  );\n};\n", "CodeBleu_score": 52.3349129547174}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>  return (\n    <div\n      className={`card-header ${props.expanded ? \"expanded\" : \"\"}`}\n      onClick={props.onClick}\n    >\n      {props.children}\n      {props.expanded && <hr />}\n    </div>\n  );\n};\n", "CodeBleu_score": 52.696678189377245}]}
{"instance_id": "230cb3cd6dd5", "generation_result": [{"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>  return (\n    <div className=\"flex flex-col gap-2\">\n      <div className=\"flex flex-col gap-1\">\n        <h2 className=\"text-lg font-bold text-gray-900\">{props.title}</h2>\n        {props.subtitle && (\n          <p className=\"text-sm text-gray-500\">{props.subtitle}</p>\n        )}\n      </div>\n      {props.buttonText && props.onClick && (\n        <button\n          className={`text-sm font-medium text-gray-500 hover:text-gray-700 ${\n            props.isDisabled ? \"cursor-not-allowed\" : \"cursor-pointer\"\n          }`}\n          onClick={props.onClick}\n          disabled={props.isDisabled}\n        >\n          {props.buttonText}\n        </button>\n      )}\n    </div>\n  );\n};\n", "CodeBleu_score": 29.348479934589182}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>  const { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n  return (\n    <div className=\"flex justify-between items-center\">\n      <div className=\"flex flex-col\">\n        <h1 className=\"text-xl font-bold\">{title}</h1>\n        {subtitle && <p className=\"text-sm\">{subtitle}</p>}\n      </div>\n      {buttonText && (\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n          onClick={onClick}\n          disabled={isDisabled}\n        >\n          {buttonText}\n        </button>\n      )}\n    </div>\n  );\n};\n", "CodeBleu_score": 25.88057583128484}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>  return (\n    <div className=\"flex flex-col items-start gap-2\">\n      <h1 className=\"text-xl font-bold\">{props.title}</h1>\n      {props.subtitle && (\n        <h2 className=\"text-sm text-gray-500\">{props.subtitle}</h2>\n      )}\n      {props.buttonText && props.onClick && (\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:bg-gray-500 disabled:cursor-not-allowed\"\n          onClick={props.onClick}\n          disabled={props.isDisabled}\n        >\n          {props.buttonText}\n        </button>\n      )}\n    </div>\n  );\n};\n", "CodeBleu_score": 25.558542027093935}]}
{"instance_id": "eb5c7946fd59", "generation_result": [{"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {    const { notifications } = services;\n    if (!notifications) {\n      throw new Error('Notifications service is not available');\n    }\n  \n    const show = (title: string, body: string, color: string, icon?: string, lifetime?: number, onClose?: () => void) => {\n      notifications.toasts.add({\n        title,\n        text: body,\n        color,\n        icon,\n        ...(lifetime && { lifetime }),\n        ...(onClose && { onClose }),\n      });\n    };\n  \n    const success = (title: string, body: string, lifetime?: number, onClose?: () => void) => {\n      show(title, body, 'success', 'check', lifetime, onClose);\n    };\n  \n    const warning = (title: string, body: string, lifetime?: number, onClose?: () => void) => {\n      show(title, body, 'warning', 'exclamation', lifetime, onClose);\n    };\n  \n    const danger = (title: string, body: string, lifetime?: number, onClose?: () => void) => {\n      show(title, body, 'danger', 'alert', lifetime, onClose);\n    };\n  \n    return {\n      show,\n      success,\n      warning,\n      danger,\n    };\n  }\n};", "CodeBleu_score": 31.397219041765233}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {  const { notifications } = services;\n  if (!notifications) {\n    throw new Error('Notifications service is unavailable');\n  }\n\n  const show = ({\n    title,\n    body,\n    color,\n    icon,\n    lifetime,\n    onClose,\n  }: KibanaReactNotificationsShowOptions) => {\n    notifications.toasts.add({\n      title,\n      text: body,\n      color,\n      icon,\n      'data-test-subj': 'kibanaReactNotification',\n      'data-test-subj-body': body,\n      'data-test-subj-title': title,\n      'data-test-subj-color': color,\n      'data-test-subj-icon': icon,\n      onClose,\n      'data-test-subj-onClose': onClose,\n      'data-test-subj-lifetime': lifetime,\n      'data-test-subj-body-lifetime': lifetime,\n      'data-test-subj-title-lifetime': lifetime,\n      'data-test-subj-color-lifetime': lifetime,\n      'data-test-subj-icon-lifetime': lifetime,\n      'data-test-subj-onClose-lifetime': lifetime,\n    });\n  };\n\n  const success = ({\n    title,\n    body,\n    lifetime,\n    onClose,\n  }: KibanaReactNotificationsShowOptions) => {\n    show({\n      title,\n      body,\n      color: 'success',\n      icon: 'check',\n      lifetime,\n      onClose,\n    });\n  };\n\n  const warning = ({\n    title,\n    body,\n    lifetime,\n    onClose,\n  }: KibanaReactNotificationsShowOptions) => {\n    show({\n      title,\n      body,\n      color: 'warning',\n      icon: 'warning',\n      lifetime,\n      onClose,\n    });\n  };\n\n  const danger = ({\n    title,\n    body,\n    lifetime,\n    onClose,\n  }: Kibana", "CodeBleu_score": 28.313564682995402}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {  const {\n    notifications: {\n      toasts: {\n        add: addToast,\n        remove: removeToast,\n        get: getToasts,\n        getAll: getAllToasts,\n        getAllSuccess: getAllSuccessToasts,\n        getAllWarning: getAllWarningToasts,\n        getAllDanger: getAllDangerToasts,\n      },\n    },\n  } = services;\n\n  const show = ({\n    title,\n    body,\n    color,\n    icon,\n    lifetime,\n    onClose,\n  }: KibanaNotification) => {\n    addToast({\n      title,\n      color,\n      icon,\n      text: body,\n      'data-test-subj': 'kibanaReactNotification',\n      'aria-label': 'Kibana Notification',\n      'aria-live': 'assertive',\n      'aria-atomic': 'true',\n      onClose,\n      'data-test-subj-lifetime': lifetime,\n    });\n  };\n\n  const success = ({ title, body, lifetime, onClose }: KibanaNotification) => {\n    show({\n      title,\n      body,\n      color: 'success',\n      icon: 'check',\n      lifetime,\n      onClose,\n    });\n  };\n\n  const warning = ({ title, body, lifetime, onClose }: KibanaNotification) => {\n    show({\n      title,\n      body,\n      color: 'warning',\n      icon: 'warning',\n      lifetime,\n      onClose,\n    });\n  };\n\n  const danger = ({ title, body, lifetime, onClose }: KibanaNotification) => {\n    show({\n      title,\n      body,\n      color: 'danger',\n      icon: 'error',\n      lifetime,\n      onClose,\n    });\n  };\n\n  return {\n    show,\n    success,\n    warning,\n    danger,\n    getToasts,\n    getAllToasts,\n    getAllSuccessToasts,\n    getAllWarningToasts,\n    getAllDangerToasts,\n  };\n}\n", "CodeBleu_score": 28.193414350794267}]}
{"instance_id": "e8c4d43e5232", "generation_result": [{"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>  if (node instanceof HTMLElement) {\n    return coreOverlays.openFlyout(node, options);\n  }\n  const mountPoint = getMountPoint(node);\n  return overlays.openFlyout(mountPoint, options);\n};\n", "CodeBleu_score": 30.343130152150177}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>  const { overlays } = getCoreServices();\n  return overlays.openFlyout(node, options);\n};\n", "CodeBleu_score": 25.872812473297202}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>  const {\n    services: {\n      overlays: { openFlyout: openFlyoutCore },\n    },\n  } = getServices();\n\n  if (openFlyoutCore) {\n    return openFlyoutCore(node, options);\n  }\n\n  const {\n    services: {\n      overlays: { openFlyout: openFlyoutOverlays },\n    },\n  } = getServices();\n\n  if (openFlyoutOverlays) {\n    return openFlyoutOverlays(node, options);\n  }\n};\n", "CodeBleu_score": 25.401665744237466}]}
{"instance_id": "89d99efaa3c9", "generation_result": [{"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>    if (onClickCallback) {\n      onClickCallback(event);\n    }\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (event.target && (event.target as HTMLElement).target) {\n      return;\n    }\n    if (event.button !== 0) {\n      return;\n    }\n    if (event.metaKey || event.altKey || event.ctrlKey || event.shiftKey) {\n      return;\n    }\n    event.preventDefault();\n    history.push(to);\n  };\n", "CodeBleu_score": 49.36718673853308}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>    if (onClickCallback) onClickCallback(event);\n\n    if (event.defaultPrevented) return;\n\n    const target = event.target as HTMLElement;\n\n    if (target && target.getAttribute) {\n      if (target.getAttribute('target') !== '_blank') {\n        event.preventDefault();\n\n        if (event.button === 0) {\n          if (to) {\n            history.push(to);\n          }\n        }\n      }\n    }\n  };\n", "CodeBleu_score": 39.11570290703662}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>    if (onClickCallback) onClickCallback(event);\n\n    if (event.defaultPrevented) return;\n\n    if (event.target && (event.target as HTMLElement).target) return;\n\n    if (event.button !== 0) return;\n\n    if (event.metaKey || event.altKey || event.ctrlKey || event.shiftKey) return;\n\n    event.preventDefault();\n\n    history.push(to);\n  };\n", "CodeBleu_score": 32.95606561498788}]}
{"instance_id": "8d8e28c04bbd", "generation_result": [{"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] =>   const settings = useKibana().services.uiSettings;\n  if (!settings) {\n    throw new Error('Settings service is unavailable');\n  }\n  const setting$ = settings.get$<T>(key, defaultValue);\n  const [value, setValue] = useState<T>(defaultValue);\n  useEffect(() => {\n    const subscription = setting$.subscribe(newValue => {\n      setValue(newValue);\n    });\n    return () => subscription.unsubscribe();\n  }, [setting$]);\n  return [value, setValue];\n};", "CodeBleu_score": 37.10081036314872}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] =>     const { uiSettings } = useKibana().services;\n    const [value, setValue] = useState<T>(defaultValue);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const subscription = uiSettings.get$(key).subscribe((newValue) => {\n            setValue(newValue);\n            setIsLoading(false);\n        });\n\n        return () => subscription.unsubscribe();\n    }, [key, uiSettings]);\n\n    const setter = useCallback(\n        (newValue: T) => {\n            setIsLoading(true);\n            uiSettings.set(key, newValue).then(() => {\n                setIsLoading(false);\n            });\n        },\n        [key, uiSettings]\n    );\n\n    return [value, setter];\n};\n", "CodeBleu_score": 34.294961099080695}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] =>   const { uiSettings } = useKibana().services;\n  const [value, setValue] = useState<T>(defaultValue ?? (uiSettings.get(key) as T));\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    uiSettings.get$(key).subscribe((newValue) => {\n      setValue(newValue);\n      setIsLoading(false);\n    });\n  }, [key, uiSettings]);\n\n  const setter: Setter<T> = useCallback(\n    (newValue: T) => {\n      setIsLoading(true);\n      uiSettings.set(key, newValue).then(() => {\n        setIsLoading(false);\n      });\n    },\n    [key, uiSettings]\n  );\n\n  return [value, setter];\n};\n", "CodeBleu_score": 35.51944724177294}]}
{"instance_id": "7da631faf620", "generation_result": [{"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>  const panel = panels[id];\n  const items = panel.items;\n  const itemsCount = items.length;\n  const submenuItemsCount = 10;\n  if (itemsCount > submenuItemsCount) {\n    const visibleItems = items.slice(0, submenuItemsCount);\n    const submenuItems = items.slice(submenuItemsCount);\n    const submenuPanel = {\n      id: `${id}-submenu`,\n      title: panel.title,\n      items: submenuItems,\n    };\n    panels[submenuPanel.id] = submenuPanel;\n    const moreItem = {\n      id: `${id}-more`,\n      title: 'More',\n      type: 'link',\n      link: submenuPanel.id,\n    };\n    visibleItems.push(moreItem);\n    panel.items = visibleItems;\n  }\n};\n", "CodeBleu_score": 33.7081801595869}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>    const panel = panels[id];\n    const items = panel.items;\n    const itemsCount = items.length;\n    const submenuItemsCount = 5;\n\n    if (itemsCount > submenuItemsCount) {\n        const visibleItems = items.slice(0, submenuItemsCount);\n        const submenuItems = items.slice(submenuItemsCount);\n\n        const submenuPanel = {\n            ...panel,\n            items: submenuItems,\n        };\n\n        const moreItem = {\n            ...items[submenuItemsCount],\n            submenu: submenuPanel.id,\n        };\n\n        const updatedItems = [...visibleItems, moreItem];\n\n        const updatedPanel = {\n            ...panel,\n            items: updatedItems,\n        };\n\n        panels[id] = updatedPanel;\n        panels[submenuPanel.id] = submenuPanel;\n    }\n};\n", "CodeBleu_score": 32.00403964080576}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>  const panel = panels[id];\n  if (!panel || panel.items.length <= 1) {\n    return;\n  }\n\n  const visibleItems = panel.items.slice(0, 10);\n  const submenuItems = panel.items.slice(10);\n\n  const submenuPanel = {\n    ...panel,\n    items: submenuItems,\n    submenu: {\n      id: `${id}-submenu`,\n      title: 'More',\n      items: submenuItems,\n    },\n  };\n\n  panel.items = visibleItems;\n  panels[`${id}-submenu`] = submenuPanel;\n};\n", "CodeBleu_score": 30.681833516875468}]}
{"instance_id": "7a1a98211380", "generation_result": [{"code": "private scheduleFlush()    if (this.batchingQueue.length > 0) {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n\n        if (this.batchingQueue.length === 1) {\n            this.executeTask(this.batchingQueue[0]);\n        } else {\n            this.showPopupMenu();\n        }\n\n        this.batchingQueue = [];\n    }\n}\n", "CodeBleu_score": 13.264530646868455}, {"code": "private scheduleFlush()    if (this.pendingTasks.length === 0) {\n        const tasks = this.batchingQueue;\n        this.batchingQueue = [];\n\n        if (tasks.length === 0) {\n            return;\n        }\n\n        const alwaysShowPopup = tasks.some(task => task.alwaysShowPopup);\n\n        if (alwaysShowPopup) {\n            this.displayPopupMenu(tasks);\n        } else if (tasks.length === 1) {\n            tasks[0].execute();\n        } else {\n            this.displayPopupMenu(tasks);\n        }\n    } else {\n        setTimeout(() => {\n            this.scheduleFlush();\n        }, 0);\n    }\n}\n", "CodeBleu_score": 46.792762697223736}, {"code": "private scheduleFlush()  if (this.batchingQueue.length === 0) {\n    this.pendingTasks = this.batchingQueue.reduce((acc, task) => {\n      if (task.alwaysShow) {\n        acc.push(task);\n      }\n      return acc;\n    }, []);\n    if (this.pendingTasks.length === 1) {\n      this.pendingTasks[0].execute();\n    } else if (this.pendingTasks.length > 1) {\n      this.showPopupMenu(this.pendingTasks);\n    }\n  }\n  this.batchingQueue = [];\n}\n", "CodeBleu_score": 20.296874859132746}]}
{"instance_id": "702779fd9f4a", "generation_result": [{"code": "public async execute(context: Context, alwaysShowPopup?: boolean)    const actions = await this.getCompatibleActions(context);\n    const promises = actions.map(async (action) => {\n        await this.executionService.execute(action, context, this, alwaysShowPopup);\n    });\n    await Promise.all(promises);\n}\n", "CodeBleu_score": 43.84982323237638}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean)    const actions = await this.getCompatibleActions(context);\n    const actionResults = await Promise.all(actions.map(action => {\n        return this.executionService.execute(action, context, this, alwaysShowPopup);\n    }));\n    return actionResults;\n}", "CodeBleu_score": 41.44968804260321}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean)  const actions = await this.getCompatibleActions(context);\n  const actionContext = {\n    context,\n    actions,\n    alwaysShowPopup,\n  };\n  await Promise.all(actions.map(action => action.execute(actionContext)));\n}\n", "CodeBleu_score": 31.375299301904146}]}
{"instance_id": "16fd1e46a9be", "generation_result": [{"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[]   const images: Uint8Array[] = [];\n  let frame = 0;\n  for (const subChunk of chunk.subChunks) {\n    if (frame >= frameCount) {\n      break;\n    }\n    if (subChunk.type !== 'icon') {\n      throw new Error(`Unexpected sub-chunk type: ${subChunk.type}`);\n    }\n    const imageData = subChunk.data.slice(subChunk.offset, subChunk.offset + subChunk.length);\n    images.push(imageData);\n    frame++;\n  }\n  return images;\n}\n", "CodeBleu_score": 47.405101157510956}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[]     const images: Uint8Array[] = [];\n    let i = 0;\n    while (i < frameCount) {\n        const subChunk = chunk.subChunks[i];\n        if (subChunk.type !== 'icon') {\n            throw new Error(`Invalid sub-chunk type: ${subChunk.type}`);\n        }\n        const imageData = chunk.data.slice(subChunk.offset, subChunk.offset + subChunk.size);\n        images.push(imageData);\n        i++;\n    }\n    return images;\n}\n", "CodeBleu_score": 44.55420268482938}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[]   const images: Uint8Array[] = [];\n  let frame = 0;\n  let i = 0;\n  while (frame < frameCount && i < chunk.data.length) {\n    const subChunk = chunk.data[i];\n    if (subChunk.type === 'icon') {\n      const image = subChunk.data.slice(16);\n      images.push(image);\n      frame++;\n    } else {\n      throw new Error(`Unexpected sub-chunk type: ${subChunk.type}`);\n    }\n    i++;\n  }\n  return images;\n}\n", "CodeBleu_score": 46.54904519317827}]}
{"instance_id": "6b6f91239073", "generation_result": [{"code": "function readAni(contents: Uint8Array): AniCursorImage    const data = new TextDecoder().decode(contents);\n    const lines = data.split('\\n');\n    const imageCount = parseInt(lines[0]);\n    const displayRate = parseInt(lines[1]);\n    const duration = imageCount * 1000 / displayRate;\n    const frames = lines.slice(2).map((line, index) => {\n        const url = line;\n        const percentage = [];\n        for (let i = 0; i < imageCount; i++) {\n            percentage.push(i * 100 / imageCount);\n        }\n        return { url, percentage };\n    });\n    return { duration, frames };\n}\n", "CodeBleu_score": 33.8331636631008}, {"code": "function readAni(contents: Uint8Array): AniCursorImage    const decoder = new TextDecoder();\n    const text = decoder.decode(contents);\n    const lines = text.split('\\n');\n\n    const duration = parseInt(lines[0]);\n    const displayRate = parseInt(lines[1]);\n    const totalFrames = parseInt(lines[2]);\n    const imagePath = lines[3];\n\n    const frames: Frame[] = [];\n\n    for (let i = 0; i < totalFrames; i++) {\n        const frame = {\n            url: `${imagePath}/${i}.png`,\n            elapsedDisplayPercentages: [],\n        };\n        frames.push(frame);\n    }\n\n    let currentFrame = 0;\n    let currentElapsedDisplayPercentage = 0;\n\n    for (let i = 4; i < lines.length; i++) {\n        const line = lines[i];\n\n        if (line.startsWith('frame')) {\n            currentFrame = parseInt(line.split(' ')[1]);\n            currentElapsedDisplayPercentage = 0;\n        } else {\n            const elapsedDisplayPercentage = parseInt(line);\n            frames[currentFrame].elapsedDisplayPercentages.push(currentElapsedDisplayPercentage);\n            currentElapsedDisplayPercentage = elapsedDisplayPercentage;\n        }\n    }\n\n    for (let i = 0; i < frames.length; i++) {\n        const frame = frames[i];\n        frame.elapsedDisplayPercentages.push(100);\n    }\n\n    return {\n        duration,\n        displayRate,\n        frames,\n    };\n}\n", "CodeBleu_score": 31.328435000338718}, {"code": "function readAni(contents: Uint8Array): AniCursorImage  const decoder = new TextDecoder();\n  const lines = decoder.decode(contents).split(\"\\n\");\n  const displayRate = parseFloat(lines[0].split(\" \")[0]);\n  const totalDuration = parseFloat(lines[0].split(\" \")[1]);\n  const frames = lines.slice(1).map((line) => {\n    const [url, ...percentages] = line.split(\" \");\n    return {\n      url,\n      percentages: percentages.map(parseFloat),\n    };\n  });\n  const frameCount = frames.length;\n  for (let i = 0; i < frameCount; i++) {\n    const frame = frames[i];\n    const frameDuration =\n      (i === frameCount - 1 ? totalDuration : frames[i + 1].percentages[0]) -\n      frame.percentages[0];\n    for (let j = 0; j < frame.percentages.length; j++) {\n      frame.percentages[j] =\n        frame.percentages[j] / 100 +\n        (j === 0 ? 0 : frame.percentages[j - 1]) / 100;\n      frame.percentages[j] *= frameDuration;\n    }\n  }\n  return {\n    displayRate,\n    totalDuration,\n    frames,\n  };\n}\n", "CodeBleu_score": 31.17377008943429}]}
{"instance_id": "f059427111a8", "generation_result": [{"code": "export async function checkInternetArchiveMetadata(): Promise<void>  const query = \"SELECT * FROM metadata WHERE files IS NOT NULL\";\n  const results = await db.query(query);\n  const tooManyFiles: string[] = [];\n  const tooFewFiles: string[] = [];\n  const missingSkinFile: string[] = [];\n\n  for (const item of results) {\n    const files = JSON.parse(item.files);\n    if (files.length > 4) {\n      tooManyFiles.push(item.name);\n    } else if (files.length < 3) {\n      tooFewFiles.push(item.name);\n    }\n    if (!files.includes(\"skin.png\")) {\n      missingSkinFile.push(item.name);\n    }\n  }\n\n  console.table({\n    TooManyFiles: tooManyFiles,\n    TooFewFiles: tooFewFiles,\n    MissingSkinFile: missingSkinFile,\n  });\n}\n", "CodeBleu_score": 28.484308375151873}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>  const {\n    db,\n    getItemsWithNonEmptyMetadata,\n    parseMetadataFiles,\n    filterMetadataFiles,\n    getSkinFile,\n    getMissingSkinFile,\n    getTooManyFiles,\n    getTooFewFiles,\n    logTable,\n  } = await import(\"./internetArchiveMetadata.js\");\n\n  const itemsWithNonEmptyMetadata = await getItemsWithNonEmptyMetadata(db);\n\n  const itemsWithMetadata = itemsWithNonEmptyMetadata.filter(\n    (item) => item.metadata !== null\n  );\n\n  const metadataFiles = await Promise.all(\n    itemsWithMetadata.map(parseMetadataFiles)\n  );\n\n  const filteredMetadataFiles = metadataFiles.map(filterMetadataFiles);\n\n  const skinFiles = filteredMetadataFiles.map(getSkinFile);\n\n  const missingSkinFiles = filteredMetadataFiles.map(getMissingSkinFile);\n\n  const tooManyFiles = filteredMetadataFiles.map(getTooManyFiles);\n\n  const tooFewFiles = filteredMetadataFiles.map(getTooFewFiles);\n\n  const tableData = [\n    {\n      \"Too many files\": tooManyFiles.filter(Boolean).length,\n      \"Too few files\": tooFewFiles.filter(Boolean).length,\n      \"Missing skin file\": missingSkinFiles.filter(Boolean).length,\n    },\n  ];\n\n  logTable(tableData);\n}\n", "CodeBleu_score": 28.747452049140872}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>  const metadata = await getMetadata();\n  const tooManyFiles = [];\n  const tooFewFiles = [];\n  const missingSkinFile = [];\n\n  for (const item of metadata) {\n    const files = item.files;\n    const numFiles = files.length;\n\n    if (numFiles > 100) {\n      tooManyFiles.push(item);\n    } else if (numFiles < 10) {\n      tooFewFiles.push(item);\n    } else {\n      const skinFile = files.find((file) => file.name.endsWith(\".skin\"));\n      if (!skinFile) {\n        missingSkinFile.push(item);\n      }\n    }\n  }\n\n  console.table({\n    tooManyFiles,\n    tooFewFiles,\n    missingSkinFile,\n  });\n}\n", "CodeBleu_score": 26.106563113008225}]}
{"instance_id": "9d9b04763521", "generation_result": [{"code": "function useSkinKeyboardControls()  const {\n    currentSkinIndex,\n    setCurrentSkinIndex,\n    skinCount,\n  } = useSkinContext();\n\n  useEffect(() => {\n    function handleKeyDown(event) {\n      if (event.key === \"ArrowRight\") {\n        event.preventDefault();\n        setCurrentSkinIndex((currentSkinIndex + 1) % skinCount);\n      } else if (event.key === \"ArrowLeft\") {\n        event.preventDefault();\n        setCurrentSkinIndex(\n          (currentSkinIndex - 1 + skinCount) % skinCount\n        );\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [currentSkinIndex, setCurrentSkinIndex, skinCount]);\n}\n", "CodeBleu_score": 26.167312256064328}, {"code": "function useSkinKeyboardControls()  const {\n    skinIndex,\n    setSkinIndex,\n    setSkin,\n    setSkinName,\n    setSkinImage,\n    setSkinImageUrl,\n    setSkinImageAlt,\n    setSkinImageDescription,\n    setSkinImageCredit,\n    setSkinImageCreditUrl,\n    setSkinImageCreditAlt,\n    setSkinImageCreditDescription,\n    setSkinImageCreditCredit,\n    setSkinImageCreditCreditUrl,\n    setSkinImageCreditCreditAlt,\n    setSkinImageCreditCreditDescription,\n    setSkinImageCreditCreditCredit,\n    setSkinImageCreditCreditCreditUrl,\n    setSkinImageCreditCreditCreditAlt,\n    setSkinImageCreditCreditCreditDescription,\n    setSkinImageCreditCreditCreditCredit,\n    setSkinImageCreditCreditCreditCreditUrl,\n    setSkinImageCreditCreditCreditCreditAlt,\n    setSkinImageCreditCreditCreditCreditDescription,\n    setSkinImageCreditCreditCreditCreditCredit,\n    setSkinImageCreditCreditCreditCreditCreditUrl,\n    setSkinImageCreditCreditCreditCreditCreditAlt,\n    setSkinImageCreditCreditCreditCreditCreditDescription,\n    setSkinImageCreditCreditCreditCreditCreditCredit,\n    setSkinImageCreditCreditCreditCreditCreditCreditUrl,\n    setSkinImageCreditCreditCreditCreditCreditCreditAlt,\n    setSkinImageCreditCreditCreditCreditCreditCreditDescription,\n    setSkinImageCreditCreditCreditCreditCreditCreditCredit,\n    setSkinImageCreditCreditCreditCreditCreditCreditCreditUrl,\n    setSkinImageCreditCreditCreditCreditCreditCreditCreditAlt,\n    setSkinImageCreditCreditCreditCreditCreditCreditCreditDescription,\n    setSkinImageCreditCreditCredit", "CodeBleu_score": 22.37377509648856}, {"code": "function useSkinKeyboardControls()    const {\n        selectedSkinIndex,\n        setSelectedSkinIndex,\n        skins\n    } = useSkinContext();\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === \"ArrowRight\") {\n                setSelectedSkinIndex(selectedSkinIndex + 1);\n            } else if (event.key === \"ArrowLeft\") {\n                setSelectedSkinIndex(selectedSkinIndex - 1);\n            }\n        };\n\n        window.addEventListener(\"keydown\", handleKeyDown);\n\n        return () => {\n            window.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, [selectedSkinIndex, setSelectedSkinIndex, skins]);\n}\n", "CodeBleu_score": 35.35383407660769}]}
{"instance_id": "c49e878d86ad", "generation_result": [{"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk  return (dispatch, getState) => {\n    const { skin, media, eq } = getState().files;\n    const files =\n      expectedType === \"SKIN\"\n        ? skin.files\n        : expectedType === \"MEDIA\"\n        ? media.files\n        : eq.files;\n    const fileCount =\n      expectedType === \"SKIN\"\n        ? skin.fileCount\n        : expectedType === \"MEDIA\"\n        ? media.fileCount\n        : eq.fileCount;\n    const fileName =\n      expectedType === \"SKIN\"\n        ? skin.fileName\n        : expectedType === \"MEDIA\"\n        ? media.fileName\n        : eq.fileName;\n    const fileExtension =\n      expectedType === \"SKIN\"\n        ? skin.fileExtension\n        : expectedType === \"MEDIA\"\n        ? media.fileExtension\n        : eq.fileExtension;\n    const filePath =\n      expectedType === \"SKIN\"\n        ? skin.filePath\n        : expectedType === \"MEDIA\"\n        ? media.filePath\n        : eq.filePath;\n    const fileSize =\n      expectedType === \"SKIN\"\n        ? skin.fileSize\n        : expectedType === \"MEDIA\"\n        ? media.fileSize\n        : eq.fileSize;\n    const fileType =\n      expectedType === \"SKIN\"\n        ? skin.fileType\n        : expectedType === \"MEDIA\"\n        ? media.fileType\n        : eq.fileType;\n    const fileNameWithoutExtension =\n      expectedType === \"SKIN\"\n        ? skin.fileNameWithoutExtension\n        : expectedType === \"MEDIA\"\n        ? media.fileNameWithoutExtension\n        : eq.fileNameWithoutExtension;\n    const fileNameWithoutExtensionAndPath =\n      expectedType === \"SKIN\"\n        ? skin.fileNameWithoutExtensionAndPath\n        : expectedType === \"MEDIA\"\n        ? media.fileNameWithoutExtensionAndPath\n        : eq.fileNameWithoutExtensionAndPath;\n    const fileNameWithoutExtensionAndPathAndType =\n      expectedType === \"SKIN\"\n        ? skin.fileNameWithoutExtensionAndPathAndType", "CodeBleu_score": 31.952445410346762}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk  return (dispatch: Dispatch) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.multiple = true;\n    input.accept = accept;\n    input.onchange = (e: Event) => {\n      const input = e.target as HTMLInputElement;\n      const files = input.files;\n      if (files) {\n        dispatch(\n          setFileDialog({\n            expectedType,\n            count: files.length,\n            fileName: files[0].name,\n          })\n        );\n        dispatch(loadFiles(files));\n      }\n    };\n    input.click();\n  };\n}\n", "CodeBleu_score": 46.70616642117892}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk  return async (dispatch, getState) => {\n    const {\n      settings: { language },\n    } = getState();\n    const { ipcRenderer } = window.electron;\n    const filePaths = await ipcRenderer.invoke(\"open-file-dialog\", {\n      accept,\n      language,\n    });\n    if (filePaths) {\n      dispatch(\n        setSelectedFile({\n          filePath: filePaths[0],\n          type: expectedType,\n          numberOfFiles: filePaths.length,\n        })\n      );\n      dispatch(loadFiles(filePaths));\n    }\n  };\n}\n", "CodeBleu_score": 41.64983277320757}]}
{"instance_id": "afa715d20f88", "generation_result": [{"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk  return async (dispatch: Dispatch) => {\n    const files = e.dataTransfer.files;\n    const { handleTrackDropEvent } = window;\n\n    if (handleTrackDropEvent) {\n      handleTrackDropEvent(files);\n      dispatch(loadFiles(files, loadStyle, atIndex));\n    } else {\n      const references = Array.from(files).map(file => {\n        return {\n          id: file.name,\n          type: file.type,\n          src: URL.createObjectURL(file)\n        };\n      });\n      dispatch(loadFilesFromReferences(references, loadStyle, atIndex));\n    }\n  };\n}\n", "CodeBleu_score": 45.0762275459161}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk  return async (dispatch: Dispatch) => {\n    const { handleTrackDropEvent, references } = e.dataTransfer;\n    if (handleTrackDropEvent) {\n      handleTrackDropEvent(e);\n    } else {\n      dispatch(loadFiles(references, loadStyle, atIndex));\n    }\n  };\n}\n", "CodeBleu_score": 39.95183284627106}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk  return (dispatch: Dispatch) => {\n    const { handleTrackDropEvent, references } = store.getState();\n    const files = Array.from(e.dataTransfer.files);\n    if (handleTrackDropEvent) {\n      handleTrackDropEvent(e, files, loadStyle, atIndex);\n    } else {\n      dispatch(loadFiles(files, loadStyle, atIndex));\n    }\n  };\n}\n", "CodeBleu_score": 43.70865308090314}]}
{"instance_id": "0faea0aa350c", "generation_result": [{"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>    dispatch(actions.fetchMediaTagsRequest(id));\n\n    try {\n      const metadata = await requireMusicMetadata(file);\n      const artist = metadata.artist || metadata.artists[0];\n      const title = metadata.title;\n      const album = metadata.album;\n      const albumArt = metadata.artwork;\n\n      dispatch(\n        actions.fetchMediaTagsSuccess(id, {\n          artist,\n          title,\n          album,\n          albumArt,\n        })\n      );\n    } catch (error) {\n      dispatch(actions.fetchMediaTagsFailure(id, error));\n    }\n  };\n}\n", "CodeBleu_score": 24.185991944520822}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>    dispatch(setMediaTagsRequest(id));\n\n    try {\n      const tags = await requireMusicMetadata(file);\n\n      if (tags.artist || tags.title || tags.album || tags.artwork) {\n        dispatch(setMediaTagsSuccess(id, tags));\n      }\n    } catch (error) {\n      dispatch(setMediaTagsFailure(id, error));\n    }\n  };\n}\n", "CodeBleu_score": 12.06392333249483}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>    dispatch(fetchMediaTagsStart(id));\n    try {\n      const metadata = await requireMusicMetadata(file);\n      const artist = metadata.artist || metadata.artists[0] || '';\n      const title = metadata.title || '';\n      const album = metadata.album || '';\n      const artwork = metadata.artwork || '';\n      dispatch(fetchMediaTagsSuccess(id, artist, title, album, artwork));\n    } catch (error) {\n      dispatch(fetchMediaTagsFailure(id, error));\n    }\n  };\n}\n", "CodeBleu_score": 21.92127211881324}]}
{"instance_id": "02174213852f", "generation_result": [{"code": "export function playTrack(id: number): Thunk {    return (dispatch, getState) => {\n        const { mediaStatus } = getState();\n        if (mediaStatus === 'stopped') {\n            dispatch({ type: 'BUFFER_TRACK', payload: id });\n        } else {\n            dispatch({ type: 'PLAY_TRACK', payload: id });\n        }\n    }\n}\n", "CodeBleu_score": 44.08907932232964}, {"code": "export function playTrack(id: number): Thunk {    return (dispatch, getState) => {\n      const { media } = getState();\n      if (media.status === 'stopped') {\n        dispatch({ type: 'BUFFER_TRACK', payload: id });\n      } else {\n        dispatch({ type: 'PLAY_TRACK', payload: id });\n      }\n    };\n  }\n}", "CodeBleu_score": 46.82071708504725}, {"code": "export function playTrack(id: number): Thunk {  return (dispatch, getState) => {\n    const { mediaStatus } = getState().player;\n    if (mediaStatus === 'stopped') {\n      dispatch({ type: 'BUFFER_TRACK', payload: id });\n    } else {\n      dispatch({ type: 'PLAY_TRACK', payload: id });\n    }\n  }\n}\n", "CodeBleu_score": 42.356198217011624}]}
{"instance_id": "643b829015d2", "generation_result": [{"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk  e.preventDefault();\n  const { volume } = useStore.getState();\n  useStore.dispatch({ type: \"SET_VOLUME\", payload: volume + e.deltaY });\n}\n", "CodeBleu_score": 38.410872468249444}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk  e.preventDefault();\n  const { volume } = useStore.getState();\n  const { scrollDelta } = e;\n  return (dispatch) => dispatch(setVolume(volume + scrollDelta));\n}\n", "CodeBleu_score": 39.39908172106607}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk  e.preventDefault();\n  const { volume } = useStore.getState();\n  useStore.dispatch(setVolume(volume + e.deltaY));\n}\n", "CodeBleu_score": 41.5060408602422}]}
{"instance_id": "d97c127090ce", "generation_result": [{"code": "function FullScreen(props: Props)  const { children, enabled } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (document.fullscreenElement === ref.current) {\n        // Element is in fullscreen mode\n      } else {\n        // Element is not in fullscreen mode\n      }\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (enabled) {\n      if (ref.current) {\n        ref.current.requestFullscreen();\n      }\n    } else {\n      if (document.fullscreenElement === ref.current) {\n        document.exitFullscreen();\n      }\n    }\n  }, [enabled]);\n\n  return (\n    <div ref={ref} style={{ height: '100%', width: '100%' }}>\n      {children}\n    </div>\n  );\n}\n", "CodeBleu_score": 50.76034948777828}, {"code": "function FullScreen(props: Props)  const { children, enabled } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (document.fullscreenElement === ref.current) {\n        // Element is now in fullscreen mode\n        console.log('Element is now in fullscreen mode');\n      } else {\n        // Element is no longer in fullscreen mode\n        console.log('Element is no longer in fullscreen mode');\n      }\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      if (enabled) {\n        // Enter fullscreen mode\n        ref.current.requestFullscreen();\n      } else {\n        // Exit fullscreen mode\n        document.exitFullscreen();\n      }\n    }\n  }, [enabled]);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n", "CodeBleu_score": 49.941854541391244}, {"code": "function FullScreen(props: Props)  const { children, enabled } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (document.fullscreenElement === ref.current) {\n        // Fullscreen mode enabled\n      } else {\n        // Fullscreen mode disabled\n      }\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (enabled) {\n      ref.current?.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  }, [enabled]);\n\n  return (\n    <div ref={ref} style={{ height: '100%', width: '100%' }}>\n      {children}\n    </div>\n  );\n}\n", "CodeBleu_score": 48.15493997615411}]}
{"instance_id": "d333738337a8", "generation_result": [{"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>  const clipPaths = {};\n\n  if (skinRegion) {\n    skinRegion.forEach((region) => {\n      if (region.polygons.length > 0) {\n        clipPaths[region.name] = region.polygons;\n      }\n    });\n  }\n\n  return clipPaths;\n});\n", "CodeBleu_score": 36.27701501805117}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>  const clipPaths = {};\n\n  if (skinRegion) {\n    const { skinRegions } = skinRegion;\n\n    skinRegions.forEach(({ name, polygons }) => {\n      if (polygons && polygons.length) {\n        clipPaths[name] = polygons;\n      }\n    });\n  }\n\n  return clipPaths;\n});\n", "CodeBleu_score": 40.299575951581524}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>  const clipPaths = {};\n  if (skinRegion) {\n    skinRegion.forEach((region) => {\n      if (region.polygons) {\n        clipPaths[region.name] = region.polygons;\n      }\n    });\n  }\n  return clipPaths;\n});\n", "CodeBleu_score": 35.02720272250174}]}
{"instance_id": "6d30b280ffbe", "generation_result": [{"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]  const octaveBuckets = new Array(bufferLength).fill(0);\n  const minHz = 20;\n  const maxHz = 20000;\n  const frequencySteps = Math.pow(2, (1 / 12)) * minHz;\n  const numBuckets = Math.ceil(Math.log2(maxHz / minHz));\n  const bucketSize = bufferLength / numBuckets;\n  const bucketFrequencies = new Array(numBuckets).fill(0).map((_, i) => minHz * Math.pow(2, i));\n  const bucketIndices = bucketFrequencies.map((freq) => Math.floor(freq / frequencySteps));\n\n  for (let i = 0; i < numBuckets; i++) {\n    const start = Math.floor(bucketSize * i);\n    const end = Math.min(bufferLength, Math.floor(bucketSize * (i + 1)));\n    for (let j = start; j < end; j++) {\n      octaveBuckets[j] = bucketIndices[i];\n    }\n  }\n\n  return octaveBuckets;\n}\n", "CodeBleu_score": 43.42341606204148}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]  const octaveBuckets: number[] = new Array(bufferLength).fill(0);\n  const minHz = 20;\n  const maxHz = 20000;\n  const freqStep = Math.pow(2, 1 / 12);\n  const numOctaves = Math.ceil(Math.log2(maxHz / minHz));\n\n  for (let i = 0; i < numOctaves; i++) {\n    const startFreq = minHz * Math.pow(2, i);\n    const endFreq = Math.min(maxHz, startFreq * 2);\n    const startBin = Math.floor(startFreq * bufferLength / maxHz);\n    const endBin = Math.floor(endFreq * bufferLength / maxHz);\n\n    for (let j = startBin; j < endBin; j++) {\n      octaveBuckets[j] = i;\n    }\n  }\n\n  return octaveBuckets;\n}\n", "CodeBleu_score": 45.56876793644113}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]  const buckets = Array(bufferLength).fill(0);\n  const minHz = 20;\n  const maxHz = 20000;\n  const hzPerBucket = (maxHz - minHz) / bufferLength;\n  const octaveBuckets = [];\n\n  for (let i = 0; i < bufferLength; i++) {\n    const frequency = minHz + i * hzPerBucket;\n    const octave = Math.floor(Math.log2(frequency / 440));\n    const octaveBucket = Math.floor(octave * 12 + Math.log2(frequency / 440) % 1);\n    octaveBuckets[i] = octaveBucket;\n  }\n\n  return octaveBuckets;\n}\n", "CodeBleu_score": 41.590337304436886}]}
{"instance_id": "e7c399fb0db4", "generation_result": [{"code": "function EqGraph()  const canvasRef = useRef();\n  const [node, setNode] = useState(null);\n  const [image, setImage] = useState(null);\n  const [colorPattern, setColorPattern] = useState(null);\n\n  const {\n    eqGraph: {\n      canvas: { width, height },\n      sliders: {\n        gain1,\n        gain2,\n        gain3,\n        gain4,\n        gain5,\n        gain6,\n        gain7,\n        gain8,\n        gain9,\n        gain10,\n      },\n    },\n  } = useSelector((state) => state);\n\n  useLayoutEffect(() => {\n    if (node) {\n      const ctx = node.getContext(\"2d\");\n      ctx.clearRect(0, 0, width, height);\n      ctx.fillStyle = colorPattern;\n      ctx.fillRect(0, 0, width, height);\n\n      const drawLine = (x, y, width, height) => {\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + width, y + height);\n        ctx.stroke();\n      };\n\n      const drawEq = (gain, x, y, width, height) => {\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + width, y + height);\n        ctx.strokeStyle = colorPattern;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      };\n\n      drawLine(0, height / 2, width, height / 2);\n      drawEq(gain1, 0, height / 2, width / 10, -gain1 * height / 2);\n      drawEq(gain2, width / 10, height / 2, width / 10, -gain2 * height / 2);\n      drawEq(gain3, width / 5, height / 2, width / 10, -gain3 * height / 2);\n      drawEq(gain4, width / 4, height / 2, width / ", "CodeBleu_score": 24.649545356300624}, {"code": "function EqGraph()  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState(null);\n  const [context, setContext] = useState(null);\n  const [image, setImage] = useState(null);\n  const [colorPattern, setColorPattern] = useState(null);\n\n  const [sliderValues, setSliderValues] = useState([]);\n\n  useLayoutEffect(() => {\n    const canvasNode = canvasRef.current;\n    const canvasContext = canvasNode.getContext(\"2d\");\n    const image = document.querySelector(\"#eq-image\");\n    const colorPattern = document.querySelector(\"#color-pattern\");\n\n    setCanvas(canvasNode);\n    setContext(canvasContext);\n    setImage(image);\n    setColorPattern(colorPattern);\n  }, []);\n\n  useEffect(() => {\n    if (canvas && context && image && colorPattern) {\n      const { width, height } = canvas.getBoundingClientRect();\n      canvas.width = width;\n      canvas.height = height;\n\n      const imageWidth = image.width;\n      const imageHeight = image.height;\n      const imageRatio = imageWidth / imageHeight;\n\n      const canvasRatio = width / height;\n      let scale = 1;\n      if (canvasRatio > imageRatio) {\n        scale = width / imageWidth;\n      } else {\n        scale = height / imageHeight;\n      }\n\n      const scaledWidth = imageWidth * scale;\n      const scaledHeight = imageHeight * scale;\n\n      const x = (width - scaledWidth) / 2;\n      const y = (height - scaledHeight) / 2;\n\n      context.drawImage(image, x, y, scaledWidth, scaledHeight);\n\n      const gradient = context.createLinearGradient(0, 0, width, 0);\n      gradient.addColorStop(0, colorPattern.style.backgroundColor);\n      gradient.addColorStop(1, colorPattern.style.backgroundColor);\n\n      context.fillStyle = gradient;\n      context.fillRect(0, 0, width, height);\n\n      const sliderValues = Array.from(", "CodeBleu_score": 26.35892369708085}, {"code": "function EqGraph()  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState(null);\n  const [node, setNode] = useState(null);\n  const [image, setImage] = useState(null);\n  const [colorPattern, setColorPattern] = useState(null);\n  const [sliderValues, setSliderValues] = useState([]);\n\n  useLayoutEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const node = canvas.getContext(\"2d\");\n      const image = new Image();\n      const colorPattern = new Array(256).fill(0).map((_, i) => {\n        const hue = (i / 256) * 360;\n        return `hsl(${hue}, 100%, 50%)`;\n      });\n      image.src = \"path/to/image.jpg\";\n      image.onload = () => {\n        setCanvas(canvas);\n        setNode(node);\n        setImage(image);\n        setColorPattern(colorPattern);\n      };\n    }\n  }, []);\n\n  useEffect(() => {\n    if (canvas && node && image) {\n      const { width, height } = canvas;\n      const { data } = image;\n      const { sliderValues } = sliderValues;\n\n      node.clearRect(0, 0, width, height);\n      node.fillStyle = \"black\";\n      node.fillRect(0, 0, width, height);\n\n      const barWidth = width / data.length;\n      const barHeight = height / 256;\n\n      for (let i = 0; i < data.length; i++) {\n        const barX = i * barWidth;\n        const barY = height - data[i] * barHeight;\n        node.fillStyle = colorPattern[data[i]];\n        node.fillRect(barX, barY, barWidth, barHeight);\n      }\n\n      node.beginPath();\n      node.moveTo(0, height / 2);\n      for (let i", "CodeBleu_score": 27.602607918715737}]}
{"instance_id": "b858f410c3f3", "generation_result": [{"code": "const ClutterBar = memo(() =>  const {\n    focus,\n    setFocus,\n    double,\n    setDouble,\n    toggleDouble,\n    handleMouseUp,\n  } = useContext(AppContext);\n\n  const doubled = useSelector((state) => state.doubled);\n\n  return (\n    <div className=\"clutter-bar\">\n      <button\n        className={`btn ${doubled ? \"doubled\" : \"\"}`}\n        onClick={toggleDouble}\n      >\n        Double\n      </button>\n      <button\n        className={`btn ${focus === \"first\" ? \"focused\" : \"\"}`}\n        onClick={() => setFocus(\"first\")}\n      >\n        First\n      </button>\n      <button\n        className={`btn ${focus === \"second\" ? \"focused\" : \"\"}`}\n        onClick={() => setFocus(\"second\")}\n      >\n        Second\n      </button>\n      <button\n        className={`btn ${focus === \"third\" ? \"focused\" : \"\"}`}\n        onClick={() => setFocus(\"third\")}\n      >\n        Third\n      </button>\n      <button\n        className={`btn ${focus === \"fourth\" ? \"focused\" : \"\"}`}\n        onClick={() => setFocus(\"fourth\")}\n      >\n        Fourth\n      </button>\n      <button\n        className={`btn ${focus === \"fifth\" ? \"focused\" : \"\"}`}\n        onClick={() => setFocus(\"fifth\")}\n      >\n        Fifth\n      </button>\n      <button\n        className={`btn ${focus === \"sixth\" ? \"focused\" : \"\"}`}\n        onClick={() => setFocus(\"sixth\")}\n      >\n        Sixth\n      </button>\n      <button\n        className={`btn ${focus === \"seventh\" ? \"focused\" : \"\"}`}\n        onClick={() => setFocus(\"seventh\")}\n      >\n        Seventh\n      </button>\n      <button\n        className={`", "CodeBleu_score": 19.82466326793678}, {"code": "const ClutterBar = memo(() =>  const dispatch = useDispatch();\n  const doubled = useSelector(selectDoubled);\n\n  const handleFocus = () => dispatch(setFocus('clutterBar'));\n  const handleMouseUp = () => dispatch(setFocus(null));\n\n  const handleToggleDoubled = () => dispatch(toggleDoubled());\n\n  return (\n    <div\n      className=\"clutter-bar\"\n      onFocus={handleFocus}\n      onMouseUp={handleMouseUp}\n    >\n      <button\n        className={`button ${doubled ? 'active' : ''}`}\n        onClick={handleToggleDoubled}\n      >\n        Doubled\n      </button>\n      <button className=\"button\">Undo</button>\n      <button className=\"button\">Redo</button>\n      <button className=\"button\">Cut</button>\n      <button className=\"button\">Copy</button>\n      <button className=\"button\">Paste</button>\n      <button className=\"button\">Delete</button>\n      <button className=\"button\">Select All</button>\n      <button className=\"button\">Find</button>\n      <button className=\"button\">Replace</button>\n      <button className=\"button\">Go To Line...</button>\n      <button className=\"button\">Go To File...</button>\n      <button className=\"button\">Save</button>\n      <button className=\"button\">Save As...</button>\n      <button className=\"button\">Close</button>\n      <button className=\"button\">Quit</button>\n      <button className=\"button\">Preferences...</button>\n      <button className=\"button\">About</button>\n      <button className=\"button\">Help</button>\n      <button className=\"button\">Context Menu</button>\n    </div>\n  );\n});\n", "CodeBleu_score": 20.37146628679794}, {"code": "const ClutterBar = memo(() =>  const doubled = useSelector((state) => state.clutterBar.doubled);\n  const dispatch = useDispatch();\n  const handleMouseDown = (event) => {\n    dispatch(setFocus(event.target.id));\n  };\n  const handleMouseUp = (event) => {\n    dispatch(setMouseUp(event.target.id));\n  };\n  const handleDoubled = () => {\n    dispatch(toggleDoubled());\n  };\n  return (\n    <div className=\"clutter-bar\">\n      <button\n        id=\"button-one\"\n        className={`button ${doubled ? \"doubled\" : \"\"}`}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      >\n        Button One\n      </button>\n      <button\n        id=\"button-two\"\n        className={`button ${doubled ? \"doubled\" : \"\"}`}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      >\n        Button Two\n      </button>\n      <button\n        id=\"button-three\"\n        className={`button ${doubled ? \"doubled\" : \"\"}`}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      >\n        Button Three\n      </button>\n      <button\n        id=\"button-four\"\n        className={`button ${doubled ? \"doubled\" : \"\"}`}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      >\n        Button Four\n      </button>\n      <button\n        id=\"button-five\"\n        className={`button ${doubled ? \"doubled\" : \"\"}`}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      >\n        Button Five\n      </button>\n      <button\n        id=\"button-six\"\n        className={`button ${doubled ? \"doubled\" : \"\"}`}\n        onMouseDown=", "CodeBleu_score": 23.00279461533102}]}
{"instance_id": "5946b13d68ba", "generation_result": [{"code": "const PlaylistToggleButton = memo(() =>  const isOpen = useSelector(selectPlaylistIsOpen);\n  const dispatch = useDispatch();\n\n  return (\n    <button\n      id=\"playlist-toggle\"\n      className={`playlist-toggle ${isOpen ? \"selected\" : \"\"}`}\n      onClick={() => dispatch(togglePlaylist())}\n      title=\"Toggle playlist\"\n    >\n      <PlaylistIcon />\n    </button>\n  );\n});\n", "CodeBleu_score": 24.32821619847844}, {"code": "const PlaylistToggleButton = memo(() =>  const { isPlaylistOpen, togglePlaylist } = usePlaylist();\n\n  return (\n    <button\n      id=\"playlist-toggle-button\"\n      className={`playlist-toggle-button ${isPlaylistOpen ? 'selected' : ''}`}\n      onClick={togglePlaylist}\n      title=\"Toggle playlist\"\n    >\n      <PlaylistIcon />\n    </button>\n  );\n});\n", "CodeBleu_score": 41.212740821938745}, {"code": "const PlaylistToggleButton = memo(() =>  const isOpen = useSelector(selectPlaylistIsOpen);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(togglePlaylist());\n  };\n\n  return (\n    <button\n      id=\"playlist-toggle-button\"\n      className={`playlist-toggle-button ${isOpen ? \"open\" : \"closed\"}`}\n      onClick={handleClick}\n      title=\"Toggle Playlist\"\n    >\n      {isOpen ? \"Close Playlist\" : \"Open Playlist\"}\n    </button>\n  );\n});\n", "CodeBleu_score": 30.396129370616155}]}
{"instance_id": "39ecf0db7a99", "generation_result": [{"code": "const Desktop = React.memo(({ children }: Props) =>  const ref = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    const el = ref.current;\n    if (el) {\n      el.classList.add('webamp-desktop');\n      document.body.appendChild(el);\n    }\n    return () => {\n      if (el) {\n        document.body.removeChild(el);\n      }\n    };\n  }, []);\n\n  return React.useMemo(() => {\n    return ref.current ? ReactDOM.createPortal(children, ref.current) : null;\n  }, [children]);\n});\n", "CodeBleu_score": 35.694850844542025}, {"code": "const Desktop = React.memo(({ children }: Props) =>    const ref = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.appendChild(document.body);\n            return () => {\n                document.body.removeChild(ref.current);\n            };\n        }\n    }, []);\n\n    return (\n        <div\n            ref={ref}\n            className=\"webamp-desktop\"\n            style={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                overflow: \"hidden\",\n            }}\n        >\n            {children}\n        </div>\n    );\n});\n", "CodeBleu_score": 21.911581290475574}, {"code": "const Desktop = React.memo(({ children }: Props) =>  const desktopRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    const desktop = desktopRef.current;\n\n    if (!desktop) {\n      return;\n    }\n\n    desktop.classList.add(\"webamp-desktop\");\n\n    return () => {\n      desktop.classList.remove(\"webamp-desktop\");\n    };\n  }, []);\n\n  return (\n    <div ref={desktopRef}>\n      {React.Children.map(children, (child) => {\n        if (!React.isValidElement(child)) {\n          return null;\n        }\n\n        return ReactDOM.createPortal(child, desktopRef.current);\n      })}\n    </div>\n  );\n});\n", "CodeBleu_score": 43.98441994193594}]}
{"instance_id": "41be320578a4", "generation_result": [{"code": "export default function PlaylistScrollBar()    const playlistHeight = useSelector(state => state.playlist.height);\n    const scrollPosition = useSelector(state => state.playlist.scrollPosition);\n    const allTracksVisible = useSelector(state => state.playlist.allTracksVisible);\n    const dispatch = useDispatch();\n\n    const handleChange = (event, value) => {\n        dispatch(updateScrollPosition(value));\n    };\n\n    return (\n        <VerticalSlider\n            value={scrollPosition}\n            min={0}\n            max={playlistHeight}\n            onChange={handleChange}\n            disabled={allTracksVisible}\n            style={{\n                width: 10,\n                height: '100%',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                zIndex: 1,\n            }}\n            trackStyle={{\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                borderRadius: 4,\n            }}\n            handleStyle={{\n                backgroundColor: 'white',\n                borderRadius: 4,\n                width: 8,\n                height: 8,\n                marginTop: -4,\n                marginLeft: -4,\n            }}\n        />\n    );\n}\n", "CodeBleu_score": 30.84351426548031}, {"code": "export default function PlaylistScrollBar()  const playlistHeight = useSelector((state) => state.playlist.height);\n  const scrollPosition = useSelector((state) => state.playlist.scrollPosition);\n  const tracks = useSelector((state) => state.playlist.tracks);\n  const dispatch = useDispatch();\n\n  const allTracksVisible = tracks.every((track) => track.visible);\n  const trackCount = tracks.length;\n\n  const handleChange = (event, value) => {\n    dispatch(setScrollPosition(value));\n  };\n\n  return (\n    <VerticalSlider\n      disabled={allTracksVisible}\n      max={playlistHeight}\n      min={0}\n      onChange={handleChange}\n      value={scrollPosition}\n      valueLabelDisplay=\"off\"\n      valueLabelFormat={() => ''}\n      valueLabel={() => ''}\n      sx={{\n        width: '5px',\n        height: '100%',\n        borderRadius: '10px',\n        '& .MuiSlider-rail': {\n          opacity: 0.2,\n        },\n        '& .MuiSlider-thumb': {\n          width: '10px',\n          height: '10px',\n          backgroundColor: 'white',\n          '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.16)',\n          },\n          '&:before': {\n            display: 'none',\n          },\n        },\n        '& .MuiSlider-track': {\n          borderRadius: '10px',\n          height: '100%',\n        },\n      }}\n    />\n  );\n}\n", "CodeBleu_score": 31.251377352348687}, {"code": "export default function PlaylistScrollBar()  const playlistHeight = useSelector(selectPlaylistHeight);\n  const scrollPosition = useSelector(selectScrollPosition);\n  const isTrackVisible = useSelector(selectIsTrackVisible);\n  const dispatch = useDispatch();\n\n  const isScrollbarDisabled = isTrackVisible.every((visible) => visible);\n\n  const handleScroll = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(updateScrollPosition(event.target.value));\n  };\n\n  return (\n    <VerticalSlider\n      value={scrollPosition}\n      min={0}\n      max={playlistHeight}\n      step={1}\n      disabled={isScrollbarDisabled}\n      onChange={handleScroll}\n      sx={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: 10,\n        height: \"100%\",\n        \"& .MuiSlider-rail\": {\n          opacity: 0.2,\n        },\n        \"& .MuiSlider-thumb\": {\n          width: 10,\n          height: 10,\n          backgroundColor: \"white\",\n          \"&:hover\": {\n            boxShadow: \"0 0 0 8px rgba(255, 255, 255, 0.1)\",\n          },\n        },\n        \"& .MuiSlider-track\": {\n          height: \"100%\",\n          borderRadius: 0,\n        },\n      }}\n    />\n  );\n}\n", "CodeBleu_score": 31.59771109365804}]}
{"instance_id": "fccf51432007", "generation_result": [{"code": "export function genMediaDuration(url: string): Promise<number>  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('durationchange', () => {\n      resolve(audio.duration);\n      audio.removeEventListener('durationchange', () => {});\n    });\n    audio.addEventListener('error', (e) => {\n      reject(e);\n      audio.removeEventListener('error', () => {});\n    });\n    audio.src = url;\n  });\n}\n", "CodeBleu_score": 38.57645016810164}, {"code": "export function genMediaDuration(url: string): Promise<number>  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = \"anonymous\";\n    audio.addEventListener(\"durationchange\", () => {\n      resolve(audio.duration);\n      audio.removeEventListener(\"durationchange\", () => {});\n    });\n    audio.addEventListener(\"error\", (e) => {\n      reject(e);\n      audio.removeEventListener(\"error\", () => {});\n    });\n    audio.src = url;\n  });\n}\n", "CodeBleu_score": 40.63680104334249}, {"code": "export function genMediaDuration(url: string): Promise<number>  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('durationchange', () => {\n      resolve(audio.duration);\n      audio.removeEventListener('durationchange', () => {});\n    });\n    audio.addEventListener('error', (e) => {\n      reject(e);\n      audio.removeEventListener('error', () => {});\n    });\n    audio.src = url;\n  });\n}\n", "CodeBleu_score": 38.57645016810164}]}
{"instance_id": "8055da9c9425", "generation_result": [{"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>  return new Promise((resolve, reject) => {\n    if (!fileReference) {\n      reject(\"File reference is null\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(\"Error reading file\");\n    };\n    reader.readAsArrayBuffer(fileReference);\n  });\n}\n", "CodeBleu_score": 63.68469686191632}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>  return new Promise((resolve, reject) => {\n    if (fileReference === null) {\n      reject(\"File reference is null\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(\"Error reading file\");\n    };\n    reader.readAsArrayBuffer(fileReference);\n  });\n}\n", "CodeBleu_score": 64.0866151860966}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>  if (!fileReference) {\n    throw new Error(\"File reference is null\");\n  }\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsArrayBuffer(fileReference);\n  });\n}\n", "CodeBleu_score": 57.315669710345574}]}
{"instance_id": "b3dc12d7d309", "generation_result": [{"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null  const [value, setValue] = React.useState<T | null>(null);\n  const [disposed, setDisposed] = React.useState(false);\n\n  React.useEffect(() => {\n    let isMounted = true;\n    propValue.then(\n      (value) => {\n        if (isMounted) {\n          setValue(value);\n        }\n      },\n      (error) => {\n        if (isMounted) {\n          setValue(null);\n        }\n      }\n    );\n    return () => {\n      isMounted = false;\n      setDisposed(true);\n    };\n  }, [propValue]);\n\n  return disposed ? null : value;\n}\n", "CodeBleu_score": 43.87888459073566}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null  const [value, setValue] = React.useState<T | null>(null);\n  const [disposed, setDisposed] = React.useState(false);\n\n  React.useEffect(() => {\n    setDisposed(false);\n    propValue.then(\n      (result) => {\n        if (!disposed) {\n          setValue(result);\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n    return () => {\n      setDisposed(true);\n    };\n  }, [propValue, disposed]);\n\n  return value;\n}\n", "CodeBleu_score": 38.56271248473978}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null    const [value, setValue] = React.useState<T | null>(null);\n    const [disposed, setDisposed] = React.useState(false);\n\n    React.useEffect(() => {\n        let isMounted = true;\n\n        propValue.then((value) => {\n            if (isMounted) {\n                setValue(value);\n            }\n        });\n\n        return () => {\n            isMounted = false;\n            setDisposed(true);\n        };\n    }, [propValue]);\n\n    return disposed ? null : value;\n}\n", "CodeBleu_score": 41.923879092829594}]}
{"instance_id": "7fc14a50df16", "generation_result": [{"code": "export default function regionParser(regionStr: string): RegionData  const regionData: RegionData = {};\n  const sections = regionStr.split(\"\\n\\n\");\n\n  for (const section of sections) {\n    const lines = section.split(\"\\n\");\n    const sectionName = lines[0].slice(1, -1);\n    const polygonPoints = lines\n      .slice(1)\n      .map((line) => line.split(\" \").map((coord) => parseFloat(coord)));\n\n    const validPolygons = polygonPoints.filter((polygon) => {\n      if (polygon.length < 3) return false;\n      const [x1, y1] = polygon[0];\n      const [x2, y2] = polygon[1];\n      const [x3, y3] = polygon[2];\n      if (x1 === x2 && y1 === y2) return false;\n      if (x2 === x3 && y2 === y3) return false;\n      if (x1 === x3 && y1 === y3) return false;\n      return true;\n    });\n\n    regionData[sectionName] = validPolygons;\n  }\n\n  return regionData;\n}\n", "CodeBleu_score": 34.01393557417178}, {"code": "export default function regionParser(regionStr: string): RegionData    const sections: { [section: string]: Polygon } = {};\n    const lines = regionStr.split('\\n');\n    let currentSection = '';\n    let currentPolygon: Polygon = [];\n\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].trim();\n\n        if (line.startsWith('[') && line.endsWith(']')) {\n            // New section\n            if (currentPolygon.length > 0) {\n                // End previous polygon\n                sections[currentSection] = currentPolygon;\n                currentPolygon = [];\n            }\n            currentSection = line.slice(1, -1);\n        } else if (line.startsWith('Polygon')) {\n            // New polygon\n            if (currentPolygon.length > 0) {\n                // End previous polygon\n                sections[currentSection] = currentPolygon;\n                currentPolygon = [];\n            }\n            currentPolygon = [];\n        } else if (line.startsWith('Point')) {\n            // Point\n            const point = line.slice(6).split(',');\n            if (point.length === 2) {\n                currentPolygon.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n            }\n        }\n    }\n\n    if (currentPolygon.length > 0) {\n        // End last polygon\n        sections[currentSection] = currentPolygon;\n    }\n\n    // Filter out invalid polygons\n    const validPolygons: { [section: string]: Polygon } = {};\n    for (const section in sections) {\n        const polygon = sections[section];\n        if (polygon.length >= 3) {\n            validPolygons[section] = polygon;\n        }\n    }\n\n    return validPolygons;\n}\n", "CodeBleu_score": 22.503332196688877}, {"code": "export default function regionParser(regionStr: string): RegionData  // Split the input string into sections\n  const sections = regionStr.split('\\n\\n');\n\n  // Initialize an empty RegionData object\n  const regionData: RegionData = {};\n\n  // Iterate over each section\n  for (const section of sections) {\n    // Split the section into lines\n    const lines = section.split('\\n');\n\n    // Extract the section name\n    const sectionName = lines[0].replace('[', '').replace(']', '');\n\n    // Initialize an empty array to store the polygon points\n    const polygonPoints: Point[] = [];\n\n    // Iterate over the remaining lines\n    for (let i = 1; i < lines.length; i++) {\n      // Split the line into key-value pairs\n      const [key, value] = lines[i].split('=');\n\n      // Check if the line is a polygon point\n      if (key === 'point') {\n        // Split the point string into x and y values\n        const [x, y] = value.split(',');\n\n        // Add the point to the polygon points array\n        polygonPoints.push({ x: parseFloat(x), y: parseFloat(y) });\n      }\n    }\n\n    // Check if the polygon points array is valid\n    if (polygonPoints.length >= 3) {\n      // Add the polygon points to the output object under the section name\n      regionData[sectionName] = polygonPoints;\n    }\n  }\n\n  // Return the output object\n  return regionData;\n}\n", "CodeBleu_score": 23.92237911546471}]}
{"instance_id": "6e97ec2706cf", "generation_result": [{"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector(  getMediaIsPlaying: getMediaIsPlaying,\n  getCurrentTrack: getCurrentTrack,\n  getCurrentTrackMediaTags: getCurrentTrackMediaTags,\n} )\n  .setSelectorName( \"getCurrentlyPlayingTrackIdIfLoaded\" )\n  .setSelectorDescription(\n    \"Determines the ID of the currently playing track if it is fully loaded. It checks if media is playing, if there is a current track, and if the media tags of the current track are not in the initialized state. If any of these conditions are not met, it returns null. Otherwise, it returns the ID of the current track.\"\n  )\n  .setReturnType( \"(state: RootState) => string | null\" )\n  .create();\n", "CodeBleu_score": 7.104695053975899}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector(    getMediaPlaying: ( state ) => state.media.playing,\n    getCurrentTrack: ( state ) => state.media.currentTrack,\n    getCurrentTrackMediaTags: ( state ) => state.media.currentTrack.mediaTags,\n} ), ( { getMediaPlaying, getCurrentTrack, getCurrentTrackMediaTags } ) => {\n    if ( !getMediaPlaying || !getCurrentTrack || !getCurrentTrackMediaTags.initialized ) {\n        return null;\n    }\n\n    return getCurrentTrack.id;\n} );\n", "CodeBleu_score": 36.2141186588981}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector(    getMediaPlaying: ( state ) => state.media.playing,\n    getCurrentTrack: ( state ) => state.media.currentTrack,\n    getCurrentTrackTags: ( state ) => state.media.currentTrack.tags,\n} ), ( { getMediaPlaying, getCurrentTrack, getCurrentTrackTags } ) => {\n    if ( !getMediaPlaying ) {\n        return null;\n    }\n\n    if ( !getCurrentTrack ) {\n        return null;\n    }\n\n    if ( !getCurrentTrackTags.initialized ) {\n        return null;\n    }\n\n    return getCurrentTrack.id;\n} );\n", "CodeBleu_score": 35.340193378957096}]}
{"instance_id": "5dbbdd07f829", "generation_result": [{"code": " async renderWhenReady(node: HTMLElement): Promise<void>    if (this.isDisposed) {\n      throw new Error('Cannot render when disposed.');\n    }\n\n    if (this.isRendered) {\n      throw new Error('Cannot render when already rendered.');\n    }\n\n    this.isRendering = true;\n    this.isRendered = false;\n\n    this.dispatch(centerWindows());\n\n    await this.waitForSkin();\n\n    if (this.isDisposed) {\n      throw new Error('Cannot render when disposed.');\n    }\n\n    if (this.isRendered) {\n      throw new Error('Cannot render when already rendered.');\n    }\n\n    if (this.isRendering) {\n      throw new Error('Cannot render when already rendering.');\n    }\n\n    this.isRendering = true;\n\n    const { React, ReactDOM, ReduxProvider } = await import('./react');\n\n    const root = ReactDOM.createRoot(node);\n\n    this.disposeHandlers.push(() => {\n      root.unmount();\n    });\n\n    const store = this.createStore();\n\n    root.render(\n      <ReduxProvider store={store}>\n        <App\n          mediaOptions={this.mediaOptions}\n          filePickerOptions={this.filePickerOptions}\n        />\n      </ReduxProvider>\n    );\n\n    this.isRendering = false;\n    this.isRendered = true;\n  }\n", "CodeBleu_score": 48.12738597331484}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>    // Dispatch an action to center windows\n    this.dispatch(centerWindows());\n  \n    // Wait for a skin to load\n    await this.waitForSkin();\n  \n    // Ensure the instance is not already rendered\n    if (this.isRendered) {\n      return;\n    }\n  \n    // Create a React root and set up cleanup to unmount it later\n    const root = createRoot(node);\n    this.cleanup = () => root.unmount();\n  \n    // Render the application within a Redux Provider, passing media and file picker options\n    root.render(\n      <Provider store={this.store}>\n        <App media={this.media} filePicker={this.filePicker} />\n      </Provider>\n    );\n  \n    // Set the isRendered flag to true\n    this.isRendered = true;\n  }", "CodeBleu_score": 39.99424005007952}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>    if (this.disposed) {\n      return;\n    }\n    if (this.rendering) {\n      return;\n    }\n    this.rendering = true;\n    this.dispatcher.dispatch(CenterWindowsAction);\n    await this.skinLoader.loadSkin();\n    if (this.disposed) {\n      this.rendering = false;\n      return;\n    }\n    const root = createRoot(node);\n    this.disposables.push(() => {\n      root.unmount();\n      this.rendering = false;\n    });\n    root.render(\n      <Provider\n        store={this.store}\n        media={this.media}\n        filePicker={this.filePicker}\n      >\n        <App />\n      </Provider>\n    );\n  }\n", "CodeBleu_score": 41.54128217366419}]}
{"instance_id": "2598a3bbc50d", "generation_result": [{"code": "handleContextMenu(e: any)    const options = {\n        cut: false,\n        copy: false,\n        paste: false,\n        delete: false,\n        selectAll: false,\n        undo: false,\n        redo: false,\n        font: false,\n        fontSize: false,\n        fontColor: false,\n        fontFamily: false,\n        fontStyle: false,\n        fontWeight: false,\n        textAlign: false,\n        textDecoration: false,\n        textIndent: false,\n        lineHeight: false,\n        letterSpacing: false,\n        wordSpacing: false,\n        textDirection: false,\n        textTransform: false,\n        textShadow: false,\n        textWrap: false,\n        textOverflow: false,\n        textJustify: false,\n        textAlignLast: false,\n        textAlignVertical: false,\n        textAlignLine: false,\n        textAlignBaseline: false,\n        textAlignLastBaseline: false,\n        textAlignLastLine: false,\n        textAlignLastVertical: false,\n        textAlignLastLineVertical: false,\n        textAlignLastLineBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline: false,\n        textAlignLastLineVerticalBaseline", "CodeBleu_score": 4.748632170511155}, {"code": "handleContextMenu(e: any)    let options = {\n      cut: false,\n      copy: false,\n      paste: false,\n      delete: false,\n      selectAll: false,\n      undo: false,\n      redo: false,\n      block: false,\n      link: false,\n      image: false,\n      table: false,\n      tableRow: false,\n      tableColumn: false,\n      tableCell: false,\n      tableHeader: false,\n      tableFooter: false,\n      tableHeaderRow: false,\n      tableHeaderColumn: false,\n      tableFooterRow: false,\n      tableFooterColumn: false,\n      tableRowGroup: false,\n      tableColumnGroup: false,\n      tableBody: false,\n      tableSection: false,\n      tableCaption: false,\n      tableSummary: false,\n      tableCellGroup: false,\n      tableRowGroupGroup: false,\n      tableColumnGroupGroup: false,\n      tableCellGroupGroup: false,\n      tableCellGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroupGroup: false,\n      tableCellGroupGroupGroup", "CodeBleu_score": 4.19251801791281}, {"code": "handleContextMenu(e: any)  const activeElement = document.activeElement;\n  const isNonTerminalInput =\n    activeElement &&\n    (activeElement.tagName === 'TEXTAREA' ||\n      activeElement.tagName === 'INPUT' &&\n      activeElement.type === 'text');\n  const isSelectedText =\n    activeElement &&\n    activeElement.tagName === 'TEXTAREA' &&\n    activeElement.selectionStart !== activeElement.selectionEnd;\n  if (isNonTerminalInput || isSelectedText) {\n    this.contextEditMenu(e, this.options);\n  }\n}\n", "CodeBleu_score": 27.80398581384122}]}
{"instance_id": "9a7475588195", "generation_result": [{"code": "handleChangeFontSize(fontSize: string): void    const newFontSize = parseInt(fontSize);\n    if (newFontSize !== this.fontSize) {\n      this.fontSize = newFontSize;\n      const returnValue = this.terminal.changeFontSize(newFontSize);\n      if (returnValue !== 0) {\n        this.showErrorMessage(returnValue);\n      }\n    }\n  }\n  ", "CodeBleu_score": 48.89621600513247}, {"code": "handleChangeFontSize(fontSize: string): void  const newFontSize = parseInt(fontSize, 10);\n  if (newFontSize !== this.terminal.fontSize) {\n    this.terminal.fontSize = newFontSize;\n    this.terminal.handleReturnValue(this.terminal.fontSize);\n  }\n}\n", "CodeBleu_score": 27.222204581160366}, {"code": "handleChangeFontSize(fontSize: string): void    let newFontSize: number = Number(fontSize);\n    if (newFontSize !== this.fontSize) {\n      this.fontSize = newFontSize;\n      this.handleCommandReturnValue(this.command.execute(this.command.command, this.command.args));\n    }\n  }\n", "CodeBleu_score": 33.08874434764888}]}
{"instance_id": "d4d74a9c8035", "generation_result": [{"code": "handleChangeTermTheme(theme: string): void    const currentTheme = this.terminal.options.theme;\n    if (currentTheme === theme) {\n        return;\n    }\n    this.terminal.options.theme = theme;\n    this.terminal.refresh(true);\n    const commandReturnValue = this.handleCommandReturnValue(this.terminal.options.theme);\n    if (commandReturnValue) {\n        this.handleError(commandReturnValue);\n    }\n}\n", "CodeBleu_score": 43.512754041978816}, {"code": "handleChangeTermTheme(theme: string): void  const currentTheme = this.terminal.options.theme;\n  if (currentTheme === theme) {\n    return;\n  }\n  this.terminal.options.theme = theme;\n  this.terminal.refresh(true);\n  this.handleCommandReturnValue(this.terminal.executeCommand(`theme ${theme}`));\n}\n", "CodeBleu_score": 35.86011197892692}, {"code": "handleChangeTermTheme(theme: string): void    if (theme === this.terminalTheme) {\n      return;\n    }\n    this.terminalTheme = theme;\n    this.terminal.setOption('theme', theme);\n    this.terminal.focus();\n    this.terminal.clear();\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal.write('\\n');\n    this.terminal", "CodeBleu_score": 12.76776587443898}]}
{"instance_id": "329444949255", "generation_result": [{"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) =>   return (\n    <div className=\"modal-header\">\n      <div className=\"modal-title\">{title}</div>\n      {onClose && <button className=\"close-button\" onClick={onClose}>\n        <div className=\"close-icon\"></div>\n      </button>}\n      {keybindings && <ModalKeybindings keybindings={keybindings} />}\n    </div>\n  );\n}\n", "CodeBleu_score": 24.889771809874738}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) =>   return (\n    <div className=\"modal-header\">\n      <div className=\"modal-title\">{title}</div>\n      {onClose && (\n        <button className=\"modal-close-button\" onClick={onClose}>\n          <i className=\"fa fa-close\"></i>\n        </button>\n      )}\n      {keybindings && <ModalKeybindings keybindings={keybindings} />}\n    </div>\n  );\n};\n", "CodeBleu_score": 26.780246014458353}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) =>   return (\n    <div className=\"modal-header\">\n      <div className=\"modal-title\">{title}</div>\n      {onClose && <button className=\"modal-close\" onClick={onClose}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-x\">\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n        </svg>\n      </button>}\n      {keybindings && <ModalKeybindings keybindings={keybindings} />}\n    </div>\n  )\n}\n", "CodeBleu_score": 26.405985385346398}]}
{"instance_id": "1da69d707d33", "generation_result": [{"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string  if (!rptr || !rptr.remoteid) return \"\";\n  const rname = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n  return `[${rname}${rptr.name ? `:${rptr.name}` : \"\"}]`;\n}\n", "CodeBleu_score": 35.32832007826826}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string  if (rptr == null || rptr.remoteid == \"\") {\n    return \"\";\n  }\n  let name = rnames[rptr.remoteid];\n  if (name == null) {\n    name = rptr.remoteid.substring(0, 8);\n  }\n  if (rptr.name != \"\") {\n    name += \":\" + rptr.name;\n  }\n  return \"[\" + name + \"]\";\n}\n", "CodeBleu_score": 63.37904234828778}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string    if (!rptr || rptr.remoteid === \"\") return \"\";\n    let rname = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n    if (rptr.name) rname += \":\" + rptr.name;\n    return `[${rname}]`;\n}\n", "CodeBleu_score": 40.83391072526562}]}
{"instance_id": "757ee5b9626f", "generation_result": [{"code": "adjustTextAreaHeight()    const textarea = this.textarea;\n    const minHeight = 1;\n    const maxHeight = this.maxHeight;\n    const fontSize = parseFloat(window.getComputedStyle(textarea).fontSize);\n    const maxLines = Math.floor(maxHeight / fontSize);\n\n    textarea.style.height = `${minHeight}px`;\n    const scrollHeight = textarea.scrollHeight;\n    const newHeight = Math.min(Math.max(scrollHeight, minHeight), maxHeight);\n\n    textarea.style.height = `${newHeight}px`;\n}\n", "CodeBleu_score": 38.643987286586245}, {"code": "adjustTextAreaHeight()    // Set the initial height to 1px to measure the scrollHeight\n    this.textarea.style.height = '1px';\n\n    // Get the font size and maximum number of lines\n    const fontSize = parseInt(window.getComputedStyle(this.textarea).fontSize, 10);\n    const maxLines = Math.floor(this.textarea.clientHeight / fontSize);\n\n    // Calculate the new height within a minimum and maximum range\n    const minHeight = fontSize;\n    const maxHeight = fontSize * maxLines;\n    const newHeight = Math.min(Math.max(this.textarea.scrollHeight, minHeight), maxHeight);\n\n    // Apply the new height to the textarea\n    this.textarea.style.height = `${newHeight}px`;\n  }\n  ", "CodeBleu_score": 40.056902788006155}, {"code": "adjustTextAreaHeight()  const textarea = document.getElementById('textarea');\n  const minHeight = 50; // Minimum height in pixels\n  const maxHeight = 200; // Maximum height in pixels\n  const maxLines = 10; // Maximum number of lines\n\n  textarea.style.height = '1px';\n  const fontSize = parseInt(window.getComputedStyle(textarea).fontSize);\n  const lineHeight = fontSize * 1.2; // Assuming a line height of 1.2 times the font size\n  const initialHeight = parseInt(textarea.style.height);\n  const scrollHeight = textarea.scrollHeight;\n  const newHeight = Math.min(Math.max(initialHeight, scrollHeight), maxHeight);\n  const numLines = Math.ceil(newHeight / lineHeight);\n  const height = Math.min(maxHeight, Math.max(minHeight, numLines * lineHeight));\n  textarea.style.height = `${height}px`;\n}\n", "CodeBleu_score": 33.21702167101076}]}
{"instance_id": "c0fa6e5d0067", "generation_result": [{"code": "onEnterKeyPressed()    if (this.isCodeBlockSelected()) {\n        this.commandInput.value = this.getSelectedText();\n    } else {\n        this.submitMessage(this.messageInput.value);\n        this.messageInput.value = '';\n        this.resetCommandAndOutput();\n    }\n    return true;\n}\n", "CodeBleu_score": 23.81678453758799}, {"code": "onEnterKeyPressed()    if (this.selectedCodeBlock) {\n        this.commandInput.value = this.selectedCodeBlock.command;\n    } else {\n        this.chatService.submitMessage(this.messageInput.value);\n        this.messageInput.value = '';\n        this.chatService.resetCommandAndOutput();\n    }\n    return true;\n}\n", "CodeBleu_score": 23.932158507640146}, {"code": "onEnterKeyPressed()    if (this.selectedCodeBlock) {\n      this.commandInput = this.selectedCodeBlock.command;\n    } else {\n      const message = this.messageInput.trim();\n      if (message) {\n        this.submitMessage(message);\n        this.messageInput = '';\n        this.resetCommandAndOutput();\n      }\n    }\n    return true;\n  }\n  ", "CodeBleu_score": 41.89917228184159}]}
{"instance_id": "a022487e54ff", "generation_result": [{"code": "function readAuthKey(): string  const homeDir = process.env.HOME || process.env.USERPROFILE;\n  const authKeyPath = path.join(homeDir, '.dev-ui-auth-key');\n\n  if (!fs.existsSync(authKeyPath)) {\n    const key = crypto.randomUUID();\n    fs.writeFileSync(authKeyPath, key, { mode: 0o600 });\n    return key;\n  }\n\n  const key = fs.readFileSync(authKeyPath, 'utf8');\n  if (!isValidKey(key)) {\n    throw new Error('Invalid authorization key');\n  }\n\n  return key;\n}\n", "CodeBleu_score": 25.898323368442604}, {"code": "function readAuthKey(): string  const homeDir = process.env.HOME || process.env.USERPROFILE;\n  const authKeyPath = path.join(homeDir, '.electron-vite-auth-key');\n\n  if (!fs.existsSync(authKeyPath)) {\n    const newKey = uuidv4();\n    fs.writeFileSync(authKeyPath, newKey, { mode: 0o600 });\n    return newKey;\n  }\n\n  const key = fs.readFileSync(authKeyPath, 'utf8');\n  if (!isUUID(key)) {\n    throw new Error('Invalid auth key');\n  }\n  return key;\n}\n", "CodeBleu_score": 26.92792744793202}, {"code": "function readAuthKey(): string  const homeDir = process.env.HOME || process.env.USERPROFILE;\n  const authKeyPath = path.join(homeDir, '.electron-vite-react-template-auth-key');\n\n  if (!fs.existsSync(authKeyPath)) {\n    const authKey = crypto.randomUUID();\n    fs.writeFileSync(authKeyPath, authKey, { mode: 0o600 });\n    return authKey;\n  }\n\n  const authKey = fs.readFileSync(authKeyPath, 'utf8');\n  if (!uuid.validate(authKey)) {\n    throw new Error('Invalid auth key');\n  }\n  return authKey;\n}\n", "CodeBleu_score": 26.966533317183693}]}
{"instance_id": "9c3e2f93e1c1", "generation_result": [{"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void    if (!this.system.isRunning) {\n      return;\n    }\n    const chunkSize = 1024;\n    let i = 0;\n    while (i < data.length) {\n      const chunk = data.slice(i, i + chunkSize);\n      this.processChunk(chunk, renderer);\n      i += chunkSize;\n    }\n  }\n  ", "CodeBleu_score": 46.172528716609776}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void  if (!this.system.isRunning) {\n    return;\n  }\n\n  const chunkSize = 1000;\n  const chunks = Math.ceil(data.length / chunkSize);\n\n  for (let i = 0; i < chunks; i++) {\n    const start = i * chunkSize;\n    const end = start + chunkSize;\n    const chunk = data.slice(start, end);\n    this.processDataChunk(chunk, renderer);\n  }\n}\n", "CodeBleu_score": 39.20958686743168}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void    if (this.isRunning) {\n      const chunkSize = 1000;\n      const numChunks = Math.ceil(data.length / chunkSize);\n      for (let i = 0; i < numChunks; i++) {\n        const start = i * chunkSize;\n        const end = Math.min(start + chunkSize, data.length);\n        const chunk = data.slice(start, end);\n        this.processChunk(chunk, renderer);\n      }\n    }\n  }\n  \n  /**\n   * This function, processChunk, processes a chunk of data and sends it to the renderer.\\nIf the system is not running, it returns immediately.\n   */\n  processChunk(chunk: string, renderer: RendererModel): void {\n    if (this.isRunning) {\n      const processedChunk = this.processData(chunk);\n      renderer.sendData(processedChunk);\n    }\n  }\n  \n  /**\n   * This function, processData, processes the data and returns the processed data.\\nIf the system is not running, it returns an empty string.\n   */\n  processData(data: string): string {\n    if (this.isRunning) {\n      // Process the data here\n      return data;\n    } else {\n      return '';\n    }\n  }\n  ", "CodeBleu_score": 31.949365022999377}]}
{"instance_id": "37ad09d7b939", "generation_result": [{"code": "function checkValidServiceWorker(swUrl)   fetch(swUrl).then((response) => {\n    const contentType = response.headers.get('content-type');\n    if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      registerValidSW(swUrl, config);\n    }\n  });\n}\n", "CodeBleu_score": 56.62829920411245}, {"code": "function checkValidServiceWorker(swUrl)     fetch(swUrl).then(response => {\n        const contentType = response.headers.get('content-type');\n        if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n            navigator.serviceWorker.ready.then(registration => {\n                registration.unregister().then(() => {\n                    window.location.reload();\n                });\n            });\n        } else {\n            registerValidSW(swUrl);\n        }\n    }).catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n", "CodeBleu_score": 77.9545342758334}, {"code": "function checkValidServiceWorker(swUrl)   fetch(swUrl).then(response => {\n    // Ensure service worker exists and is a JavaScript file\n    const contentType = response.headers.get('content-type');\n    if (!contentType || !contentType.includes('javascript')) {\n      // Stop loading the service worker as it's not a valid JavaScript file\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // If service worker found, register service worker\n      registerValidSW(swUrl);\n    }\n  });\n}\n", "CodeBleu_score": 64.60892923792407}]}
{"instance_id": "27dabe0c40aa", "generation_result": [{"code": "function areAllRequiredElementsHighlighted  const requiredElements = [\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    '11',\n    '12',\n    '13',\n    '14',\n    '15',\n    '16',\n    '17',\n    '18',\n    '19',\n    '20',\n    '21',\n    '22',\n    '23',\n    '24',\n    '25',\n    '26',\n    '27',\n    '28',\n    '29',\n    '30',\n    '31',\n    '32',\n    '33',\n    '34',\n    '35',\n    '36',\n    '37',\n    '38',\n    '39',\n    '40',\n    '41',\n    '42',\n    '43',\n    '44',\n    '45',\n    '46',\n    '47',\n    '48',\n    '49',\n    '50',\n    '51',\n    '52',\n    '53',\n    '54',\n    '55',\n    '56',\n    '57',\n    '58',\n    '59',\n    '60',\n    '61',\n    '62',\n    '63',\n    '64',\n    '65',\n    '66',\n    '67',\n    '68',\n    '69',\n    '70',\n    '71',\n    '72',\n    '73',\n    '74',\n    '75',\n    '76',\n    '77',\n    '78',\n    '79',\n    '80',\n    '81',\n    '82',\n    '83',\n    '84',\n    '85',\n    '86", "CodeBleu_score": 1.546773707755276}, {"code": "function areAllRequiredElementsHighlighted  const highlighted = this.state.highlighted;\n  const required = this.props.required;\n  if (highlighted.length === 0) {\n    return CheckboxState.UNCHECKED;\n  }\n  if (highlighted.length === required.length) {\n    return CheckboxState.CHECKED;\n  }\n  return CheckboxState.INDETERMINATE;\n}\n", "CodeBleu_score": 20.06423167991771}, {"code": "function areAllRequiredElementsHighlighted    // Get the highlighted elements from the page\n    const highlightedElements = document.querySelectorAll('.highlighted');\n\n    // Get the required elements from the page\n    const requiredElements = document.querySelectorAll('.required');\n\n    // Initialize a counter for the number of required elements that are highlighted\n    let highlightedCount = 0;\n\n    // Loop through the required elements and check if they are highlighted\n    requiredElements.forEach(element => {\n        if (highlightedElements.includes(element)) {\n            highlightedCount++;\n        }\n    });\n\n    // If all required elements are highlighted, return CHECKED\n    if (highlightedCount === requiredElements.length) {\n        return 'CHECKED';\n    }\n\n    // If none of the required elements are highlighted, return UNCHECKED\n    if (highlightedCount === 0) {\n        return 'UNCHECKED';\n    }\n\n    // Otherwise, return INDETERMINATE\n    return 'INDETERMINATE';\n}\n", "CodeBleu_score": 23.656357945395516}]}
{"instance_id": "c60e532809af", "generation_result": [{"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) =>     const actions = actionsFn(...handles);\n    return Object.entries(actions).map(([key, action]) => {\n        const [eventName, selector] = key.split(':');\n        const handler = (event: Event) => {\n            if (selector && !event.target?.matches(selector)) {\n                return;\n            }\n            action(event);\n        };\n        return { eventName, handler };\n    });\n};\n", "CodeBleu_score": 45.51605920860442}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) =>   const actions = actionsFn(...handles);\n  return Object.entries(actions).map(([key, action]) => {\n    const [eventName, selector] = key.split(':');\n    return {\n      [eventName]: (event: Event) => {\n        const target = event.target as HTMLElement;\n        if (!selector || target.matches(selector)) {\n          action(event);\n        }\n      },\n    };\n  });\n};\n", "CodeBleu_score": 45.233633812931664}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) =>     const actions = actionsFn(...handles);\n    return Object.entries(actions).map(([key, action]) => {\n        const [eventName, selector] = key.split(':');\n        return {\n            [eventName]: (e: Event) => {\n                if (!selector || (e.target as HTMLElement).matches(selector)) {\n                    action(e);\n                }\n            },\n        };\n    });\n};\n", "CodeBleu_score": 46.97685897603393}]}
{"instance_id": "8c81ca953249", "generation_result": [{"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>  const root = document.getElementById('storybook-root');\n  if (!root) {\n    return;\n  }\n  const eventHandlers = handles.map((handle) => {\n    return (event: any) => {\n      const action = actionsFn[handle];\n      if (action) {\n        action(event);\n      }\n    };\n  });\n  eventHandlers.forEach((eventHandler, index) => {\n    root.addEventListener(handles[index], eventHandler);\n  });\n  return () => {\n    eventHandlers.forEach((eventHandler, index) => {\n      root.removeEventListener(handles[index], eventHandler);\n    });\n  };\n};\n", "CodeBleu_score": 36.846196000571126}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>  const root = document.getElementById(\"storybook-root\");\n  if (root) {\n    const eventHandlers = handles.map((handle) => ({\n      event: handle.event,\n      handler: (event) => actionsFn[handle.action](event),\n    }));\n\n    eventHandlers.forEach((eventHandler) => {\n      root.addEventListener(eventHandler.event, eventHandler.handler);\n    });\n\n    return () => {\n      eventHandlers.forEach((eventHandler) => {\n        root.removeEventListener(eventHandler.event, eventHandler.handler);\n      });\n    };\n  }\n};\n", "CodeBleu_score": 37.32558939141985}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>  const root = document.getElementById('storybook-root');\n\n  if (!root) {\n    return;\n  }\n\n  const eventHandlers = handles.map((handle) => {\n    return (event: any) => {\n      actionsFn(handle, event);\n    };\n  });\n\n  eventHandlers.forEach((eventHandler, index) => {\n    root.addEventListener(handles[index], eventHandler);\n  });\n\n  return () => {\n    eventHandlers.forEach((eventHandler, index) => {\n      root.removeEventListener(handles[index], eventHandler);\n    });\n  };\n};\n", "CodeBleu_score": 37.72653658945554}]}
{"instance_id": "3b9dc9070ef1", "generation_result": [{"code": "addAction = (action: ActionDisplay) =>  const { state, options } = this.props;\n  const { actions } = state;\n\n  // If the last action in the list has the same data as the new action, increment the count\n  if (actions.length > 0 && actions[actions.length - 1].data === action.data) {\n    actions[actions.length - 1].count++;\n  } else {\n    // Otherwise, set the new action's count to 1 and add it to the list\n    actions.push({ data: action.data, count: 1 });\n  }\n\n  // Update the state with the modified actions list, limited by the specified options\n  this.setState({ actions: actions.slice(-options.maxActions) });\n};\n", "CodeBleu_score": 27.34995455267598}, {"code": "addAction = (action: ActionDisplay) =>  const { state, options } = this;\n  const { actions } = state;\n  const lastAction = actions[actions.length - 1];\n  if (lastAction && lastAction.data === action.data) {\n    lastAction.count++;\n  } else {\n    actions.push({\n      data: action.data,\n      count: 1,\n    });\n  }\n  this.updateState(options);\n};\n", "CodeBleu_score": 33.61681754976762}, {"code": "addAction = (action: ActionDisplay) =>    const { state, options } = this.props;\n    const { actions } = state;\n    const lastAction = actions[actions.length - 1];\n    if (lastAction && lastAction.data === action.data) {\n        lastAction.count += 1;\n    } else {\n        actions.push({\n            data: action.data,\n            count: 1\n        });\n    }\n    const newActions = actions.slice(0, options.limit);\n    this.setState({ actions: newActions });\n};\n", "CodeBleu_score": 35.611115583138464}]}
{"instance_id": "c58b95bdb84e", "generation_result": [{"code": "export const addGridStyle = (selector: string, css: string) =>   const style = document.querySelector(`style[id=\"${selector}\"]`);\n  if (style) {\n    if (style.textContent !== css) {\n      style.textContent = css;\n    }\n  } else {\n    const newStyle = document.createElement('style');\n    newStyle.id = selector;\n    newStyle.textContent = css;\n    document.head.appendChild(newStyle);\n  }\n};\n", "CodeBleu_score": 49.64215229958969}, {"code": "export const addGridStyle = (selector: string, css: string) =>     const style = document.querySelector(`style[id=\"${selector}\"]`) as HTMLStyleElement | null;\n    if (style) {\n        if (style.textContent !== css) {\n            style.textContent = css;\n        }\n    } else {\n        const newStyle = document.createElement('style');\n        newStyle.id = selector;\n        newStyle.textContent = css;\n        document.head.appendChild(newStyle);\n    }\n}\n", "CodeBleu_score": 50.029514768541326}, {"code": "export const addGridStyle = (selector: string, css: string) =>   const styleElement = document.querySelector<HTMLStyleElement>(`style[id=\"${selector}\"]`)\n  if (styleElement) {\n    if (styleElement.innerHTML !== css) {\n      styleElement.innerHTML = css\n    }\n  } else {\n    const style = document.createElement('style')\n    style.id = selector\n    style.innerHTML = css\n    document.head.appendChild(style)\n  }\n}\n", "CodeBleu_score": 52.025477626583495}]}
{"instance_id": "882d870a20b2", "generation_result": [{"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>  const existingStyle = document.querySelector(`style[id=\"${selector}\"]`);\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css;\n  } else {\n    const style = document.createElement('style');\n    style.id = selector;\n    style.innerHTML = css;\n\n    const existingGridStyle = document.querySelector(`style[id=\"${storyId}\"]`);\n    if (existingGridStyle) {\n      existingGridStyle.parentNode?.insertBefore(style, existingGridStyle);\n    } else {\n      document.head.appendChild(style);\n    }\n  }\n};\n", "CodeBleu_score": 48.94607838251684}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>  const style = document.getElementById(selector) as HTMLStyleElement\n  const gridStyle = document.getElementById(`${selector}-${storyId}`) as HTMLStyleElement\n  const newStyle = document.createElement('style')\n  newStyle.id = `${selector}-${storyId}`\n  newStyle.innerHTML = css\n\n  if (style) {\n    if (style.innerHTML !== css) {\n      style.innerHTML = css\n    }\n  } else {\n    document.head.appendChild(newStyle)\n  }\n\n  if (gridStyle) {\n    if (gridStyle.parentNode) {\n      gridStyle.parentNode.insertBefore(newStyle, gridStyle)\n    }\n  } else {\n    document.head.appendChild(newStyle)\n  }\n}\n", "CodeBleu_score": 42.99126605418615}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>  const existingStyle = document.querySelector(`style[id=\"${selector}\"]`);\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css;\n  } else {\n    const style = document.createElement('style');\n    style.setAttribute('id', selector);\n    style.innerHTML = css;\n    const gridStyle = document.querySelector(`style[id=\"${storyId}\"]`);\n    if (gridStyle) {\n      gridStyle.parentNode?.insertBefore(style, gridStyle);\n    } else {\n      document.head.appendChild(style);\n    }\n  }\n};\n", "CodeBleu_score": 48.58361084399826}]}
{"instance_id": "c17e647327b5", "generation_result": [{"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>  event.preventDefault();\n\n  if (isSaving) {\n    return;\n  }\n\n  setErrorMessage(\"\");\n  setIsSaving(true);\n\n  const sanitizedStoryName = sanitizeStoryName(storyName);\n\n  try {\n    await createStory(sanitizedStoryName);\n    setStoryName(\"\");\n    setIsSaving(false);\n  } catch (error) {\n    setErrorMessage(\"Failed to create story.\");\n    setIsSaving(false);\n  }\n};\n", "CodeBleu_score": 35.0332800341092}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>  event.preventDefault();\n  if (saving) {\n    return;\n  }\n  setErrorMessage(\"\");\n  setSaving(true);\n  try {\n    const storyName = sanitize(storyNameInput.current?.value || \"\");\n    await createStory(storyName);\n    setSaving(false);\n    resetForm();\n  } catch (error) {\n    setErrorMessage(\"Error creating story\");\n    setSaving(false);\n  }\n};\n", "CodeBleu_score": 39.21042137344112}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>  event.preventDefault();\n  if (isSaving) {\n    return;\n  }\n\n  setErrorMessage(null);\n  setIsSaving(true);\n\n  const sanitizedStoryName = storyName.trim();\n\n  try {\n    await createStory(sanitizedStoryName);\n    setStoryName(\"\");\n    setIsSaving(false);\n  } catch (error) {\n    setErrorMessage(error.message);\n    setIsSaving(false);\n  }\n};\n", "CodeBleu_score": 39.86632711273078}]}
{"instance_id": "2d58c69eda27", "generation_result": [{"code": "function Title()    var argTypes = useArgTypes();\n    var count = 0;\n    Object.keys(argTypes).forEach(function (argType) {\n        if (argTypes[argType].control && !argTypes[argType].control.disable) {\n            count++;\n        }\n    });\n    var suffix = count === 0 ? null : (\n      <Badge\n        style={{\n          marginLeft: 10,\n          backgroundColor: '#ff4785',\n          color: 'white',\n          fontWeight: 'bold',\n        }}\n      >\n        {count}\n      </Badge>\n    );\n    return (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginBottom: 10,\n        }}\n      >\n        <div>Controls</div>\n        {suffix}\n      </div>\n    );\n  }", "CodeBleu_score": 28.86636574747531}, {"code": "function Title()  const argTypes = useArgTypes();\n  const enabledArgTypes = Object.keys(argTypes).filter(\n    (argType) => !argTypes[argType].table?.disable\n  );\n  const argTypesWithControls = enabledArgTypes.filter(\n    (argType) => argTypes[argType].control !== \"none\"\n  );\n  const argTypesWithControlsCount = argTypesWithControls.length;\n  return (\n    <div className=\"title\">\n      <div className=\"title-text\">Controls</div>\n      {argTypesWithControlsCount > 0 && (\n        <div className=\"title-badge\">{argTypesWithControlsCount}</div>\n      )}\n    </div>\n  );\n}\n", "CodeBleu_score": 31.82561244780943}, {"code": "function Title()  const argTypes = useArgTypes();\n  const argTypesWithControls = Object.values(argTypes).filter(\n    (argType) => argType.control !== 'none' && !argType.table\n  );\n  const argTypesWithControlsCount = argTypesWithControls.length;\n\n  const suffix = argTypesWithControlsCount ? (\n    <span className=\"badge\">{argTypesWithControlsCount}</span>\n  ) : null;\n\n  return (\n    <div className=\"title\">\n      <span>Controls</span>\n      {suffix}\n    </div>\n  );\n}\n", "CodeBleu_score": 37.936989285919495}]}
{"instance_id": "b8fba20204d6", "generation_result": [{"code": "const highlight = (infos: HighlightInfo) =>  const { elements, styles, color, duration } = infos;\n  const uniqueElements = [...new Set(elements)];\n  const style = document.createElement(\"style\");\n  style.id = \"highlight-style\";\n  style.innerHTML = uniqueElements\n    .map((element) => {\n      return `\n        ${element} {\n          background-color: ${color};\n          transition: background-color ${duration}ms ease-in-out;\n        }\n      `;\n    })\n    .join(\"\");\n  document.head.appendChild(style);\n};\n", "CodeBleu_score": 32.54769899830087}, {"code": "const highlight = (infos: HighlightInfo) =>  const { elements, highlightStyle } = infos;\n\n  const styleElement = document.createElement(\"style\");\n  styleElement.id = \"highlight-style\";\n\n  const uniqueElements = Array.from(new Set(elements));\n\n  const cssRules = uniqueElements.map(\n    (element) =>\n      `${element} {\n        background-color: ${highlightStyle.backgroundColor};\n        color: ${highlightStyle.color};\n        font-weight: ${highlightStyle.fontWeight};\n        font-style: ${highlightStyle.fontStyle};\n        text-decoration: ${highlightStyle.textDecoration};\n      }`\n  );\n\n  styleElement.textContent = cssRules.join(\"\\n\");\n\n  document.head.appendChild(styleElement);\n};\n", "CodeBleu_score": 40.282617595006855}, {"code": "const highlight = (infos: HighlightInfo) =>  const { elements, styles } = infos;\n\n  // Remove any existing highlights\n  removeHighlight();\n\n  // Create a new style element\n  const style = document.createElement(\"style\");\n  style.id = \"highlight-styles\";\n\n  // Define CSS rules for each element\n  const rules = elements.map((element) => {\n    const selector = element.tagName.toLowerCase();\n    const properties = Object.entries(styles).map(\n      ([property, value]) => `${property}: ${value};`\n    );\n    return `${selector} { ${properties.join(\" \")} }`;\n  });\n\n  // Set the CSS rules for the style element\n  style.innerHTML = rules.join(\"\\n\");\n\n  // Append the style element to the document head\n  document.head.appendChild(style);\n};\n", "CodeBleu_score": 44.33961048454166}]}
{"instance_id": "08a3fb827e48", "generation_result": [{"code": "const resetHighlight = () =>  const highlight = document.getElementById('highlight');\n  if (highlight) highlight.parentNode.removeChild(highlight);\n};\n", "CodeBleu_score": 22.717600515261083}, {"code": "const resetHighlight = () =>  const highlight = document.getElementById('highlight');\n  if (highlight) {\n    highlight.parentNode.removeChild(highlight);\n  }\n};\n", "CodeBleu_score": 24.810512187435098}, {"code": "const resetHighlight = () =>  const highlight = document.getElementById(\"highlight\");\n  if (highlight) {\n    highlight.parentNode.removeChild(highlight);\n  }\n};\n", "CodeBleu_score": 24.810512187435098}]}
{"instance_id": "1287df4e99b3", "generation_result": [{"code": "function parseQuery(queryString: string)  const queryObject: { [key: string]: string } = {};\n\n  // Remove the leading '?' if present\n  if (queryString.startsWith('?')) {\n    queryString = queryString.substring(1);\n  }\n\n  // Split the query string into key-value pairs\n  const pairs = queryString.split('&');\n\n  // Process each pair and add it to the object\n  for (const pair of pairs) {\n    const [key, value] = pair.split('=');\n\n    // Decode the key and value\n    const decodedKey = decodeURIComponent(key);\n    const decodedValue = decodeURIComponent(value);\n\n    // Add the decoded key-value pair to the object\n    queryObject[decodedKey] = decodedValue;\n  }\n\n  return queryObject;\n}\n", "CodeBleu_score": 34.413222133772514}, {"code": "function parseQuery(queryString: string)  const queryParams: { [key: string]: string } = {};\n  const pairs = queryString.replace(/^\\?/, '').split('&');\n  for (const pair of pairs) {\n    const [key, value] = decodeURIComponent(pair).split('=');\n    queryParams[key] = value;\n  }\n  return queryParams;\n}\n", "CodeBleu_score": 36.0994935920293}, {"code": "function parseQuery(queryString: string)  const queryObject: Record<string, string> = {};\n\n  if (queryString.startsWith('?')) {\n    queryString = queryString.substring(1);\n  }\n\n  const pairs = queryString.split('&');\n\n  for (const pair of pairs) {\n    const [key, value] = pair.split('=');\n\n    const decodedKey = decodeURIComponent(key);\n    const decodedValue = decodeURIComponent(value);\n\n    queryObject[decodedKey] = decodedValue;\n  }\n\n  return queryObject;\n}\n", "CodeBleu_score": 39.106978800892016}]}
{"instance_id": "83c4f520b99a", "generation_result": [{"code": "const linksListener = (e: Event) =>  const target = e.target as HTMLElement\n  if (target.dataset.sbKind && target.dataset.sbStory) {\n    e.preventDefault()\n    navigate(target.dataset.sbKind, target.dataset.sbStory)\n  }\n}\n", "CodeBleu_score": 19.569389361703692}, {"code": "const linksListener = (e: Event) =>  const target = e.target as HTMLElement;\n  const sbKind = target.dataset.sbKind;\n  const sbStory = target.dataset.sbStory;\n\n  if (sbKind && sbStory) {\n    e.preventDefault();\n    navigate(sbKind, sbStory);\n  }\n};\n", "CodeBleu_score": 29.386351326412}, {"code": "const linksListener = (e: Event) =>  if (e.target instanceof HTMLElement) {\n    const { sbKind, sbStory } = e.target.dataset;\n    if (sbKind && sbStory) {\n      e.preventDefault();\n      navigate(sbKind, sbStory);\n    }\n  }\n};\n", "CodeBleu_score": 30.645153076829178}]}
{"instance_id": "8b8e277eb593", "generation_result": [{"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>  if (node.shadowRoot) {\n    const nestedElement = node.shadowRoot.elementFromPoint(node.clientWidth / 2, node.clientHeight / 2) as HTMLElement;\n    if (nestedElement === node) {\n      return node;\n    }\n    return crawlShadows(nestedElement);\n  }\n  return node;\n};\n", "CodeBleu_score": 49.43102398683354}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>  if (node.shadowRoot) {\n    const nested = node.shadowRoot.elementFromPoint(0, 0);\n    if (nested === node.shadowRoot) {\n      return node;\n    }\n    return crawlShadows(nested as HTMLElement);\n  }\n  return node;\n};\n", "CodeBleu_score": 39.384098009499}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>  const root = node.shadowRoot;\n  if (root) {\n    const nested = root.elementFromPoint(\n      root.clientWidth / 2,\n      root.clientHeight / 2\n    );\n    if (nested === root) {\n      return root;\n    }\n    return crawlShadows(nested as HTMLElement);\n  }\n  return node;\n};\n", "CodeBleu_score": 36.32791715858888}]}
{"instance_id": "2fa298c35659", "generation_result": [{"code": "function createCanvas(): CanvasState    const canvas = document.createElement('canvas');\n    canvas.id = 'canvas';\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.zIndex = '100';\n    canvas.style.pointerEvents = 'none';\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n    document.body.appendChild(canvas);\n\n    const context = canvas.getContext('2d');\n    if (!context) {\n        throw new Error('Canvas context is null');\n    }\n\n    return {\n        canvas,\n        context,\n        width: canvas.width,\n        height: canvas.height,\n    };\n}\n", "CodeBleu_score": 45.641912150128974}, {"code": "function createCanvas(): CanvasState  const canvas = document.createElement(\"canvas\");\n  canvas.id = \"canvas\";\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  canvas.style.position = \"absolute\";\n  canvas.style.top = \"0\";\n  canvas.style.left = \"0\";\n  canvas.style.zIndex = \"100\";\n  canvas.style.pointerEvents = \"none\";\n  document.body.appendChild(canvas);\n  const context = canvas.getContext(\"2d\");\n  if (context == null) {\n    throw new Error(\"Canvas context is null\");\n  }\n  return {\n    canvas: canvas,\n    context: context,\n    width: canvas.width,\n    height: canvas.height,\n  };\n}\n", "CodeBleu_score": 42.27766591580727}, {"code": "function createCanvas(): CanvasState    const canvas = document.createElement('canvas');\n    canvas.id = 'canvas';\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.zIndex = '10000';\n    canvas.style.pointerEvents = 'none';\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n    const context = canvas.getContext('2d');\n    if (!context) {\n        throw new Error('Failed to obtain 2D drawing context');\n    }\n    document.body.appendChild(canvas);\n    return { canvas, context, width: canvas.width, height: canvas.height };\n}\n", "CodeBleu_score": 46.453275887368676}]}
{"instance_id": "0484eaeba359", "generation_result": [{"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>  const { telemetry } = options;\n\n  if (telemetry === false) {\n    return channel;\n  }\n\n  const addonVersion = await getAddonVersion();\n  const addonTelemetry = await getAddonTelemetry();\n\n  if (addonTelemetry) {\n    channel.addListener(addonTelemetry);\n  }\n\n  return channel.configure({\n    ...channel.getOptions(),\n    telemetry: {\n      addonVersion,\n    },\n  });\n};\n", "CodeBleu_score": 18.292976271908586}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>  if (options.disableTelemetry) {\n    return channel;\n  }\n\n  const { version } = await import('@storybook/addon-onboarding/package.json');\n  const { version: addonVersion } = await import('../package.json');\n\n  const telemetryChannel = await import('@storybook/telemetry').then(({ channel: telemetryChannel }) => {\n    return telemetryChannel(channel, {\n      app: 'storybook',\n      version,\n      addonVersion,\n    });\n  });\n\n  return telemetryChannel;\n};\n", "CodeBleu_score": 32.49323912250583}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>  const {\n    telemetry,\n    addonVersion,\n    configDir,\n    configFile,\n    configType,\n    configName,\n    configFileType,\n    configFilePath,\n    configFileExt,\n    configDirName,\n    configDirPath,\n    configDirExt,\n    configDirExts,\n    configDirPaths,\n    configDirPathsMap,\n    configDirPathsMapExts,\n    configDirPathsMapExtsMap,\n    configDirPathsMapExtsMapMap,\n    configDirPathsMapExtsMapMapMap,\n    configDirPathsMapExtsMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMap,\n    configDirPathsMapExtsMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapMap", "CodeBleu_score": 13.277193183509773}]}
{"instance_id": "8552de1f8368", "generation_result": [{"code": "export const addOutlineStyles = (selector: string, css: string) =>   const style = document.querySelector(`style[data-selector=\"${selector}\"]`) as HTMLElement | null;\n  if (style) {\n    if (style.innerHTML !== css) {\n      style.innerHTML = css;\n    }\n  } else {\n    const newStyle = document.createElement('style');\n    newStyle.setAttribute('data-selector', selector);\n    newStyle.innerHTML = css;\n    document.head.appendChild(newStyle);\n  }\n};\n", "CodeBleu_score": 54.37032917062597}, {"code": "export const addOutlineStyles = (selector: string, css: string) =>   const existingStyleElement = document.getElementById(selector);\n  if (existingStyleElement) {\n    if (existingStyleElement.innerHTML !== css) {\n      existingStyleElement.innerHTML = css;\n    }\n  } else {\n    const styleElement = document.createElement(\"style\");\n    styleElement.id = selector;\n    styleElement.innerHTML = css;\n    document.head.appendChild(styleElement);\n  }\n};\n", "CodeBleu_score": 50.47822741712049}, {"code": "export const addOutlineStyles = (selector: string, css: string) =>     const style = document.head.querySelector(`style[data-id=\"${selector}\"]`) as HTMLStyleElement | null;\n    if (style) {\n        if (style.innerHTML !== css) {\n            style.innerHTML = css;\n        }\n    } else {\n        const styleEl = document.createElement('style');\n        styleEl.setAttribute('data-id', selector);\n        styleEl.innerHTML = css;\n        document.head.appendChild(styleEl);\n    }\n}", "CodeBleu_score": 53.7871037094213}]}
{"instance_id": "2472b6d48b9a", "generation_result": [{"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n)  const { locales, sourceLocale, defaultLocale } = i18n\n  const { logger } = context\n\n  for (const locale of locales) {\n    if (locale === sourceLocale || locale === defaultLocale) {\n      continue\n    }\n\n    if (!locale.inline) {\n      continue\n    }\n\n    if (locale.files) {\n      const loader = new TranslationLoader(context, locale)\n      try {\n        await loader.loadTranslations()\n      } catch (error) {\n        logger.warn(error)\n      }\n    }\n  }\n}\n", "CodeBleu_score": 36.17796259819438}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n)  const { locales, sourceLocale, translationsDir, duplicateTranslations } = i18n;\n  const logger = context.logger;\n\n  for (const locale of locales) {\n    if (!locale.inline || locale.code === sourceLocale) {\n      continue;\n    }\n\n    if (!locale.translationFile) {\n      logger.warn(\n        `No translation file provided for locale \"${locale.code}\", skipping...`,\n      );\n      continue;\n    }\n\n    const loader = new TranslationLoader(\n      locale.code,\n      locale.translationFile,\n      translationsDir,\n    );\n\n    try {\n      await loader.loadTranslations(context, duplicateTranslations);\n    } catch (e) {\n      logger.error(e);\n    }\n  }\n}\n", "CodeBleu_score": 40.14431981729905}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n)  const { locales, duplicateTranslationBehavior } = i18n;\n  const { logger } = context;\n\n  for (const locale of locales) {\n    if (!locale.inline || locale.code === i18n.sourceLocale) {\n      continue;\n    }\n\n    const translationLoader = new TranslationLoader(context, locale);\n    try {\n      await translationLoader.loadTranslations();\n    } catch (error) {\n      logger.warn(\n        `Failed to load translations for locale ${locale.code}. Error: ${error.message}`,\n      );\n    }\n  }\n\n  if (duplicateTranslationBehavior === 'error') {\n    const duplicateTranslations = getDuplicateTranslations(\n      context,\n      i18n.sourceLocale,\n    );\n    if (duplicateTranslations.length > 0) {\n      throw new Error(\n        `Duplicate translations found: ${duplicateTranslations.join(', ')}`,\n      );\n    }\n  }\n}\n", "CodeBleu_score": 37.437547171381944}]}
{"instance_id": "24579c798101", "generation_result": [{"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>  const plugins =\n    Array.isArray(pluginsOrExtensions) && pluginsOrExtensions.length > 0\n      ? pluginsOrExtensions\n      : [];\n  const extensions =\n    Array.isArray(pluginsOrExtensions) && pluginsOrExtensions.length === 0\n      ? pluginsOrExtensions\n      : [];\n  const normalizedPlugins = normalizePlugins(plugins);\n  const normalizedExtensions = normalizeExtensions(extensions);\n  return build(options, context, normalizedPlugins, normalizedExtensions);\n}\n", "CodeBleu_score": 38.47852572307101}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>  // Normalize pluginsOrExtensions\n  const extensions = Array.isArray(pluginsOrExtensions)\n    ? pluginsOrExtensions\n    : pluginsOrExtensions\n    ? [pluginsOrExtensions]\n    : [];\n\n  // Iterate over results from internal build function\n  for (const result of build(options, context, extensions)) {\n    // Yield an object indicating success based on the result kind\n    yield {\n      success: result.kind === 'success',\n      result,\n    };\n  }\n}\n", "CodeBleu_score": 43.35302210631059}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>  // Normalize pluginsOrExtensions to an array of plugins if it is an object.\n  if (typeof pluginsOrExtensions === 'object') {\n    pluginsOrExtensions = Object.values(pluginsOrExtensions);\n  }\n\n  // Build the application using the internal build function.\n  const iterator = build(options, context, pluginsOrExtensions);\n\n  // Iterate over the results from the build function, yielding an object indicating success based on the result kind.\n  for await (const result of iterator) {\n    switch (result.kind) {\n      case 'success':\n        yield { kind: 'success', application: result.application };\n        break;\n      case 'error':\n        yield { kind: 'error', error: result.error };\n        break;\n    }\n  }\n}\n", "CodeBleu_score": 44.1389367188814}]}
{"instance_id": "126e9e9e4010", "generation_result": [{"code": "const diagnostics = checkDuplicateMessages    checkFileSystem: checkFileSystem,\n    messages: extractionResult.messages,\n    level: 'warning',\n    basePath: extractionResult.basePath\n}\n", "CodeBleu_score": 19.255887145834603}, {"code": "const diagnostics = checkDuplicateMessages  checkFileSystem: checkFileSystem,\n  messages: extractionResult.messages,\n  severity: 'warning',\n  basePath: extractionResult.basePath,\n}\n", "CodeBleu_score": 21.155258374931012}, {"code": "const diagnostics = checkDuplicateMessages  checkFileSystem: checkFileSystem,\n  messages: extractionResult.messages,\n  severity: 'warning',\n  basePath: extractionResult.basePath,\n};\n", "CodeBleu_score": 21.079252319723015}]}
{"instance_id": "349518a072df", "generation_result": [{"code": "function isTslibHelperName(name: string): boolean  const [originalName, index] = name.split('$');\n  if (originalName === name || index === undefined || !Number.isInteger(+index)) {\n    return false;\n  }\n  return tslibHelpers.has(originalName);\n}\n", "CodeBleu_score": 46.16927661890692}, {"code": "function isTslibHelperName(name: string): boolean  const parts = name.split('$');\n  if (parts.length !== 2 || isNaN(Number(parts[1]))) {\n    return false;\n  }\n  return tslibHelpers.has(parts[0]);\n}\n", "CodeBleu_score": 46.1461419582626}, {"code": "function isTslibHelperName(name: string): boolean  const parts = name.split('$');\n  if (parts.length !== 2 || isNaN(Number(parts[1]))) {\n    return false;\n  }\n  return tslibHelpers.has(parts[0]);\n}\n", "CodeBleu_score": 46.1461419582626}]}
{"instance_id": "0a9b3093b5bc", "generation_result": [{"code": "async bundle(): Promise<BundleContextResult>    const { bundle } = this\n    const { cache, caching, operation } = bundle\n    const { context, result } = cache.get(operation) || {}\n\n    if (context) {\n        return result\n    }\n\n    const { context: newContext, result: newResult } = await operation(this)\n\n    if (caching) {\n        cache.set(operation, { context: newContext, result: newResult })\n    }\n\n    return newResult\n}\n", "CodeBleu_score": 27.69745705945994}, {"code": "async bundle(): Promise<BundleContextResult>    const cachedResult = await this.cache.get(this.input);\n    if (cachedResult) {\n        return cachedResult;\n    }\n    const result = await this.operation.bundle(this.input);\n    if (this.cache.enabled) {\n        this.cache.set(this.input, result);\n    }\n    return result;\n}\n", "CodeBleu_score": 38.45553208720423}, {"code": "async bundle(): Promise<BundleContextResult>    return this.bundleContext.bundle(this.bundleContextOptions);\n}\n", "CodeBleu_score": 6.426700101641602}]}
{"instance_id": "f4fe3e6ac648", "generation_result": [{"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string>     const changedFiles = new Set<string>();\n    for (const [filePath, currentHash] of Object.entries(this.outputHashes)) {\n      const previousHash = previousOutputHashes.get(filePath);\n      if (previousHash !== currentHash) {\n        changedFiles.add(filePath);\n      }\n    }\n    return changedFiles;\n  }\n", "CodeBleu_score": 60.04961630304426}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string>     const changedFiles = new Set<string>();\n  \n    for (const [filePath, currentHash] of Object.entries(this.outputHashes)) {\n      const previousHash = previousOutputHashes.get(filePath);\n  \n      if (previousHash !== currentHash) {\n        changedFiles.add(filePath);\n      }\n    }\n  \n    return changedFiles;\n  }\n  \n  /**\n   * This function, generateOutputHashes, generates a map of file paths to their current hashes.\\nIt iterates over the output files and generates a hash for each file using the md5 algorithm.\\nThe function returns this map of output file paths to their hashes.\n   */\n  generateOutputHashes(): Map<string, string> {\n    const outputHashes = new Map<string, string>();\n  \n    for (const filePath of this.outputFiles) {\n      const fileContent = fs.readFileSync(filePath).toString();\n      const hash = md5(fileContent);\n      outputHashes.set(filePath, hash);\n    }\n  \n    return outputHashes;\n  }\n  ", "CodeBleu_score": 50.209404338998574}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string>     const changedFiles = new Set<string>();\n    for (const [filePath, currentHash] of Object.entries(this.outputHashes)) {\n      const previousHash = previousOutputHashes.get(filePath);\n      if (previousHash !== currentHash) {\n        changedFiles.add(filePath);\n      }\n    }\n    return changedFiles;\n  }\n  ", "CodeBleu_score": 60.04961630304426}]}
{"instance_id": "8969b8ce5198", "generation_result": [{"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule>     return await import('@angular/localize/tools').then(m => m.default);\n}\n", "CodeBleu_score": 19.86598568497296}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule>   return await import('@angular/localize/tools').then(m => m.LocalizeUtilityModule);\n}\n", "CodeBleu_score": 23.46688915144209}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule>   return await import('@angular/localize/tools').then(m => m.LocalizeUtilityModule);\n}\n", "CodeBleu_score": 23.46688915144209}]}
{"instance_id": "d7c4df80e1ac", "generation_result": [{"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined)  const { initDiagnostics, diagnostics } = await import('@vue/cli-shared-utils');\n  initDiagnostics();\n\n  const { createI18nPlugin, createLocalePlugin } = await import('./i18n');\n\n  const i18nPlugin = createI18nPlugin(locale, translation);\n  const localePlugin = createLocalePlugin(locale);\n\n  return {\n    diagnostics,\n    plugins: [i18nPlugin, localePlugin],\n  };\n}\n", "CodeBleu_score": 26.375669062745793}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined)  const { createDiagnostics, createPlugin } = await import('@vue/compiler-sfc')\n  const diagnostics = createDiagnostics(locale)\n  const translationPlugin = createPlugin({\n    name: 'vue-i18n-translation',\n    transformLocaleMessageExpression(expression) {\n      if (expression.type === 'CallExpression' && expression.callee.type === 'Identifier' && expression.callee.name === 't') {\n        return {\n          type: 'StringLiteral',\n          value: translation?.[expression.arguments[0].value] ?? expression.arguments[0].value,\n        }\n      }\n    },\n  })\n  const localePlugin = createPlugin({\n    name: 'vue-i18n-locale',\n    transformLocaleExpression(expression) {\n      if (expression.type === 'Identifier' && expression.name === 'locale') {\n        return {\n          type: 'StringLiteral',\n          value: locale,\n        }\n      }\n    },\n  })\n  return {\n    diagnostics,\n    plugins: [translationPlugin, localePlugin],\n  }\n}\n", "CodeBleu_score": 30.678714447218386}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined)  const { createDiagnostics, createPlugin } = await import('@vue/compiler-sfc/dist/node/diagnostics');\n  const { createI18nPlugin } = await import('@intlify/vite-plugin-vue-i18n');\n\n  const diagnostics = createDiagnostics(locale);\n\n  const plugins = [\n    createI18nPlugin({\n      messages: translation,\n      compositionOnly: true,\n      fullInstall: false,\n      diagnostics,\n      missingWarn: false,\n      globalSFCDescriptor: 'sfc',\n      globalSFCLanguage: 'lang',\n      globalSFCTemplate: 'template',\n      include: [/\\.vue$/, /\\.tsx$/, /\\.ts$/, /\\.jsx$/, /\\.js$/],\n    }),\n  ];\n\n  if (translation) {\n    plugins.push(\n      createPlugin({\n        name: 'vue-i18n:missing-translation',\n        transform(code, id) {\n          if (!id.endsWith('.vue')) return;\n\n          const regex = /\\$t\\(('|\")(.*?)('|\")\\)/g;\n          const matches = code.matchAll(regex);\n\n          for (const match of matches) {\n            const key = match[2];\n\n            if (!translation[key]) {\n              diagnostics.error(\n                `Missing translation for key \"${key}\" in locale \"${locale}\"`,\n                match.index + match[0].length,\n              );\n            }\n          }\n        },\n      }),\n    );\n  }\n\n  return {\n    diagnostics,\n    plugins,\n  };\n}\n", "CodeBleu_score": 29.206363078361374}]}
{"instance_id": "9486259c4631", "generation_result": [{"code": "const readAsset = async function (filePath: string): Promise<string>  const relativePath = filePath.replace(/^\\/+/, '');\n  const file = browserOutputFiles.find((f) => f.path === relativePath);\n  if (file) {\n    return file.text;\n  } else {\n    throw new Error(`Asset file ${filePath} does not exist`);\n  }\n};\n", "CodeBleu_score": 45.46159469572583}, {"code": "const readAsset = async function (filePath: string): Promise<string>  const relativeFilePath = filePath.replace(/^\\//, '');\n  const file = browserOutputFiles.find(\n    (file) => file.path === relativeFilePath\n  );\n  if (file) {\n    return file.content;\n  }\n  throw new Error(`File ${filePath} does not exist`);\n};\n", "CodeBleu_score": 44.37235612672674}, {"code": "const readAsset = async function (filePath: string): Promise<string>    const relativePath = filePath.replace(/^\\/+/, '');\n    const file = browserOutputFiles.find(file => file.path === relativePath);\n    if (file) {\n        return file.text;\n    } else {\n        throw new Error(`File ${relativePath} does not exist`);\n    }\n};\n", "CodeBleu_score": 41.23898158569815}]}
{"instance_id": "2206ca03c7ec", "generation_result": [{"code": "async put(path: string, result: OnLoadResult): Promise<void>  this.loadResults.set(path, result);\n  if (result.watchFiles) {\n    for (const watchFile of result.watchFiles) {\n      const normalized = this.normalize(watchFile);\n      this.fileDependencies.set(normalized, path);\n    }\n  }\n}", "CodeBleu_score": 38.95489479488339}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>    this.loadResults.set(path, result);\n    if (result.watchFiles) {\n        for (const watchFile of result.watchFiles) {\n            const watchFilePath = this.normalizePath(watchFile);\n            const affectedPaths = this.fileDependencies.get(watchFilePath) || new Set();\n            affectedPaths.add(path);\n            this.fileDependencies.set(watchFilePath, affectedPaths);\n        }\n    }\n}\n", "CodeBleu_score": 58.48917521501092}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>  this.loadResults.set(path, result);\n  if (result.watchFiles) {\n    for (const watchFile of result.watchFiles) {\n      this.fileDependencies.set(watchFile.path, new Set([path]));\n    }\n  }\n}\n", "CodeBleu_score": 26.00160468989257}]}
{"instance_id": "a261d85630d0", "generation_result": [{"code": "invalidate(path: string): boolean    const affectedPaths = this.fileDependencies.get(path);\n    if (!affectedPaths) {\n        return false;\n    }\n    let deletedAny = false;\n    for (const affectedPath of affectedPaths) {\n        if (this.loadResults.delete(affectedPath)) {\n            deletedAny = true;\n        }\n    }\n    this.fileDependencies.delete(path);\n    return deletedAny;\n}\n", "CodeBleu_score": 57.74344831194884}, {"code": "invalidate(path: string): boolean    const affectedPaths = this.fileDependencies.get(path);\n    if (!affectedPaths) {\n      return false;\n    }\n  \n    let deleted = false;\n    affectedPaths.forEach(affectedPath => {\n      const loadResult = this.loadResults.get(affectedPath);\n      if (loadResult) {\n        this.loadResults.delete(affectedPath);\n        deleted = true;\n      }\n    });\n  \n    this.fileDependencies.delete(path);\n    return deleted;\n  }\n  ", "CodeBleu_score": 47.132515886098744}, {"code": "invalidate(path: string): boolean    const affectedPaths = this.fileDependencies.get(path);\n    if (affectedPaths) {\n      let deleted = false;\n      for (const affectedPath of affectedPaths) {\n        if (this.loadResults.has(affectedPath)) {\n          this.loadResults.delete(affectedPath);\n          deleted = true;\n        }\n      }\n      if (deleted) {\n        this.fileDependencies.delete(path);\n      }\n      return deleted;\n    }\n    return false;\n  }\n  ", "CodeBleu_score": 55.73472554803889}]}
{"instance_id": "8fa6dee0ba79", "generation_result": [{"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void    const endTime = process.hrtime.bigint();\n    const duration = endTime - startTime;\n    if (cumulative) {\n        cumulativeDurations[name] = (cumulativeDurations[name] ?? 0n) + duration;\n    } else {\n        console.log(`${name}: ${duration / 1000000000n}.${duration % 1000000000n} seconds`);\n    }\n}\n", "CodeBleu_score": 32.98494060702526}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void  const duration = process.hrtime.bigint() - startTime;\n  if (cumulative) {\n    if (!cumulativeDurations.has(name)) {\n      cumulativeDurations.set(name, duration);\n    } else {\n      cumulativeDurations.set(name, cumulativeDurations.get(name) + duration);\n    }\n  } else {\n    console.log(`${name}: ${duration / 1000000000n}.${duration % 1000000000n}`);\n  }\n}\n", "CodeBleu_score": 41.19630346710012}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void    const endTime = process.hrtime.bigint();\n    const duration = endTime - startTime;\n    if (cumulative) {\n        const cumulativeDuration = cumulativeDurations.get(name) ?? 0n;\n        cumulativeDurations.set(name, cumulativeDuration + duration);\n    } else {\n        console.log(`${name}: ${duration / 1000000000n}.${String(duration % 1000000000n).padStart(9, '0')} seconds`);\n    }\n}\n", "CodeBleu_score": 39.96371050227929}]}
{"instance_id": "0c530cbeb386", "generation_result": [{"code": "export function ensureSourceFileVersions(program: ts.Program): void  const originalGetSourceFiles = program.getSourceFiles.bind(program);\n  program.getSourceFiles = () => {\n    const sourceFiles = originalGetSourceFiles();\n    for (const sourceFile of sourceFiles) {\n      if (sourceFile.version === undefined) {\n        const version = sha256(sourceFile.text);\n        sourceFile.version = version;\n      }\n    }\n    return sourceFiles;\n  };\n}\n", "CodeBleu_score": 39.60498626817666}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void  const originalGetSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = () => {\n    const sourceFiles = originalGetSourceFiles();\n    for (const sourceFile of sourceFiles) {\n      if (!sourceFile.version) {\n        sourceFile.version = ts.createHash(256).update(sourceFile.text).digest();\n      }\n    }\n    return sourceFiles;\n  };\n}\n", "CodeBleu_score": 37.372871569719024}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void  const sourceFiles = program.getSourceFiles();\n  const hashes = new Map<string, string>();\n\n  for (const sourceFile of sourceFiles) {\n    if (sourceFile.version) {\n      continue;\n    }\n\n    const text = sourceFile.text;\n    const hash = crypto.subtle.digestSync(\"SHA-256\", new TextEncoder().encode(text));\n    const hashHex = Array.from(new Uint8Array(hash))\n      .map((b) => b.toString(16).padStart(2, \"0\"))\n      .join(\"\");\n\n    hashes.set(sourceFile.fileName, hashHex);\n    sourceFile.version = hashHex;\n  }\n\n  program.getSourceFiles = () => sourceFiles;\n}\n", "CodeBleu_score": 32.441584992014945}]}
{"instance_id": "3faf480d56ae", "generation_result": [{"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>  if (!resolvedModule) return undefined;\n\n  const replacement = replacements[resolvedModule.resolvedFileName];\n  if (replacement) {\n    return {\n      fileName: replacement,\n      isExternalLibraryImport: true,\n    };\n  }\n\n  return resolvedModule;\n};\n", "CodeBleu_score": 42.865954972317375}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>  if (!resolvedModule) return resolvedModule\n  const replacement = replacements[resolvedModule.resolvedFileName]\n  if (replacement) {\n    return {\n      fileName: replacement,\n      externalLibraryImport: true\n    }\n  }\n  return resolvedModule\n}\n", "CodeBleu_score": 42.876046334110654}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>  if (resolvedModule === undefined) {\n    return undefined;\n  }\n\n  const { fileName, externalLibraryImport } = resolvedModule;\n\n  const replacement = getReplacement(fileName);\n\n  if (replacement === undefined) {\n    return resolvedModule;\n  }\n\n  return {\n    fileName: replacement,\n    externalLibraryImport,\n  };\n};\n", "CodeBleu_score": 37.52659105509157}]}
{"instance_id": "382672b61228", "generation_result": [{"code": "get waitUntilReady(): Promise<boolean>    if (this.compilationReadyPromise === undefined) {\n        this.compilationReadyPromise = new Promise<boolean>((resolve) => {\n            if (this.compilationError !== undefined) {\n                resolve(false);\n            } else {\n                this.compilationReadySubscription = this.compilationReadySource.subscribe(() => {\n                    resolve(true);\n                });\n            }\n        });\n    }\n    return this.compilationReadyPromise;\n}\n", "CodeBleu_score": 20.878159317056113}, {"code": "get waitUntilReady(): Promise<boolean>    // ...\n}\n", "CodeBleu_score": 3.1067660602965463}, {"code": "get waitUntilReady(): Promise<boolean>    const pendingCompilation = this.pendingCompilation;\n    if (!pendingCompilation) {\n        return Promise.resolve(this.hasError);\n    }\n    if (!this.compilationReadyPromise) {\n        this.compilationReadyPromise = new Promise((resolve, reject) => {\n            pendingCompilation.on('error', (err) => {\n                this.compilationReadyPromise = null;\n                reject(err);\n            });\n            pendingCompilation.on('end', () => {\n                this.compilationReadyPromise = null;\n                resolve(this.hasError);\n            });\n        });\n    }\n    return this.compilationReadyPromise;\n}\n", "CodeBleu_score": 19.915284938823184}]}
{"instance_id": "27f631043b39", "generation_result": [{"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>  const context = new BundlerContext(workspaceRoot, {\n    incremental: true,\n  });\n\n  context.addBundleOptions({\n    namespace: 'angular:styles/component',\n    new BundleOptions({\n      entry: entry,\n      plugins: [\n        {\n          resolve: ({ path, namespace, content, loader, resolveDir }) => {\n            const resolved = resolve(path, {\n              basedir: resolveDir,\n            });\n\n            return {\n              path: resolved,\n              namespace,\n              content,\n              loader,\n              resolveDir,\n            };\n          },\n        },\n      ],\n    }),\n  });\n\n  return context;\n});\n", "CodeBleu_score": 22.61312672937966}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>  const context = new BundlerContext(this.workspaceRoot, {\n    incremental: true,\n  });\n\n  context.bundleOptions.set('stylesheet', {\n    entry: entry,\n    namespace: 'angular:styles/component',\n  });\n\n  context.addPlugin({\n    name: 'angular:styles/component',\n    resolve(id, importer) {\n      const result = this.resolve(id, importer, {\n        skipSelf: true,\n        extensions: ['.scss', '.css'],\n      });\n      if (!result) {\n        return null;\n      }\n      const { path, namespace } = result;\n      return {\n        path,\n        namespace,\n        content: this.load(path),\n        loader: this.loaders.css,\n        resolveDir: this.resolveDir,\n      };\n    },\n  });\n\n  return context;\n});\n", "CodeBleu_score": 30.136657617566687}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>  const context = new BundlerContext(this.workspaceRoot, {\n    incremental: true,\n  });\n  const stylesheetBundleOptions = {\n    namespace: 'angular:styles/component',\n    loader: 'css',\n    resolveDir: 'src/app',\n  };\n  context.addBundleOptions(stylesheetBundleOptions);\n  context.setEntry(entry);\n  context.addPlugin({\n    name: 'angular-component-styles',\n    resolveId(id) {\n      if (id.startsWith('angular:styles/component')) {\n        return id;\n      }\n    },\n    load(id) {\n      if (id.startsWith('angular:styles/component')) {\n        const [, path, namespace, content] = id.split('|');\n        return {\n          code: `export default ${JSON.stringify({\n            path,\n            namespace,\n            content,\n            loader: stylesheetBundleOptions.loader,\n            resolveDir: stylesheetBundleOptions.resolveDir,\n          })}`,\n        };\n      }\n    },\n  });\n  return context;\n});\n", "CodeBleu_score": 31.201235360359213}]}
{"instance_id": "b89b44b794a7", "generation_result": [{"code": "invalidate(files: Iterable<string>)     const normalizedFiles = normalizeFilePaths(files);\n    this.fileContexts.forEach(bundler => bundler.invalidate(normalizedFiles));\n    this.inlineContexts.forEach(bundler => bundler.invalidate(normalizedFiles));\n}\n", "CodeBleu_score": 32.28263993496358}, {"code": "invalidate(files: Iterable<string>)     const normalizedFiles = normalizeFilePaths(files);\n    for (const bundler of this.fileContexts.values()) {\n      bundler.invalidate(normalizedFiles);\n    }\n    for (const bundler of this.inlineContexts.values()) {\n      bundler.invalidate(normalizedFiles);\n    }\n  }\n  ", "CodeBleu_score": 52.459081215940316}, {"code": "invalidate(files: Iterable<string>)     const normalizedFiles = normalizeFiles(files);\n    this.fileContexts.forEach(context => context.invalidate(normalizedFiles));\n    this.inlineContexts.forEach(context => context.invalidate(normalizedFiles));\n}", "CodeBleu_score": 30.58479949719536}]}
{"instance_id": "aa3aa0817adf", "generation_result": [{"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage   const message = convertTypeScriptDiagnosticInfo(\n    typescript,\n    diagnostic,\n    'TS'\n  );\n  if (diagnostic.relatedInformation) {\n    message.notes = diagnostic.relatedInformation.map((related) =>\n      convertTypeScriptDiagnosticInfo(typescript, related, 'NG')\n    );\n  }\n  return message;\n}\n", "CodeBleu_score": 33.74587736121393}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage   const codePrefix = diagnostic.source === 'ts' ? 'TS' : 'NG';\n  const code = diagnostic.code.toString().padStart(4, '0');\n  const mainMessage = convertTypeScriptDiagnosticInfo(typescript, diagnostic.messageText, codePrefix + code);\n  const notes = diagnostic.relatedInformation?.map((info) => convertTypeScriptDiagnosticInfo(typescript, info.messageText, codePrefix + code));\n  return {\n    ...mainMessage,\n    ...(notes && { notes }),\n  };\n}\n", "CodeBleu_score": 43.32368976146089}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage   const { code, source, messageText, relatedInformation } = diagnostic;\n  const sourceName = source === typescript.DiagnosticSource.Default\n    ? 'TS'\n    : 'NG';\n  const prefixedCode = sourceName + code;\n  const mainMessage = convertTypeScriptDiagnosticInfo(prefixedCode, messageText);\n  const notes = relatedInformation?.map(convertTypeScriptDiagnosticInfo);\n  return { mainMessage, notes };\n}\n", "CodeBleu_score": 34.363997175279145}]}
{"instance_id": "0cd0285018f1", "generation_result": [{"code": "add(containingFile: string, referencedFiles: Iterable<string>): void    // Normalize the paths\n    const containingFilePath = path.normalize(containingFile);\n    const referencedFilePaths = referencedFiles.map(file => path.normalize(file));\n\n    // Skip if the referenced file is the same as the containing file\n    if (containingFilePath === referencedFilePaths[0]) {\n        return;\n    }\n\n    // Add the containing file to the referenced file's set in the referencingFiles map\n    for (const referencedFilePath of referencedFilePaths) {\n        let referencingFiles = this.referencingFiles.get(referencedFilePath);\n        if (!referencingFiles) {\n            referencingFiles = new Set();\n            this.referencingFiles.set(referencedFilePath, referencingFiles);\n        }\n        referencingFiles.add(containingFilePath);\n    }\n}\n", "CodeBleu_score": 39.42673342971397}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void    const containingFile = normalizePath(containingFile);\n    for (const referencedFile of referencedFiles) {\n        const referencedFile = normalizePath(referencedFile);\n        if (referencedFile === containingFile) {\n            continue;\n        }\n        let referencingFiles = this.referencingFiles.get(referencedFile);\n        if (!referencingFiles) {\n            referencingFiles = new Set();\n            this.referencingFiles.set(referencedFile, referencingFiles);\n        }\n        referencingFiles.add(containingFile);\n    }\n}\n", "CodeBleu_score": 55.209563933700146}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void    const containingFileNormalized = this.normalizePath(containingFile);\n    for (const referencedFile of referencedFiles) {\n        const referencedFileNormalized = this.normalizePath(referencedFile);\n        if (referencedFileNormalized === containingFileNormalized) {\n            continue;\n        }\n        const referencingFiles = this.referencingFiles.get(referencedFileNormalized);\n        if (!referencingFiles) {\n            this.referencingFiles.set(referencedFileNormalized, new Set([containingFileNormalized]));\n        } else {\n            referencingFiles.add(containingFileNormalized);\n        }\n    }\n}\n", "CodeBleu_score": 53.34753185538844}]}
{"instance_id": "e22be1916b33", "generation_result": [{"code": "static async loadCompilerCli(): Promise<typeof ng>     const ng = await import('@angular/compiler-cli').then(m => m.default);\n    return ng;\n}", "CodeBleu_score": 33.359111855149834}, {"code": "static async loadCompilerCli(): Promise<typeof ng>     return (await import('@angular/compiler-cli')).ng;\n}\n", "CodeBleu_score": 19.731293598350184}, {"code": "static async loadCompilerCli(): Promise<typeof ng>     return this.compilerCli ??= await import('@angular/compiler-cli');\n}\n", "CodeBleu_score": 29.749501634822966}]}
{"instance_id": "64e42342101f", "generation_result": [{"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>  if (jit) {\n    return await import('@angular/compiler-cli/ngcc/src/jit/jit_compilation');\n  }\n  return await import('@angular/compiler-cli/ngcc/src/aot/aot_compilation');\n}\n", "CodeBleu_score": 17.336632583719684}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>    if (jit) {\n        return import('./jit-compilation');\n    }\n    return import('./aot-compilation');\n}\n", "CodeBleu_score": 12.668190831408193}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>  if (jit) {\n    return (await import('@angular/compiler')).JitCompilation;\n  } else {\n    return (await import('@angular/compiler')).AotCompilation;\n  }\n}\n", "CodeBleu_score": 17.151947181087625}]}
{"instance_id": "37804d74eb2d", "generation_result": [{"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string  const relativeSourceMap = sourceMap.sources.map((source) => {\n    return source.replace(root, '');\n  });\n\n  sourceMap.sources = relativeSourceMap;\n\n  const sourceMapString = JSON.stringify(sourceMap);\n  const sourceMapBase64 = Buffer.from(sourceMapString).toString('base64');\n  return `//# sourceMappingURL=data:application/json;base64,${sourceMapBase64}`;\n}\n", "CodeBleu_score": 53.11334716394749}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string  // Update the sources in the source map to relative paths based on the given root\n  sourceMap.sources = sourceMap.sources.map((source) =>\n    path.relative(root, source),\n  );\n\n  // Serialize the source map to a base64-encoded JSON string\n  const sourceMapJson = JSON.stringify(sourceMap);\n  const sourceMapBase64 = Buffer.from(sourceMapJson).toString('base64');\n\n  // Return a source map URL comment containing the encoded source map\n  return `//# sourceMappingURL=data:application/json;base64,${sourceMapBase64}`;\n}\n", "CodeBleu_score": 55.627985380509635}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string  const sources = sourceMap.sources.map((source) =>\n    path.relative(root, source),\n  );\n  const sourceMapWithRelativePaths = {\n    ...sourceMap,\n    sources,\n  };\n  const sourceMapJson = JSON.stringify(sourceMapWithRelativePaths);\n  const sourceMapBase64 = Buffer.from(sourceMapJson).toString('base64');\n  return `//# sourceMappingURL=data:application/json;base64,${sourceMapBase64}`;\n}\n", "CodeBleu_score": 52.14531021600971}]}
{"instance_id": "bccb5eeb4c4d", "generation_result": [{"code": "function* extractFilesFromStack(stack: string): Iterable<string>  const lines = stack.split('\\n');\n\n  for (const line of lines) {\n    const segments = line.split(' ');\n    const filePathSegments = [];\n    let isFilePath = false;\n\n    for (const segment of segments) {\n      if (segment.includes('(')) {\n        isFilePath = false;\n        continue;\n      }\n\n      if (isFilePath) {\n        filePathSegments.push(segment);\n      }\n\n      if (segment.includes(':')) {\n        isFilePath = true;\n      }\n    }\n\n    const filePath = filePathSegments.join(' ');\n\n    if (filePath) {\n      const cwd = process.cwd();\n      const relativeFilePath = filePath.replace(cwd, '');\n      yield relativeFilePath;\n    }\n  }\n}\n", "CodeBleu_score": 44.550333613306314}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>  const lines = stack.split('\\n');\n  for (const line of lines) {\n    const segments = line.split(' ');\n    let filePath = '';\n    for (let i = 0; i < segments.length; i++) {\n      if (segments[i].startsWith('at ')) {\n        break;\n      }\n      filePath += segments[i] + ' ';\n    }\n    filePath = filePath.trim();\n    if (filePath.startsWith('at ')) {\n      filePath = filePath.slice(3);\n    }\n    if (filePath.startsWith('file://')) {\n      filePath = filePath.slice(7);\n    }\n    if (filePath.startsWith('file:///')) {\n      filePath = filePath.slice(8);\n    }\n    if (filePath.startsWith('file://')) {\n      filePath = filePath.slice(7);\n    }\n    if (filePath.startsWith('file:///')) {\n      filePath = filePath.slice(8);\n    }\n    if (filePath.startsWith('file://')) {\n      filePath = filePath.slice(7);\n    }\n    if (filePath.startsWith('file:///')) {\n      filePath = filePath.slice(8);\n    }\n    if (filePath.startsWith('file://')) {\n      filePath = filePath.slice(7);\n    }\n    if (filePath.startsWith('file:///')) {\n      filePath = filePath.slice(8);\n    }\n    if (filePath.startsWith('file://')) {\n      filePath = filePath.slice(7);\n    }\n    if (filePath.startsWith('file:///')) {\n      filePath = filePath.slice(8);\n    }\n    if (filePath.startsWith('file://')) {\n      filePath = filePath.slice(7);\n    }\n    if (filePath.startsWith('file:///')) {\n      filePath = filePath.slice(8);\n    }\n    if (filePath.start", "CodeBleu_score": 34.300684864882015}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>  const lines = stack.split('\\n');\n\n  for (const line of lines) {\n    const segments = line.split(' ');\n    const filePathSegments = [];\n\n    for (const segment of segments) {\n      if (segment.startsWith('at ')) {\n        break;\n      }\n\n      if (segment.startsWith('(')) {\n        filePathSegments.push(segment.slice(1, -1));\n      } else {\n        filePathSegments.push(segment);\n      }\n    }\n\n    if (filePathSegments.length > 0) {\n      const filePath = filePathSegments.join(' ');\n      const relativeFilePath = path.relative(process.cwd(), filePath);\n      yield relativeFilePath;\n    }\n  }\n}\n", "CodeBleu_score": 44.414206651532936}]}
{"instance_id": "e73986d88a00", "generation_result": [{"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean  if (typeof contents === 'string') {\n    return (\n      contents.includes('bg-') ||\n      contents.includes('text-') ||\n      contents.includes('border-') ||\n      contents.includes('ring-') ||\n      contents.includes('shadow-') ||\n      contents.includes('fill-') ||\n      contents.includes('stroke-') ||\n      contents.includes('divide-')\n    );\n  } else if (contents instanceof Uint8Array) {\n    const buffer = Buffer.from(contents);\n    return (\n      buffer.includes('bg-') ||\n      buffer.includes('text-') ||\n      buffer.includes('border-') ||\n      buffer.includes('ring-') ||\n      buffer.includes('shadow-') ||\n      buffer.includes('fill-') ||\n      buffer.includes('stroke-') ||\n      buffer.includes('divide-')\n    );\n  }\n\n  return false;\n}\n", "CodeBleu_score": 40.85437278371118}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean  if (typeof contents === 'string') {\n    return (\n      contents.includes('@tailwind') ||\n      contents.includes('tailwind') ||\n      contents.includes('tailwindcss') ||\n      contents.includes('tailwind.config')\n    )\n  }\n\n  const buffer = Buffer.from(contents)\n  return (\n    buffer.includes('@tailwind') ||\n    buffer.includes('tailwind') ||\n    buffer.includes('tailwindcss') ||\n    buffer.includes('tailwind.config')\n  )\n}\n", "CodeBleu_score": 41.56762176964022}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean  if (typeof contents === 'string') {\n    return (\n      contents.includes('@tailwind') ||\n      contents.includes('@apply') ||\n      contents.includes('@layer') ||\n      contents.includes('@screen')\n    );\n  } else {\n    const buffer = Buffer.from(contents);\n    return (\n      buffer.includes('@tailwind') ||\n      buffer.includes('@apply') ||\n      buffer.includes('@layer') ||\n      buffer.includes('@screen')\n    );\n  }\n}\n", "CodeBleu_score": 42.09762019897776}]}
{"instance_id": "ff27dc4f1deb", "generation_result": [{"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void  const headers = server.config.server.headers;\n  if (headers) {\n    for (const header of Object.keys(headers)) {\n      const value = headers[header];\n      if (value !== undefined) {\n        res.setHeader(header, value);\n      }\n    }\n  }\n}\n", "CodeBleu_score": 71.41132501713858}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void  const headers = server.config.server.headers;\n  if (headers) {\n    Object.keys(headers).forEach((key) => {\n      const value = headers[key];\n      if (value !== undefined) {\n        res.setHeader(key, value);\n      }\n    });\n  }\n}\n", "CodeBleu_score": 68.50430967828709}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void  const headers = server.config.server.headers;\n  if (headers) {\n    for (const [key, value] of Object.entries(headers)) {\n      if (value !== undefined) {\n        res.setHeader(key, value);\n      }\n    }\n  }\n}\n", "CodeBleu_score": 80.01334995772933}]}
{"instance_id": "1d547de72724", "generation_result": [{"code": "export async function createTranslationLoader(): Promise<TranslationLoader>  const { default: parsers } = await import(\"./parsers\");\n  const { default: diagnostics } = await import(\"./diagnostics\");\n  return async (filePath: string) => {\n    const fileContent = await fs.readFile(filePath, \"utf8\");\n    const fileContentHash = await hash(fileContent);\n    const fileFormat = path.extname(filePath).slice(1);\n    const fileLocale = path.basename(filePath).replace(`.${fileFormat}`, \"\");\n    const parsersToTry = parsers.filter((p) => p.extensions.includes(fileFormat));\n    const parser = parsersToTry.find((p) => p.canHandle(fileContent));\n    if (!parser) {\n      const diagnosticsFromParsers = await Promise.all(\n        parsersToTry.map(async (p) => {\n          const diagnostics = await p.diagnostics(fileContent);\n          return {\n            parser: p.name,\n            diagnostics,\n          };\n        })\n      );\n      const allDiagnostics = diagnosticsFromParsers.flatMap((d) => d.diagnostics);\n      throw new Error(\n        `No parser found for file ${filePath}.\\n${diagnostics.noParserFound(allDiagnostics)}`\n      );\n    }\n    const translations = await parser.parse(fileContent);\n    return {\n      format: fileFormat,\n      locale: fileLocale,\n      translations,\n      diagnostics: await parser.diagnostics(fileContent),\n      contentIntegrityHash: fileContentHash,\n    };\n  };\n}\n", "CodeBleu_score": 36.07825180330749}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>  const { parseTranslationFile } = await import('./parsers/index.js');\n  const { createDiagnostics } = await import('./diagnostics.js');\n  const { createContentHash } = await import('./hash.js');\n\n  return async (filePath: string) => {\n    const fileContent = await readFile(filePath);\n    const diagnostics = createDiagnostics();\n\n    const { format, locale, translations } = parseTranslationFile(fileContent, diagnostics);\n\n    const hash = createContentHash(fileContent);\n\n    return {\n      format,\n      locale,\n      translations,\n      diagnostics,\n      hash,\n    };\n  };\n}\n", "CodeBleu_score": 23.919220604567393}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>  const { parse } = await import('./parsers/parse');\n  const { createDiagnostics } = await import('./diagnostics');\n\n  return async (filePath: string) => {\n    const { content, format, locale } = await loadFile(filePath);\n    const diagnostics = createDiagnostics();\n\n    const { translations, hash } = parse(content, diagnostics, format, locale);\n\n    return {\n      format,\n      locale,\n      translations,\n      diagnostics,\n      hash,\n    };\n  };\n}\n", "CodeBleu_score": 19.522505780032873}]}
{"instance_id": "0c0d3dcf983c", "generation_result": [{"code": "toggleSidebar(): boolean    this.sidebarService.toggle(true, 'overlay');\n    this.layoutService.onLayoutSizeChange();\n    return false;\n}\n", "CodeBleu_score": 42.64470551826606}, {"code": "toggleSidebar(): boolean    this.sidebarService.toggleSidebar(true, 'overlay');\n    this.layoutService.onLayoutSizeChanged();\n    return false;\n}", "CodeBleu_score": 41.46077412187218}, {"code": "toggleSidebar(): boolean    this.sidebarService.toggleSidebar(true, 'overlay');\n    this.layoutService.onLayoutSizeChanged();\n    return false;\n}\n", "CodeBleu_score": 41.46077412187218}]}
{"instance_id": "c5ebbdd1dadf", "generation_result": [{"code": "loadNext(cardData)    if (this.loading) {\n        return;\n    }\n    this.loading = true;\n    this.placeholder = new Array(this.pageSize);\n    this.newsService.loadNext(this.pageNumber).subscribe(\n        (data) => {\n            this.placeholder = [];\n            this.news.push(...data);\n            this.loading = false;\n            this.pageNumber++;\n        },\n        (err) => {\n            this.placeholder = [];\n            this.loading = false;\n        }\n    );\n}\n", "CodeBleu_score": 21.945775256278015}, {"code": "loadNext(cardData)    if (!this.loading) {\n      this.loading = true;\n      this.newsService.getNews(this.page + 1).subscribe(\n        (news: any) => {\n          this.news = this.news.concat(news);\n          this.loading = false;\n          this.page++;\n        }\n      );\n    }\n  }\n\n  /**\n   * This function, loadPrevious, loads the previous page of news if it is not already loading.\\nIt sets the loading state to true and creates placeholders.\\nIt then uses the newsService to load the previous page of news and subscribes to the result.\\nWhen new news items are received, it clears the placeholders, prepends the new items to the existing news array, sets the loading state to false, and decrements the page number to load previous.\n   */\n  loadPrevious(cardData) {\n    if (!this.loading) {\n      this.loading = true;\n      this.newsService.getNews(this.page - 1).subscribe(\n        (news: any) => {\n          this.news = news.concat(this.news);\n          this.loading = false;\n          this.page--;\n        }\n      );\n    }\n  }\n\n  /**\n   * This function, loadPage, loads the specified page of news if it is not already loading.\\nIt sets the loading state to true and creates placeholders.\\nIt then uses the newsService to load the specified page of news and subscribes to the result.\\nWhen new news items are received, it clears the placeholders, sets the news array to the new items, sets the loading state to false, and sets the page number to the specified page.\n   */\n  loadPage(page: number) {\n    if (!this.loading) {\n      this.loading = true;\n      this.newsService.getNews(page).subscribe(\n        (news: any) => {\n          this.news = news;\n          this.loading = false;\n          this.page = page;\n        }\n      );\n    }\n  }\n\n  /**\n   * This function, loadPage, loads the specified page of news if it is not already loading.\\nIt sets the loading state to true and creates", "CodeBleu_score": 25.610958796942352}, {"code": "loadNext(cardData)    if (this.loading) {\n      return;\n    }\n  \n    this.loading = true;\n    this.placeholders = Array.from({ length: cardData.length }, () => {\n      return {\n        title: 'Loading...',\n        description: 'Loading...',\n        imageUrl: 'assets/images/placeholder.png',\n        date: 'Loading...',\n        author: 'Loading...',\n        source: 'Loading...',\n        url: 'Loading...'\n      };\n    });\n  \n    this.newsService.loadNext().subscribe(news => {\n      this.placeholders = [];\n      this.news = this.news.concat(news);\n      this.loading = false;\n      this.page++;\n    });\n  }\n  ", "CodeBleu_score": 20.99859716945899}]}
{"instance_id": "1bd87ab8efa2", "generation_result": [{"code": "backToTop()  if (this.scrollInProgress) {\n    return;\n  }\n  this.scrollInProgress = true;\n  let start = window.pageYOffset;\n  let change = start - 0;\n  let currentTime = 0;\n  let increment = 16.7;\n  let easeInOutQuad = function (t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) return (c / 2) * t * t + b;\n    t--;\n    return (-c / 2) * (t * (t - 2) - 1) + b;\n  };\n  let animateScroll = function () {\n    currentTime += increment;\n    let val = easeInOutQuad(currentTime, start, change, 1000);\n    window.scrollTo(0, val);\n    if (val != window.pageYOffset) {\n      setTimeout(animateScroll, increment);\n    } else {\n      clearInterval(this.scrollInterval);\n      this.scrollInProgress = false;\n    }\n  };\n  animateScroll();\n}\n", "CodeBleu_score": 38.563819605548716}, {"code": "backToTop()    if (this.scrollInProgress) {\n        return;\n    }\n    this.scrollInProgress = true;\n    let start = window.pageYOffset;\n    let change = start;\n    let increment = 20;\n    let duration = 500;\n    let easing = function (t) {\n        return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    };\n    let animateScroll = function () {\n        let now = new Date().getTime();\n        let time = Math.min(1, ((now - start) / duration));\n        time = easing(time);\n        change = start + (time * increment);\n        window.scroll(0, change);\n        if (change != window.pageYOffset) {\n            requestAnimationFrame(animateScroll);\n        } else {\n            this.scrollInProgress = false;\n        }\n    };\n    animateScroll();\n}", "CodeBleu_score": 33.47924554442445}, {"code": "backToTop()    if (this.scrollInProgress) {\n      return;\n    }\n    this.scrollInProgress = true;\n    let startTime = performance.now();\n    let scrollPosition = window.pageYOffset;\n    let duration = 500;\n    let easing = (t) => t * t * t;\n    let interval = setInterval(() => {\n      let currentTime = performance.now();\n      let elapsedTime = currentTime - startTime;\n      let progress = elapsedTime / duration;\n      if (progress > 1) {\n        progress = 1;\n      }\n      let newScrollPosition = scrollPosition - scrollPosition * easing(progress);\n      window.scrollTo(0, newScrollPosition);\n      if (progress === 1) {\n        clearInterval(interval);\n        this.scrollInProgress = false;\n      }\n    }, 16.7);\n  }\n", "CodeBleu_score": 37.54183413247223}]}
{"instance_id": "0ef728b56235", "generation_result": [{"code": "getBreadcrumb()    const levelList = this.route.snapshot.root.children.map(route => route.routeConfig);\n    const filteredLevelList = levelList.filter(route => route.data && route.data.title);\n    if (filteredLevelList[0].path !== 'dashboard') {\n      filteredLevelList.unshift({ path: 'dashboard', data: { title: 'Dashboard' } });\n    }\n    const breadcrumb = filteredLevelList.filter(route => !route.data.excludeFromBreadcrumb);\n    return breadcrumb;\n  }\n\n\n  /**\n * This function, getBreadcrumbTitle, generates a breadcrumb title for the current route.\\nIt filters the matched routes to include only those with a meta title.\\nIf the first matched route is not the dashboard, it prepends a dashboard route to the list.\\nIt then sets the levelList to routes that have a meta title and are not explicitly excluded from the breadcrumb.\\nIt then returns the title of the last route in the levelList.\n */", "CodeBleu_score": 42.4423295037637}, {"code": "getBreadcrumb()    const levelList = this.route.snapshot.data['breadcrumb'];\n    if (levelList.length > 0) {\n      const breadcrumb = levelList.filter(item => item.metaTitle);\n      if (breadcrumb.length > 0 && breadcrumb[0].title !== 'Dashboard') {\n        breadcrumb.unshift({\n          title: 'Dashboard',\n          url: '/dashboard'\n        });\n      }\n      return breadcrumb;\n    }\n    return [];\n  }\n", "CodeBleu_score": 34.97666107709587}, {"code": "getBreadcrumb()  const breadcrumb = this.$route.matched\n    .filter((route) => route.meta.title)\n    .map((route) => {\n      return {\n        title: route.meta.title,\n        level: route.meta.level,\n      };\n    });\n  if (breadcrumb[0].title !== \"Dashboard\") {\n    breadcrumb.unshift({\n      title: \"Dashboard\",\n      level: 0,\n    });\n  }\n  this.levelList = breadcrumb.filter(\n    (route) => !route.meta.excludeFromBreadcrumb\n  );\n}\n", "CodeBleu_score": 37.146188649670655}]}
{"instance_id": "4431fde0a559", "generation_result": [{"code": "destroyListener()    window.removeEventListener('resize', this.resizeHandler);\n    this.resizeHandler = null;\n\n    if (this.sidebar) {\n        this.sidebar.removeEventListener('transitionend', this.transitionEndHandler);\n    }\n}\n", "CodeBleu_score": 39.831952858195116}, {"code": "destroyListener()    window.removeEventListener('resize', this.resizeHandler);\n    this.resizeHandler = null;\n    if (this.sidebar) {\n        this.sidebar.removeEventListener('transitionend', this.transitionEndHandler);\n    }\n}\n", "CodeBleu_score": 39.831952858195116}, {"code": "destroyListener()    if (this.sidebar) {\n      this.sidebar.removeEventListener('transitionend', this.onTransitionEnd);\n    }\n    window.removeEventListener('resize', this.onResize);\n    this.onResize = null;\n    this.onTransitionEnd = null;\n  }\n  ", "CodeBleu_score": 36.19478082229375}]}
{"instance_id": "7215170e04cd", "generation_result": [{"code": "deleteEle(ele)    let list1 = this.list1;\n    let list2 = this.list2;\n    let index = list1.findIndex(item => item.id === ele.id);\n    if (index !== -1) {\n      list1.splice(index, 1);\n      if (this.isNotInList2(ele)) {\n        list2.unshift(ele);\n      }\n    }\n  }\n  \n  /**\n   * This function, isNotInList2, checks if an element is not in list2.\\nIt iterates through list2 and checks if the id of the current element matches the id of the element being checked.\\nIf an element with the same id is found, it returns false, indicating that the element is already in list2.\\nIf no matching element is found, it returns true, indicating that the element is not in list2.\n   */\n  isNotInList2(ele) {\n    let list2 = this.list2;\n    for (let i = 0; i < list2.length; i++) {\n      if (list2[i].id === ele.id) {\n        return false;\n      }\n    }\n    return true;\n  }\n  ", "CodeBleu_score": 40.96987384672936}, {"code": "deleteEle(ele)    const list1 = this.state.list1;\n    const list2 = this.state.list2;\n    const newList1 = list1.filter(item => item.id !== ele.id);\n    const newList2 = isNotInList2(list2, ele) ? [ele, ...list2] : list2;\n    this.setState({ list1: newList1, list2: newList2 });\n  }\n\n  /**\n   * This function, isNotInList2, checks if an element is not present in a given list.\\nIt iterates through the list to find the element with the matching id and returns true if it is not found.\\nIf the element is found, the function returns false.\n   */\n  isNotInList2(list, ele) {\n    return list.findIndex(item => item.id === ele.id) === -1;\n  }", "CodeBleu_score": 36.217263469638915}, {"code": "deleteEle(ele)    const list1 = this.state.list1;\n    const list2 = this.state.list2;\n    const index = list1.findIndex(item => item.id === ele.id);\n    if (index !== -1) {\n      list1.splice(index, 1);\n    }\n    if (this.isNotInList2(ele)) {\n      list2.unshift(ele);\n    }\n    this.setState({ list1, list2 });\n  }\n", "CodeBleu_score": 53.98309818645311}]}
{"instance_id": "b2acc5757074", "generation_result": [{"code": "generateRoutes(routes, basePath = '/', prefixTitle = [])  const result = [];\n\n  for (const route of routes) {\n    if (route.hidden) {\n      continue;\n    }\n\n    const { path, title, children, meta } = route;\n    const resolvedPath = path ? `${basePath}${path}` : basePath;\n    const resolvedTitle = title ? `${prefixTitle.join(' ')} ${title}` : prefixTitle.join(' ');\n\n    const data = {\n      path: resolvedPath,\n      title: resolvedTitle,\n    };\n\n    if (meta && !meta.noRedirect) {\n      result.push(data);\n    }\n\n    if (children) {\n      result.push(...generateRoutes(children, resolvedPath, [resolvedTitle]));\n    }\n  }\n\n  return result;\n}\n", "CodeBleu_score": 43.997007942070674}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = [])  const result = [];\n\n  for (const route of routes) {\n    if (route.hidden) continue;\n\n    const path = [basePath, route.path].join('/').replace(/\\/+/g, '/');\n    const title = [...prefixTitle, route.meta?.title].filter(Boolean).join(' - ');\n\n    if (route.meta?.title && !route.meta?.noRedirect) {\n      result.push({ path, title });\n    }\n\n    if (route.children) {\n      result.push(...this.generateRoutes(route.children, path, [title]));\n    }\n  }\n\n  return result;\n}\n", "CodeBleu_score": 43.040428870428826}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = [])  const result = [];\n\n  for (const route of routes) {\n    if (route.hidden) continue;\n\n    const path = basePath + route.path;\n    const title = [...prefixTitle, route.meta?.title].filter(Boolean).join(' / ');\n\n    const data = { path, title };\n\n    if (route.meta?.title && !route.meta.noRedirect) {\n      result.push(data);\n    }\n\n    if (route.children) {\n      result.push(...generateRoutes(route.children, path, [...prefixTitle, route.meta?.title]));\n    }\n  }\n\n  return result;\n}\n\n\n", "CodeBleu_score": 44.25433189668435}]}
{"instance_id": "c4e47c376d30", "generation_result": [{"code": "closeSidebar(evt)    if (evt.target.classList.contains('rightPanel')) {\n        this.show = false;\n        document.removeEventListener('click', this.closeSidebar);\n    }\n}\n", "CodeBleu_score": 36.19141485428474}, {"code": "closeSidebar(evt)    if (!evt.target.classList.contains('rightPanel')) {\n      this.show = false;\n      document.removeEventListener('click', this.closeSidebar);\n    }\n  }\n  ", "CodeBleu_score": 36.35158379582945}, {"code": "closeSidebar(evt)    if (!evt.target.classList.contains('rightPanel')) {\n      this.show = false;\n      document.removeEventListener('click', this.closeSidebar);\n    }\n  }\n", "CodeBleu_score": 36.35158379582945}]}
{"instance_id": "ab91e02736a1", "generation_result": [{"code": "click()    if (screenfull.enabled) {\n      screenfull.toggle();\n      return true;\n    } else {\n      alert('Your browser cannot work');\n      return false;\n    }\n  }\n\n", "CodeBleu_score": 27.659621877481165}, {"code": "click()    if (!screenfull.enabled) {\n      alert(\"Your browser cannot work\");\n      return false;\n    }\n    screenfull.toggle();\n  }\n  ", "CodeBleu_score": 30.233683056710813}, {"code": "click()    if (!screenfull.enabled) {\n      alert('Your browser cannot work');\n      return false;\n    }\n    screenfull.toggle();\n  }\n  ", "CodeBleu_score": 30.407990762846595}]}
{"instance_id": "3f27cb09d8c2", "generation_result": [{"code": "function checkPermission(el, binding)     const roles = store.getters.roles\n    const requiredRoles = binding.value\n\n    if (!requiredRoles || !requiredRoles.length) {\n        throw new Error(`Need roles but none are provided.`)\n    }\n\n    if (!roles.some(role => requiredRoles.includes(role))) {\n        el.parentNode && el.parentNode.removeChild(el)\n    }\n}\n", "CodeBleu_score": 29.271611858642633}, {"code": "function checkPermission(el, binding)     let roles = store.getters.roles\n    if (!Array.isArray(binding.value)) {\n        throw new Error(`need roles value. Like v-permission=\"['admin','editor']\"`)\n    }\n    if (binding.value.length > 0 && !roles.some(role => binding.value.includes(role))) {\n        el.parentNode && el.parentNode.removeChild(el)\n    }\n}\n", "CodeBleu_score": 28.793798277670003}, {"code": "function checkPermission(el, binding)     const roles = store.getters.roles;\n    if (binding.value.length > 0) {\n        if (roles.some(role => binding.value.includes(role))) {\n            el.style.display = 'block';\n        } else {\n            el.style.display = 'none';\n        }\n    } else {\n        throw new Error(`The binding value must be a non-empty array of roles.`);\n    }\n}\n", "CodeBleu_score": 26.514343987233822}]}
{"instance_id": "04e47e771281", "generation_result": [{"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>    try {\n      const invitedUser = await this.adminService.inviteNewUser(\n        adminUser,\n        inviteeEmail,\n      );\n      return invitedUser;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n", "CodeBleu_score": 35.32962746982678}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>    const invitee = await this.adminService.inviteNewUser(\n      adminUser,\n      inviteeEmail,\n    );\n    return invitee;\n  }\n", "CodeBleu_score": 30.868184927345315}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>    const invitedUser = await this.adminService.inviteNewUser(\n      adminUser,\n      inviteeEmail,\n    );\n    return invitedUser;\n  }\n", "CodeBleu_score": 32.44102313604533}]}
{"instance_id": "3f25736bfbcd", "generation_result": [{"code": "async googleAuthRedirect(@Request() req, @Res() res)  try {\n    const { tokens } = await this.authService.googleLogin(req);\n    const user = await this.authService.getUser(tokens);\n    const jwt = await this.authService.generateJWT(user);\n    res.cookie('Authentication', `Bearer ${jwt.access_token}`);\n    res.cookie('Refresh', `Bearer ${jwt.refresh_token}`);\n    return res.redirect(this.configService.get('FRONTEND_URL'));\n  } catch (error) {\n    return res.redirect(`${this.configService.get('FRONTEND_URL')}/auth/login`);\n  }\n}\n", "CodeBleu_score": 36.47551505295144}, {"code": "async googleAuthRedirect(@Request() req, @Res() res)  try {\n    const { tokens } = await this.authService.googleLogin(req);\n    const user = await this.userService.findOneByEmail(tokens.email);\n    const jwt = await this.authService.generateJWT(user);\n    res.cookie('Authentication', `Bearer ${jwt.access_token}`);\n    res.cookie('Refresh', `Bearer ${jwt.refresh_token}`);\n    res.redirect(`${process.env.FRONTEND_URI}`);\n  } catch (error) {\n    return res.status(401).json({\n      message: 'Unauthorized',\n      error: error.message,\n    });\n  }\n}\n\n", "CodeBleu_score": 38.3859405981481}, {"code": "async googleAuthRedirect(@Request() req, @Res() res)  try {\n    const { tokens } = await this.authService.googleLogin(req);\n    const user = await this.authService.getUser(tokens);\n    const jwt = await this.authService.generateJwt(user);\n    res.cookie('Authentication', `Bearer ${jwt.access_token}`);\n    res.cookie('Refresh', `Bearer ${jwt.refresh_token}`);\n    return res.redirect(this.configService.get('CLIENT_URL'));\n  } catch (error) {\n    console.log(error);\n    return res.redirect(`${this.configService.get('CLIENT_URL')}/login`);\n  }\n}\n", "CodeBleu_score": 36.87098869931844}]}
{"instance_id": "52aa108e3521", "generation_result": [{"code": "const mousewheel = function(element, callback)    if (element === null || element === undefined) {\n        element = document.body;\n    }\n\n    element.addEventListener('DOMMouseScroll', function(event) {\n        event.preventDefault();\n        let normalized = (event.wheelDelta / 120) * -1;\n        callback(event, normalized);\n    });\n\n    element.addEventListener('mousewheel', function(event) {\n        event.preventDefault();\n        let normalized = (event.wheelDeltaY / 120) * -1;\n        callback(event, normalized);\n    });\n};\n", "CodeBleu_score": 29.040063785580365}, {"code": "const mousewheel = function(element, callback)  if (document.addEventListener) {\n    element.addEventListener('DOMMouseScroll', function(event) {\n      event = event || window.event;\n      var normalized = event.wheelDelta ? event.wheelDelta / 120 : -event.detail / 3;\n      callback(event, normalized);\n    }, false);\n  } else {\n    element.onmousewheel = function(event) {\n      event = event || window.event;\n      var normalized = event.wheelDelta ? event.wheelDelta / 120 : -event.detail / 3;\n      callback(event, normalized);\n    };\n  }\n};\n", "CodeBleu_score": 34.9595176332589}, {"code": "const mousewheel = function(element, callback)  if (element === null || element === undefined) {\n    element = document;\n  }\n\n  // Handle DOMMouseScroll for Firefox\n  element.addEventListener('DOMMouseScroll', function(event) {\n    event.preventDefault();\n    const normalized = normalizeWheel(event);\n    callback(event, normalized);\n  }, false);\n\n  // Handle mousewheel for other browsers\n  element.addEventListener('mousewheel', function(event) {\n    event.preventDefault();\n    const normalized = normalizeWheel(event);\n    callback(event, normalized);\n  }, false);\n};\n", "CodeBleu_score": 34.18064069826554}]}
{"instance_id": "bb9e14122636", "generation_result": [{"code": "let i18nHandler = function()  let $t = Vue.prototype.$t;\n  if (typeof $t === 'function' && Vue.locale) {\n    if (!Vue.locale.merged) {\n      Vue.locale.merge(Vue.locale.data);\n      Vue.locale.merged = true;\n    }\n    return $t.apply(null, arguments);\n  }\n};\n", "CodeBleu_score": 23.203872489862785}, {"code": "let i18nHandler = function()    let $t = Vue.prototype.$t;\n    if (typeof $t === 'function' && Vue.locale) {\n        if (!Vue.locale.merged) {\n            Vue.locale.merged = true;\n            Vue.locale.data = Object.assign(Vue.locale.data, this.$options.i18n);\n        }\n        return $t.apply(this, arguments);\n    }\n};\n", "CodeBleu_score": 27.658234378454377}, {"code": "let i18nHandler = function()  if (typeof Vue === 'undefined') {\n    console.error('Vue is not defined. Please include Vue before using i18nHandler.');\n    return;\n  }\n\n  if (typeof Vue.prototype.$t === 'function' && Vue.locale) {\n    let $t = Vue.prototype.$t;\n    let locale = Vue.locale;\n    let merged = false;\n\n    return function(...args) {\n      if (!merged) {\n        let langData = args[0];\n        locale.merge(langData);\n        merged = true;\n      }\n      return $t(...args);\n    };\n  }\n};\n", "CodeBleu_score": 31.769100886070774}]}
{"instance_id": "b0608b85127a", "generation_result": [{"code": "function broadcast(componentName, eventName, params)    this.$children.forEach(child => {\n        if (child.componentName === componentName) {\n            child.$emit(eventName, params);\n        } else {\n            broadcast.call(child, componentName, eventName, params);\n        }\n    });\n}\n", "CodeBleu_score": 36.26777101846436}, {"code": "function broadcast(componentName, eventName, params)  this.$children.forEach(child => {\n    const name = child.componentName\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params))\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]))\n    }\n  })\n}\n", "CodeBleu_score": 65.53522809694053}, {"code": "function broadcast(componentName, eventName, params)  this.$children.forEach(child => {\n    const name = child.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]));\n    }\n  });\n}\n", "CodeBleu_score": 73.76489400936298}]}
{"instance_id": "da57b9dc5023", "generation_result": [{"code": "aria.Utils.focusFirstDescendant = function(element)    var children = element.childNodes;\n    for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        if (child.tabIndex >= 0 || (child.getAttribute && child.getAttribute('tabIndex') >= 0)) {\n            child.focus();\n            return true;\n        }\n        if (aria.Utils.focusFirstDescendant(child)) {\n            return true;\n        }\n    }\n    return false;\n};\n", "CodeBleu_score": 50.51146508869303}, {"code": "aria.Utils.focusFirstDescendant = function(element)    var focusableDescendants = aria.Utils.getFocusableDescendants(element);\n    if (focusableDescendants.length > 0) {\n        focusableDescendants[0].focus();\n        return true;\n    }\n    return false;\n};\n", "CodeBleu_score": 29.30157219866418}, {"code": "aria.Utils.focusFirstDescendant = function(element)    var children = element.childNodes;\n    var length = children.length;\n    for (var i = 0; i < length; i++) {\n        var child = children[i];\n        if (child.tabIndex > -1 || child.getAttribute('tabIndex') !== null) {\n            child.focus();\n            return true;\n        } else if (aria.Utils.focusFirstDescendant(child)) {\n            return true;\n        }\n    }\n    return false;\n};\n", "CodeBleu_score": 49.152321469373604}]}
{"instance_id": "a029702e104d", "generation_result": [{"code": "highlight(index)    if (this.suggestionsVisible && !this.loading) {\n      const adjustedIndex = this.adjustIndex(index);\n      this.scrollToSuggestion(adjustedIndex);\n      this.highlightedIndex = adjustedIndex;\n      this.setAriaActivedescendant(adjustedIndex);\n    }\n  }\n  \n  /**\n   * This function, adjustIndex, adjusts the index to ensure it is within the range of the suggestions array.\\nIt takes the index as an argument and returns the adjusted index.\n   */\n  adjustIndex(index) {\n    const adjustedIndex = Math.max(0, Math.min(index, this.suggestions.length - 1));\n    return adjustedIndex;\n  }\n  \n  /**\n   * This function, scrollToSuggestion, scrolls to the suggestion at the given index in the autocomplete list.\\nIt takes the index as an argument and updates the scroll position of the autocomplete list to ensure the suggestion at the given index is visible.\n   */\n  scrollToSuggestion(index) {\n    const suggestion = this.suggestions[index];\n    if (suggestion) {\n      const suggestionElement = this.autocompleteList.querySelector(`[data-index=\"${index}\"]`);\n      if (suggestionElement) {\n        suggestionElement.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n      }\n    }\n  }\n  \n  /**\n   * This function, setAriaActivedescendant, sets the aria-activedescendant attribute on the autocomplete list to the suggestion at the given index.\\nIt takes the index as an argument and updates the aria-activedescendant attribute on the autocomplete list to the ID of the suggestion at the given index.\n   */\n  setAriaActivedescendant(index) {\n    const suggestion = this.suggestions[index];\n    if (suggestion) {\n      this.autocompleteList.setAttribute('aria-activedescendant', suggestion.id);\n    }\n  }\n  ", "CodeBleu_score": 37.42569989902277}, {"code": "highlight(index)    if (this.suggestions.length === 0 || this.isLoading) {\n      return;\n    }\n    if (index < 0) {\n      index = 0;\n    }\n    if (index >= this.suggestions.length) {\n      index = this.suggestions.length - 1;\n    }\n    const scrollTop = this.suggestionsContainer.scrollTop;\n    const scrollBottom = scrollTop + this.suggestionsContainer.clientHeight;\n    const suggestionHeight = this.suggestions[index].clientHeight;\n    const suggestionTop = this.suggestions[index].offsetTop;\n    const suggestionBottom = suggestionTop + suggestionHeight;\n    if (suggestionTop < scrollTop) {\n      this.suggestionsContainer.scrollTop = suggestionTop;\n    } else if (suggestionBottom > scrollBottom) {\n      this.suggestionsContainer.scrollTop = suggestionBottom - this.suggestionsContainer.clientHeight;\n    }\n    this.highlightedIndex = index;\n    this.suggestionsContainer.setAttribute('aria-activedescendant', `suggestion-${index}`);\n  }\n  ", "CodeBleu_score": 41.520868692813046}, {"code": "highlight(index)    if (this.suggestions.length === 0) {\n        return;\n    }\n    if (this.suggestions.length === 1 && !this.loading) {\n        this.select(0);\n        return;\n    }\n    if (index < 0) {\n        index = 0;\n    }\n    if (index >= this.suggestions.length) {\n        index = this.suggestions.length - 1;\n    }\n    this.highlightedIndex = index;\n    const list = this.listRef.nativeElement;\n    const item = list.querySelector(`[data-index=\"${index}\"]`);\n    if (item) {\n        const listRect = list.getBoundingClientRect();\n        const itemRect = item.getBoundingClientRect();\n        if (itemRect.top < listRect.top) {\n            list.scrollTop = itemRect.top - listRect.top;\n        }\n        else if (itemRect.bottom > listRect.bottom) {\n            list.scrollTop = itemRect.bottom - listRect.bottom;\n        }\n    }\n    this.setAriaActivedescendant();\n}\n", "CodeBleu_score": 41.85815558110073}]}
{"instance_id": "2db32f7ad18f", "generation_result": [{"code": "translateItem(index, activeIndex, oldIndex)    // Non-card types\n    if (this.type !== 'card') {\n      // Handle looping\n      if (this.loop) {\n        if (index > activeIndex && index - activeIndex > this.items.length / 2) {\n          index -= this.items.length;\n        } else if (index < activeIndex && activeIndex - index > this.items.length / 2) {\n          index += this.items.length;\n        }\n      }\n  \n      // Handle animation states\n      if (index === activeIndex) {\n        this.items[index].active = true;\n        this.items[index].ready = true;\n      } else if (index === oldIndex) {\n        this.items[index].active = false;\n        this.items[index].ready = true;\n      } else {\n        this.items[index].active = false;\n        this.items[index].ready = false;\n      }\n  \n      return;\n    }\n  \n    // Card types\n    if (this.direction === 'vertical') {\n      console.warn('Vertical direction is not supported for card type carousels.');\n      return;\n    }\n  \n    // Calculate translation and scaling\n    const translation = index * -100;\n    const scaling = 1 - Math.abs(index - activeIndex) * 0.1;\n  \n    // Set item properties\n    this.items[index].active = true;\n    this.items[index].ready = true;\n    this.items[index].translation = translation;\n    this.items[index].scaling = scaling;\n  }\n  ", "CodeBleu_score": 38.3636964657617}, {"code": "translateItem(index, activeIndex, oldIndex)    const { type, direction, loop, items, itemWidth, itemHeight } = this.props;\n    const { itemsRef } = this.state;\n\n    if (type === 'card') {\n        if (direction === 'vertical') {\n            console.warn(`Card carousel cannot be vertical`);\n        }\n        const itemRef = itemsRef.current[index];\n        const isActive = index === activeIndex;\n        const isReady = index === oldIndex;\n        const isNext = index === activeIndex + 1;\n        const isPrev = index === activeIndex - 1;\n        const translateX = isActive\n            ? 0\n            : isNext\n            ? itemWidth\n            : isPrev\n            ? -itemWidth\n            : 0;\n        const translateY = isActive\n            ? 0\n            : isNext\n            ? itemHeight\n            : isPrev\n            ? -itemHeight\n            : 0;\n        const scale = isActive ? 1 : isNext ? 0.9 : isPrev ? 0.9 : 1;\n\n        itemRef.current.style.transform = `translate3d(${translateX}px, ${translateY}px, 0) scale(${scale})`;\n        itemRef.current.style.opacity = isActive ? 1 : 0;\n        itemRef.current.style.zIndex = isActive ? 10 : 1;\n        itemRef.current.style.pointerEvents = isActive ? 'auto' : 'none';\n        itemRef.current.style.transition = isActive\n            ? 'none'\n            : `transform 300ms ease-in-out, opacity 300ms ease-in-out`;\n        itemRef.current.style.position = 'absolute';\n        itemRef.current.style.width = '100%';\n        itemRef.current.style.height = '100%';\n        itemRef.current.style.left = 0;\n        itemRef.current.style.top = 0;\n        itemRef.current.style.transformOrigin = 'center center';\n        itemRef.current.style.willChange = 'transform, opacity';\n        itemRef", "CodeBleu_score": 28.54448401552197}, {"code": "translateItem(index, activeIndex, oldIndex)    let item = this.items[index];\n    let direction = this.direction;\n    let type = this.type;\n    let isCard = type === 'card';\n    let isVertical = direction === 'vertical';\n    let isActive = index === activeIndex;\n    let isReady = item.ready;\n    let isLooping = this.loop;\n    let isAnimating = this.animating;\n    let isMoving = this.moving;\n    let isDragging = this.dragging;\n    let isDraggingToLeft = this.draggingToLeft;\n    let isDraggingToRight = this.draggingToRight;\n    let isDraggingToStart = this.draggingToStart;\n    let isDraggingToEnd = this.draggingToEnd;\n    let isDraggingToCenter = this.draggingToCenter;\n    let isDraggingToLeftEdge = this.draggingToLeftEdge;\n    let isDraggingToRightEdge = this.draggingToRightEdge;\n    let isDraggingToLeftEdgeOrCenter = this.draggingToLeftEdgeOrCenter;\n    let isDraggingToRightEdgeOrCenter = this.draggingToRightEdgeOrCenter;\n    let isDraggingToLeftEdgeOrEnd = this.draggingToLeftEdgeOrEnd;\n    let isDraggingToRightEdgeOrEnd = this.draggingToRightEdgeOrEnd;\n    let isDraggingToLeftEdgeOrStart = this.draggingToLeftEdgeOrStart;\n    let isDraggingToRightEdgeOrStart = this.draggingToRightEdgeOrStart;\n    let isDraggingToCenterOrEnd = this.draggingToCenterOrEnd;\n    let isDraggingToCenterOrStart = this.draggingToCenterOrStart;\n    let isDraggingToLeftEdgeOrCenterOrStart = this.draggingToLeftEdgeOrCenterOrStart;\n    let isDraggingToRightEdgeOrCenterOrStart = this.draggingToRightEdgeOrCenterOrStart;\n    let isDraggingToLeftEdgeOrCenterOrEnd = this.draggingToLeftEdgeOrCenterOrEnd;\n    let isDraggingTo", "CodeBleu_score": 26.87410534876649}]}
{"instance_id": "49b9aa91f62e", "generation_result": [{"code": "handleButtonEnter(arrow)    if (this.direction === 'vertical') {\n        return;\n    }\n    this.items.forEach(item => {\n        if (item.arrow === arrow) {\n            item.hover = true;\n        }\n    });\n}\n", "CodeBleu_score": 62.22096526589491}, {"code": "handleButtonEnter(arrow)    if (this.direction === 'vertical') {\n        return;\n    }\n\n    this.items.forEach(item => {\n        if (item.arrow === itemInStage(item, this.stage)) {\n            item.hover = true;\n        } else {\n            item.hover = false;\n        }\n    });\n}\n", "CodeBleu_score": 57.67016993895056}, {"code": "handleButtonEnter(arrow)    if (this.direction === 'vertical') {\n        return;\n    }\n\n    this.items.forEach((item) => {\n        if (arrow === item.itemInStage) {\n            item.hover = true;\n        }\n    });\n}\n", "CodeBleu_score": 55.782353035013166}]}
{"instance_id": "85cdf6991b1f", "generation_result": [{"code": "scrollIntoView()    if (this.isServer) {\n        return;\n    }\n\n    this.menuRefs.forEach(menuRef => {\n        const container = menuRef.container;\n        const activePath = menuRef.activePath;\n        const activeNode = activePath.node;\n\n        if (activeNode) {\n            container.scrollIntoView({\n                behavior: 'smooth',\n                block: 'nearest',\n                inline: 'nearest'\n            });\n        }\n    });\n}\n", "CodeBleu_score": 32.16361273226183}, {"code": "scrollIntoView()    if (this.isServer) {\n        return;\n    }\n\n    this.menuReferences.forEach(menuReference => {\n        const scrollableContainer = menuReference.scrollableContainer;\n        const activeNode = menuReference.activeNode;\n\n        if (scrollableContainer && activeNode) {\n            scrollableContainer.scrollIntoView(activeNode, {\n                behavior: 'smooth',\n                block: 'nearest',\n                inline: 'nearest'\n            });\n        }\n    });\n}\n", "CodeBleu_score": 28.148322716988922}, {"code": "scrollIntoView()    if (this.isServer) {\n        return;\n    }\n\n    this.menuReferences.forEach(menuReference => {\n        const scrollableContainer = menuReference.scrollableContainer;\n        const activePath = menuReference.activePath;\n\n        if (activePath) {\n            const activeNode = activePath.querySelector(`.${this.activeClass}`);\n            scrollableContainer.scrollIntoView(activeNode, {\n                block: 'nearest',\n                inline: 'nearest'\n            });\n        }\n    });\n}\n", "CodeBleu_score": 35.84759506623988}]}
{"instance_id": "fc6784c79aa5", "generation_result": [{"code": "const rgb2hsv = function(r, g, b)    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const v = max;\n    const d = max - min;\n    const s = max === 0 ? 0 : d / max;\n\n    let h;\n\n    if (max === min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n\n        h /= 6;\n    }\n\n    return [h * 360, s * 100, v * 100];\n};\n", "CodeBleu_score": 62.58067975988657}, {"code": "const rgb2hsv = function(r, g, b)  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const v = max;\n  const s = max === 0 ? 0 : (max - min) / max;\n  const h =\n    max === min\n      ? 0\n      : max === r\n      ? (g - b) / (max - min)\n      : max === g\n      ? 2 + (b - r) / (max - min)\n      : 4 + (r - g) / (max - min);\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    v: Math.round(v * 100)\n  };\n};\n", "CodeBleu_score": 33.73212718709392}, {"code": "const rgb2hsv = function(r, g, b)    r /= 255;\n    g /= 255;\n    b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const v = max;\n    const d = max - min;\n    const s = max === 0 ? 0 : d / max;\n    let h;\n    if (max === min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return {\n        h: h * 360,\n        s: s * 100,\n        v: v * 100\n    };\n};\n", "CodeBleu_score": 64.01784410717418}]}
{"instance_id": "37b868b6a5cc", "generation_result": [{"code": "handleDrag(event)    const rect = this.element.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const orientation = this.orientation;\n    let alpha;\n\n    if (orientation === 'horizontal') {\n      alpha = x / rect.width;\n    } else {\n      alpha = y / rect.height;\n    }\n\n    alpha = Math.max(0, Math.min(1, alpha));\n    this.setAlpha(alpha);\n  }\n  ", "CodeBleu_score": 34.37888406195347}, {"code": "handleDrag(event)    // Get the element's bounding rectangle\n    const rect = this.element.getBoundingClientRect();\n\n    // Calculate the position of the drag relative to the element's bounding rectangle\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    // Adjust the alpha value based on the orientation\n    if (this.orientation === 'vertical') {\n      this.alpha = y / rect.height;\n    } else {\n      this.alpha = x / rect.width;\n    }\n\n    // Update the color's alpha value\n    this.color.setAlpha(this.alpha);\n\n    // Update the color picker's color\n    this.colorPicker.setColor(this.color);\n\n    // Update the color picker's color\n    this.colorPicker.setColor(this.color);\n  }\n\n  /**\n * This function, handleDragEnd, handles the drag end event to update the color's alpha value and color picker's color.\\nIt updates the color's alpha value and color picker's color to match the current alpha value and color.\n */", "CodeBleu_score": 31.76560986299276}, {"code": "handleDrag(event)    const {\n      clientX,\n      clientY\n    } = event;\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.$refs.colorPicker.getBoundingClientRect();\n    const {\n      orientation\n    } = this.$props;\n    let alpha;\n    if (orientation === 'vertical') {\n      alpha = 1 - (clientY - y) / height;\n    } else {\n      alpha = (clientX - x) / width;\n    }\n    this.$emit('change', {\n      alpha\n    });\n  }\n", "CodeBleu_score": 21.480585447032173}]}
{"instance_id": "a3b2c61b5a1e", "generation_result": [{"code": "displayValue()    const { format, type, value, rangeSeparator } = this.props;\n    if (value === null) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        if (format === 'number') {\n            return value.join(rangeSeparator);\n        }\n        return value.map((val) => {\n            if (format === 'number') {\n                return this.formatNumber(val);\n            }\n            return val;\n        }).join(rangeSeparator);\n    }\n    if (format === 'number') {\n        return this.formatNumber(value);\n    }\n    if (format === 'date') {\n        return this.formatDate(value);\n    }\n    if (format === 'time') {\n        return this.formatTime(value);\n    }\n    if (format === 'datetime') {\n        return this.formatDateTime(value);\n    }\n    if (format === 'duration') {\n        return this.formatDuration(value);\n    }\n    if (format === 'bytes') {\n        return this.formatBytes(value);\n    }\n    return value;\n}\n", "CodeBleu_score": 29.616440698689274}, {"code": "displayValue()    const { userInput, format, type, rangeSeparator, isArray } = this.props;\n    if (userInput) {\n      return userInput;\n    }\n    if (isArray) {\n      if (userInput) {\n        return userInput.join(rangeSeparator);\n      }\n      if (format) {\n        return format(userInput).join(rangeSeparator);\n      }\n      return userInput;\n    }\n    if (format) {\n      return format(userInput);\n    }\n    if (type === 'time' && userInput) {\n      return userInput.join(':');\n    }\n    return '';\n  }\n", "CodeBleu_score": 30.22358667605965}, {"code": "displayValue()  if (this.userInput !== null) {\n    return this.userInput;\n  }\n  if (this.formattedValue !== null) {\n    if (this.type === \"number\" || this.type === \"integer\") {\n      return this.formattedValue;\n    }\n    if (this.type === \"date\") {\n      return this.formattedValue.join(this.rangeSeparator);\n    }\n    return this.formattedValue;\n  }\n  return \"\";\n}\n", "CodeBleu_score": 25.885870849005244}]}
{"instance_id": "305dba2399e1", "generation_result": [{"code": "handleStartChange(event)    const startValue = event.target.value;\n    const endValue = this.endDisplay.nativeElement.innerText;\n    const start = this.parseInput(startValue);\n    const end = this.parseInput(endValue);\n    const pickerValue = this.formatPickerValue(start, end);\n    if (this.isValid(pickerValue)) {\n        this.userInput = [start, end];\n        this.picker.setValue(pickerValue);\n        if (this.userInput) {\n            this.input.emit(this.userInput);\n            this.userInput = null;\n        }\n    }\n}\n", "CodeBleu_score": 46.99863637063137}, {"code": "handleStartChange(event)  const { value } = event.target;\n  const start = parseInt(value, 10);\n  const end = parseInt(this.state.end, 10);\n  if (isNaN(start) || start > end) {\n    this.setState({ userInput: null });\n    return;\n  }\n  this.setState({ userInput: [start, end] });\n  this.props.onChange({ start, end });\n}", "CodeBleu_score": 29.62835920325606}, {"code": "handleStartChange(event)    const startValue = event.target.value;\n    const endValue = this.userInput[1];\n    const parsedStartValue = this.parseValue(startValue);\n    if (this.validateValue(parsedStartValue) && parsedStartValue <= endValue) {\n      this.userInput[0] = parsedStartValue;\n      this.picker.setValue([parsedStartValue, endValue]);\n      this.input.emit({\n        start: parsedStartValue,\n        end: endValue\n      });\n      this.userInput = null;\n    }\n  }\n  \n  /**\n   * This function, handleEndChange, processes the end value change event.\\nIt parses the user input and updates the userInput array with the formatted end value and the existing start display value.\\nIt then sets the new picker value with the existing start value and the parsed end value.\\nIf the new value is valid, it emits the input event with the new value and resets the userInput to null.\n   */\n  handleEndChange(event) {\n    const endValue = event.target.value;\n    const startValue = this.userInput[0];\n    const parsedEndValue = this.parseValue(endValue);\n    if (this.validateValue(parsedEndValue) && parsedEndValue >= startValue) {\n      this.userInput[1] = parsedEndValue;\n      this.picker.setValue([startValue, parsedEndValue]);\n      this.input.emit({\n        start: startValue,\n        end: parsedEndValue\n      });\n      this.userInput = null;\n    }\n  }\n  ", "CodeBleu_score": 42.5494448297229}]}
{"instance_id": "0f76d5fb83b3", "generation_result": [{"code": "bindScrollEvent()    const bindFunction = (element, event) => {\n      element.wrap.onscroll = () => {\n        this.handleScroll(element.type, event);\n      };\n    };\n\n    bindFunction(this.hours, 'hours');\n    bindFunction(this.minutes, 'minutes');\n    bindFunction(this.seconds, 'seconds');\n  }\n", "CodeBleu_score": 39.35514985322652}, {"code": "bindScrollEvent()    const bindFunction = (element, event) => {\n        element.wrap.onscroll = () => {\n            this.handleScroll(element.type, event);\n        };\n    };\n\n    bindFunction(this.hours, 'hours');\n    bindFunction(this.minutes, 'minutes');\n    bindFunction(this.seconds, 'seconds');\n}\n", "CodeBleu_score": 39.01075899716291}, {"code": "bindScrollEvent()    const bindFunction = (elementType) => {\n        const element = document.getElementById(elementType);\n        element.onscroll = (event) => this.handleScroll(elementType, event);\n    };\n\n    bindFunction('hours');\n    bindFunction('minutes');\n    bindFunction('seconds');\n}\n", "CodeBleu_score": 52.74731465298257}]}
{"instance_id": "fe8ad366d911", "generation_result": [{"code": "scrollDown(step)    if (this.scrollbar.active) {\n      if (this.scrollbar.name === 'hours') {\n        const hours = this.hours.map(hour => hour.value);\n        const index = hours.indexOf(this.scrollbar.value);\n        let newIndex = index + step;\n        if (newIndex < 0 || newIndex >= hours.length) {\n          return;\n        }\n        while (newIndex >= 0 && newIndex < hours.length && !hours[newIndex].available) {\n          newIndex += step;\n        }\n        if (newIndex < 0 || newIndex >= hours.length) {\n          return;\n        }\n        this.scrollbar.value = hours[newIndex].value;\n      } else {\n        const currentMinute = this.date.getMinutes();\n        const newMinute = currentMinute + step;\n        if (newMinute < 0 || newMinute >= 60) {\n          return;\n        }\n        this.date.setMinutes(newMinute);\n      }\n      this.updateDateField();\n      this.updateSpinner();\n      this.emitSelectRangeEvent(this.scrollbar.name);\n    } else {\n      this.selectRange('hours');\n    }\n  }", "CodeBleu_score": 31.768146395263695}, {"code": "scrollDown(step)    const scrollbar = this.getScrollbar();\n    const scrollbarName = scrollbar.getScrollbarName();\n    const scrollbarValue = scrollbar.getValue();\n    const stepValue = step * 60;\n    const newValue = scrollbarValue + stepValue;\n\n    if (!scrollbar.isActive()) {\n        this.selectRange(scrollbarName);\n        return;\n    }\n\n    if (scrollbarName === 'hours') {\n        let hours = this.getHours();\n        let hoursIndex = hours.findIndex((hour) => hour.value === scrollbarValue);\n        let newHoursIndex = hoursIndex;\n\n        while (newHoursIndex < hours.length && hours[newHoursIndex].disabled) {\n            newHoursIndex++;\n        }\n\n        if (newHoursIndex < hours.length) {\n            scrollbar.setValue(hours[newHoursIndex].value);\n            this.updateDate(hours[newHoursIndex].value);\n        }\n    } else {\n        if (newValue >= 0 && newValue <= 3600) {\n            scrollbar.setValue(newValue);\n            this.updateDate(newValue);\n        }\n    }\n\n    this.updateSpinner();\n    this.emitSelectRangeEvent(scrollbarName);\n}", "CodeBleu_score": 29.624731826494187}, {"code": "scrollDown(step)    if (this.scrollbar.active === 'hours') {\n      let hours = this.hours.slice();\n      let index = hours.indexOf(this.scrollbar.value);\n      let newIndex = index + step;\n      while (newIndex < 0 || newIndex >= hours.length || !this.isAvailable(hours[newIndex])) {\n        newIndex += step;\n      }\n      this.scrollbar.value = hours[newIndex];\n      this.dateField.value = this.dateField.value.setHours(hours[newIndex]);\n      this.spinner.value = this.spinner.value.setHours(hours[newIndex]);\n      this.emitSelectRange('hours');\n    } else {\n      let value = this.scrollbar.value + step;\n      if (value < 0) {\n        value = 0;\n      } else if (value > 60) {\n        value = 60;\n      }\n      this.scrollbar.value = value;\n      this.dateField.value = this.dateField.value.setMinutes(value);\n      this.spinner.value = this.spinner.value.setMinutes(value);\n      this.emitSelectRange(this.scrollbar.active);\n    }\n  }\n  ", "CodeBleu_score": 33.450762735124556}]}
{"instance_id": "9b22163fdfde", "generation_result": [{"code": "imgStyle()    const {\n        scale,\n        rotation,\n        offsetX,\n        offsetY,\n        mode,\n        transitionEnabled\n    } = this.props;\n\n    const style = {\n        transform: `scale(${scale}) rotate(${rotation}deg)`,\n        transition: transitionEnabled ? 'all 0.2s ease-in-out' : 'none',\n        position: 'absolute',\n        left: offsetX + 'px',\n        top: offsetY + 'px'\n    };\n\n    if (mode === 'CONTAIN') {\n        style.maxWidth = '100%';\n        style.maxHeight = '100%';\n    }\n\n    return style;\n}\n", "CodeBleu_score": 52.02844642193703}, {"code": "imgStyle()    const {\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      mode,\n      transition,\n    } = this.state;\n  \n    const style = {\n      transform: `scale(${scale}) rotate(${rotation}deg)`,\n      transition: transition ? 'transform 0.5s ease-in-out' : 'none',\n      position: 'absolute',\n      left: offsetX + 'px',\n      top: offsetY + 'px',\n    };\n  \n    if (mode === 'CONTAIN') {\n      style.maxWidth = '100%';\n      style.maxHeight = '100%';\n    }\n  \n    return style;\n  }\n  ", "CodeBleu_score": 53.239088395028766}, {"code": "imgStyle()    const { scale, rotation, mode, offsetX, offsetY, transition } = this.state;\n    const style = {\n      transform: `scale(${scale}) rotate(${rotation}deg)`,\n      transition: transition ? 'transform 0.3s ease-in-out' : 'none',\n      position: 'absolute',\n      left: offsetX + 'px',\n      top: offsetY + 'px',\n    };\n\n    if (mode === 'CONTAIN') {\n      style.maxWidth = '100%';\n      style.maxHeight = '100%';\n    }\n\n    return style;\n  }\n  ", "CodeBleu_score": 55.029427132672524}]}
{"instance_id": "3bf2230ab870", "generation_result": [{"code": "addLazyLoadListener()    if (isServer) {\n        return;\n    }\n\n    const scrollContainer = this.getScrollContainer();\n    if (!scrollContainer) {\n        return;\n    }\n\n    const lazyLoadHandler = this.lazyLoadHandler.bind(this);\n    scrollContainer.addEventListener('scroll', lazyLoadHandler);\n    lazyLoadHandler();\n}\n", "CodeBleu_score": 22.366134259828538}, {"code": "addLazyLoadListener()    if (this.isServer) {\n      return;\n    }\n  \n    const scrollContainer = this.scrollContainer || this.element.parentElement;\n  \n    if (!scrollContainer) {\n      return;\n    }\n  \n    const throttledLazyLoad = throttle(this.lazyLoad, 100);\n  \n    scrollContainer.addEventListener('scroll', throttledLazyLoad);\n  \n    throttledLazyLoad();\n  }\n  ", "CodeBleu_score": 19.845986657983428}, {"code": "addLazyLoadListener()    if (isServer) {\n      return;\n    }\n  \n    const scrollContainer = this.scrollContainer || this.$el;\n    const throttledLazyLoad = throttle(this.lazyLoad, 200);\n  \n    scrollContainer.addEventListener('scroll', throttledLazyLoad);\n    throttledLazyLoad();\n  }\n  ", "CodeBleu_score": 18.423502368449192}]}
{"instance_id": "7180fba29076", "generation_result": [{"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState   const { error } = result;\n\n  if (error instanceof TRPCClientError) {\n    return {\n      ...result,\n      error: new TRPCClientError(error.message, error.data, error.shape),\n    };\n  }\n\n  return result;\n}\n", "CodeBleu_score": 27.207952187814943}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState   if (result.state === 'error' && result.error instanceof TRPCClientError) {\n    return {\n      ...result,\n      error: new TRPCClientError({\n        message: result.error.message,\n        data: result.error.data,\n        shape: result.error.shape,\n      }),\n    };\n  }\n\n  return result;\n}\n", "CodeBleu_score": 33.00719329078591}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState   if (result.error instanceof TRPCClientError) {\n    const error = new Error(result.error.message);\n    error.name = result.error.name;\n    error.cause = result.error.cause;\n    error.stack = result.error.stack;\n    error.data = result.error.data;\n    error.shape = result.error.shape;\n    result.error = error;\n  }\n  return result;\n}\n", "CodeBleu_score": 36.01467736181044}]}
{"instance_id": "b0ff12e8aa0d", "generation_result": [{"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) =>   const {\n    ctx,\n    Component,\n    appProps,\n  } = appOrPageCtx;\n\n  const {\n    res,\n    req,\n    jsonPageRes,\n    renderOpts,\n  } = ctx;\n\n  const {\n    dehydratedState,\n    ...pageProps\n  } = await Component.getInitialProps(ctx);\n\n  const trpcCtx = {\n    res,\n    req,\n    jsonPageRes,\n    renderOpts,\n    dehydratedState,\n    pageProps,\n  };\n\n  return {\n    trpcCtx,\n    appProps,\n  };\n};\n", "CodeBleu_score": 21.59288442582316}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) =>   const {\n    ctx,\n    Component,\n    appProps: { pageProps },\n  } = appOrPageCtx;\n\n  const trpcClient = createClient(ctx);\n\n  const trpcPageProps = await trpcClient.withTRPC(Component.getInitialProps ?? (() => ({})))(\n    ctx,\n    trpcClient,\n    pageProps\n  );\n\n  return {\n    pageProps: {\n      ...pageProps,\n      ...trpcPageProps,\n    },\n  };\n};\n", "CodeBleu_score": 30.315843826365562}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) =>   const {\n    Component,\n    ctx: {\n      res,\n      req,\n      jsonPageRes,\n      renderOpts,\n      ...ctx\n    }\n  } = appOrPageCtx;\n\n  const trpcClient = createClient(ctx);\n\n  const pageProps = await Component.getInitialProps?.(ctx);\n\n  const page = {\n    ...pageProps,\n    trpcState: trpcClient.dehydrate(),\n  };\n\n  return {\n    page,\n    trpcClient,\n  };\n};\n", "CodeBleu_score": 25.121215264996106}]}
{"instance_id": "b46c87572278", "generation_result": [{"code": "export function formDataToObject(formData: FormData)  const object: { [key: string]: any } = {};\n\n  for (const [key, value] of formData.entries()) {\n    const parts = key.split('.');\n    let current = object;\n\n    for (let i = 0; i < parts.length - 1; i++) {\n      const part = parts[i];\n      if (!current[part]) {\n        current[part] = {};\n      }\n      current = current[part];\n    }\n\n    current[parts[parts.length - 1]] = value;\n  }\n\n  return object;\n}\n", "CodeBleu_score": 47.51298059931736}, {"code": "export function formDataToObject(formData: FormData)  const obj: any = {};\n\n  for (const [key, value] of formData.entries()) {\n    const parts = key.split(\".\");\n    let current = obj;\n\n    for (let i = 0; i < parts.length; i++) {\n      if (i === parts.length - 1) {\n        current[parts[i]] = value;\n      } else {\n        if (!current[parts[i]]) {\n          current[parts[i]] = {};\n        }\n        current = current[parts[i]];\n      }\n    }\n  }\n\n  return obj;\n}\n", "CodeBleu_score": 52.27377200748072}, {"code": "export function formDataToObject(formData: FormData)  const result: Record<string, any> = {};\n  formData.forEach((value, key) => {\n    const parts = key.split('.');\n    let current = result;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const part = parts[i];\n      if (!current[part]) {\n        current[part] = {};\n      }\n      current = current[part];\n    }\n    current[parts[parts.length - 1]] = value;\n  });\n  return result;\n}\n", "CodeBleu_score": 38.75304797760366}]}
{"instance_id": "b63467546c58", "generation_result": [{"code": "export async function experimental_revalidateEndpoint(req: Request)  const { cacheTag } = await req.json();\n\n  if (typeof cacheTag !== 'string') {\n    return new Response('Invalid cacheTag', { status: 400 });\n  }\n\n  await revalidateTag(cacheTag);\n\n  return new Response(`revalidated ${cacheTag}`, {\n    headers: { 'Cache-Control': 'public, s-maxage=1200, stale-while-revalidate=600' },\n  });\n}\n", "CodeBleu_score": 61.41088551825922}, {"code": "export async function experimental_revalidateEndpoint(req: Request)  const { cacheTag } = await req.json();\n  if (typeof cacheTag !== \"string\") {\n    return new Response(\n      JSON.stringify({\n        message: \"Invalid cacheTag\",\n      }),\n      {\n        status: 400,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n  const revalidation = await revalidateTag(cacheTag);\n  return new Response(\n    JSON.stringify({\n      message: `Revalidated ${cacheTag}`,\n      revalidation,\n    }),\n    {\n      status: 200,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n}\n", "CodeBleu_score": 62.066311176125474}, {"code": "export async function experimental_revalidateEndpoint(req: Request)  const { cacheTag } = await req.json();\n  if (typeof cacheTag !== \"string\") {\n    return new Response(\"Invalid cacheTag\", { status: 400 });\n  }\n\n  await revalidateTag(cacheTag);\n\n  return new Response(`Revalidated ${cacheTag} at ${Date.now()}`, {\n    status: 200,\n  });\n}\n", "CodeBleu_score": 59.89992480161141}]}
{"instance_id": "4cc5d9754d1f", "generation_result": [{"code": "export function createUseProxy<TRouter extends AnyRouter>  return function useProxy<TPath extends TRouter['config']['path']>(\n    options: UseProxyOptions<TPath>,\n  ) {\n    const {\n      client,\n      router: routerOption,\n      path: pathOption,\n      input: inputOption,\n      transformer: transformerOption,\n      query: queryOption,\n    } = options;\n\n    const router = routerOption ?? client.getCoreClient().getRouter();\n\n    const path = pathOption ?? (router as any).config.path;\n\n    const input = inputOption ?? (router as any).config.input;\n\n    const transformer = transformerOption ?? (router as any).config.transformer;\n\n    const query = queryOption ?? client.getCoreClient().getQuery;\n\n    const proxy = createRecursiveProxy(\n      router,\n      path,\n      input,\n      transformer,\n      query,\n    );\n\n    return proxy as any;\n  };\n}\n", "CodeBleu_score": 27.86746134460524}, {"code": "export function createUseProxy<TRouter extends AnyRouter>  return function useProxy<TPath extends keyof TRouter[\"_def\"][\"queries\"]>(\n    path: TPath,\n    options?: {\n      input?: TRouter[\"_def\"][\"queries\"][TPath][\"input\"];\n      /**\n       * The client to use for the query.\n       */\n      client?: Client<TRouter>;\n    }\n  ) {\n    const client = options?.client ?? trpc.client;\n    const input = options?.input;\n    const pathString = path.toString();\n    return createRecursiveProxy<TRouter[\"_def\"][\"queries\"][TPath][\"input\"]>(\n      input,\n      (input) =>\n        client.query(pathString, {\n          input,\n        })\n    );\n  };\n}\n", "CodeBleu_score": 39.893432570474154}, {"code": "export function createUseProxy<TRouter extends AnyRouter>  return function useProxy<T extends TRouter>(\n    client: TClient<T>,\n    options: UseProxyOptions<T>\n  ) {\n    return createRecursiveProxy(client, options) as UseProxyResult<T>;\n  };\n}\n", "CodeBleu_score": 22.925967747373882}]}
{"instance_id": "ec07b15792dd", "generation_result": [{"code": "const Accordion = ({ child, name }: AccordionProps) =>  const { isOpen, onToggle } = useDisclosure();\n  return (\n    <AccordionPrimitive.Root\n      type=\"single\"\n      collapsible\n      onChange={() => onToggle()}\n    >\n      <AccordionPrimitive.Item value=\"item\">\n        <AccordionPrimitive.Header>\n          <AccordionPrimitive.Trigger className=\"flex items-center justify-between w-full\">\n            {name}\n            <ChevronDownIcon\n              className={`w-5 h-5 transition-transform duration-200 ${\n                isOpen ? \"rotate-180\" : \"\"\n              }`}\n            />\n          </AccordionPrimitive.Trigger>\n        </AccordionPrimitive.Header>\n        <AccordionPrimitive.Content className=\"overflow-hidden\">\n          <div className=\"px-4 pb-4\">{child}</div>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n};\n", "CodeBleu_score": 32.865736654126366}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>  return (\n    <AccordionPrimitive.Root\n      type=\"single\"\n      collapsible\n      className=\"w-full\"\n      defaultValue=\"item-1\"\n    >\n      <AccordionPrimitive.Item value=\"item-1\">\n        <AccordionPrimitive.Header className=\"flex\">\n          <AccordionPrimitive.Trigger className=\"flex-1 text-left\">\n            {name}\n          </AccordionPrimitive.Trigger>\n          <AccordionPrimitive.Content>\n            <div className=\"flex flex-col gap-2\">{child}</div>\n          </AccordionPrimitive.Content>\n        </AccordionPrimitive.Header>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n};\n", "CodeBleu_score": 42.847954266356645}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>  return (\n    <AccordionPrimitive.Root type=\"single\" collapsible>\n      <AccordionPrimitive.Item value=\"item\">\n        <AccordionPrimitive.Header>\n          <AccordionPrimitive.Trigger>\n            <div className=\"flex justify-between w-full\">\n              <span className=\"text-sm font-medium text-gray-900\">{name}</span>\n              <ChevronDownIcon\n                className=\"w-5 h-5 text-gray-400\"\n                aria-hidden=\"true\"\n              />\n            </div>\n          </AccordionPrimitive.Trigger>\n        </AccordionPrimitive.Header>\n        <AccordionPrimitive.Content>\n          <div className=\"py-2 text-sm text-gray-500\">{child}</div>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n};\n", "CodeBleu_score": 45.06705278997573}]}
{"instance_id": "728fa96ca3cf", "generation_result": [{"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps)  return (\n    <MenuPrimitive.Root>\n      <MenuPrimitive.Trigger asChild>\n        <button\n          className={`flex items-center gap-1 rounded-md p-1.5 text-sm font-medium text-gray-100 hover:bg-gray-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-700 focus-visible:ring-opacity-75`}\n        >\n          {icon && <span className=\"text-gray-400\">{icon}</span>}\n          {name && <span className=\"text-gray-400\">{name}</span>}\n          {chevron && <span className=\"text-gray-400\">{chevron}</span>}\n        </button>\n      </MenuPrimitive.Trigger>\n      <MenuPrimitive.Portal>\n        <MenuPrimitive.Content\n          align=\"start\"\n          className={`${buttonPosition === \"top\" ? \"top-12\" : \"bottom-12\"} z-50 mt-1 flex w-48 flex-col overflow-hidden rounded-md bg-gray-800 py-1 text-sm text-gray-100 shadow-lg ring-1 ring-gray-700 ring-opacity-5 focus:outline-none`}\n        >\n          {items.map((item, index) => (\n            <MenuPrimitive.Item\n              key={index}\n              className={`relative flex w-full cursor-pointer select-none items-center rounded-md px-3 py-2 text-sm font-medium text-gray-100 hover:bg-gray-700 focus:bg-gray-700 focus:outline-none`}\n            >\n              {item.icon && <span className=\"text-gray-400\">{item.icon}</span>}\n              {item.name && <span className=\"text-gray-400\">{item.name}</span>}\n            </MenuPrimitive.Item>\n          ))}\n        </Menu", "CodeBleu_score": 45.49063894725519}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps)  return (\n    <MenuPrimitive.Root>\n      <MenuPrimitive.Trigger asChild>\n        <button className=\"flex items-center gap-2 rounded-md p-2 text-sm font-medium text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\">\n          {icon}\n          {name && <span>{name}</span>}\n          {chevron && <ChevronDownIcon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n        </button>\n      </MenuPrimitive.Trigger>\n      <MenuPrimitive.Portal>\n        <MenuPrimitive.Content\n          className=\"z-50 min-w-[12rem] overflow-hidden rounded-md bg-white p-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\"\n          align={buttonPosition}\n        >\n          {items.map((item) => (\n            <MenuPrimitive.Item\n              key={item.id}\n              className=\"flex w-full cursor-pointer select-none items-center rounded-md px-2 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n            >\n              {item.icon}\n              <span className=\"ml-2\">{item.name}</span>\n            </MenuPrimitive.Item>\n          ))}\n        </MenuPrimitive.Content>\n      </MenuPrimitive.Portal>\n    </MenuPrimitive.Root>\n  );\n}\n", "CodeBleu_score": 47.35798299841112}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps)  const [isOpen, setIsOpen] = useState(false);\n  const buttonRef = useRef(null);\n  const menuRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        isOpen &&\n        menuRef.current &&\n        !menuRef.current.contains(event.target) &&\n        buttonRef.current &&\n        !buttonRef.current.contains(event.target)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isOpen]);\n\n  const handleButtonClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleItemClick = (item: MenuItem) => {\n    item.onClick();\n    setIsOpen(false);\n  };\n\n  const buttonPositionStyles = {\n    top: buttonPosition === \"top\",\n    bottom: buttonPosition === \"bottom\",\n  };\n\n  return (\n    <MenuPrimitive.Root ref={menuRef}>\n      <MenuPrimitive.Trigger asChild>\n        <button\n          className={`flex items-center gap-2 rounded-md px-2 py-1 text-sm font-medium text-gray-500 hover:bg-gray-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-500 focus-visible:ring-opacity-75`}\n          ref={buttonRef}\n          onClick={handleButtonClick}\n        >\n          {icon && (\n            <div className=\"flex h-5 w-5 items-center justify-center rounded-full bg-gray-100 text-gray-500\">\n              {icon}\n            </div>\n          )}\n          {name && <span>{name}</span>}\n          {chevron && (\n            <ChevronDownIcon\n              className={`ml-2 -mr-1 h-5", "CodeBleu_score": 24.726116150226385}]}
{"instance_id": "a2733fb19224", "generation_result": [{"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) =>     const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const scrollThreshold = 10;\n    const isScrolledUp = scrollTop + clientHeight + scrollThreshold >= scrollHeight;\n    setIsScrolledUp(isScrolledUp);\n  };\n  ", "CodeBleu_score": 49.16227948356627}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) =>     const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const scrollThreshold = 10;\n    const isScrolledUp = scrollTop + clientHeight + scrollThreshold < scrollHeight;\n    setIsScrolledUp(isScrolledUp);\n  };\n\n  /**\n * This function, handleScroll, handles the scroll event of a div element.\\nIt checks if the user has scrolled up from the bottom by comparing scrollTop, scrollHeight, and clientHeight values with a threshold of 10 pixels.\\nIt then updates the state to indicate whether the user has scrolled up.\n */", "CodeBleu_score": 49.55745989377909}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) =>     const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const isScrolledToBottom = scrollTop + clientHeight >= scrollHeight - 10;\n    setIsScrolledToBottom(isScrolledToBottom);\n  };\n  \n  /**\n   * This function, scrollToBottom, scrolls the div element to the bottom.\\nIt uses the scrollIntoView method of the div element to scroll to the bottom.\\nIt also sets the state to indicate that the user has scrolled up.\n   */\n  const scrollToBottom = () => {\n    const div = document.getElementById(\"scrollable-div\");\n    if (div) {\n      div.scrollTo({\n        top: div.scrollHeight,\n        behavior: \"smooth\",\n      });\n      setIsScrolledToBottom(false);\n    }\n  };\n  \n  /**\n   * This function, handleKeyPress, handles the key press event of a div element.\\nIt checks if the user has pressed the Enter key.\\nIt then calls the scrollToBottom function to scroll the div element to the bottom.\n   */\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === \"Enter\") {\n      scrollToBottom();\n    }\n  };\n  \n  /**\n   * This function, handleClick, handles the click event of a div element.\\nIt calls the scrollToBottom function to scroll the div element to the bottom.\n   */\n  const handleClick = () => {\n    scrollToBottom();\n  };\n  \n  /**\n   * This function, handleMouseEnter, handles the mouse enter event of a div element.\\nIt sets the state to indicate that the user has entered the div element.\n   */\n  const handleMouseEnter = () => {\n    setIsMouseOver(true);\n  };\n  \n  /**\n   * This function, handleMouseLeave, handles the mouse leave event of a div element.\\nIt sets the state to indicate that the user has left the div element.\n   */\n  const handleMouseLeave = () => {\n    setIsMouseOver(false);\n  };\n  \n  /**\n   * This function, handleMouseMove, handles the mouse", "CodeBleu_score": 41.71578971263259}]}
{"instance_id": "128baf9be3e8", "generation_result": [{"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>  const scrollRef = document.getElementById(\"scroll-ref\");\n  if (scrollRef && scrollRef.current) {\n    scrollRef.current.scrollTo({\n      top: scrollRef.current.scrollHeight,\n      behavior: behaviour,\n    });\n  }\n};\n", "CodeBleu_score": 52.32161250501657}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>  const scrollRef = document.getElementById(\"scroll-ref\");\n  if (scrollRef && scrollRef.scrollTo) {\n    scrollRef.scrollTo({\n      top: scrollRef.scrollHeight,\n      behavior: behaviour,\n    });\n  }\n};\n", "CodeBleu_score": 36.84293597942821}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>  const scrollRef = document.getElementById(\"scroll-container\");\n  if (scrollRef && scrollRef.scrollTop) {\n    scrollRef.scrollTo({\n      top: scrollRef.scrollHeight,\n      behavior: behaviour,\n    });\n  }\n};\n", "CodeBleu_score": 36.36035008519043}]}
{"instance_id": "070c4b1ac0b5", "generation_result": [{"code": "const saveElementAsImage = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (!element) {\n    alert(\"Element not found.\");\n    return;\n  }\n\n  htmlToImage\n    .toJpeg(element, {\n      pixelRatio: 2,\n      backgroundColor: \"white\",\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n      },\n    })\n    .then((dataUrl) => {\n      const link = document.createElement(\"a\");\n      link.download = \"agent-gpt-output.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((error) => {\n      alert(\"Failed to save image: \" + error);\n    });\n};\n", "CodeBleu_score": 47.94297606669302}, {"code": "const saveElementAsImage = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (!element) {\n    console.error(`Element with ID \"${elementId}\" not found.`);\n    return;\n  }\n\n  htmlToImage\n    .toJpeg(element, {\n      backgroundColor: \"#fff\",\n      style: {\n        fontSize: \"14px\",\n        fontFamily: \"Arial, sans-serif\",\n        color: \"#000\",\n        textAlign: \"left\",\n      },\n    })\n    .then((dataUrl) => {\n      const link = document.createElement(\"a\");\n      link.download = \"agent-gpt-output.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((error) => {\n      console.error(\"Failed to save element as image:\", error);\n      alert(\"Failed to save element as image.\");\n    });\n};\n", "CodeBleu_score": 45.60254711081143}, {"code": "const saveElementAsImage = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (element) {\n    const style = document.createElement(\"style\");\n    style.innerHTML = `\n      .agent-gpt-output {\n        font-family: \"Courier New\", Courier, monospace;\n        font-size: 16px;\n        line-height: 1.5;\n        white-space: pre-wrap;\n        word-break: break-word;\n        padding: 10px;\n        border-radius: 5px;\n        background-color: #f5f5f5;\n      }\n    `;\n    element.insertBefore(style, element.firstChild);\n\n    htmlToImage\n      .toPng(element, {\n        width: 500,\n        height: 500,\n      })\n      .then((dataUrl) => {\n        const link = document.createElement(\"a\");\n        link.download = \"agent-gpt-output.png\";\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch((error) => {\n        alert(\"Failed to save image: \" + error);\n      });\n  } else {\n    alert(\"Element not found\");\n  }\n};\n", "CodeBleu_score": 37.37700972717584}]}
{"instance_id": "346ea48343da", "generation_result": [{"code": "const copyElementText = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (!element) {\n    console.error(`Element with ID \"${elementId}\" not found.`);\n    return;\n  }\n  const text = element.innerText;\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text);\n  } else {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n  }\n};\n", "CodeBleu_score": 49.394853260771484}, {"code": "const copyElementText = (elementId: string) =>  const element = document.getElementById(elementId);\n  if (!element) {\n    console.error(`Element with ID \"${elementId}\" not found.`);\n    return;\n  }\n  const text = element.innerText;\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text).then(() => {\n      console.log(`Copied text to clipboard: ${text}`);\n    });\n  } else {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    console.log(`Copied text to clipboard: ${text}`);\n  }\n};\n", "CodeBleu_score": 52.36910580734049}, {"code": "const copyElementText = (elementId: string) =>  const element = document.getElementById(elementId);\n  const text = element?.innerText;\n\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text || \"\");\n  } else {\n    const textarea = document.createElement(\"textarea\");\n    textarea.value = text || \"\";\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textarea);\n  }\n};\n", "CodeBleu_score": 38.927501588163366}]}
{"instance_id": "25f193a0eddf", "generation_result": [{"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) =>   const match = /language-(\\w+)/.exec(className || '')\n  return (\n    <code className={className} style={{ backgroundColor: 'transparent' }}>\n      {inline ? (\n        <code>{children}</code>\n      ) : (\n        <Highlight\n          className={className}\n          language={match && match[1] ? match[1] : ''}\n          PreTag=\"div\"\n          {...defaultProps}\n        >\n          {String(children).replace(/\\n$/, '')}\n        </Highlight>\n      )}\n    </code>\n  )\n}\n", "CodeBleu_score": 24.153115985774555}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) =>   const match = /language-(\\w+)/.exec(className || '')\n  return match ? (\n    <pre className={`language-${match[1]}`}>\n      <code className={className}>{children}</code>\n    </pre>\n  ) : (\n    <code className={className}>{children}</code>\n  )\n}\n", "CodeBleu_score": 27.305637336667765}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) =>   // If the code block is inline, render a <code> element with the children\n  if (inline) {\n    return <code className={className}>{children}</code>;\n  }\n\n  // Otherwise, determine the language from the className prop\n  const language = className?.replace(/language-/, '');\n\n  // Render the code block with the appropriate styling\n  return (\n    <pre className={`${className} custom-code-block`}>\n      <code className={`language-${language}`}>{children}</code>\n    </pre>\n  );\n};\n", "CodeBleu_score": 43.85645104765978}]}
{"instance_id": "7ba7dfdc0ab6", "generation_result": [{"code": "const extractTextFromNode = (node: React.ReactNode): string =>  if (typeof node === 'string') {\n    return node;\n  } else if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  } else if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n  return '';\n};\n", "CodeBleu_score": 65.62065579761708}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>  if (typeof node === \"string\") {\n    return node;\n  } else if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join(\"\");\n  } else if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n  return \"\";\n};\n", "CodeBleu_score": 73.7802741480353}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>  if (typeof node === \"string\") {\n    return node;\n  } else if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join(\"\");\n  } else if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  } else {\n    return \"\";\n  }\n};\n", "CodeBleu_score": 70.05246488409956}]}
{"instance_id": "a67cb8d31dde", "generation_result": [{"code": "const Summarize = () =>  const [summary, setSummary] = React.useState(false);\n  const agent = useAgent();\n  const lifecycle = useLifecycle();\n  const tasks = useTasks();\n  const completedTasks = tasks.filter((task) => task.state === \"completed\");\n  const results = completedTasks.map((task) => task.result);\n  const hasResults = results.some((result) => result);\n  const hasSummary = lifecycle.state === \"stopped\" && hasResults && !summary;\n\n  return (\n    <div>\n      {hasSummary && (\n        <div>\n          <p>Summarize conversation</p>\n          <button\n            onClick={() => {\n              setSummary(true);\n              agent.summarize();\n            }}\n          >\n            Summarize\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n", "CodeBleu_score": 30.02721204781343}, {"code": "const Summarize = () =>  const { agent, lifecycle, tasks, summary } = useContext(AgentContext);\n\n  const [showSummary, setShowSummary] = useState(false);\n\n  const handleSummarize = () => {\n    setShowSummary(true);\n    agent.summarize();\n  };\n\n  const isAgentAvailable = agent.isAvailable();\n  const isLifecycleStopped = lifecycle.state === \"stopped\";\n  const hasCompletedTasks = tasks.length > 0 && tasks.every((task) => task.result);\n  const isSummaryDone = summary.length > 0;\n\n  if (isAgentAvailable && isLifecycleStopped && hasCompletedTasks && !isSummaryDone) {\n    return (\n      <div>\n        <p>Would you like to summarize the conversation?</p>\n        <button onClick={handleSummarize}>Summarize</button>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n", "CodeBleu_score": 28.2044522040965}, {"code": "const Summarize = () =>  const [summary, setSummary] = useState(false);\n  const agent = useAgent();\n  const { lifecycle, tasks } = useConversation();\n  const conversationSummary = useConversationSummary();\n\n  const handleSummarize = () => {\n    if (agent.available && lifecycle === \"stopped\" && tasks.length > 0 && conversationSummary.length === 0) {\n      setSummary(true);\n      agent.summarize();\n    }\n  };\n\n  return (\n    <div>\n      {summary ? (\n        <div>\n          <p>Summary: {conversationSummary}</p>\n        </div>\n      ) : (\n        <div>\n          <p>Click the button to summarize the conversation</p>\n          <button onClick={handleSummarize}>Summarize</button>\n        </div>\n      )}\n    </div>\n  );\n};\n", "CodeBleu_score": 26.57556024372037}]}
{"instance_id": "983031b20224", "generation_result": [{"code": "export default function DashboardLayout({ children }: PropsWithChildren)  return (\n    <ClerkProvider\n      appearance={{\n        baseTheme: \"dark\",\n        variables: {\n          colorPrimary: \"#646cff\",\n        },\n        elements: {\n          global: {\n            \":root\": {\n              \"--cl-bg-color\": \"#181818\",\n              \"--cl-text-color\": \"#fff\",\n            },\n            \"body, html\": {\n              backgroundColor: \"#181818\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-form-field\": {\n            \":root\": {\n              backgroundColor: \"#181818\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-button\": {\n            \":root\": {\n              backgroundColor: \"#646cff\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-button-primary\": {\n            \":root\": {\n              backgroundColor: \"#646cff\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-input\": {\n            \":root\": {\n              backgroundColor: \"#181818\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-input-field\": {\n            \":root\": {\n              backgroundColor: \"#181818\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-input-field-wrapper\": {\n            \":root\": {\n              backgroundColor: \"#181818\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-input-field-label\": {\n            \":root\": {\n              backgroundColor: \"#181818\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-input-field-label-text\": {\n            \":root\": {\n              backgroundColor: \"#181818\",\n              color: \"#fff\",\n            },\n          },\n          \"cl-input-field-label-text-wrapper\": {\n            \":root\": {\n              backgroundColor: \"#181818\",\n              color:", "CodeBleu_score": 18.83935295542347}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren)  return (\n    <ClerkProvider\n      appearance={{\n        baseTheme: \"dark\",\n        variables: {\n          colorPrimary: \"#121212\",\n        },\n        elements: {\n          button: {\n            backgroundColor: \"#121212\",\n          },\n          input: {\n            backgroundColor: \"#121212\",\n          },\n        },\n      }}\n    >\n      <TRPCReactProvider>{children}</TRPCReactProvider>\n    </ClerkProvider>\n  );\n}\n", "CodeBleu_score": 42.23312721361804}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren)  return (\n    <ClerkProvider\n      appearance={{\n        baseTheme: \"dark\",\n        variables: {\n          colorPrimary: \"#0070f3\",\n          colorText: \"#fff\",\n          colorTextSecondary: \"#b3b3b3\",\n          colorBackground: \"#111\",\n          colorBackgroundSecondary: \"#222\",\n          colorBackgroundTertiary: \"#333\",\n          colorBorder: \"#444\",\n          colorBorderSecondary: \"#555\",\n          colorBorderTertiary: \"#666\",\n          colorBorderQuaternary: \"#777\",\n          colorBorderQuinary: \"#888\",\n          colorBorderSenary: \"#999\",\n          colorBorderSeptenary: \"#aaa\",\n          colorBorderOctonary: \"#bbb\",\n          colorBorderNonary: \"#ccc\",\n          colorBorderDenary: \"#ddd\",\n          colorBorderDuodecimal: \"#eee\",\n          colorBorderTredecimal: \"#fff\",\n          colorBorderQuattuordecimal: \"#000\",\n          colorBorderQuindecimal: \"#111\",\n          colorBorderSexdecimal: \"#222\",\n          colorBorderSeptendecimal: \"#333\",\n          colorBorderOctodecimal: \"#444\",\n          colorBorderNovemdecimal: \"#555\",\n          colorBorderVigesimdecimal: \"#666\",\n          colorBorderUnsexdecimal: \"#777\",\n          colorBorderDuodecimaldecimal: \"#888\",\n          colorBorderTredecimaldecimal: \"#999\",\n          colorBorderQuattuordecimaldecimal: \"#aaa\",\n          colorBorderQuindecimaldecimal: \"#bbb\",\n          colorBorderSexdecimaldecimal: \"#ccc\",\n          colorBorderSeptendecimaldecimal: \"#ddd\",\n          colorBorderOctodecimaldecimal: \"#eee\",\n          colorBorderNovemdecimaldecimal: \"#fff\",\n          colorBorderVigesimdecimaldecimal: \"#000\",\n          colorBorderUnsexdecimaldecimal:", "CodeBleu_score": 15.97662458078547}]}
{"instance_id": "0ba912ee94c7", "generation_result": [{"code": "export function ActiveButton({ href, label, icon }: Props)  const { pathname } = useRouter();\n  const isActive = pathname === href;\n\n  return (\n    <button\n      className={`${\n        isActive ? \"bg-gray-900 text-white\" : \"text-gray-300 hover:bg-gray-700\"\n      } group flex w-full items-center rounded-md px-2 py-2 text-sm font-medium`}\n    >\n      <Link href={href}>\n        <a className=\"flex w-full items-center text-current\">\n          {icon}\n          <span className=\"truncate\">{label}</span>\n        </a>\n      </Link>\n    </button>\n  );\n}\n", "CodeBleu_score": 44.012937958525434}, {"code": "export function ActiveButton({ href, label, icon }: Props)  const { pathname } = useRouter();\n  const isActive = pathname === href;\n\n  return (\n    <button\n      className={`${isActive ? 'bg-gray-200' : ''} group flex items-center px-2 py-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700`}\n    >\n      <Link href={href}>\n        <a className=\"flex items-center\">\n          {icon}\n          <span\n            className={`${\n              isActive ? 'font-medium' : 'font-normal'\n            } ml-3 truncate`}\n          >\n            {label}\n          </span>\n        </a>\n      </Link>\n    </button>\n  );\n}\n", "CodeBleu_score": 41.31405315925585}, {"code": "export function ActiveButton({ href, label, icon }: Props)  const { pathname } = useRouter();\n  const isActive = pathname === href;\n\n  return (\n    <Button\n      variant=\"ghost\"\n      className={`${isActive ? \"bg-gray-100 text-gray-900\" : \"\"}`}\n    >\n      <Link href={href} className=\"flex items-center\">\n        {icon}\n        <span className=\"ml-2\">\n          {label}\n        </span>\n      </Link>\n    </Button>\n  );\n}\n", "CodeBleu_score": 55.54930690765859}]}
{"instance_id": "1fd5b7fdcc9b", "generation_result": [{"code": "export default function RootLayout({ children }: PropsWithChildren)     return (\n        <html lang=\"en\" suppressHydrationWarning>\n            <body className=\"bg-white dark:bg-slate-900 text-black dark:text-white\">\n                <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n                    {children}\n                    <Toaster />\n                    <Analytics />\n                    <SpeedInsights />\n                </ThemeProvider>\n            </body>\n        </html>\n    );\n}", "CodeBleu_score": 44.508588913579636}, {"code": "export default function RootLayout({ children }: PropsWithChildren)   return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <head />\n      <body className=\"bg-white dark:bg-gray-900\">\n        <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n          <Toaster />\n          <Analytics />\n          <SpeedInsights />\n          {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n", "CodeBleu_score": 42.383976473679596}, {"code": "export default function RootLayout({ children }: PropsWithChildren)   return (\n    <html lang=\"en\">\n      <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta name=\"description\" content=\"A blog about my experiences as a developer.\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </head>\n      <body className=\"bg-white text-black dark:bg-black dark:text-white\" suppressHydrationWarning>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n          {children}\n          <Toaster />\n          <Analytics />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n", "CodeBleu_score": 39.03314681550991}]}
{"instance_id": "390ef9405b57", "generation_result": [{"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps)  return (\n    <a\n      className={twMerge(\n        cn(\n          \"inline-block rounded-md border font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n          {\n            \"bg-primary-600 text-primary-50 hover:bg-primary-700 active:bg-primary-800 focus-visible:ring-primary-600 dark:bg-primary-400 dark:hover:bg-primary-300 dark:active:bg-primary-200 dark:focus-visible:ring-primary-400\":\n              intent === \"primary\",\n            \"bg-secondary-600 text-secondary-50 hover:bg-secondary-700 active:bg-secondary-800 focus-visible:ring-secondary-600 dark:bg-secondary-400 dark:hover:bg-secondary-300 dark:active:bg-secondary-200 dark:focus-visible:ring-secondary-400\":\n              intent === \"secondary\",\n            \"bg-accent-600 text-accent-50 hover:bg-accent-700 active:bg-accent-800 focus-visible:ring-accent-600 dark:bg-accent-400 dark:hover:bg-accent-300 dark:active:bg-accent-200 dark:focus-visible:ring-accent-400\":\n              intent === \"accent\",\n            \"bg-success-600 text-success-50 hover:bg-success-700 active:bg-success-800 focus-visible:ring-success-600 dark:bg-success-400 dark:hover:bg-success-300 dark:active:bg-success-200 dark:focus-visible:ring-success-400\":\n              intent === \"success\",\n            \"bg-warning-600 text-warning-50 hover:bg-warning-7", "CodeBleu_score": 9.226577546933603}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps)  return (\n    <a\n      className={twMerge(\n        'inline-flex items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n        className,\n        {\n          'bg-blue-600 hover:bg-blue-700 focus:ring-blue-500': intent === 'primary',\n          'bg-white hover:bg-gray-50 focus:ring-gray-500': intent === 'secondary',\n          'text-sm px-3 py-2': size === 'sm',\n          'text-base px-4 py-2': size === 'md',\n          'text-sm px-4 py-2': size === 'lg',\n          'underline': underline,\n        },\n      )}\n      {...props}\n    />\n  );\n}\n", "CodeBleu_score": 11.50199194443036}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps)  return (\n    <a\n      className={twMerge(\n        'inline-flex items-center gap-1.5 rounded-md border border-transparent font-medium leading-5 transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2',\n        {\n          'text-blue-600 hover:bg-blue-50 focus:ring-blue-500 dark:text-blue-400 dark:hover:bg-blue-900 dark:focus:ring-blue-900':\n            intent === 'primary',\n          'text-gray-500 hover:bg-gray-50 focus:ring-gray-500 dark:text-gray-400 dark:hover:bg-gray-900 dark:focus:ring-gray-900':\n            intent === 'secondary',\n          'text-red-600 hover:bg-red-50 focus:ring-red-500 dark:text-red-400 dark:hover:bg-red-900 dark:focus:ring-red-900':\n            intent === 'danger',\n          'text-gray-900 hover:bg-gray-100 focus:ring-gray-100 dark:text-gray-100 dark:hover:bg-gray-800 dark:focus:ring-gray-800':\n            intent === 'ghost',\n          'text-gray-900 hover:bg-gray-100 focus:ring-gray-100 dark:text-gray-100 dark:hover:bg-gray-800 dark:focus:ring-gray-800':\n            intent === 'link',\n          'text-gray-900 hover:bg-gray-100 focus:ring-gray-100 dark:text-gray-100 dark:hover:bg-gray-800 dark:focus:ring-gray-800':\n            intent === 'subtle',\n          'text-gray-900 hover:bg-gray-100 focus:ring-gray-", "CodeBleu_score": 9.339050754075188}]}
{"instance_id": "aa655671cb7e", "generation_result": [{"code": "export function middleware(request: NextRequest)  if (request.nextUrl.host === 'next-enterprise.vercel.app') {\n    return NextResponse.redirect(\n      'https://blazity.com/open-source/nextjs-enterprise-boilerplate',\n      301\n    )\n  }\n}\n", "CodeBleu_score": 26.914221265018558}, {"code": "export function middleware(request: NextRequest)  if (request.nextUrl.host === 'next-enterprise.vercel.app') {\n    return NextResponse.redirect(\n      new URL('https://blazity.com/open-source/nextjs-enterprise-boilerplate', request.url),\n      301\n    )\n  }\n}\n", "CodeBleu_score": 26.41543279822867}, {"code": "export function middleware(request: NextRequest)  if (request.nextUrl.host === 'next-enterprise.vercel.app') {\n    return NextResponse.redirect(\n      new URL('https://blazity.com/open-source/nextjs-enterprise-boilerplate', request.url),\n      301\n    );\n  }\n}\n", "CodeBleu_score": 26.236876603365566}]}
{"instance_id": "b33fa69187fb", "generation_result": [{"code": "app.lazyrouter = function lazyrouter()    if (!app.router) {\n        app.router = express.Router({\n            caseSensitive: app.config.router.caseSensitive,\n            strict: app.config.router.strict\n        });\n\n        app.router.use(app.config.router.queryParser);\n        app.router.use(app.config.router.initialize);\n    }\n};\n", "CodeBleu_score": 15.046530917862821}, {"code": "app.lazyrouter = function lazyrouter()  if (app.router) {\n    return app.router;\n  }\n  app.router = express.Router({\n    caseSensitive: app.config.router.caseSensitive,\n    strict: app.config.router.strict\n  });\n  app.router.use(app.config.router.queryParser);\n  app.router.use(app.config.router.init);\n  return app.router;\n};\n", "CodeBleu_score": 14.106974634987363}, {"code": "app.lazyrouter = function lazyrouter()    if (app.router) {\n        return app.router;\n    }\n\n    app.router = express.Router();\n\n    app.router.use(express.urlencoded({\n        extended: true\n    }));\n\n    app.router.use(express.json());\n\n    app.router.use(function (req, res, next) {\n        res.setHeader('Access-Control-Allow-Origin', '*');\n        res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\n        res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type,Authorization');\n        next();\n    });\n\n    app.router.use(query());\n\n    app.router.use(function (req, res, next) {\n        if (req.method === 'GET' && req.path === '/') {\n            res.send('Hello World');\n        } else {\n            next();\n        }\n    });\n\n    return app.router;\n};", "CodeBleu_score": 9.998049728200709}]}
{"instance_id": "7aadf79801c0", "generation_result": [{"code": "function createApplication()  const app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(EventEmitter.prototype, app, false);\n\n  app.init();\n\n  return app;\n}\n", "CodeBleu_score": 23.063134357810682}, {"code": "function createApplication()    var app = function(req, res, next) {\n        app.handle(req, res, next);\n    };\n    utils.merge(app, EventEmitter.prototype);\n    utils.merge(app, proto);\n    app.init();\n    return app;\n}\n", "CodeBleu_score": 28.024781060184566}, {"code": "function createApplication()  function app(req, res, next) {\n    app.handle(req, res, next);\n  }\n\n  utils.inherits(app, EventEmitter);\n\n  mixin(app.prototype,\n    proto,\n    EventEmitter.prototype,\n    req.prototype,\n    res.prototype\n  );\n\n  app.init();\n\n  return app;\n}\n", "CodeBleu_score": 26.721523429283216}]}
{"instance_id": "2b4af4a14e81", "generation_result": [{"code": "res.sendFile = function sendFile(path, options, callback)   if (typeof path !== 'string') {\n    throw new TypeError('path must be a string');\n  }\n\n  options = options || {};\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if (typeof options.root !== 'string') {\n    options.root = process.cwd();\n  }\n\n  if (typeof options.dotfiles !== 'boolean') {\n    options.dotfiles = false;\n  }\n\n  if (typeof options.maxAge !== 'number') {\n    options.maxAge = 0;\n  }\n\n  if (typeof options.index !== 'boolean') {\n    options.index = true;\n  }\n\n  if (typeof options.index !== 'string') {\n    options.index = 'index.html';\n  }\n\n  if (typeof options.root !== 'string') {\n    throw new TypeError('root option must be a string');\n  }\n\n  if (!path.startsWith('/')) {\n    path = '/' + path;\n  }\n\n  if (path.startsWith('//')) {\n    path = path.substring(1);\n  }\n\n  path = path.replace(/\\/+/g, '/');\n\n  if (path.endsWith('/')) {\n    path = path.substring(0, path.length - 1);\n  }\n\n  if (path.startsWith('/')) {\n    path = path.substring(1);\n  }\n\n  if (path.startsWith('./')) {\n    path = path.substring(2);\n  }\n\n  if (path.startsWith('../')) {\n    path = path.substring(3);\n  }\n\n  if (path.startsWith('..')) {\n    throw new Error('Invalid path');\n  }\n\n  if (path.startsWith('.')) {\n    throw new Error('Invalid path');\n  }\n\n  if (path.endsWith('/')) {\n    path = path.substring(0, path.length - 1);\n  }\n\n  if (path", "CodeBleu_score": 30.544432797969268}, {"code": "res.sendFile = function sendFile(path, options, callback)     if (typeof path !== 'string') {\n        throw new TypeError('path must be a string');\n    }\n\n    if (typeof options === 'function') {\n        callback = options;\n        options = {};\n    } else if (typeof options === 'object') {\n        options = options || {};\n    } else {\n        options = {};\n    }\n\n    if (typeof options.root !== 'string') {\n        options.root = process.cwd();\n    }\n\n    if (typeof options.dotfiles !== 'boolean') {\n        options.dotfiles = false;\n    }\n\n    if (typeof options.maxAge !== 'number') {\n        options.maxAge = 0;\n    }\n\n    if (typeof options.index !== 'boolean') {\n        options.index = true;\n    }\n\n    if (typeof options.lastModified !== 'boolean') {\n        options.lastModified = true;\n    }\n\n    if (typeof options.headers !== 'object') {\n        options.headers = {};\n    }\n\n    if (typeof options.root !== 'string') {\n        throw new TypeError('root must be a string');\n    }\n\n    if (!path.startsWith('/')) {\n        path = '/' + path;\n    }\n\n    if (typeof options.root === 'string') {\n        path = path.replace(options.root, '');\n    }\n\n    if (path.startsWith('//')) {\n        path = path.substring(1);\n    }\n\n    if (path.startsWith('/')) {\n        path = path.substring(1);\n    }\n\n    if (path.endsWith('/')) {\n        path = path.substring(0, path.length - 1);\n    }\n\n    if (path.startsWith('./')) {\n        path = path.substring(2);\n    }\n\n    if (path.startsWith('../')) {\n        path = path.substring(3);\n    }\n\n    if (path.startsWith('..')) {\n        path = path.substring(2);\n    }\n\n", "CodeBleu_score": 28.221673868085944}, {"code": "res.sendFile = function sendFile(path, options, callback)   if (typeof path !== 'string') {\n    throw new TypeError('path must be a string');\n  }\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (typeof options.root !== 'string' && !options.root) {\n    throw new TypeError('root option must be a string or an option object');\n  }\n\n  if (typeof options.root === 'string') {\n    path = path.replace(options.root, '');\n  }\n\n  if (path[0] !== '/') {\n    path = '/' + path;\n  }\n\n  var root = options.root || process.cwd();\n\n  var file = path.replace(/\\.\\./g, '');\n  file = path.join(root, file);\n\n  var stat = fs.statSync(file);\n  if (stat.isDirectory()) {\n    file = path.join(file, 'index.html');\n    stat = fs.statSync(file);\n  }\n\n  if (stat.isFile()) {\n    var stream = fs.createReadStream(file);\n    stream.on('error', function(err) {\n      if (err.code === 'ENOENT') {\n        return next();\n      }\n      next(err);\n    });\n    stream.pipe(this);\n    return;\n  }\n\n  if (typeof callback === 'function') {\n    callback(new Error('ENOENT'));\n  }\n};\n", "CodeBleu_score": 49.15143282437481}]}
{"instance_id": "24ba2258749d", "generation_result": [{"code": "View.prototype.lookup = function lookup(name)  var roots = this.roots;\n  var len = roots.length;\n  var path;\n  var dir;\n  var file;\n\n  for (var i = 0; i < len; i++) {\n    path = resolve(roots[i], name);\n    dir = dirname(path);\n    file = basename(path);\n    if (existsSync(path)) {\n      return {\n        path: path,\n        dir: dir,\n        file: file\n      };\n    }\n  }\n};", "CodeBleu_score": 36.52122025542343}, {"code": "View.prototype.lookup = function lookup(name)  var root = this.root;\n  var path = '';\n  var dir = '';\n  var file = '';\n  var ext = '';\n  var i = 0;\n\n  // resolve the file path\n  while (true) {\n    // resolve the path\n    if (root[i] === '/') {\n      path += '/';\n    }\n\n    // resolve the directory\n    dir = path + root[i];\n\n    // resolve the file name\n    if (name[0] === '.') {\n      file = name.slice(1);\n    } else {\n      file = name;\n    }\n\n    // resolve the extension\n    ext = this.extname(file);\n    if (!ext && this.defaultExtension) {\n      file += this.defaultExtension;\n      ext = this.extname(file);\n    }\n\n    if (ext) {\n      file = file.slice(0, -ext.length);\n    }\n\n    // resolve the file path\n    var filepath = dir + '/' + file;\n\n    // if the file exists, return the file path\n    if (this.exists(filepath)) {\n      return filepath;\n    }\n\n    // if we've reached the end of the root directories, return null\n    if (i === root.length - 1) {\n      return null;\n    }\n\n    // move to the next root directory\n    i++;\n  }\n};\n", "CodeBleu_score": 23.031703942055636}, {"code": "View.prototype.lookup = function lookup(name)  var roots = this.roots;\n  var len = roots.length;\n  var i = 0;\n  var path;\n\n  while (i < len) {\n    path = resolve(roots[i], name);\n    if (exists(path)) {\n      return path;\n    }\n    i++;\n  }\n};\n", "CodeBleu_score": 26.612056606609038}]}
{"instance_id": "4a3a45242878", "generation_result": [{"code": "module.exports = function query(options)  options = options || {};\n  var parse = options.parse || parseQuery;\n  var strict = options.strict === undefined ? true : !!options.strict;\n  var param = options.param || 'query';\n  var inflate = options.inflate === undefined ? true : !!options.inflate;\n  var depth = options.depth === undefined ? 5 : options.depth;\n  var encode = options.encode || decodeURIComponent;\n  var decode = options.decode || decodeURIComponent;\n  var useQuerystring = options.useQuerystring === undefined ? true : !!options.useQuerystring;\n\n  return function query(req, res, next) {\n    if (req._parsedUrl) return next();\n\n    var query = parse(req.url, parse, strict, param, inflate, depth, encode, decode);\n    if (useQuerystring && typeof req.query === 'object' && !req.query.hasOwnProperty(param)) {\n      req.query = query;\n    } else {\n      req[param] = query;\n    }\n\n    next();\n  };\n};\n", "CodeBleu_score": 31.68850298579231}, {"code": "module.exports = function query(options)  options = options || {};\n  var parser = options.parser || qs.parse;\n  var inflate = options.inflate !== false;\n  var strictNullHandling = !!options.strictNullHandling;\n  var parseOptions = {\n    decoder: options.decoder || null,\n    parameterLimit: options.parameterLimit || 1000,\n    allowDots: options.allowDots !== false,\n    depth: options.depth || null,\n    arrayLimit: options.arrayLimit || null,\n    plainObjects: options.plainObjects !== false\n  };\n  if (strictNullHandling) {\n    parseOptions.nulls = \"strict\";\n  }\n  return function query(req, res, next) {\n    var val = req.query;\n    if (val === undefined || val === null) {\n      var query = req._query;\n      if (query === undefined) {\n        query = req.query = {};\n        var q = parser(req._parsedUrl.query, parseOptions);\n        if (inflate) {\n          for (var key in q) {\n            var val = q[key];\n            if (Array.isArray(val)) {\n              val = val.map(decodeURIComponent);\n            } else if (val != null) {\n              val = decodeURIComponent(val);\n            }\n            q[key] = val;\n          }\n        }\n        req._query = query = q;\n      }\n      return next();\n    }\n    if (val !== query) {\n      req.query = query = val;\n    }\n    next();\n  };\n};\n", "CodeBleu_score": 33.91695370549319}, {"code": "module.exports = function query(options)  options = options || {};\n  var parser = options.parser || decodeURIComponent;\n  var propName = options.propName || 'query';\n  var allowPrototypes = options.allowPrototypes;\n\n  return function query(req, res, next) {\n    var query = req.url.split('?', 2)[1];\n    if (!query) return next();\n    req[propName] = {};\n    query.split('&').forEach(function(part) {\n      var eq_i = part.indexOf('=');\n      if (eq_i < 0) {\n        req[propName][part] = parser(part);\n      } else {\n        var key = part.slice(0, eq_i);\n        var val = part.slice(eq_i + 1);\n        req[propName][key] = parser(val);\n      }\n    });\n    if (allowPrototypes) {\n      Object.defineProperty(req, propName, {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n          return req[propName];\n        }\n      });\n    }\n    next();\n  };\n};\n", "CodeBleu_score": 37.207146460305424}]}
{"instance_id": "786ae7051b03", "generation_result": [{"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>    return (\n        <FrameworkProvider framework={framework}>\n            <RoutingProvider basePath=\"activitypub\" modals={modals}>\n                <DesignSystemApp className={designSystem}>\n                    <AppContent />\n                </DesignSystemApp>\n            </RoutingProvider>\n        </FrameworkProvider>\n    );\n};\n", "CodeBleu_score": 51.523048093303935}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>    return (\n        <FrameworkProvider framework={framework}>\n            <RoutingProvider basePath='activitypub' modals={['Modal', 'ModalWithHeader', 'ModalWithHeaderAndFooter']}>\n                <DesignSystemApp className={designSystem}>\n                    <Outlet />\n                </DesignSystemApp>\n            </RoutingProvider>\n        </FrameworkProvider>\n    )\n}\n", "CodeBleu_score": 39.454264727439934}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basePath=\"/activitypub\" modals={modals}>\n        <DesignSystemApp className={designSystem}>\n          <Outlet />\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n};\n", "CodeBleu_score": 47.073140755719756}]}
{"instance_id": "8100930f7ce7", "generation_result": [{"code": "const darkMode = () =>    const colorScheme = window.getComputedStyle(document.body).getPropertyValue('color-scheme');\n    if (colorScheme === 'light') {\n        return false;\n    }\n    else if (colorScheme === 'dark') {\n        return true;\n    }\n    else {\n        const backgroundColor = window.getComputedStyle(document.body).getPropertyValue('background-color');\n        const luminance = window.tinycolor(backgroundColor).getLuminance();\n        return luminance < 0.5;\n    }\n};", "CodeBleu_score": 32.35454716721092}, {"code": "const darkMode = () =>    let colorScheme = window.matchMedia('(prefers-color-scheme: dark)');\n    if (colorScheme.matches) {\n        return true;\n    } else {\n        let parent = document.getElementById('root').parentElement;\n        let parentStyle = getComputedStyle(parent);\n        let parentBackground = parentStyle.getPropertyValue('background-color');\n        let contrast = window.getComputedStyle(parent, ':before').getPropertyValue('content').replace(/['\"]+/g, '');\n        return contrast < 5;\n    }\n};\n", "CodeBleu_score": 26.9641883268115}, {"code": "const darkMode = () =>  if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return true;\n  } else if (window.matchMedia('(prefers-color-scheme: light)').matches) {\n    return false;\n  } else {\n    const color = window.getComputedStyle(document.body).backgroundColor;\n    const luminance = colorToLuminance(color);\n    return luminance < 0.5;\n  }\n};\n", "CodeBleu_score": 22.313350780709527}]}
{"instance_id": "7da55fac8ceb", "generation_result": [{"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>    if (!title && !showCount) return null\n\n    return (\n        <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-xl font-bold\">{title}</h2>\n            {showCount && (\n                <span className=\"text-sm text-gray-500\">{count}</span>\n            )}\n        </div>\n    )\n}\n", "CodeBleu_score": 29.37406675641863}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>    if (!title && !showCount) return null;\n\n    return (\n        <div className=\"content-title\">\n            <h2>{title}</h2>\n            {showCount && <span className=\"count\">{count}</span>}\n        </div>\n    );\n};\n", "CodeBleu_score": 23.82867655135577}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>    if (!title && !showCount) return null;\n\n    return (\n        <div className=\"content-title\">\n            {title && <h3>{title}</h3>}\n            {showCount && <span>{count}</span>}\n        </div>\n    );\n};\n", "CodeBleu_score": 22.649230439248427}]}
{"instance_id": "1d104e0b7fc7", "generation_result": [{"code": "def union_queryset(*args, base_queryset=None)\n    if not args:\n        raise ValueError(\"At least one queryset is required\")\n    if len(args) == 1:\n        return args[0]\n    querysets = [qs.order_by(\"id\") for qs in args]\n    union_qs = querysets[0]\n    for qs in querysets[1:]:\n        union_qs = union_qs | qs\n    ids = union_qs.values_list(\"id\", flat=True)\n    if base_queryset is not None:\n        return base_queryset.filter(id__in=ids)\n    return queryset.filter(id__in=ids)", "CodeBleu_score": 45.91959099723155}, {"code": "def union_queryset(*args, base_queryset=None)\n    querysets = [qs for qs in args if qs is not None]\n    if not querysets:\n        raise ValueError(\"At least one queryset must be provided\")\n    if len(querysets) == 1:\n        return querysets[0]\n    base_queryset = base_queryset or querysets[0].model.objects.all()\n    queryset_ids = set()\n    for qs in querysets:\n        qs = qs.order_by(\"pk\")\n        queryset_ids.update(qs.values_list(\"pk\", flat=True))\n    return base_queryset.filter(pk__in=queryset_ids)", "CodeBleu_score": 33.098154309351266}, {"code": "def union_queryset(*args, base_queryset=None)\n    if base_queryset is None:\n        base_queryset = args[0].model.objects\n    if len(args) == 1:\n        return args[0]\n    if len(args) == 0:\n        raise ValueError(\"No querysets provided\")\n    querysets = list(args)\n    querysets.sort(key=lambda x: x.model._meta.db_table)\n    querysets_ids = []\n    for queryset in querysets:\n        queryset = queryset.order_by(\"id\")\n        querysets_ids.append(queryset.values_list(\"id\", flat=True))\n    combined_ids = set.union(*querysets_ids)\n    return base_queryset.filter(id__in=combined_ids)", "CodeBleu_score": 46.412265043478584}]}
{"instance_id": "96fe55f8e114", "generation_result": [{"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n    if not ids:\n        return\n    if not action:\n        return\n    if not model:\n        model = self._get_model_from_action(action)\n    if not model:\n        return\n    self.env.cr.execute(\n        \"SELECT res_id, res_name FROM ir_model_data WHERE module = %s AND name = %s\",\n        (model._name, action),\n    )\n    res_id, res_name = self.env.cr.fetchone()\n    if not res_id:\n        return\n    if not res_name:\n        return\n    self.env.cr.execute(\n        \"SELECT id FROM res_users WHERE id = %s\",\n        (self.env.uid,),\n    )\n    user_id = self.env.cr.fetchone()\n    if not user_id:\n        return\n    self.env.cr.execute(\n        \"SELECT id FROM res_partner WHERE id = %s\",\n        (self.env.user.partner_id.id,),\n    )\n    partner_id = self.env.cr.fetchone()\n    if not partner_id:\n        return\n    self.env.cr.execute(\n        \"SELECT id FROM res_company WHERE id = %s\",\n        (self.env.user.company_id.id,),\n    )\n    company_id = self.env.cr.fetchone()\n    if not company_id:\n        return\n    self.env.cr.execute(\n        \"SELECT id FROM ir_translation WHERE src = %s\",\n        (res_name,),\n    )\n    translation_id = self.env.cr.fetchone()\n    if not translation_id:\n        return\n    self.env.cr.execute(\n        \"SELECT id FROM ir_model_data WHERE module = %s AND name = %s\",\n        (model._name, action),\n    )\n    operation_id = self.env.cr.fetchone()\n    if not operation_id:\n        return\n    activity_logs = []\n    for id in ids:\n        activity_logs.append(\n            {\n                \"activity_", "CodeBleu_score": 31.513968625806477}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n    lang = get_language()\n    set_language('en')\n    resource_type = model._meta.label_lower\n    set_language(lang)\n    for id in ids:\n        operation_log, _ = OperationLog.objects.get_or_create(\n            action=action,\n            resource_id=id,\n            resource_type=resource_type,\n            defaults={\n                'organization': kwargs.get('organization'),\n                'user': kwargs.get('user'),\n                'ip_address': kwargs.get('ip_address'),\n                'user_agent': kwargs.get('user_agent'),\n                'extra': kwargs.get('extra'),\n            }\n        )\n        operation_log.details.append(detail)\n        operation_log.save()\n        activity_logs = [\n            ActivityLog(\n                operation_log=operation_log,\n                user=kwargs.get('user'),\n                organization=kwargs.get('organization'),\n                ip_address=kwargs.get('ip_address'),\n                user_agent=kwargs.get('user_agent'),\n                extra=kwargs.get('extra'),\n                **kwargs\n            )\n        ]\n        ActivityLog.objects.bulk_create(activity_logs)", "CodeBleu_score": 28.798836060602056}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n    if not ids:\n        return\n    if not model:\n        model = self.env.get(self.model)\n    if not model:\n        raise UserError(_(\"No model found for %s\") % self.model)\n    if not action:\n        raise UserError(_(\"No action found for %s\") % self.model)\n    lang = self.env.lang\n    self.env.lang = 'en_US'\n    resource_type = model._name\n    for id in ids:\n        if not id:\n            continue\n        log_vals = {\n            'action': action,\n            'resource_type': resource_type,\n            'resource_id': id,\n            'details': detail,\n        }\n        log_vals.update(kwargs)\n        log = self.env['activity.log'].create(log_vals)\n        log.activity_log_ids = [(0, 0, {\n            'user_id': self.env.user.id,\n            'date_created': fields.Datetime.now(),\n        })]\n    self.env.lang = lang", "CodeBleu_score": 38.1468373233684}]}
{"instance_id": "9e851c424f45", "generation_result": [{"code": "def prepare_django_request(self, request)\n    return {\n        \"secure\": request.is_secure(),\n        \"http_host\": request.get_host(),\n        \"script_name\": request.META[\"SCRIPT_NAME\"],\n        \"get\": request.GET.copy(),\n        \"post\": request.POST.copy(),\n    }", "CodeBleu_score": 37.353307668778925}, {"code": "def prepare_django_request(self, request)\n    return {\n        'secure': request.is_secure(),\n        'host': request.get_host(),\n        'script_name': request.get_full_path(),\n        'get': request.GET.copy(),\n        'post': request.POST.copy()\n    }", "CodeBleu_score": 35.84731039848232}, {"code": "def prepare_django_request(self, request)\n    return {\n        \"is_secure\": request.is_secure(),\n        \"http_host\": request.get_host(),\n        \"script_name\": request.META[\"PATH_INFO\"],\n        \"get\": request.GET.dict(),\n        \"post\": request.POST.dict()\n    }", "CodeBleu_score": 37.08196814689775}]}
{"instance_id": "dcea4bd482c4", "generation_result": [{"code": "function getUserLang()     var userLang = 'zh-CN';\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        if (cookie.indexOf('django_language=en') === 0) {\n            userLang = 'en-US';\n            break;\n        }\n    }\n    return userLang;\n}\n", "CodeBleu_score": 43.88547112249574}, {"code": "function getUserLang()     const cookies = document.cookie.split(';');\n    const djangoLang = cookies.find(cookie => cookie.trim().startsWith('django_language='));\n    return djangoLang ? 'en-US' : 'zh-CN';\n}\n", "CodeBleu_score": 20.694423144579087}, {"code": "function getUserLang()     var lang = 'zh-CN';\n    var cookies = document.cookie.split('; ');\n    for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        if (parts[0] === 'django_language' && parts[1] === 'en') {\n            lang = 'en-US';\n            break;\n        }\n    }\n    return lang;\n}\n", "CodeBleu_score": 42.145805781101245}]}
{"instance_id": "fd6824a005d5", "generation_result": [{"code": "function reloadPage()    setTimeout(function() {\n        window.location.reload(1);\n    }, 300);\n}\n", "CodeBleu_score": 33.107937869126104}, {"code": "function reloadPage()    setTimeout(function() {\n        location.reload();\n    }, 300);\n}", "CodeBleu_score": 30.70349790518623}, {"code": "function reloadPage()    setTimeout(function() {\n        location.reload();\n    }, 300);\n}\n", "CodeBleu_score": 30.70349790518623}]}
{"instance_id": "b32d5862b6b1", "generation_result": [{"code": "function fillKey(key)    if (key.length > 16) {\n        return key.slice(0, 16);\n    }\n    const filledKey = Buffer.alloc(16);\n    key.copy(filledKey);\n    return filledKey;\n}\n", "CodeBleu_score": 24.800768069806452}, {"code": "function fillKey(key)    const keyBuffer = Buffer.alloc(16);\n    keyBuffer.fill(0);\n    key.copy(keyBuffer, 0, 0, Math.min(key.length, keyBuffer.length));\n    return keyBuffer;\n}", "CodeBleu_score": 12.819686391945408}, {"code": "function fillKey(key)  var buffer = Buffer.alloc(16);\n  buffer.fill(key);\n  return buffer;\n}\n", "CodeBleu_score": 9.812739882919102}]}
{"instance_id": "c839d19e0833", "generation_result": [{"code": "function rsaEncrypt(text, pubKey)    if (text.length === 0) {\n        return text;\n    }\n    var encrypt = new JSEncrypt();\n    encrypt.setPublicKey(pubKey);\n    return encrypt.encrypt(text);\n}\n", "CodeBleu_score": 51.878264880593505}, {"code": "function rsaEncrypt(text, pubKey)  if (text.length === 0) {\n    return text;\n  }\n  let encrypt = new JSEncrypt();\n  encrypt.setPublicKey(pubKey);\n  return encrypt.encrypt(text);\n}\n", "CodeBleu_score": 51.02717120535135}, {"code": "function rsaEncrypt(text, pubKey)  if (text === \"\") {\n    return text;\n  }\n  const encryptor = new JSEncrypt();\n  encryptor.setPublicKey(pubKey);\n  return encryptor.encrypt(text);\n}\n", "CodeBleu_score": 51.41125881548814}]}
{"instance_id": "c73bc91399b9", "generation_result": [{"code": "function checkAll(id, name)    var checkboxes = document.getElementsByName(name);\n    for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = document.getElementById(id).checked;\n    }\n}\n", "CodeBleu_score": 33.79167419798528}, {"code": "function checkAll(id, name)    var checkboxes = document.getElementsByName(name);\n    var masterCheckbox = document.getElementById(id);\n\n    for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = masterCheckbox.checked;\n    }\n}\n", "CodeBleu_score": 33.166004099662004}, {"code": "function checkAll(id, name)    var checkboxes = document.getElementsByName(name);\n    for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = document.getElementById(id).checked;\n    }\n}", "CodeBleu_score": 33.79167419798528}]}
{"instance_id": "5164f2c2d67e", "generation_result": [{"code": "function getCookie(name)  const cookies = document.cookie.split(';');\n\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    if (cookie.startsWith(`${name}=`)) {\n      return decodeURIComponent(cookie.substring(name.length + 1));\n    }\n  }\n\n  return null;\n}\n", "CodeBleu_score": 27.575354077935856}, {"code": "function getCookie(name)  if (document.cookie) {\n    const cookies = document.cookie.split(\";\");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith(name + \"=\")) {\n        return decodeURIComponent(cookie.substring(name.length + 1));\n      }\n    }\n  }\n  return null;\n}\n", "CodeBleu_score": 40.28989769053492}, {"code": "function getCookie(name)  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    if (cookie.startsWith(name + '=')) {\n      return decodeURIComponent(cookie.substring(name.length + 1));\n    }\n  }\n  return null;\n}\n", "CodeBleu_score": 28.832752561643293}]}
{"instance_id": "7ce6dc0f1f24", "generation_result": [{"code": "def post(self, request)\n    image_model = self.get_object()\n    creation_form = ImageCreationForm(request.POST, request.FILES)\n    if creation_form.is_valid():\n        image = creation_form.save(commit=False)\n        image.image_model = image_model\n        image.save()\n        if 'format' in request.POST:\n            return render(request, 'image_creation_form.html', {'image_model': image_model, 'image': image, 'form': creation_form})\n        else:\n            return JsonResponse({'id': image.id, 'name': image.name, 'image_url': image.image_url})\n    else:\n        return render(request, 'image_creation_form.html', {'image_model': image_model, 'form': creation_form})", "CodeBleu_score": 21.439083895694516}, {"code": "def post(self, request)\n    image_model = Image\n    image_form = ImageForm(request.POST, request.FILES)\n    if image_form.is_valid():\n        image = image_form.save(commit=False)\n        image.save()\n        if 'format' in request.POST:\n            return render(request, 'image_format_selection.html', {'image': image})\n        else:\n            return JsonResponse({'id': image.id, 'url': image.image.url})\n    else:\n        return HttpResponse(image_form.errors.as_json(), status=400)", "CodeBleu_score": 18.215737598997126}, {"code": "def post(self, request)\n    image_model = self.get_image_model()\n    image_form = self.get_image_form(request)\n    if image_form.is_valid():\n        image = image_form.save()\n        if image_form.cleaned_data.get('format_selection'):\n            return self.render_format_selection(request, image)\n        else:\n            return self.get_image_details(image)\n    else:\n        return self.render_image_form(request, image_form)", "CodeBleu_score": 20.273746658487816}]}
{"instance_id": "2ee66e343cd1", "generation_result": [{"code": "def _annotate_queryset(self, pages)\n    # Prefetch related content types\n    pages = pages.prefetch_related(\"content_type\")\n\n    # Prefetch related site roots\n    pages = pages.prefetch_related(\"site_root\")\n\n    # Filter pages by permissions\n    pages = pages.filter(\n        Q(\n            **self.get_explorable_pages_filter_params(\n                self.request.user,\n                self.request.site,\n            )\n        )\n    )\n\n    # Defer streamfield values for specific page instances\n    for page in pages:\n        page.defer_streamfield_values()\n\n    # Prefetch workflow states\n    if self.request.user.has_perm(\"wagtailadmin.access_admin\"):\n        pages = pages.prefetch_related(\"workflow_states\")\n\n    # Annotate with site root state\n    pages = pages.annotate(\n        site_root_state=Case(\n            When(\n                site_root__state=\"published\",\n                then=Value(\"published\"),\n            ),\n            When(\n                site_root__state=\"unpublished\",\n                then=Value(\"unpublished\"),\n            ),\n            default=Value(\"draft\"),\n        )\n    )\n\n    # Annotate with approved schedule\n    pages = pages.annotate(\n        approved_schedule=Case(\n            When(\n                approved_schedule__isnull=False,\n                then=F(\"approved_schedule\"),\n            ),\n            default=Value(None),\n        )\n    )\n\n    return pages", "CodeBleu_score": 38.81569769808246}, {"code": "def _annotate_queryset(self, pages)\n    pages = pages.prefetch_related(\n        \"content_type\",\n        \"content_type__model_class\",\n        \"content_type__model_class__explorable_instances\",\n        \"content_type__model_class__explorable_instances__explorable_content_types\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances__explorable_content_types\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances__explorable_content_types__content_type\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances__explorable_content_types\",\n        \"content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances__explorable_content_types__content_type__model_class__explorable_instances__explorable_content_types__content_type\",\n       ", "CodeBleu_score": 2.8929196666824195}, {"code": "def _annotate_queryset(self, pages)\n    # Prefetch related content types\n    pages = pages.prefetch_related(\"content_type\")\n\n    # Prefetch site root state\n    pages = pages.prefetch_related(\n        Prefetch(\n            \"content_type__model_class__get_explorable_content_type_query_name\",\n            queryset=SiteRootState.objects.all(),\n        )\n    )\n\n    # Prefetch workflow states\n    if self.explorable_model_class.get_workflow_enabled():\n        pages = pages.prefetch_related(\n            Prefetch(\n                \"content_type__model_class__get_explorable_content_type_query_name\",\n                queryset=WorkflowState.objects.all(),\n            )\n        )\n\n    # Filter by user permissions\n    pages = pages.filter(\n        content_type__model_class__get_explorable_content_type_query_name__in=self.get_permitted_explorable_content_types()\n    )\n\n    # Filter by user permissions for drafts\n    if self.explorable_model_class.get_workflow_enabled():\n        pages = pages.filter(\n            content_type__model_class__get_explorable_content_type_query_name__workflow_state__in=self.get_permitted_explorable_workflow_states()\n        )\n\n    # Filter by user permissions for drafts\n    if self.explorable_model_class.get_draft_enabled():\n        pages = pages.filter(\n            content_type__model_class__get_explorable_content_type_query_name__draft_state__in=self.get_permitted_explorable_draft_states()\n        )\n\n    # Filter by user permissions for drafts\n    if self.explorable_model_class.get_approved_schedule_enabled():\n        pages = pages.filter(\n            content_type__model_class__get_explorable_content_type_query_name__approved_schedule__in=self.get_permitted_explorable_approved_schedules()\n        )\n\n    # Annotate with site root state\n", "CodeBleu_score": 36.59562518037196}]}
{"instance_id": "970bf123b037", "generation_result": [{"code": "def search_queryset(self, queryset)\n    if self.is_searching:\n        queryset = queryset.autocomplete(self.query_string)\n    if not self.is_ordered:\n        queryset = queryset.order_by('-relevance')\n    return queryset", "CodeBleu_score": 56.33509469049696}, {"code": "def search_queryset(self, queryset)\n    if self.is_searching:\n        queryset = queryset.autocomplete(self.query_string)\n    if not self.order_by:\n        queryset = queryset.order_by('-relevance')\n    return queryset", "CodeBleu_score": 55.84549891479613}, {"code": "def search_queryset(self, queryset)\n    if self.is_searching:\n        queryset = queryset.autocomplete(self.query_string)\n    if not self.order_by:\n        queryset = queryset.order_by('-relevance')\n    return queryset", "CodeBleu_score": 55.84549891479613}]}
{"instance_id": "b2058bd51dfa", "generation_result": [{"code": "def user_can_access_snippets(user)\n    from snippets.models import Snippet\n    snippet_models = [Snippet]\n    for model in snippet_models:\n        if user.has_perm(\"add_{}\".format(model.__name__.lower())):\n            return True\n        if user.has_perm(\"change_{}\".format(model.__name__.lower())):\n            return True\n        if user.has_perm(\"delete_{}\".format(model.__name__.lower())):\n            return True\n        if user.has_perm(\"view_{}\".format(model.__name__.lower())):\n            return True\n    return False\n\n", "CodeBleu_score": 55.002368287446146}, {"code": "def user_can_access_snippets(user)\n    return any(user.has_perm(f'{model_name}.{permission}') for model_name, permission in [\n        ('snippets', 'view'),\n        ('snippets', 'add'),\n        ('snippets', 'change'),\n        ('snippets', 'delete'),\n    ])\n\n", "CodeBleu_score": 19.37700210639753}, {"code": "def user_can_access_snippets(user)\n    from django.contrib.auth.models import Permission\n    from django.contrib.contenttypes.models import ContentType\n    from snippets.models import Snippet\n    content_type = ContentType.objects.get_for_model(Snippet)\n    return user.has_perm('snippets.view_snippet') or user.has_perm('snippets.change_snippet') or user.has_perm('snippets.delete_snippet') or user.has_perm('snippets.add_snippet')", "CodeBleu_score": 21.316002343347478}]}
{"instance_id": "bf09fb693900", "generation_result": [{"code": "def get_auth_backends(self, request)\n    backends = []\n    for backend in self.settings.AUTHENTICATION_BACKENDS:\n        if backend == 'django.contrib.auth.backends.ModelBackend':\n            continue\n        backend_class = import_string(backend)\n        if not issubclass(backend_class, BaseAuthBackend):\n            raise ImproperlyConfigured(\n                'Authentication backend %s does not implement BaseAuthBackend.' % backend\n            )\n        backend_obj = backend_class()\n        if not backend_obj.is_active(request):\n            continue\n        params = backend_obj.get_auth_params(request)\n        if 'next' in request.GET:\n            params['next'] = request.GET['next']\n        if 'saml_idp' in request.GET:\n            params['saml_idp'] = request.GET['saml_idp']\n        if 'saml_idp' in params:\n            idp_name = backend_obj.get_idp_name(params['saml_idp'])\n            if idp_name:\n                params['display'] = idp_name\n        backends.append({\n            'backend': backend,\n            'params': params,\n        })\n    return backends", "CodeBleu_score": 28.471965249370264}, {"code": "def get_auth_backends(self, request)\n    backends = []\n    for backend in self.settings.AUTHENTICATION_BACKENDS:\n        backend_class = load_backend(backend)\n        if not hasattr(backend_class, 'get_auth_url'):\n            continue\n        params = {}\n        if 'next' in request.GET:\n            params['next'] = request.GET['next']\n        if hasattr(backend_class, 'get_auth_params'):\n            params.update(backend_class.get_auth_params(request))\n        if hasattr(backend_class, 'get_idp_list'):\n            idp_list = backend_class.get_idp_list()\n            if idp_list:\n                for idp in idp_list:\n                    idp_params = params.copy()\n                    idp_params['idp'] = idp\n                    backends.append({\n                        'url': backend_class.get_auth_url(request, idp_params),\n                        'display_name': backend_class.get_display_name(idp),\n                    })\n        else:\n            backends.append({\n                'url': backend_class.get_auth_url(request, params),\n                'display_name': backend_class.get_display_name(),\n            })\n    return backends", "CodeBleu_score": 30.664675152158406}, {"code": "def get_auth_backends(self, request)\n    backends = []\n    for backend in settings.AUTHENTICATION_BACKENDS:\n        if backend == 'django.contrib.auth.backends.ModelBackend':\n            continue\n        if backend == 'allauth.account.auth_backends.AuthenticationBackend':\n            continue\n        if backend == 'allauth.socialaccount.auth_backends.SocialAccountBackend':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2LoginView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2CallbackView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2LoginView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2CallbackView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2LoginView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2CallbackView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2LoginView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2CallbackView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2LoginView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2CallbackView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2LoginView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2CallbackView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth2.urls.OAuth2LoginView':\n            continue\n        if backend == 'allauth.socialaccount.providers.oauth", "CodeBleu_score": 10.585802213363978}]}
{"instance_id": "ea59163b25cc", "generation_result": [{"code": "def as_sql(self, qn, connection)\n    lhs, params = self.lhs.as_sql(qn, connection)\n    rhs, rhs_params = self.rhs.as_sql(qn, connection)\n    params.update(rhs_params)\n    return \"INET_CONTAINS(%s, %s)\" % (lhs, rhs), params\n\n", "CodeBleu_score": 41.841115962406874}, {"code": "def as_sql(self, qn, connection)\n    lhs, params = self.lhs.as_sql(qn, connection)\n    rhs, rhs_params = self.rhs.as_sql(qn, connection)\n    params.update(rhs_params)\n    return \"(INET_CONTAINS(%s, %s))\" % (lhs, rhs), params\n", "CodeBleu_score": 41.853704553562935}, {"code": "def as_sql(self, qn, connection)\n    lhs, params = self.lhs.as_sql(qn, connection)\n    rhs, rhs_params = self.rhs.as_sql(qn, connection)\n    params.update(rhs_params)\n    return \"INET_CONTAINS(%s, %s)\" % (lhs, rhs), params\n\n", "CodeBleu_score": 41.841115962406874}]}
{"instance_id": "6658ddec6820", "generation_result": [{"code": "def get_model_urls(app_label, model_name)\n    from django.urls import path\n    from django.apps import apps\n    from django.urls.resolvers import URLPattern, URLResolver\n\n    app_config = apps.get_app_config(app_label)\n    model = app_config.get_model(model_name)\n\n    if not hasattr(model, \"get_view_configs\"):\n        return []\n\n    view_configs = model.get_view_configs()\n    paths = []\n\n    for view_config in view_configs:\n        view = view_config.get(\"view\")\n        name = view_config.get(\"name\")\n        kwargs = view_config.get(\"kwargs\", {})\n\n        if isinstance(view, type):\n            view = view.as_view()\n\n        paths.append(path(name, view, kwargs=kwargs))\n\n    return paths\n\n", "CodeBleu_score": 33.44236366180549}, {"code": "def get_model_urls(app_label, model_name)\n    from django.apps import apps\n    from django.urls import path\n    from django.views.generic import RedirectView\n    from django.urls import reverse_lazy\n    from django.urls import reverse\n    from django.urls import path\n    from django.urls import include\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.urls import path\n    from django.urls import re_path\n    from django.ur", "CodeBleu_score": 5.073413535322965}, {"code": "def get_model_urls(app_label, model_name)\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import apps\n    from django.urls import path\n    from django.apps import", "CodeBleu_score": 5.009866939154876}]}
{"instance_id": "9f4c69dfe312", "generation_result": [{"code": "def run_validators(instance, validators)\n    request = instance.request\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_class = import_string(validator)\n        elif isinstance(validator, dict):\n            validator_class = CustomValidator(**validator)\n        else:\n            raise ImproperlyConfigured(\n                \"Validators must be either strings or dictionaries.\"\n            )\n        if not issubclass(validator_class, CustomValidator):\n            raise ImproperlyConfigured(\n                \"Validators must be subclasses of CustomValidator.\"\n            )\n        validator_class().run(instance, request)\n\n", "CodeBleu_score": 26.709868858953417}, {"code": "def run_validators(instance, validators)\n    from django.core.exceptions import ImproperlyConfigured\n    from django.utils.module_loading import import_string\n    from django.core.validators import EMPTY_VALUES\n    from django.core.exceptions import ValidationError\n    from django.utils.translation import gettext_lazy as _\n    from django.utils.deconstruct import deconstructible\n    from django.utils.functional import Promise\n    from django.utils.encoding import force_str\n    from django.utils.encoding import DjangoUnicodeDecodeError\n    from django.utils.encoding import smart_str\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import smart_text\n    from django.utils.encoding import smart_bytes\n    from django.utils.encoding import smart_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force_bytes\n    from django.utils.encoding import force_text\n    from django.utils.encoding import force", "CodeBleu_score": 6.524577272159339}, {"code": "def run_validators(instance, validators)\n    request = instance.request\n    for validator in validators:\n        if isinstance(validator, str):\n            validator = import_string(validator)\n        if isinstance(validator, dict):\n            validator = CustomValidator(**validator)\n        if not issubclass(validator, CustomValidator):\n            raise ImproperlyConfigured(\n                f\"Validator {validator} is not a subclass of CustomValidator\"\n            )\n        validator.run(instance, request)\n\n", "CodeBleu_score": 30.639092047914858}]}
{"instance_id": "0b2ff7fe76f6", "generation_result": [{"code": "export function playMedia(destiny)    const panel = document.querySelector(destiny);\n    if (panel) {\n        const mediaElements = panel.querySelectorAll('video[data-autoplay], audio[data-autoplay]');\n        mediaElements.forEach(mediaElement => {\n            if (mediaElement.play) {\n                mediaElement.play();\n            }\n            else if (mediaElement.tagName === 'IFRAME') {\n                const iframe = mediaElement;\n                const src = iframe.getAttribute('src');\n                if (src && src.includes('youtube.com')) {\n                    playYoutube(iframe);\n                    iframe.addEventListener('load', () => {\n                        playYoutube(iframe);\n                    });\n                }\n            }\n        });\n    }\n}", "CodeBleu_score": 40.206242765934874}, {"code": "export function playMedia(destiny)  const panel = document.getElementById(destiny);\n  if (panel) {\n    const media = panel.querySelectorAll(\"video, audio\");\n    media.forEach((element) => {\n      if (element.play) {\n        element.play();\n      }\n    });\n    const youtube = panel.querySelectorAll(\"iframe[src*='youtube.com']\");\n    youtube.forEach((element) => {\n      if (element.dataset.autoplay === \"true\") {\n        playYoutube(element);\n        element.onload = () => {\n          playYoutube(element);\n        };\n      }\n    });\n  }\n}\n", "CodeBleu_score": 45.276353465258865}, {"code": "export function playMedia(destiny)    const panel = document.getElementById(destiny);\n    if (panel) {\n        const media = panel.getElementsByTagName('video');\n        for (let i = 0; i < media.length; i++) {\n            if (media[i].play) {\n                media[i].play();\n            }\n        }\n        const media2 = panel.getElementsByTagName('audio');\n        for (let i = 0; i < media2.length; i++) {\n            if (media2[i].play) {\n                media2[i].play();\n            }\n        }\n        const media3 = panel.getElementsByTagName('iframe');\n        for (let i = 0; i < media3.length; i++) {\n            if (media3[i].contentDocument) {\n                if (media3[i].contentDocument.getElementsByTagName('video')[0].play) {\n                    media3[i].contentDocument.getElementsByTagName('video')[0].play();\n                }\n                else if (media3[i].contentDocument.getElementsByTagName('audio')[0].play) {\n                    media3[i].contentDocument.getElementsByTagName('audio')[0].play();\n                }\n            }\n        }\n    }\n}\n", "CodeBleu_score": 28.990504379737903}]}
{"instance_id": "12d28719c647", "generation_result": [{"code": "export function stopMedia(destiny)  // Get the target panel\n  const panel = getSlideOrSection(destiny);\n  // Get all media elements in the panel\n  const mediaElements = panel.querySelectorAll('audio, video, iframe');\n  // Loop through each media element\n  mediaElements.forEach((element) => {\n    // If the element is an audio or video element\n    if (element.tagName === 'AUDIO' || element.tagName === 'VIDEO') {\n      // If the element has the 'data-keepplaying' attribute\n      if (element.hasAttribute('data-keepplaying')) {\n        // Do nothing\n      } else {\n        // Pause the element\n        element.pause();\n      }\n    }\n    // If the element is an iframe\n    if (element.tagName === 'IFRAME') {\n      // If the element has the 'data-keepplaying' attribute\n      if (element.hasAttribute('data-keepplaying')) {\n        // Do nothing\n      } else {\n        // Send a postMessage to pause the video\n        element.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n      }\n    }\n  });\n}\n", "CodeBleu_score": 48.25666974752495}, {"code": "export function stopMedia(destiny)  const panel = getSlideOrSection(destiny);\n  if (panel) {\n    const iframes = panel.querySelectorAll('iframe');\n    if (iframes.length) {\n      for (let i = 0; i < iframes.length; i++) {\n        if (iframes[i].src.indexOf('youtube.com') > -1) {\n          if (iframes[i].contentWindow) {\n            iframes[i].contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n          }\n        }\n      }\n    }\n    const videos = panel.querySelectorAll('video');\n    if (videos.length) {\n      for (let i = 0; i < videos.length; i++) {\n        if (!videos[i].hasAttribute('data-keepplaying')) {\n          videos[i].pause();\n        }\n      }\n    }\n    const audios = panel.querySelectorAll('audio');\n    if (audios.length) {\n      for (let i = 0; i < audios.length; i++) {\n        if (!audios[i].hasAttribute('data-keepplaying')) {\n          audios[i].pause();\n        }\n      }\n    }\n  }\n}\n", "CodeBleu_score": 36.94536497895432}, {"code": "export function stopMedia(destiny)    var panel = getSlideOrSection(destiny);\n    var media = panel.querySelectorAll('[data-keepplaying]');\n    if (media.length > 0) {\n        for (var i = 0; i < media.length; i++) {\n            var el = media[i];\n            if (el.tagName === 'VIDEO' || el.tagName === 'AUDIO') {\n                el.pause();\n            }\n            else if (el.tagName === 'IFRAME') {\n                var iframe = el.contentWindow;\n                iframe.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n            }\n        }\n    }\n    else {\n        var videos = panel.querySelectorAll('video');\n        var audios = panel.querySelectorAll('audio');\n        if (videos.length > 0) {\n            for (var i = 0; i < videos.length; i++) {\n                videos[i].pause();\n            }\n        }\n        if (audios.length > 0) {\n            for (var i = 0; i < audios.length; i++) {\n                audios[i].pause();\n            }\n        }\n    }\n}\n", "CodeBleu_score": 37.860422232388416}]}
{"instance_id": "e0d58d76f87e", "generation_result": [{"code": "export function createSlideArrows(section)    const slideWrapper = section.querySelector('.slide-wrapper');\n    const slideArrows = document.createElement('div');\n    slideArrows.classList.add('slide-arrows');\n    slideWrapper.appendChild(slideArrows);\n    const prevArrow = document.createElement('div');\n    prevArrow.classList.add('slide-arrow', 'slide-arrow-prev');\n    slideArrows.appendChild(prevArrow);\n    const nextArrow = document.createElement('div');\n    nextArrow.classList.add('slide-arrow', 'slide-arrow-next');\n    slideArrows.appendChild(nextArrow);\n    const prevArrowIcon = document.createElement('div');\n    prevArrowIcon.classList.add('slide-arrow-icon', 'slide-arrow-icon-prev');\n    prevArrow.appendChild(prevArrowIcon);\n    const nextArrowIcon = document.createElement('div');\n    nextArrowIcon.classList.add('slide-arrow-icon', 'slide-arrow-icon-next');\n    nextArrow.appendChild(nextArrowIcon);\n    if (section.dataset.horizontalLoop === 'false') {\n        prevArrow.classList.add('slide-arrow-hidden');\n    }\n    if (section.dataset.arrowColor) {\n        slideArrows.classList.add(section.dataset.arrowColor);\n    }\n}\n", "CodeBleu_score": 17.318972981562595}, {"code": "export function createSlideArrows(section)    const slideWrapper = section.querySelector('.slide-wrapper');\n    const slideArrows = section.querySelector('.slide-arrows');\n    const slideArrowPrev = slideArrows.querySelector('.slide-arrow-prev');\n    const slideArrowNext = slideArrows.querySelector('.slide-arrow-next');\n    const slideArrowColor = section.dataset.slideArrowColor;\n    const slideArrowPrevColor = slideArrowColor;\n    const slideArrowNextColor = slideArrowColor;\n    const slideArrowPrevHidden = section.dataset.slideArrowPrevHidden;\n    const slideArrowNextHidden = section.dataset.slideArrowNextHidden;\n    const slideArrowPrevTemplate = slideArrowPrev.outerHTML;\n    const slideArrowNextTemplate = slideArrowNext.outerHTML;\n    slideArrowPrev.remove();\n    slideArrowNext.remove();\n    if (slideArrowPrevHidden === 'true') {\n        slideArrowPrev.classList.add('slide-arrow-hidden');\n    }\n    if (slideArrowNextHidden === 'true') {\n        slideArrowNext.classList.add('slide-arrow-hidden');\n    }\n    slideArrowPrev.outerHTML = slideArrowPrevTemplate;\n    slideArrowNext.outerHTML = slideArrowNextTemplate;\n    slideArrowPrev.style.color = slideArrowPrevColor;\n    slideArrowNext.style.color = slideArrowNextColor;\n    slideArrowPrev.classList.add('slide-arrow');\n    slideArrowNext.classList.add('slide-arrow');\n    slideArrowPrev.classList.add('slide-arrow-prev');\n    slideArrowNext.classList.add('slide-arrow-next');\n    slideWrapper.appendChild(slideArrowPrev);\n    slideWrapper.appendChild(slideArrowNext);\n    if (section.dataset.slideLoopHorizontal === 'false') {\n        slideArrowPrev.classList.add('slide-arrow-hidden');\n    }\n}\n", "CodeBleu_score": 22.884335873841476}, {"code": "export function createSlideArrows(section)    const slideWrapper = section.querySelector('.slide-wrapper');\n    const slideContainer = section.querySelector('.slide-container');\n    const slideContainerWidth = slideContainer.offsetWidth;\n    const slideWidth = slideContainer.querySelector('.slide').offsetWidth;\n    const slideCount = slideContainer.querySelectorAll('.slide').length;\n    const slideArrowPrevious = document.createElement('div');\n    const slideArrowNext = document.createElement('div');\n    slideArrowPrevious.classList.add('slide-arrow', 'slide-arrow-previous');\n    slideArrowNext.classList.add('slide-arrow', 'slide-arrow-next');\n    slideArrowPrevious.innerHTML = '<i class=\"fas fa-chevron-left\"></i>';\n    slideArrowNext.innerHTML = '<i class=\"fas fa-chevron-right\"></i>';\n    slideWrapper.appendChild(slideArrowPrevious);\n    slideWrapper.appendChild(slideArrowNext);\n    const slideArrowPreviousColor = section.dataset.slideArrowPreviousColor;\n    const slideArrowNextColor = section.dataset.slideArrowNextColor;\n    if (slideArrowPreviousColor) {\n        slideArrowPrevious.style.color = slideArrowPreviousColor;\n    }\n    if (slideArrowNextColor) {\n        slideArrowNext.style.color = slideArrowNextColor;\n    }\n    if (slideCount <= 1) {\n        slideArrowPrevious.style.display = 'none';\n    }\n    if (slideCount <= 1 || slideWidth >= slideContainerWidth) {\n        slideArrowNext.style.display = 'none';\n    }\n}\n", "CodeBleu_score": 22.89218535714259}]}
{"instance_id": "09898985b216", "generation_result": [{"code": "function slideArrowHandler()    const slideArrow = document.querySelector('.slides-arrow');\n    slideArrow.addEventListener('click', function (e) {\n        const slide = document.querySelector('.slides-container');\n        const slideSection = document.querySelector('.slides-section');\n        const slideSectionLeft = slideSection.offsetLeft;\n        const slideSectionWidth = slideSection.clientWidth;\n        const slideSectionRight = slideSectionLeft + slideSectionWidth;\n        const slideSectionCenter = slideSectionLeft + slideSectionWidth / 2;\n        const slideSectionTop = slideSection.offsetTop;\n        const slideSectionHeight = slideSection.clientHeight;\n        const slideSectionBottom = slideSectionTop + slideSectionHeight;\n        const slideSectionCenterY = slideSectionTop + slideSectionHeight / 2;\n        const slideSectionLeftY = slideSectionTop + slideSectionHeight / 2;\n        const slideSectionRightY = slideSectionBottom - slideSectionHeight / 2;\n        const slideSectionTopY = slideSectionTop + slideSectionHeight / 2;\n        const slideSectionBottomY = slideSectionBottom - slideSectionHeight / 2;\n        const slideSectionLeftX = slideSectionLeft + slideSectionWidth / 2;\n        const slideSectionRightX = slideSectionRight - slideSectionWidth / 2;\n        const slideSectionTopX = slideSectionLeft + slideSectionWidth / 2;\n        const slideSectionBottomX = slideSectionRight - slideSectionWidth / 2;\n        const slideSectionCenterX = slideSectionLeft + slideSectionWidth / 2;\n        const slideSectionLeftX2 = slideSectionLeft + slideSectionWidth / 4;\n        const slideSectionRightX2 = slideSectionRight - slideSectionWidth / 4;\n        const slideSectionTopX2 = slideSectionLeft + slideSectionWidth / 4;\n        const slideSectionBottomX2 = slideSectionRight - slideSectionWidth / 4;\n        const slideSectionCenterX2 = slideSectionLeft + slideSectionWidth / 4;\n        const slideSectionLeftX3 = slideSectionLeft + slideSectionWidth / 8;\n        const slideSectionRightX3 = slideSectionRight - slideSectionWidth / 8;\n        const slideSectionTopX3 = slideSectionLeft + slideSectionWidth / 8;\n        const", "CodeBleu_score": 23.670552236261305}, {"code": "function slideArrowHandler()    const SLIDES_PREV = \"slides-prev\";\n    const SLIDES_NEXT = \"slides-next\";\n\n    const slideNavArrows = document.querySelectorAll(\".slide-nav-arrow\");\n    slideNavArrows.forEach(arrow => {\n        arrow.addEventListener(\"click\", () => {\n            const closestSection = arrow.closest(\"section\");\n            const leftScroll = closestSection.classList.contains(SLIDES_PREV);\n            const rightScroll = closestSection.classList.contains(SLIDES_NEXT);\n            if (leftScroll) {\n                if (state.leftScroll) {\n                    state.leftScroll = false;\n                    state.rightScroll = true;\n                    moveSlideRight();\n                }\n            } else if (rightScroll) {\n                if (state.rightScroll) {\n                    state.rightScroll = false;\n                    state.leftScroll = true;\n                    moveSlideLeft();\n                }\n            }\n        });\n    });\n}\n", "CodeBleu_score": 31.734553989299304}, {"code": "function slideArrowHandler()  const slideNavArrows = document.querySelectorAll(\n    \".slide-nav-arrows > div:not(.slide-nav-arrows-wrapper)\"\n  );\n\n  slideNavArrows.forEach((arrow) => {\n    arrow.addEventListener(\"click\", (e) => {\n      const closestSection = e.target.closest(\"section\");\n      const slideNavArrowClass = e.target.classList[0];\n      if (slideNavArrowClass === SLIDES_PREV) {\n        if (slideState.leftScrollAllowed) {\n          slideState.currentSlide = closestSection;\n          moveSlideLeft();\n        }\n      } else if (slideNavArrowClass === SLIDES_NEXT) {\n        if (slideState.rightScrollAllowed) {\n          slideState.currentSlide = closestSection;\n          moveSlideRight();\n        }\n      }\n    });\n  });\n}\n", "CodeBleu_score": 35.78685036740402}]}
{"instance_id": "69ef3030fb15", "generation_result": [{"code": "export function addSlidesNavigation(section)    const navigationContainer = document.createElement('div');\n    navigationContainer.classList.add('slides-navigation');\n    section.appendChild(navigationContainer);\n\n    const slides = section.querySelectorAll('.slide');\n    slides.forEach((slide, index) => {\n        const bullet = document.createElement('div');\n        bullet.classList.add('bullet');\n        if (index === 0) {\n            bullet.classList.add('active');\n        }\n        navigationContainer.appendChild(bullet);\n    });\n\n    const slidesLength = slides.length;\n    const slideWidth = slides[0].offsetWidth;\n    const slideHeight = slides[0].offsetHeight;\n    const navigationWidth = slideWidth * slidesLength;\n    const navigationHeight = slideHeight;\n    const navigationLeft = (window.innerWidth - navigationWidth) / 2;\n    const navigationTop = (window.innerHeight - navigationHeight) / 2;\n\n    navigationContainer.style.width = `${navigationWidth}px`;\n    navigationContainer.style.height = `${navigationHeight}px`;\n    navigationContainer.style.left = `${navigationLeft}px`;\n    navigationContainer.style.top = `${navigationTop}px`;\n\n    const bullets = navigationContainer.querySelectorAll('.bullet');\n    bullets.forEach((bullet, index) => {\n        bullet.style.left = `${slideWidth * index}px`;\n        bullet.style.top = `${slideHeight / 2}px`;\n        bullet.addEventListener('click', () => {\n            slides.forEach((slide) => {\n                slide.classList.remove('active');\n            });\n            slides[index].classList.add('active');\n            bullets.forEach((bullet) => {\n                bullet.classList.remove('active');\n            });\n            bullets[index].classList.add('active');\n        });\n    });\n}\n", "CodeBleu_score": 25.343337484981365}, {"code": "export function addSlidesNavigation(section)    const slides = section.querySelectorAll('.slide');\n    const slidesCount = slides.length;\n    const navigationContainer = document.createElement('div');\n    navigationContainer.classList.add('slides-navigation');\n    section.appendChild(navigationContainer);\n    const navigationBullets = [];\n    for (let i = 0; i < slidesCount; i++) {\n        const navigationBullet = document.createElement('span');\n        navigationBullet.classList.add('navigation-bullet');\n        navigationContainer.appendChild(navigationBullet);\n        navigationBullets.push(navigationBullet);\n    }\n    navigationBullets[0].classList.add('active');\n    navigationContainer.style.left = `${section.offsetLeft}px`;\n    navigationContainer.style.top = `${section.offsetTop + section.offsetHeight}px`;\n}\n", "CodeBleu_score": 23.03375436538115}, {"code": "export function addSlidesNavigation(section)    const slides = section.querySelectorAll(\".slide\");\n    const navigation = document.createElement(\"div\");\n    navigation.classList.add(\"slides-navigation\");\n    section.appendChild(navigation);\n\n    slides.forEach((slide, index) => {\n        const bullet = document.createElement(\"span\");\n        bullet.classList.add(\"bullet\");\n        bullet.addEventListener(\"click\", () => {\n            slide.classList.add(\"active\");\n            slides.forEach(slide => slide.classList.remove(\"active\"));\n            bullet.classList.add(\"active\");\n            slides.forEach(bullet => bullet.classList.remove(\"active\"));\n        });\n        navigation.appendChild(bullet);\n    });\n\n    const firstBullet = navigation.querySelector(\".bullet\");\n    firstBullet.classList.add(\"active\");\n\n    const navigationWidth = navigation.offsetWidth;\n    const slideWidth = slides[0].offsetWidth;\n    const slidesCount = slides.length;\n    const totalWidth = slideWidth * slidesCount;\n    const availableWidth = navigationWidth - slideWidth;\n    const center = availableWidth / 2;\n    const offset = (totalWidth - navigationWidth) / 2;\n    const bullets = navigation.querySelectorAll(\".bullet\");\n\n    bullets.forEach((bullet, index) => {\n        const position = index * slideWidth - offset;\n        bullet.style.left = `${position + center}px`;\n    });\n}\n", "CodeBleu_score": 26.064324140109292}]}
{"instance_id": "d86cd1fd918a", "generation_result": [{"code": "function menuItemsHandler(e)  const anchor = e.target.getAttribute('data-anchor');\n  if (anchor) {\n    this.setScrollTriggerState('menu');\n    if (this.menu) {\n      if (this.menu.anchorsLocked || !this.menu.anchors) {\n        e.preventDefault();\n        this.emit('onMenuClick', anchor);\n      }\n    }\n  }\n}\n", "CodeBleu_score": 22.639001641397016}, {"code": "function menuItemsHandler(e)    e.preventDefault();\n    if (this.scrollTriggerState === 'menu' && this.menu && this.menu.anchors) {\n        if (this.menu.anchors.locked) {\n            e.preventDefault();\n        }\n        if (!this.menu.anchors.locked && !this.menu.anchors.defined) {\n            e.preventDefault();\n        }\n        this.$emit('onMenuClick', e.target.getAttribute('href'));\n    }\n}\n", "CodeBleu_score": 27.291453663653193}, {"code": "function menuItemsHandler(e)    const target = e.target;\n    if (target.tagName === 'A' && target.hasAttribute('href')) {\n        const href = target.getAttribute('href');\n        const anchor = document.querySelector(href);\n        if (anchor) {\n            e.preventDefault();\n            this.setState({ scrollTrigger: 'menu' });\n            this.emit('onMenuClick', anchor);\n        }\n    }\n}\n", "CodeBleu_score": 41.03073309751453}]}
{"instance_id": "19fb16a46144", "generation_result": [{"code": "export function setScrolling(element, val)    if (element.scrollLeft !== undefined && element.classList.contains(\"slides-wrapper\")) {\n        element.scrollLeft = val;\n    }\n    else {\n        element.scrollTo(0, val);\n    }\n}\n", "CodeBleu_score": 30.016110547955112}, {"code": "export function setScrolling(element, val)    if (autoScroll && !element.scrollLeft) {\n        element.style.top = val + 'px';\n    } else {\n        if (element.className.indexOf('slides_wrapper') !== -1) {\n            element.scrollLeft = val;\n        } else {\n            element.scrollTo(0, val);\n        }\n    }\n}\n", "CodeBleu_score": 43.22317515552251}, {"code": "export function setScrolling(element, val)    var autoScroll = this.options.autoScroll;\n    var scrollbar = this.scrollbar;\n    var isWindow = element === this.window;\n    var hasWrapper = element.classList.contains(this.options.wrapperClass);\n    if (autoScroll && !scrollbar && !isWindow && hasWrapper) {\n        element.scrollLeft = val;\n    }\n    else {\n        element.scrollTo(0, val);\n    }\n    if (autoScroll && !scrollbar && isWindow) {\n        element.style.top = val + 'px';\n    }\n}\n", "CodeBleu_score": 42.7288164807164}]}
{"instance_id": "09a10e1f1af9", "generation_result": [{"code": "function activateMenuElement(name)  const menuOptions = document.querySelectorAll(\"[data-menuanchor]\");\n  if (menuOptions && menuOptions.length > 0) {\n    menuOptions.forEach((menuOption) => {\n      menuOption.classList.remove(\"active\");\n      if (menuOption.dataset.menuanchor === name) {\n        menuOption.classList.add(\"active\");\n      }\n    });\n  }\n}\n", "CodeBleu_score": 33.31963905071035}, {"code": "function activateMenuElement(name)  const menuElements = document.querySelectorAll(\".menu-element\");\n  const menuOptions = document.querySelectorAll(\".menu-option\");\n  if (menuElements.length > 0 && menuOptions.length > 0) {\n    menuElements.forEach((element) => {\n      element.classList.remove(\"active\");\n    });\n    menuOptions.forEach((option) => {\n      if (option.dataset.menuanchor === name) {\n        option.classList.add(\"active\");\n      }\n    });\n  }\n}\n", "CodeBleu_score": 35.895898829376065}, {"code": "function activateMenuElement(name)  const menuOptions = document.querySelectorAll(\"[data-menuanchor]\");\n  if (!menuOptions || !menuOptions.length) return;\n  menuOptions.forEach((option) => {\n    option.classList.remove(\"active\");\n    if (option.getAttribute(\"data-menuanchor\") === name) {\n      option.classList.add(\"active\");\n    }\n  });\n}\n", "CodeBleu_score": 33.886110682371}]}
{"instance_id": "4556a956fd7c", "generation_result": [{"code": "export function lazyLoadOthers()    const lazyLoadSections = document.querySelectorAll('.auto-height');\n    const responsiveAutoHeightSections = document.querySelectorAll('.auto-height.responsive');\n    const lazyLoadEnabled = document.querySelectorAll('.lazy-load-enabled');\n    const viewportHeight = window.innerHeight;\n    const viewportWidth = window.innerWidth;\n    const viewportOffset = window.pageYOffset;\n    const viewportOffsetBottom = viewportOffset + viewportHeight;\n    const viewportOffsetRight = viewportOffset + viewportWidth;\n    const viewportOffsetLeft = viewportOffset;\n    const viewportOffsetTop = viewportOffset;\n    const viewportOffsetTopBottom = viewportOffsetTop + viewportHeight;\n    const viewportOffsetTopRight = viewportOffsetTop + viewportWidth;\n    const viewportOffsetTopLeft = viewportOffsetTop;\n    const viewportOffsetTopBottomLeft = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomRight = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRight = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTop = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottom = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottomLeft = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottomLeftRight = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottomLeftRightTop = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottomLeftRightTopBottom = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottomLeftRightTopBottomLeft = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottomLeftRightTopBottomLeftRight = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottomLeftRightTopBottomLeftRightTop = viewportOffsetTopBottom + viewportWidth;\n    const viewportOffsetTopBottomLeftRightTopBottomLeftRightTopBottomLeftRightTop", "CodeBleu_score": 22.193086039048136}, {"code": "export function lazyLoadOthers()    const lazyLoad = this.options.lazyLoad;\n    const autoHeight = this.options.autoHeight;\n    const responsive = this.options.responsive;\n    const responsiveAutoHeight = this.options.responsiveAutoHeight;\n    const lazyLoaded = this.lazyLoaded;\n    const sections = this.sections;\n    const current = this.current;\n    const viewport = this.viewport;\n    const viewportHeight = viewport.height;\n    const viewportTop = viewport.top;\n    const viewportBottom = viewport.bottom;\n    const viewportWidth = viewport.width;\n    const viewportLeft = viewport.left;\n    const viewportRight = viewport.right;\n    const viewportCenter = viewport.center;\n    const viewportCenterX = viewport.centerX;\n    const viewportCenterY = viewport.centerY;\n    const viewportMiddle = viewport.middle;\n    const viewportMiddleX = viewport.middleX;\n    const viewportMiddleY = viewport.middleY;\n    const viewportPercent = viewport.percent;\n    const viewportPercentX = viewport.percentX;\n    const viewportPercentY = viewport.percentY;\n    const viewportSize = viewport.size;\n    const viewportSizeX = viewport.sizeX;\n    const viewportSizeY = viewport.sizeY;\n    const viewportOffset = viewport.offset;\n    const viewportOffsetX = viewport.offsetX;\n    const viewportOffsetY = viewport.offsetY;\n    const viewportScroll = viewport.scroll;\n    const viewportScrollX = viewport.scrollX;\n    const viewportScrollY = viewport.scrollY;\n    const viewportScrollPercent = viewport.scrollPercent;\n    const viewportScrollPercentX = viewport.scrollPercentX;\n    const viewportScrollPercentY = viewport.scrollPercentY;\n    const viewportScrollSize = viewport.scrollSize;\n    const viewportScrollSizeX = viewport.scrollSizeX;\n    const viewportScrollSizeY = viewport.scrollSizeY;\n   ", "CodeBleu_score": 16.738080902218318}, {"code": "export function lazyLoadOthers()    const sections = document.querySelectorAll('[data-auto-height]');\n    const responsiveSections = document.querySelectorAll('[data-auto-height][data-auto-height-responsive]');\n    const isResponsive = window.innerWidth <= 1024;\n    const lazyLoad = document.querySelector('[data-lazy-load]');\n\n    if (!lazyLoad) return;\n\n    if (sections.length > 0 || responsiveSections.length > 0) {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    entry.target.classList.add('is-active');\n                }\n            });\n        });\n\n        sections.forEach(section => {\n            if (!section.classList.contains('is-active')) {\n                observer.observe(section);\n            }\n        });\n\n        if (isResponsive && responsiveSections.length > 0) {\n            responsiveSections.forEach(section => {\n                if (!section.classList.contains('is-active')) {\n                    observer.observe(section);\n                }\n            });\n        }\n    }\n}\n", "CodeBleu_score": 26.17507716968912}]}
{"instance_id": "a4324e094376", "generation_result": [{"code": "function keepSlidesPosition()    const activeSlides = getActiveSlides();\n\n    activeSlides.forEach((slide) => {\n        silentLandscapeScroll(slide, 'internal');\n    });\n}\n", "CodeBleu_score": 20.093498133367778}, {"code": "function keepSlidesPosition()    var activeSlides = getActiveSlides();\n    for (var i = 0; i < activeSlides.length; i++) {\n        silentLandscapeScroll(activeSlides[i], 'internal');\n    }\n}\n", "CodeBleu_score": 37.86455117051351}, {"code": "function keepSlidesPosition()  const slides = selectAllSlides();\n  slides.forEach((slide) => {\n    silentLandscapeScroll(slide, 'internal');\n  });\n}\n", "CodeBleu_score": 14.905977241644052}]}
{"instance_id": "9eb664182655", "generation_result": [{"code": "export function updateStructuralState()    const sections = this.getSectionItems();\n    const visibleSections = sections.filter((section) => section.isVisible());\n    const panels = visibleSections.map((section) => section.createPanel());\n    const visiblePanels = panels.filter((panel) => panel.isVisible());\n    const slides = visiblePanels.flatMap((panel) => panel.getSlides());\n    const visibleSlides = slides.filter((slide) => slide.isVisible());\n    this.setStructuralState({\n        sections,\n        visibleSections,\n        panels,\n        visiblePanels,\n        slides,\n        visibleSlides,\n    });\n    this.updateActiveSectionAndSlide(this.activeSectionIndex, this.activeSlideIndex);\n}\n", "CodeBleu_score": 26.016146204258376}, {"code": "export function updateStructuralState()    this.sections = this.items.filter(item => item.visible);\n    this.panels = this.sections.map(section => section.panel);\n    this.slides = this.sections.map(section => section.slides).flat();\n    this.numSections = this.sections.length;\n    this.numSlides = this.slides.length;\n    this.activeSectionIndex = this.sections.findIndex(section => section.active);\n    this.activeSlideIndex = this.slides.findIndex(slide => slide.active);\n}\n", "CodeBleu_score": 13.713868193534523}, {"code": "export function updateStructuralState()    const sections = this.container.querySelectorAll('section');\n    const visibleSections = [...sections].filter(section => section.offsetWidth > 0);\n    const sectionPanels = visibleSections.map(section => new SectionPanel(section, this.options));\n    const visibleSectionPanels = sectionPanels.filter(panel => panel.isVisible);\n    const visibleSlides = visibleSectionPanels.reduce((acc, panel) => [...acc, ...panel.slides], []);\n    const visibleSlidePanels = visibleSlides.map(slide => new SlidePanel(slide, this.options));\n    const visibleSlidePanelsByIndex = visibleSlidePanels.reduce((acc, panel) => {\n        acc[panel.slideIndex] = panel;\n        return acc;\n    }, {});\n    const visibleSlidePanelsByName = visibleSlidePanels.reduce((acc, panel) => {\n        acc[panel.slideName] = panel;\n        return acc;\n    }, {});\n    this.structuralState = {\n        numSections: visibleSections.length,\n        numSlides: visibleSlides.length,\n        sections,\n        visibleSections,\n        sectionPanels,\n        visibleSectionPanels,\n        slides: visibleSlides,\n        visibleSlidePanels,\n        visibleSlidePanelsByIndex,\n        visibleSlidePanelsByName,\n        prevActiveSectionIndex: this.structuralState.activeSectionIndex,\n        prevActiveSlideIndex: this.structuralState.activeSlideIndex,\n        prevActiveSlideName: this.structuralState.activeSlideName\n    };\n}\n", "CodeBleu_score": 35.733934437789785}]}
{"instance_id": "2b3c1077db45", "generation_result": [{"code": "function performHorizontalMove(slides, v, fireCallback)    var slidesContainer = slides.parentNode;\n    var slideWidth = slides.firstElementChild.clientWidth;\n    var destination = v * slideWidth;\n    var slidesLength = slides.children.length;\n\n    // Update slide navigation\n    var currentSlide = slides.querySelector('.slide.active');\n    var nextSlide = currentSlide.nextElementSibling;\n    if (nextSlide) {\n        nextSlide.classList.add('next');\n    }\n    currentSlide.classList.remove('active');\n    currentSlide.classList.add('prev');\n\n    // Set scroll position\n    slidesContainer.scrollLeft = destination;\n\n    // If CSS3 is enabled, apply a 3D translation to the slides container and trigger the callback after the scrolling animation completes\n    if (window.CSS && window.CSS.supports && window.CSS.supports('transform', 'translate3d(0, 0, 0)')) {\n        var slidesContainerStyle = window.getComputedStyle(slidesContainer);\n        var translateZ = parseFloat(slidesContainerStyle.getPropertyValue('transform').match(/translateZ\\((-?\\d+\\.?\\d*)px\\)/)[1]);\n        var transitionDuration = parseFloat(slidesContainerStyle.getPropertyValue('transition-duration').match(/(\\d+\\.?\\d*)s/)[1]) * 1000;\n\n        slidesContainer.style.transform = 'translate3d(' + destination + 'px, 0, ' + translateZ + 'px)';\n        setTimeout(function () {\n            slidesContainer.style.transform = '';\n            fireCallback && fireCallback();\n        }, transitionDuration);\n    } else {\n        // If CSS3 is not enabled, use a scrollTo function to move the slides and trigger the callback after scrolling\n        slidesContainer.scrollTo(destination, 0);\n        fireCallback && fireCallback();\n    }\n}", "CodeBleu_score": 30.879173351893595}, {"code": "function performHorizontalMove(slides, v, fireCallback)  var container = slides.container;\n  var current = slides.current;\n  var destination = slides.destination;\n  var duration = slides.duration;\n  var easing = slides.easing;\n  var callback = fireCallback;\n  var css3 = slides.css3;\n\n  if (css3) {\n    container.style.webkitTransition = duration + \"ms \" + easing;\n    container.style.transition = duration + \"ms \" + easing;\n    container.style.webkitTransform = \"translate3d(\" + destination.left + \"px, 0, 0)\";\n    container.style.transform = \"translate3d(\" + destination.left + \"px, 0, 0)\";\n\n    if (callback) {\n      container.addEventListener(\"webkitTransitionEnd\", function() {\n        callback(v);\n      });\n      container.addEventListener(\"transitionend\", function() {\n        callback(v);\n      });\n    }\n  } else {\n    slides.container.scrollLeft = destination.left;\n    if (callback) {\n      slides.container.addEventListener(\"scroll\", function() {\n        callback(v);\n      });\n    }\n  }\n}", "CodeBleu_score": 36.640527980040794}, {"code": "function performHorizontalMove(slides, v, fireCallback)    // Update slide navigation\n    slides.navigation.current = v;\n\n    // Set scroll position\n    slides.container.scrollLeft = v * slides.container.offsetWidth;\n\n    // Apply CSS3 3D translation\n    if (slides.container.style.WebkitTransform !== undefined) {\n        slides.container.style.WebkitTransform = 'translate3d(' + v * -slides.container.offsetWidth + 'px, 0, 0)';\n        slides.container.style.MozTransform = 'translate3d(' + v * -slides.container.offsetWidth + 'px, 0, 0)';\n        slides.container.style.msTransform = 'translate3d(' + v * -slides.container.offsetWidth + 'px, 0, 0)';\n        slides.container.style.transform = 'translate3d(' + v * -slides.container.offsetWidth + 'px, 0, 0)';\n\n        // Trigger callback after animation completes\n        slides.container.addEventListener('webkitTransitionEnd', function () {\n            fireCallback();\n        }, false);\n    }\n    // Use scrollTo function for browsers that don't support CSS3\n    else {\n        slides.container.scrollLeft = v * slides.container.offsetWidth;\n        fireCallback();\n    }\n}", "CodeBleu_score": 24.541498030822616}]}
{"instance_id": "82491a251576", "generation_result": [{"code": "buildLink (name: string, params: Record<string, any>): string  const sortedKeys = Object.keys(params).sort()\n  const queryString = sortedKeys.map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join('&')\n  return `${name}?${queryString}`\n}\n", "CodeBleu_score": 46.64847716088578}, {"code": "buildLink (name: string, params: Record<string, any>): string    const query = Object.keys(params)\n        .sort()\n        .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n        .join('&');\n    return `${name}?${query}`;\n}\n", "CodeBleu_score": 43.43815717193341}, {"code": "buildLink (name: string, params: Record<string, any>): string  const keys = Object.keys(params).sort();\n  const query = keys.map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join('&');\n  return `${name}?${query}`;\n}\n", "CodeBleu_score": 46.26581571636752}]}
{"instance_id": "89f175570176", "generation_result": [{"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult>   const {\n    title = '',\n    mask = true,\n    success = () => {},\n    fail = () => {},\n    complete = () => {}\n  } = options\n\n  if (typeof title !== 'string') {\n    console.error('showLoading: title must be a string')\n    return Promise.reject(new Error('showLoading: title must be a string'))\n  }\n\n  if (typeof mask !== 'boolean') {\n    console.error('showLoading: mask must be a boolean')\n    return Promise.reject(new Error('showLoading: mask must be a boolean'))\n  }\n\n  if (typeof success !== 'function') {\n    console.error('showLoading: success must be a function')\n    return Promise.reject(new Error('showLoading: success must be a function'))\n  }\n\n  if (typeof fail !== 'function') {\n    console.error('showLoading: fail must be a function')\n    return Promise.reject(new Error('showLoading: fail must be a function'))\n  }\n\n  if (typeof complete !== 'function') {\n    console.error('showLoading: complete must be a function')\n    return Promise.reject(new Error('showLoading: complete must be a function'))\n  }\n\n  return Taro.showToast({\n    title,\n    icon: 'loading',\n    duration: 0,\n    mask,\n    success,\n    fail,\n    complete\n  })\n}\n", "CodeBleu_score": 27.042568121297013}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult>   return new Promise((resolve, reject) => {\n    if (typeof options !== 'object') {\n      reject(new Error('options should be an object'))\n      return\n    }\n    if (typeof options.title !== 'string') {\n      reject(new Error('options.title should be a string'))\n      return\n    }\n    if (typeof options.mask !== 'boolean') {\n      reject(new Error('options.mask should be a boolean'))\n      return\n    }\n    if (typeof options.success !== 'function') {\n      reject(new Error('options.success should be a function'))\n      return\n    }\n    if (typeof options.fail !== 'function') {\n      reject(new Error('options.fail should be a function'))\n      return\n    }\n    if (typeof options.complete !== 'function') {\n      reject(new Error('options.complete should be a function'))\n      return\n    }\n    Taro.showToast({\n      title: options.title,\n      mask: options.mask,\n      icon: 'loading',\n      duration: 0,\n      success: (res) => {\n        options.success(res)\n        resolve(res)\n      },\n      fail: (err) => {\n        options.fail(err)\n        reject(err)\n      },\n      complete: (res) => {\n        options.complete(res)\n      }\n    })\n  })\n}\n", "CodeBleu_score": 21.77836577248469}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult>   if (!options || Object.prototype.toString.call(options) !== '[object Object]') {\n    console.error('showLoading options is not a valid object')\n    return Promise.reject()\n  }\n  const { title, mask, success, fail, complete } = options\n  return Taro.showToast({\n    title,\n    icon: 'loading',\n    mask,\n    duration: 0,\n    success,\n    fail,\n    complete\n  })\n}\n", "CodeBleu_score": 34.675385602986644}]}
{"instance_id": "7d41757a0645", "generation_result": [{"code": "export function HomepageTweets()  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Tweets</h1>\n      <div className=\"row\">\n        {TweetList.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            id={tweet.id}\n            author={tweet.author}\n            content={tweet.content}\n            likes={tweet.likes}\n            retweets={tweet.retweets}\n            replies={tweet.replies}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n", "CodeBleu_score": 55.70916925219528}, {"code": "export function HomepageTweets()  const TweetList = [\n    {\n      id: 1,\n      name: \"John Doe\",\n      username: \"@johndoe\",\n      date: \"10/10/2022\",\n      content: \"This is a tweet\",\n      image: \"https://picsum.photos/200/300\",\n      comments: 10,\n      retweets: 5,\n      likes: 15,\n      isLiked: false,\n      isRetweeted: false,\n    },\n    {\n      id: 2,\n      name: \"Jane Doe\",\n      username: \"@janedoe\",\n      date: \"10/10/2022\",\n      content: \"This is a tweet\",\n      image: \"https://picsum.photos/200/300\",\n      comments: 10,\n      retweets: 5,\n      likes: 15,\n      isLiked: false,\n      isRetweeted: false,\n    },\n    {\n      id: 3,\n      name: \"John Doe\",\n      username: \"@johndoe\",\n      date: \"10/10/2022\",\n      content: \"This is a tweet\",\n      image: \"https://picsum.photos/200/300\",\n      comments: 10,\n      retweets: 5,\n      likes: 15,\n      isLiked: false,\n      isRetweeted: false,\n    },\n    {\n      id: 4,\n      name: \"John Doe\",\n      username: \"@johndoe\",\n      date: \"10/10/2022\",\n      content: \"This is a tweet\",\n      image: \"https://picsum.photos/200/300\",\n      comments: 10,\n      retweets: 5,\n      likes: 15,\n      isLiked: false,\n      isRetweeted: false,\n    },\n    {\n      id: 5", "CodeBleu_score": 4.455922855298696}, {"code": "export function HomepageTweets()  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Tweets</h1>\n      <div className=\"row\">\n        {TweetList.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweet={tweet.tweet}\n            date={tweet.date}\n            author={tweet.author}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n", "CodeBleu_score": 58.977480388393474}]}
