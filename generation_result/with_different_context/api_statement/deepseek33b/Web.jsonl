{"instance_id": "112855ce32e1", "generation_result": [{"code": "handleOpenMarketplace = (): void => {\n\t  const source = 'actions_menu';\n  const modalData = {\n    modalId: 'marketplace',\n    dialogType: 'MarketplaceModal',\n    dialogProps: {\n      source,\n    },\n  };\n  this.props.actions.openModal(modalData);\n}", "CodeBleu_score": 44.97179222937622}, {"code": "handleOpenMarketplace = (): void => {\n\t    this.props.actions.openModal({\n        modalId: MarketplaceModal.modalId,\n        dialogType: MarketplaceModal,\n        dialogProps: {\n            source: 'actions_menu'\n        }\n    });\n}", "CodeBleu_score": 25.39808137215584}, {"code": "handleOpenMarketplace = (): void => {\n\t  const source = 'actions_menu';\n  const modalData = {\n    id: 'marketplace',\n    dialogType: 'marketplace',\n    dialogProps: {\n      source,\n    },\n  };\n\n  this.props.actions.openModal(modalData);\n}", "CodeBleu_score": 40.77938887341667}]}
{"instance_id": "421836df0bf0", "generation_result": [{"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\t    const context = createCallContext(\n        binding.app_id,\n        binding.location,\n        this.props.channelId,\n        this.props.teamId,\n        this.props.postId,\n        this.props.rootPostId,\n    );\n\n    try {\n        const response = await this.props.actions.handleBindingClick(binding, context);\n\n        if (response.error) {\n            await this.props.actions.postEphemeralCallResponseForPost(this.props.postId, this.props.rootPostId, {\n                text: response.error,\n                type: CallResponseType.OK,\n                callId: '',\n            });\n            return;\n        }\n\n        if (response.type === CallResponseType.OK) {\n            await this.props.actions.postEphemeralCallResponseForPost(this.props.postId, this.props.rootPostId, {\n                text: response.text,\n                type: CallResponseType.OK,\n                callId: '',\n            });\n            return;\n        }\n\n        if (response.type === CallResponseType.NAVIGATE) {\n            this.props.actions.openAppsModal(response.navigate_to_url, response.app_id);\n            return;\n        }\n\n        if (response.type === CallResponseType.FORM) {\n            // TODO: Handle form response\n            return;\n        }\n\n        throw new Error(`Unsupported response type: ${response.type}`);\n    } catch (error) {\n        const errorMessage = intl.formatMessage({\n            id: 'interactive_apps.error.unexpected',\n            defaultMessage: 'An error occurred while processing the request. Please try again later.',\n        });\n\n        await this.props.actions.postEphemeralCallResponseForPost(this.props.postId, this.props.rootPostId, {\n            text: errorMessage,\n            type: CallResponseType.OK,\n            callId: '',\n        });\n    }\n}", "CodeBleu_score": 41.76187116609428}, {"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\t    const context = createCallContext(\n        binding.app_id,\n        binding.location,\n        this.props.channelId,\n        this.props.teamId,\n        this.props.postId,\n        this.props.rootPostId,\n    );\n\n    try {\n        const response = await this.props.actions.handleBindingClick(\n            binding,\n            context,\n            intl,\n        );\n\n        if (response.error) {\n            this.props.actions.postEphemeralCallResponseForPost(\n                this.props.postId,\n                this.props.rootPostId,\n                {\n                    text: response.error,\n                },\n            );\n            return;\n        }\n\n        if (response.type === 'OK') {\n            this.props.actions.postEphemeralCallResponseForPost(\n                this.props.postId,\n                this.props.rootPostId,\n                response.data,\n            );\n        } else if (response.type === 'NAVIGATE') {\n            this.props.actions.handleAppBindingNavigate(\n                response.data.path,\n                response.data.channel_id,\n            );\n        } else if (response.type === 'FORM') {\n            this.props.actions.openAppsModal(response.data);\n        } else {\n            this.props.actions.postEphemeralCallResponseForPost(\n                this.props.postId,\n                this.props.rootPostId,\n                {\n                    text: intl.formatMessage({\n                        id: 'interactive_apps.error.response.unsupported',\n                        defaultMessage:\n                            'App response type not supported: {type}.',\n                    }, {\n                        type: response.type,\n                    }),\n                },\n            );\n        }\n    } catch (error) {\n        this.props.actions.postEphemeralCallResponseForPost(\n            this.props.postId,\n            this.props.rootPostId,\n            {\n                text: intl.formatMessage({\n                    id: 'interactive_apps.error.response.submit',\n                    defaultMessage:\n                        'There was an", "CodeBleu_score": 37.97090260897893}, {"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\t    const context = createCallContext(\n        binding.app_id,\n        binding.location,\n        this.props.channelId,\n        this.props.teamId,\n        this.props.postId,\n        this.props.rootPostId,\n    );\n\n    try {\n        const response = await this.props.actions.handleBindingClick(binding, context, intl);\n\n        if (response.type === 'error') {\n            this.props.actions.postEphemeralCallResponseForPost(this.props.postId, this.props.rootPostId, response.error);\n        } else if (response.type === 'ok') {\n            this.props.actions.postEphemeralCallResponseForPost(this.props.postId, this.props.rootPostId, response.text);\n        } else if (response.type === 'navigate') {\n            this.props.actions.handleAppBindingNavigate(response.url, response.inNewTab);\n        } else if (response.type === 'form') {\n            this.props.actions.openAppsModal(response.form);\n        } else {\n            this.props.actions.postEphemeralCallResponseForPost(this.props.postId, this.props.rootPostId, {\n                id: t('interactive_apps.error.app_not_found'),\n                defaultMessage: 'App {appId} not found',\n                values: {\n                    appId: binding.app_id,\n                },\n            });\n        }\n    } catch (error) {\n        this.props.actions.postEphemeralCallResponseForPost(this.props.postId, this.props.rootPostId, {\n            id: t('interactive_apps.error.response'),\n            defaultMessage: 'App responded with an error',\n        });\n    }\n}", "CodeBleu_score": 39.90272119569999}]}
{"instance_id": "7b2d58ae93e2", "generation_result": [{"code": "handleDropdownOpened = (open: boolean) =>{\n\t  const { onDropdownOpened } = this.props;\n  const { buttonRef } = this.state;\n\n  if (buttonRef) {\n    const { top, bottom } = buttonRef.getBoundingClientRect();\n    const spaceAbove = top;\n    const spaceBelow = window.innerHeight - bottom;\n    const openUpwards = spaceAbove > spaceBelow;\n    this.setState({ openUpwards });\n  }\n\n  onDropdownOpened(open);\n}", "CodeBleu_score": 21.25422272243146}, {"code": "handleDropdownOpened = (open: boolean) =>{\n\t  const { handleDropdownState, dropdownButtonRef } = this.props;\n  const { dropdownHeight } = this.state;\n\n  handleDropdownState(open);\n\n  if (!open) return;\n\n  const dropdownButton = dropdownButtonRef.current;\n  const { top, bottom } = dropdownButton.getBoundingClientRect();\n  const dropdownButtonHeight = dropdownButton.offsetHeight;\n  const dropdownButtonWidth = dropdownButton.offsetWidth;\n  const dropdownButtonX = dropdownButton.offsetLeft;\n  const dropdownButtonY = dropdownButton.offsetTop;\n  const windowHeight = window.innerHeight;\n  const windowWidth = window.innerWidth;\n  const availableSpaceAbove = top;\n  const availableSpaceBelow = windowHeight - bottom;\n\n  this.setState({\n    dropdownHeight,\n    dropdownWidth: dropdownButtonWidth,\n    dropdownX: dropdownButtonX,\n    dropdownY: dropdownButtonY,\n    dropdownOpenUpwards: availableSpaceAbove > availableSpaceBelow,\n  });\n}", "CodeBleu_score": 29.729577757146487}, {"code": "handleDropdownOpened = (open: boolean) =>{\n\t  const { handleDropdownState, dropdownButtonRef } = this.props;\n  const { dropdownPosition } = this.state;\n\n  if (!open) {\n    handleDropdownState(open);\n    return;\n  }\n\n  const dropdownButton = dropdownButtonRef.current;\n  if (!dropdownButton) return;\n\n  const dropdownButtonRect = dropdownButton.getBoundingClientRect();\n  const dropdownButtonTop = dropdownButtonRect.top;\n  const dropdownButtonBottom = dropdownButtonRect.bottom;\n\n  const spaceAbove = dropdownButtonTop;\n  const spaceBelow = window.innerHeight - dropdownButtonBottom;\n\n  const dropdownPositionAbove = spaceAbove > spaceBelow;\n\n  this.setState({ dropdownPosition: dropdownPositionAbove ? 'above' : 'below' });\n  handleDropdownState(open);\n}", "CodeBleu_score": 31.06933478855988}]}
{"instance_id": "024f57c26061", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\t    const post = getPost(state, ownProps.postId);\n    const isSystemMessage = isSystemMessagePost(post);\n    const appsEnabled = appsEnabled(state);\n    const pluginComponents = state.plugins.components.Post;\n    const userRoles = getCurrentUserId(state) ? getRoles(state) : [];\n    const teamId = getCurrentTeamId(state);\n    const isMobileView = getIsMobileView(state);\n    const marketplaceAccess = haveICurrentTeamPermission(state, Permissions.MANAGE_SYSTEM_ACTIONS);\n    const currentUser = getCurrentUser(state);\n    const isSystemAdmin = isSystemAdmin(currentUser.roles);\n\n    let appBindings: AppBinding[] = [];\n    let appsStatus = AppBindingLocations.NONE;\n    if (appsEnabled && !isSystemMessage) {\n        const postType = post.type;\n        if (postType === Constants.POST_TYPES.CHANNEL_DELETED) {\n            appsStatus = AppBindingLocations.POST_MENU_CHANNEL_DELETED;\n        } else if (postType === Constants.POST_TYPES.SYSTEM_EPHEMERAL) {\n            appsStatus = AppBindingLocations.POST_MENU_EPHEMERAL;\n        } else if (postType === Constants.POST_TYPES.SYSTEM_MESSAGE) {\n            appsStatus = AppBindingLocations.NONE;\n        } else if (isMarketplaceEnabled(state) && isCombinedUserActivityPost(post)) {\n            appsStatus = AppBindingLocations.POST_MENU_MARKETPLACE;\n        } else if (isMarketplaceEnabled(state) && !isCombinedUserActivityPost(post)) {\n            appsStatus = AppBindingLocations.POST_MENU_MARKETPLACE;\n        } else if (isMarketplaceEnabled(state) && isCombinedUserActivityPost(post)) {\n            appsStatus = AppBindingLocations.POST_MENU_MARKETPLACE;\n        } else if (isMarketplaceEnabled(state) && !isCombinedUser", "CodeBleu_score": 43.2379712435743}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\t    const {post} = ownProps;\n    const {isMobileView} = state.views.channel;\n    const {appsEnabled} = state.plugins;\n    const {pluginComponents} = state.plugins;\n    const userRoles = getCurrentUser(state).roles;\n    const teamId = getCurrentTeamId(state);\n    const isSystemAdmin = isCurrentUserSystemAdmin(state);\n    const isSystemMessage = post && post.type === PostTypes.SYSTEM_MESSAGE;\n    const showAppBindings = appsEnabled && post && post.type === PostTypes.ADD_TO_CHANNEL;\n    const appBindings = showAppBindings ? getPostAppBindings(state, post.id) : [];\n    const marketplaceEnabled = getMarketplaceEnabled(state);\n    const haveICurrentTeamPermission = haveITeamPermission(state, teamId, Permissions.MANAGE_TEAM);\n    const isCombinedUserActivityPost = isCombinedUserActivityPostType(post);\n    return {\n        appBindings,\n        appsEnabled,\n        pluginComponents,\n        userRoles,\n        teamId,\n        isMobileView,\n        marketplaceEnabled,\n        haveICurrentTeamPermission,\n        isSystemMessage,\n        isSystemAdmin,\n        isCombinedUserActivityPost,\n    };\n}", "CodeBleu_score": 44.07874426657684}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\t    const post = getPost(state, ownProps.postId);\n    const isSystemMessage = post ? isSystemMessagePost(post) : false;\n    const showAppBindings = !isSystemMessage && getPostOptionBindingEnabled(state) && getPostOptionBindingForCurrentTeam(state, post?.type);\n    const appBindings = showAppBindings ? getPostOptionBindings(state, post?.type) : [];\n    const appsEnabled = appsEnabled(state);\n    const pluginComponents = getPluginComponents(state);\n    const userRoles = getCurrentUser(state).roles;\n    const teamId = getCurrentTeamId(state);\n    const isMobileView = getIsMobileView(state);\n    const marketplaceAccess = haveICurrentTeamPermission(state, Permissions.MANAGE_SYSTEM_BOTS) || haveICurrentTeamPermission(state, Permissions.MANAGE_OAUTH);\n    return {\n        appBindings,\n        appsEnabled,\n        pluginComponents,\n        userRoles,\n        teamId,\n        isMobileView,\n        marketplaceAccess,\n    };\n}", "CodeBleu_score": 42.81375969888034}]}
{"instance_id": "ae0a07f4dbea", "generation_result": [{"code": "export default function DeviceIcon(props: Props){\n\t  const intl = useIntl();\n  const title = isMessageDescriptor(props.deviceTitle)\n    ? intl.formatMessage(props.deviceTitle)\n    : props.deviceTitle;\n\n  return (\n    <i\n      className={props.devicePicture}\n      title={title}\n      aria-hidden=\"true\"\n    />\n  );\n}", "CodeBleu_score": 54.81674677188737}, {"code": "export default function DeviceIcon(props: Props){\n\t  const intl = useIntl();\n  const { deviceTitle, devicePicture } = props;\n\n  const title = isMessageDescriptor(deviceTitle)\n    ? intl.formatMessage(deviceTitle)\n    : deviceTitle;\n\n  return <i className={devicePicture} title={title} />;\n}", "CodeBleu_score": 40.631356475481454}, {"code": "export default function DeviceIcon(props: Props){\n\t  const intl = useIntl();\n  const { deviceTitle, devicePicture } = props;\n  const title = isMessageDescriptor(deviceTitle)\n    ? intl.formatMessage(deviceTitle)\n    : deviceTitle;\n\n  return (\n    <i\n      className={devicePicture}\n      title={title}\n    />\n  );\n}", "CodeBleu_score": 46.75161565392543}]}
{"instance_id": "e0a805402908", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t    const currentChannel = getCurrentChannel(state, ownProps);\n\n    const searchTerm = state.views.search.searchTerms.searchTerm;\n    const groupsNotAssociatedWithChannel = getGroupsNotAssociatedWithChannel(state, currentChannel.id);\n    const filteredGroups = searchTerm ?\n        groupsNotAssociatedWithChannel.filter((group) => group.name.toLowerCase().includes(searchTerm.toLowerCase())) :\n        groupsNotAssociatedWithChannel;\n\n    return {\n        currentChannelId: currentChannel.id,\n        currentChannelName: currentChannel.display_name,\n        currentTeamId: currentChannel.team_id,\n        ...ownProps,\n        searchTerm,\n        filteredGroups,\n    };\n}", "CodeBleu_score": 45.510141412249816}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t    const currentChannel = getCurrentChannel(state) || {};\n    const currentTeamId = getCurrentTeamId(state) || '';\n    const searchTerm = getSearchTerm(state) || '';\n    const groups = getGroups(state) || [];\n    const excludeGroupID = getCurrentChannel(state)?.group_constrained || '';\n    const filteredGroups = groups.filter((group) => {\n        if (excludeGroupID === group.id) {\n            return false;\n        }\n        if (searchTerm) {\n            const regex = new RegExp(searchTerm, 'i');\n            return regex.test(group.display_name) || regex.test(group.name);\n        }\n        return true;\n    });\n    return {\n        currentChannelId: currentChannel.id,\n        currentChannelName: currentChannel.display_name,\n        currentTeamId,\n        ...ownProps,\n        searchTerm,\n        filteredGroups,\n    };\n}", "CodeBleu_score": 51.10536698238883}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t    const searchTerm = getSearchTerm(state);\n    const currentChannel = ownProps.channel || getCurrentChannel(state);\n    const { channel } = currentChannel;\n    const { team } = currentChannel;\n\n    let groups = getGroups(state);\n    if (channel) {\n        groups = groups.filter((group) => !group.associated_channels.includes(channel.id));\n    }\n    if (searchTerm) {\n        groups = groups.filter((group) => group.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    return {\n        currentChannelId: channel?.id,\n        currentChannelName: channel?.name,\n        currentTeamId: team?.id,\n        ...ownProps,\n        searchTerm,\n        groups,\n    };\n}", "CodeBleu_score": 40.543805895577954}]}
{"instance_id": "a3412b1c0762", "generation_result": [{"code": "componentDidUpdate(prevProps: Props){\n\t  if (prevProps.searchTerm !== this.props.searchTerm) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.setGroupsLoadingState(true);\n      this.props.actions.getGroupsNotAssociatedToChannel(\n        this.props.searchTerm,\n        this.props.channelId\n      );\n      this.setGroupsLoadingState(false);\n    }, 500);\n  }\n}", "CodeBleu_score": 25.83269512038334}, {"code": "componentDidUpdate(prevProps: Props){\n\t    if (prevProps.searchTerm !== this.props.searchTerm) {\n        clearTimeout(this.searchTimeout);\n        this.searchTimeout = setTimeout(async () => {\n            this.setGroupsLoadingState(true);\n            await this.props.actions.getGroupsNotAssociatedToChannel(\n                this.props.channel.id,\n                this.props.searchTerm,\n                this.props.page,\n                this.props.perPage,\n                this.props.sort,\n            );\n            this.setGroupsLoadingState(false);\n        }, 500);\n    }\n}", "CodeBleu_score": 35.68363263218936}, {"code": "componentDidUpdate(prevProps: Props){\n\t    if (prevProps.searchTerm !== this.props.searchTerm) {\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(async () => {\n        this.setGroupsLoadingState(true);\n        await this.props.actions.getGroupsNotAssociatedToChannel(\n          this.props.channel.id,\n          this.props.searchTerm,\n          this.props.page,\n        );\n        this.setGroupsLoadingState(false);\n      }, 500);\n    }\n  }", "CodeBleu_score": 31.242501492871178}]}
{"instance_id": "0f47faf97411", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t  const currentChannel = ownProps.currentChannel || getCurrentChannel(state);\n  const currentTeamId = getCurrentTeamId(state);\n  const searchTerm = getSearchTerm(state);\n  const excludedGroups = getGroupsAssociatedToChannel(state, currentChannel, currentTeamId);\n  const groups = getSortedGroups(state, currentTeamId).filter((group) => !excludedGroups.includes(group.id));\n  const filteredGroups = searchTerm ? groups.filter((group) => group.name.toLowerCase().includes(searchTerm.toLowerCase())) : groups;\n\n  return {\n    currentChannel,\n    currentTeamId,\n    onAssociatedGroupChanged: (channelId: string, groupId: string) => {\n      dispatch(associateGroupWithChannel(channelId, groupId));\n    },\n    onChannelTypeChanged: (channelId: string, channelType: ChannelType) => {\n      dispatch(updateChannelType(channelId, channelType));\n    },\n    onClose: () => {\n      dispatch(closeModal());\n    },\n    onExcludeGroup: (channelId: string, groupId: string) => {\n      dispatch(excludeGroupFromChannel(channelId, groupId));\n    },\n    onSearch: (term: string) => {\n      dispatch(searchGroups(term));\n    },\n    onToggleEmoji: () => {\n      dispatch(toggleEmojiPicker());\n    },\n    searchTerm,\n    ...ownProps,\n    filteredGroups,\n    excludedGroups,\n  };\n}", "CodeBleu_score": 38.19733148014734}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t    const currentChannel = getCurrentChannelId(state) || ownProps.channelId;\n    const currentUserId = getCurrentUserId(state);\n    const searchTerm = state.views.search.searchTerms.search_autocomplete;\n    const excludeGroups = state.entities.channels.myMembers || {};\n    const groups = Object.values(state.entities.groups.groups);\n    const filteredGroups = groups.filter((group) => {\n        if (excludeGroups[group.id]) {\n            return false;\n        }\n\n        if (searchTerm) {\n            const regex = new RegExp(searchTerm, 'i');\n            if (regex.test(group.name)) {\n                return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    });\n\n    return {\n        currentChannel,\n        currentUserId,\n        onAddChannel: (channelId: string) => dispatch(addChannel(channelId)),\n        onChannelClick: (channelId: string) => dispatch(selectChannel(channelId)),\n        onClose: () => dispatch(closeRightHandSide()),\n        onCreateChannel: (channelName: string) => dispatch(createChannel(channelName)),\n        onJoinChannel: (channelId: string) => dispatch(joinChannel(channelId)),\n        onLeaveChannel: (channelId: string) => dispatch(leaveChannel(channelId)),\n        onSearch: (term: string) => dispatch(setSearchTerm(term)),\n        onToggleFavoriteChannel: (channelId: string) => dispatch(toggleFavoriteChannel(channelId)),\n        onToggleUnreads: (channelId: string) => dispatch(toggleChannelReadState(channelId)),\n        onToggleFavoriteGroup: (groupId: string) => dispatch(toggleFavoriteGroup(groupId)),\n        onToggleGroupUnreads: (groupId: string) => dispatch(toggleGroupReadState(groupId)),\n        onToggleGroupMention: (groupId: string) => dispatch(toggleGroupMention(groupId)),\n        onToggleGroupDisplay: (groupId: string) => dispatch(toggleGroupDisplay(groupId)),\n        onToggleGroupCollapsed: (groupId: string) => dispatch", "CodeBleu_score": 40.47338342350548}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t    const currentChannel = ownProps.channel || getCurrentChannel(state);\n    const searchTerm = getSearchTermForCurrentChannel(state);\n    const excludedGroups = getGroupsAssociatedToChannel(state, currentChannel);\n    const filteredGroups = getGroupsNotAssociatedToChannel(state, currentChannel, searchTerm, excludedGroups);\n\n    return {\n        currentChannelId: currentChannel.id,\n        currentChannelName: currentChannel.display_name,\n        currentChannelTeamId: currentChannel.team_id,\n        onAssociatedGroupDeleted: (group: Group) => {\n            dispatch(removeGroupAssociatedToChannel(currentChannel, group));\n        },\n        onGroupClick: (group: Group) => {\n            dispatch(setSearchTermForCurrentChannel(''));\n            dispatch(addGroupAssociatedToChannel(currentChannel, group));\n        },\n        onGroupDeleted: (group: Group) => {\n            dispatch(removeGroupAssociatedToChannel(currentChannel, group));\n        },\n        onModalDismissed: () => {\n            dispatch(setSearchTermForCurrentChannel(''));\n        },\n        onSearch: (term: string) => {\n            dispatch(setSearchTermForCurrentChannel(term));\n        },\n        searchTerm,\n        groups: filteredGroups,\n    };\n}", "CodeBleu_score": 37.045599564405585}]}
{"instance_id": "923c0c472c01", "generation_result": [{"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t    if (page > prevPage) {\n      this.setUsersLoadingState(true);\n      this.fetchUserProfiles(page);\n    }\n  }", "CodeBleu_score": 26.681477111454445}, {"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t    if (page > prevPage) {\n        this.setUsersLoadingState(true);\n        this.fetchUsers(page);\n    }\n}", "CodeBleu_score": 26.50787749139597}, {"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t    if (page > prevPage) {\n      this.setUsersLoadingState(true);\n      this.fetchUserProfiles(page);\n    }\n  }", "CodeBleu_score": 26.681477111454445}]}
{"instance_id": "4614bb3319bb", "generation_result": [{"code": "public search = (searchTerm: string): void => {\n\t    clearTimeout(this.searchTimeout);\n    const trimmedSearchTerm = searchTerm.trim();\n    this.setState({ searchTerm: trimmedSearchTerm });\n    if (trimmedSearchTerm) {\n        this.setUsersLoadingState(true);\n        this.searchTimeout = setTimeout(() => {\n            this.props.actions.searchProfiles(trimmedSearchTerm);\n            this.setUsersLoadingState(false);\n        }, 500);\n    }\n}", "CodeBleu_score": 57.4624774450529}, {"code": "public search = (searchTerm: string): void => {\n\t    clearTimeout(this.searchTimeout);\n    const trimmedSearchTerm = searchTerm.trim();\n    this.setState({ searchTerm: trimmedSearchTerm });\n    if (trimmedSearchTerm) {\n        this.setUsersLoadingState(true);\n        this.searchTimeout = setTimeout(async () => {\n            await this.props.actions.searchProfiles(trimmedSearchTerm);\n            this.setUsersLoadingState(false);\n        }, 500);\n    }\n}", "CodeBleu_score": 60.99859774273507}, {"code": "public search = (searchTerm: string): void => {\n\t  clearTimeout(this.searchTimeout);\n  this.setState({ searchTerm: searchTerm.trim() });\n  if (searchTerm.trim() !== '') {\n    this.setUsersLoadingState(true);\n    this.searchTimeout = setTimeout(() => {\n      this.props.actions.searchProfiles(searchTerm.trim());\n      this.setUsersLoadingState(false);\n    }, 500);\n  }\n}", "CodeBleu_score": 31.515454024581253}]}
{"instance_id": "aeafe2d0ee11", "generation_result": [{"code": "visibleSections = () =>{\n\t  const result = new Set();\n\n  for (const section of this.config.sections) {\n    if (section.schema && section.title) {\n      if (!section.isHidden) {\n        result.add(section.url);\n      }\n\n      for (const subsection of section.subsections) {\n        if (subsection.schema && subsection.title) {\n          if (!subsection.isHidden) {\n            result.add(subsection.url);\n          }\n        }\n      }\n    }\n  }\n\n  return result;\n}", "CodeBleu_score": 26.867756067597}, {"code": "visibleSections = () =>{\n\t  const {\n    config,\n    license,\n    buildEnterpriseReady,\n    consoleAccess,\n    adminDefinition,\n    cloud,\n  } = this.props;\n  const result = new Set();\n  config.sections.forEach((section) => {\n    section.subsections.forEach((subsection) => {\n      subsection.items.forEach((item) => {\n        if (item.schema && item.title) {\n          if (!item.isHidden(\n            license,\n            buildEnterpriseReady,\n            consoleAccess,\n            adminDefinition,\n            cloud,\n          )) {\n            result.add(item.schema);\n          }\n        }\n      });\n    });\n  });\n  return result;\n}", "CodeBleu_score": 39.16618786689893}, {"code": "visibleSections = () =>{\n\t  const {\n    config,\n    license,\n    buildEnterpriseReady,\n    consoleAccess,\n    adminDefinition,\n    cloud,\n  } = this.props;\n\n  const result = new Set();\n\n  if (!config) {\n    return result;\n  }\n\n  const { sections } = config;\n\n  sections.forEach((section) => {\n    if (section.items) {\n      section.items.forEach((item) => {\n        if (item.schema && item.title && !item.isHidden(license, buildEnterpriseReady, consoleAccess, adminDefinition, cloud)) {\n          result.add(item.url);\n        }\n      });\n    }\n\n    if (section.subsections) {\n      section.subsections.forEach((subsection) => {\n        if (subsection.items) {\n          subsection.items.forEach((item) => {\n            if (item.schema && item.title && !item.isHidden(license, buildEnterpriseReady, consoleAccess, adminDefinition, cloud)) {\n              result.add(item.url);\n            }\n          });\n        }\n      });\n    }\n  });\n\n  return result;\n}", "CodeBleu_score": 42.2856586296484}]}
{"instance_id": "e869682a1b2c", "generation_result": [{"code": "handleImageChange = () =>{\n\t    if (this.fileInputRef && this.fileInputRef.current && this.fileInputRef.current.files && this.fileInputRef.current.files.length) {\n        this.props.setSaveNeeded(true);\n        this.setState({\n            image: this.fileInputRef.current.files[0],\n            delete: false\n        });\n    }\n}", "CodeBleu_score": 23.71521825566118}, {"code": "handleImageChange = () =>{\n\t  if (this.fileInput.current.files && this.fileInput.current.files[0]) {\n    this.props.setSaveNeeded(true);\n    this.setState({\n      image: this.fileInput.current.files[0],\n      deleteImage: false,\n    });\n  }\n}", "CodeBleu_score": 19.87744907051835}, {"code": "handleImageChange = () =>{\n\t    if (this.fileInput.current && this.fileInput.current.files) {\n        this.props.setSaveNeeded(true);\n        this.setState({\n            image: this.fileInput.current.files[0],\n            delete: false\n        });\n    }\n}", "CodeBleu_score": 20.814588578487747}]}
{"instance_id": "8bc13681a6b2", "generation_result": [{"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\t    if (channel.markedForRemoval) {\n        return;\n    }\n\n    const state = this.state;\n    const paginationProps = this.getPaginationProps();\n\n    this.props.onRemoveCallback(channel);\n\n    if (this.getVisibleTotalCount() - 1 <= (paginationProps.pageSize * state.page)) {\n        this.setStatePage(state.page - 1);\n    }\n}", "CodeBleu_score": 35.00817266244603}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\t  if (this.props.onRemoveCallback) {\n    this.props.onRemoveCallback(channel);\n  }\n\n  const { page, pageSize } = this.state;\n  const { endCount } = this.getPaginationProps();\n  const visibleTotalCount = this.getVisibleTotalCount();\n  if (visibleTotalCount - 1 < pageSize * (page - 1) && page > 1) {\n    this.setStatePage(page - 1);\n  }\n}", "CodeBleu_score": 39.73582078188011}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\t  if (this.isRemovingChannel(channel)) {\n    return;\n  }\n\n  const { page, pageSize } = this.state;\n  const { onRemoveCallback } = this.props;\n  onRemoveCallback(channel);\n\n  const endCount = page * pageSize;\n  if (endCount - pageSize < this.getVisibleTotalCount()) {\n    this.setStatePage(page - 1);\n  }\n}", "CodeBleu_score": 34.7836357535389}]}
{"instance_id": "ac41454927ac", "generation_result": [{"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t    const { channels, newChannels, removedChannels } = this.state;\n    let newRemovedChannels = [...removedChannels];\n    let newNewChannels = [...newChannels];\n    const index = newRemovedChannels.indexOf(channel);\n    if (index === -1) {\n        newRemovedChannels.push(channel);\n        const index = newNewChannels.indexOf(channel);\n        if (index !== -1) {\n            newNewChannels.splice(index, 1);\n        }\n    } else {\n        newRemovedChannels.splice(index, 1);\n    }\n    this.setState({ removedChannels: newRemovedChannels, newChannels: newNewChannels });\n    this.props.actions.setNavigationBlocked(true);\n}", "CodeBleu_score": 35.69075407766614}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t  const { channels, newChannels, removedChannels } = this.state;\n  const newRemovedChannels = [...removedChannels];\n  const newChannelsList = [...newChannels];\n\n  if (!newRemovedChannels.includes(channel)) {\n    newRemovedChannels.push(channel);\n    this.setState({ removedChannels: newRemovedChannels });\n  }\n\n  if (newChannelsList.includes(channel)) {\n    const index = newChannelsList.indexOf(channel);\n    newChannelsList.splice(index, 1);\n    this.setState({ newChannels: newChannelsList });\n  }\n\n  this.props.actions.setNavigationBlocked(true);\n}", "CodeBleu_score": 36.88760943691068}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t    const {\n        newChannels,\n        removedChannels,\n        newChannelsCount,\n        removedChannelsCount,\n    } = this.state;\n\n    let newRemovedChannels = removedChannels;\n    let newRemovedChannelsCount = removedChannelsCount;\n    let newNewChannels = newChannels;\n    let newNewChannelsCount = newChannelsCount;\n\n    if (newRemovedChannels.find((c) => c.id === channel.id)) {\n        newRemovedChannels = newRemovedChannels.filter((c) => c.id !== channel.id);\n        newRemovedChannelsCount--;\n    } else {\n        newRemovedChannels = newRemovedChannels.concat(channel);\n        newRemovedChannelsCount++;\n    }\n\n    if (newNewChannels.find((c) => c.id === channel.id)) {\n        newNewChannels = newNewChannels.filter((c) => c.id !== channel.id);\n        newNewChannelsCount--;\n    }\n\n    this.setState({\n        newChannels: newNewChannels,\n        newChannelsCount: newNewChannelsCount,\n        removedChannels: newRemovedChannels,\n        removedChannelsCount: newRemovedChannelsCount,\n    });\n    this.props.actions.setNavigationBlocked(true);\n}", "CodeBleu_score": 32.567312481728976}]}
{"instance_id": "bdc81f9a884e", "generation_result": [{"code": "private removeTeam = (team: Team) =>{\n\t  const { paginationProps } = this.getPaginationProps();\n  const { page, pageSize } = paginationProps;\n  const { visibleTotalCount } = this.getVisibleTotalCount();\n  const { onRemoveCallback } = this.props;\n\n  if (team.isMarkedForRemoval) {\n    return;\n  }\n\n  const newPage = Math.ceil((visibleTotalCount - 1) / pageSize);\n  onRemoveCallback(team);\n\n  if (newPage < page) {\n    this.setStatePage(newPage);\n  }\n}", "CodeBleu_score": 40.71571464225242}, {"code": "private removeTeam = (team: Team) =>{\n\t    if (team.isMarkedForRemoval) {\n        return;\n    }\n\n    const { paginationProps, onRemoveCallback } = this.props;\n    const { pageNumber, pageSize } = paginationProps;\n\n    const totalCount = this.getVisibleTotalCount();\n    const totalPages = Math.ceil(totalCount / pageSize);\n\n    team.isMarkedForRemoval = true;\n    onRemoveCallback(team);\n\n    if (pageNumber > totalPages) {\n        this.setStatePage(pageNumber - 1);\n    }\n}", "CodeBleu_score": 37.32978454575867}, {"code": "private removeTeam = (team: Team) =>{\n\t    if (this.state.teamsToRemove.includes(team)) {\n        return;\n    }\n\n    const { paginationProps, visibleTotalCount } = this.getPaginationProps(\n        this.props.teams,\n        this.state.teamsToRemove\n    );\n\n    this.props.onRemoveCallback(team);\n\n    if (paginationProps.pageCount !== this.state.paginationProps.pageCount) {\n        const newPage = Math.min(\n            paginationProps.pageCount,\n            this.state.paginationProps.page\n        );\n\n        this.setStatePage(newPage);\n    }\n}", "CodeBleu_score": 34.47091789693667}]}
{"instance_id": "e55dd105e5d2", "generation_result": [{"code": "async function loadListInPageNumber(page: number){\n\t  try {\n    const teams = await getTeams(page);\n    const mappedTeams = teams.map((team: any) => ({\n      id: team.id,\n      name: team.displayName,\n      shortName: team.shortDisplayName,\n      crest: team.crestUrl,\n    }));\n    const sortedTeams = mappedTeams.sort((a: any, b: any) =>\n      a.name.localeCompare(b.name)\n    );\n\n    if (page === 1) {\n      setList(sortedTeams);\n    } else {\n      setList((prevList: any) => [...prevList, ...sortedTeams]);\n    }\n\n    setPageNumber(page + 1);\n  } catch (error) {\n    console.error(error);\n  }\n}", "CodeBleu_score": 44.74729864208623}, {"code": "async function loadListInPageNumber(page: number){\n\t  try {\n    const response = await fetch(\n      `https://api.opendota.com/api/teams?page=${page}`\n    );\n    const data = await response.json();\n\n    const sortedTeams = data.map((team: any) => ({\n      name: team.name,\n      wins: team.wins,\n      losses: team.losses,\n      rating: team.rating,\n    })).sort((a: any, b: any) => a.name.localeCompare(b.name));\n\n    if (page === 1) {\n      setList(sortedTeams);\n    } else {\n      setList((prevList: any) => [...prevList, ...sortedTeams]);\n    }\n\n    setPage(page);\n  } catch (error) {\n    console.error('Error fetching teams:', error);\n  }\n}", "CodeBleu_score": 42.68313640650292}, {"code": "async function loadListInPageNumber(page: number){\n\t    try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}?page=${page}`);\n        const data = await response.json();\n\n        const sortedData = data.teams.sort((a: { displayName: string; }, b: { displayName: string; }) => a.displayName.localeCompare(b.displayName));\n\n        if (page === 1) {\n            setList(sortedData);\n        } else {\n            setList((prevList: any[]) => [...prevList, ...sortedData]);\n        }\n\n        setPageNumber(page);\n    } catch (error) {\n        console.error('Error fetching teams:', error);\n    }\n}", "CodeBleu_score": 37.08136768651787}]}
{"instance_id": "2de31ed13207", "generation_result": [{"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t    try {\n        const teams = await searchTeams({\n            q: term,\n            page: 1,\n            per_page: 10,\n        });\n\n        if (teams.data.length === 0) {\n            callBack([]);\n            return;\n        }\n\n        const options = teams.data.map((team) => ({\n            value: team.id.toString(),\n            label: team.name,\n        }));\n\n        callBack(options);\n    } catch (error) {\n        console.error(error);\n        callBack([]);\n    }\n}", "CodeBleu_score": 56.88085906968035}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t  try {\n    const teams = await searchTeams(term, {\n      limit: 10,\n      cursor: null,\n    });\n    if (teams.length === 0) {\n      callBack([]);\n    } else {\n      const options = teams.map((team) => ({\n        label: team.name,\n        value: team.id,\n      }));\n      callBack(options);\n    }\n  } catch (error) {\n    console.error(error);\n    callBack([]);\n  }\n}", "CodeBleu_score": 48.55821287040537}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t  const options = {\n    limit: 10,\n    offset: 0,\n  };\n\n  try {\n    const response = await searchTeams(term, options);\n    const teams = response.data.teams;\n\n    if (teams.length > 0) {\n      const formattedTeams = teams.map((team) => ({\n        label: team.name,\n        value: team.id,\n      }));\n      callBack(formattedTeams);\n    } else {\n      callBack([]);\n    }\n  } catch (error) {\n    console.error('Error searching teams:', error);\n    callBack([]);\n  }\n}", "CodeBleu_score": 53.58782408680853}]}
{"instance_id": "845d63ff0f74", "generation_result": [{"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t    const {rolesToChange, groupTeams, groupChannels} = this.state;\n    const newRolesToChange = rolesToChange.map((item: any) => {\n        if (item.id === id && item.type === type) {\n            return {\n                ...item,\n                schemeAdmin,\n            };\n        }\n        return item;\n    });\n    const newGroupTeams = groupTeams.map((item: any) => {\n        if (item.id === id && item.type === type) {\n            return {\n                ...item,\n                schemeAdmin,\n            };\n        }\n        return item;\n    });\n    const newGroupChannels = groupChannels.map((item: any) => {\n        if (item.id === id && item.type === type) {\n            return {\n                ...item,\n                schemeAdmin,\n            };\n        }\n        return item;\n    });\n    const list = type === 'team' ? newGroupTeams : newGroupChannels;\n    this.setState({\n        rolesToChange: newRolesToChange,\n        groupTeams: type === 'team' ? newGroupTeams : groupTeams,\n        groupChannels: type === 'channel' ? newGroupChannels : groupChannels,\n    });\n    this.props.actions.saveGroupRoles(list);\n    this.props.actions.setNavigationBlocked(true);\n}", "CodeBleu_score": 37.4740431992234}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t    const { rolesToChange, groupTeams, groupChannels } = this.state;\n    const list = type === 'team' ? groupTeams : groupChannels;\n    const newList = list.map((item) => {\n        if (item.id === id) {\n            return {\n                ...item,\n                schemeAdmin,\n            };\n        }\n        return item;\n    });\n    this.setState({\n        rolesToChange: [...rolesToChange, id],\n        [type === 'team' ? 'groupTeams' : 'groupChannels']: newList,\n    });\n    this.props.actions.saveNeeded(true);\n    this.props.actions.blockNavigation(true);\n}", "CodeBleu_score": 30.132134115421437}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t    const { rolesToChange, groupTeams, groupChannels } = this.state;\n    const teamsToChange = type === 'team' ? groupTeams : groupChannels;\n    const newTeams = teamsToChange.map((team) => {\n        if (team.id === id) {\n            return { ...team, schemeAdmin };\n        }\n        return team;\n    });\n    const newState = {\n        rolesToChange,\n        groupTeams: type === 'team' ? newTeams : groupTeams,\n        groupChannels: type === 'channel' ? newTeams : groupChannels,\n    };\n    this.setState(newState);\n    this.props.actions.saveNeeded(true);\n    this.props.actions.blockNavigation(true);\n}", "CodeBleu_score": 30.19520929771841}]}
{"instance_id": "02b54f0774f3", "generation_result": [{"code": "handleRolesToUpdate = async () =>{\n\t  const rolesToChange = this.state.rolesToChange;\n  const promises = [];\n  if (rolesToChange.length > 0) {\n    rolesToChange.forEach(role => {\n      const syncableIds = role.syncableIds;\n      const syncableTypes = role.syncableTypes;\n      syncableIds.forEach((syncableId, index) => {\n        const syncableType = syncableTypes[index];\n        promises.push(\n          this.updateRole(syncableId, syncableType, role.role)\n        );\n      });\n    });\n    const results = await Promise.all(promises);\n    const errors = results.filter(result => result.error);\n    if (errors.length > 0) {\n      this.setState({ error: 'Error updating roles' });\n    } else {\n      this.setState({ rolesToChange: [] });\n    }\n  }\n  return true;\n}", "CodeBleu_score": 34.701452893051425}, {"code": "handleRolesToUpdate = async () =>{\n\t  const { rolesToChange } = this.state;\n  const promises = [];\n\n  if (rolesToChange.length > 0) {\n    rolesToChange.forEach((role) => {\n      const { syncableId, syncableType } = role;\n\n      const updatePromise = this.updateRole(syncableId, syncableType);\n      promises.push(updatePromise);\n    });\n\n    const results = await Promise.all(promises);\n\n    const errors = results.filter((result) => result.error);\n\n    if (errors.length > 0) {\n      this.setState({ error: errors[0].error });\n    } else {\n      this.setState({ rolesToChange: [] });\n    }\n  }\n\n  return true;\n}", "CodeBleu_score": 33.107595175626095}, {"code": "handleRolesToUpdate = async () =>{\n\t  const { rolesToChange } = this.state;\n\n  if (rolesToChange.length) {\n    const promises = [];\n    rolesToChange.forEach((role) => {\n      const { id, type } = role;\n      const syncableId = id.split(\":\")[1];\n      const syncableType = type.toLowerCase();\n\n      const promise = this.updateRole(syncableId, syncableType);\n      promises.push(promise);\n    });\n\n    const results = await Promise.allSettled(promises);\n    const errors = results.filter((result) => result.status === \"rejected\");\n\n    if (errors.length) {\n      this.setState({\n        errorMessage: `Error updating roles: ${errors\n          .map((error) => error.reason)\n          .join(\", \")}`,\n        rolesToChange: [],\n      });\n      return false;\n    } else {\n      this.setState({\n        rolesToChange: [],\n      });\n      return true;\n    }\n  }\n}", "CodeBleu_score": 42.25560227391071}]}
{"instance_id": "30463a7bcb15", "generation_result": [{"code": "nextPage = async () =>{\n\t  const { page, members } = this.state;\n  const { total } = this.props;\n  if (page * 30 >= total) return;\n  this.setState({ loading: true });\n  const nextMembers = await getMembers(page + 1);\n  this.setState({\n    loading: false,\n    page: page + 1,\n    members: [...members, ...nextMembers],\n  });\n}", "CodeBleu_score": 18.64583344624822}, {"code": "nextPage = async () =>{\n\t    const { page, members, total } = this.state;\n    const nextPage = page + 1;\n    const nextPageStart = nextPage * 10;\n    if (nextPageStart > total) return;\n    this.setState({ loading: true });\n    const response = await fetchMembers(nextPage);\n    this.setState({\n      loading: false,\n      members: [...members, ...response.members],\n      page: nextPage,\n    });\n  }", "CodeBleu_score": 20.925413345538722}, {"code": "nextPage = async () =>{\n\t    const { page, member } = this.state;\n    if (member.length >= this.state.total) return;\n    this.setState({ loading: true });\n    const { data: { members, total } } = await getMembers(page + 1);\n    this.setState({\n      member: [...this.state.member, ...members],\n      loading: false,\n      total,\n      page: page + 1\n    });\n  }", "CodeBleu_score": 21.18177850099962}]}
{"instance_id": "d6aba286f65f", "generation_result": [{"code": "public handleGroupSearchKeyUp(e: any){\n\t  if (e.keyCode === 13) {\n    this.setState({\n      page: 0,\n    });\n    this.searchGroups();\n  }\n\n  const newState = {\n    ...this.state,\n    page: 0,\n  };\n\n  const searchString = e.target.value;\n\n  if (searchString.length === 0) {\n    newState.groupSearch = {\n      ...newState.groupSearch,\n      status: \"all\",\n      searchString: \"\",\n    };\n  } else if (searchString.match(/^(all|active|inactive)$/i)) {\n    newState.groupSearch = {\n      ...newState.groupSearch,\n      status: searchString.toLowerCase(),\n      searchString: \"\",\n    };\n  } else {\n    newState.groupSearch = {\n      ...newState.groupSearch,\n      status: \"all\",\n      searchString,\n    };\n  }\n\n  this.setState(newState);\n}", "CodeBleu_score": 32.691879587123765}, {"code": "public handleGroupSearchKeyUp(e: any){\n\t    if (e.key === 'Enter') {\n        this.setState({ page: 0 });\n        this.searchGroups();\n    }\n\n    const state = {\n        ...this.state,\n        groupSearch: {\n            ...this.state.groupSearch,\n            searchString: e.target.value,\n        },\n    };\n\n    if (e.target.value === '') {\n        state.groupSearch.searchString = '';\n        state.groupSearch.searchType = 'all';\n    } else {\n        const searchTypeMapping = {\n            '^[0-9]+$': 'id',\n            '^[a-zA-Z0-9]+$': 'name',\n            '^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\\\.[a-zA-Z0-9]+$': 'email',\n        };\n\n        for (const [regex, searchType] of Object.entries(searchTypeMapping)) {\n            if (new RegExp(regex).test(e.target.value)) {\n                state.groupSearch.searchType = searchType;\n                break;\n            }\n        }\n    }\n\n    this.setState(state);\n}", "CodeBleu_score": 33.94344365188097}, {"code": "public handleGroupSearchKeyUp(e: any){\n\t    if (e.keyCode === 13) {\n        this.setState({ page: 0 });\n        this.props.searchGroups(this.state.search);\n    }\n    const newState = { ...this.state };\n    newState.search = e.target.value;\n    newState.groupSearch = this.regex(newState.search).test\n        ? {\n            name: newState.search,\n            description: newState.search,\n            owner: newState.search,\n        }\n        : {\n            name: undefined,\n            description: undefined,\n            owner: undefined,\n        };\n    this.setState(newState);\n}", "CodeBleu_score": 29.96913261610562}]}
{"instance_id": "f0ab31c8ac4b", "generation_result": [{"code": "reloadPercentage = async () => {\n\t  const { upgradePercentage, error } = await this.props.actions.getUpgradeStatus();\n  if (upgradePercentage >= 100) {\n    clearInterval(this.interval);\n    this.interval = null;\n    this.props.actions.upgradeToE0Status();\n    this.props.actions.getUpgradeStatus();\n  } else if (upgradePercentage > 0 && !this.interval) {\n    this.interval = setInterval(this.reloadPercentage, 2000);\n  }\n  this.setState({ upgradePercentage, error });\n}", "CodeBleu_score": 50.12234020464659}, {"code": "reloadPercentage = async () => {\n\t  const { upgradePercentage, upgradeError } = await this.props.actions.getUpgradeStatus();\n  if (upgradePercentage > 0) {\n    if (!this.interval) {\n      this.interval = setInterval(this.reloadPercentage, 2000);\n    }\n  } else {\n    clearInterval(this.interval);\n    this.interval = null;\n    if (upgradeError) {\n      trackEvent(`${this.props.device.model} - Upgrade Error`, {\n        error: upgradeError,\n      });\n      this.setState({ upgradeError });\n    } else {\n      trackEvent(`${this.props.device.model} - Upgrade Success`);\n      this.props.actions.upgradeToE0Status();\n    }\n  }\n  this.setState({ upgradePercentage });\n}", "CodeBleu_score": 54.7683168522332}, {"code": "reloadPercentage = async () => {\n\t    const { actions, upgradeStatus } = this.props;\n\n    if (upgradeStatus.percentage === 100) {\n      clearInterval(this.interval);\n      this.interval = null;\n      actions.upgradeToE0Status();\n      return;\n    }\n\n    if (upgradeStatus.percentage > 0 && !this.interval) {\n      this.interval = setInterval(async () => {\n        const { actions, upgradeStatus } = this.props;\n        actions.upgradeToE0Status();\n\n        if (upgradeStatus.percentage === 100) {\n          clearInterval(this.interval);\n          this.interval = null;\n          actions.upgradeToE0Status();\n        }\n      }, 2000);\n    }\n\n    this.setState({\n      percentage: upgradeStatus.percentage,\n      error: upgradeStatus.error,\n    });\n  }", "CodeBleu_score": 33.13784394690437}]}
{"instance_id": "f91ab43e6fe1", "generation_result": [{"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\t    e.preventDefault();\n    if (fileObj) {\n      setIsUploading(true);\n      const response = await dispatch(uploadLicense(fileObj));\n      if (response.type === 'uploadLicense/rejected') {\n        setFileObj(null);\n        setServerError(response.error.message);\n        setIsUploading(false);\n      } else {\n        await dispatch(getLicenseConfig());\n        setFileObj(null);\n        setServerError('');\n        setIsUploading(false);\n        setUploadSuccessful(true);\n      }\n    }\n  }", "CodeBleu_score": 56.794786994798955}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\t    e.preventDefault();\n    if (fileObj) {\n      setIsUploading(true);\n      const res = await dispatch(uploadLicense(fileObj));\n      if (res.error) {\n        setFileObj(null);\n        setServerError(res.error);\n        setIsUploading(false);\n      } else {\n        dispatch(getLicenseConfig());\n        setFileObj(null);\n        setServerError(\"\");\n        setIsUploading(false);\n        setUploadSuccessful(true);\n      }\n    }\n  }", "CodeBleu_score": 57.0916812170317}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\t    e.preventDefault();\n    if (fileObj) {\n        setIsUploading(true);\n        try {\n            await dispatch(uploadLicense(fileObj));\n        } catch (error) {\n            setFileObj(null);\n            setServerError(error.message);\n            setIsUploading(false);\n        }\n        setFileObj(null);\n        await dispatch(getLicenseConfig());\n        setIsUploading(false);\n        setUploadSuccessful(true);\n    }\n}", "CodeBleu_score": 57.014583455083425}]}
{"instance_id": "840d965d4dcc", "generation_result": [{"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\t  e.preventDefault();\n\n  if (this.props.confirmation) {\n    this.setState({ confirmation: false });\n    return;\n  }\n\n  this.setState({ saving: true, serverErrors: [] });\n\n  if (this.state.saveNeeded) {\n    try {\n      const roleBindings = this.props.editRole.permissions.map((setting: string) => {\n        const roleBinding: RoleBinding = {\n          userOrGroup: {\n            name: this.props.editRole.name,\n            kind: this.props.editRole.kind,\n          },\n          roleRef: {\n            name: setting,\n          },\n        };\n        return roleBinding;\n      });\n      await this.props.updateRole(roleBindings);\n    } catch (err) {\n      this.setState({ serverErrors: [err.message] });\n      return;\n    }\n  }\n\n  try {\n    await this.props.updateSettings(this.state.settings);\n  } catch (err) {\n    this.setState({ serverErrors: [err.message] });\n    return;\n  }\n\n  this.props.onClose();\n  this.setState({ saving: false, saveNeeded: false });\n}", "CodeBleu_score": 32.2770995775359}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\t  e.preventDefault();\n  if (this.props.confirmation) {\n    this.setState({ confirmation: false });\n    return;\n  }\n\n  this.setState({ saving: true, serverError: '' });\n\n  if (this.props.saveNeeded) {\n    const roleBindings = this.props.settings.map(setting => ({\n      role: setting.role,\n      members: setting.members,\n    }));\n\n    try {\n      await this.props.updateRole(roleBindings);\n    } catch (err) {\n      this.setState({ saving: false, serverError: err.message });\n      return;\n    }\n  }\n\n  this.props.onSubmit();\n  this.props.unblockNavigation();\n}", "CodeBleu_score": 22.3043846706555}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\t  e.preventDefault();\n  if (this.props.confirmation) {\n    this.setState({\n      confirmation: false,\n    });\n    return;\n  }\n\n  this.setState({\n    saving: true,\n    serverError: '',\n  });\n\n  if (this.state.saveNeeded) {\n    const permissions = this.state.permissions.map((p) => {\n      const roleBinding = {\n        role: p.role,\n        members: p.members,\n      };\n      return roleBinding;\n    });\n    try {\n      await this.props.editRole(this.state.role.name, permissions);\n    } catch (err) {\n      this.setState({\n        serverError: err.message,\n        saving: false,\n      });\n      return;\n    }\n  }\n\n  this.setState({\n    saving: false,\n  });\n\n  if (this.props.onSubmit) {\n    this.props.onSubmit();\n  } else {\n    this.props.unblockNavigation();\n  }\n}", "CodeBleu_score": 26.534600729160385}]}
{"instance_id": "86453b2860e5", "generation_result": [{"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\t  const { text, customClass } = props;\n  const { openContactSales } = useContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    trackEvent({\n      action: 'click',\n      category: 'contact-us-button',\n      label: 'contact-us',\n    });\n    openContactSales();\n  };\n\n  return (\n    <button className={customClass} onClick={handleClick}>\n      {text}\n    </button>\n  );\n}", "CodeBleu_score": 33.56238415255138}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\t  const { text, customClass } = props;\n  const { openContactSales } = useContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    trackEvent({\n      action: 'click',\n      category: 'Contact Sales',\n      label: 'Contact Sales Button',\n    });\n    openContactSales();\n  };\n\n  return (\n    <button className={`${customClass}`} onClick={handleClick}>\n      {text}\n    </button>\n  );\n}", "CodeBleu_score": 35.61394151546449}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\t  const { openContactSales } = useContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    trackEvent({\n      event: 'contact_sales_click',\n      eventCategory: 'Contact Sales',\n      eventAction: 'Click',\n      eventLabel: 'Contact Sales Button',\n    });\n    openContactSales();\n  };\n\n  return (\n    <button className={props.customClass} onClick={handleClick}>\n      {props.text}\n    </button>\n  );\n}", "CodeBleu_score": 35.743344398322236}]}
{"instance_id": "49713e95ae2e", "generation_result": [{"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\t    const openContactSales = useOpenContactSales();\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        openContactSales();\n    };\n\n    return (\n        <Button\n            onClick={handleClick}\n            disabled={props.disabled}\n            className={props.className}\n            color={props.color}\n            loading={props.loading}\n            shape={props.shape}\n            size={props.size}\n            fullWidth={props.fullWidth}\n        >\n            {c('Action').t`Contact Sales`}\n        </Button>\n    );\n}", "CodeBleu_score": 45.90927879089929}, {"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\t  const openContactSales = useOpenContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    openContactSales(props.contactSalesLink);\n  };\n\n  return (\n    <Button\n      disabled={props.disabled}\n      onClick={handleClick}\n      variant=\"secondary\"\n    >\n      {props.formattedMessage}\n    </Button>\n  );\n}", "CodeBleu_score": 33.7031869912513}, {"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\t  const openContactSales = useContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <button\n      className=\"button button--primary button--medium\"\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      <FormattedMessage id=\"renewalLink\" />\n    </button>\n  );\n}", "CodeBleu_score": 45.263696235950015}]}
{"instance_id": "23618eba67aa", "generation_result": [{"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t  const { intl } = this.props;\n  const { errors } = this.state;\n  const hasErrors = !!(formError || fieldErrors);\n  let hasUpdated = false;\n\n  if (hasErrors) {\n    const updatedErrors = { ...errors };\n\n    if (formError) {\n      updatedErrors.form = intl.formatMessage({ id: formError, defaultMessage: formError });\n      hasUpdated = true;\n    }\n\n    if (fieldErrors) {\n      Object.entries(fieldErrors).forEach(([fieldName, errorMessage]) => {\n        const element = elements.find((element) => element.name === fieldName);\n        if (element) {\n          updatedErrors[fieldName] = intl.formatMessage({ id: errorMessage, defaultMessage: errorMessage });\n          hasUpdated = true;\n        } else {\n          updatedErrors[fieldName] = intl.formatMessage({ id: 'errors.unknownField', defaultMessage: 'Unknown field error' });\n          hasUpdated = true;\n        }\n      });\n    }\n\n    if (hasUpdated) {\n      this.setState({ errors: updatedErrors });\n    }\n  }\n\n  return hasUpdated;\n}", "CodeBleu_score": 37.00454019000354}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t  let hasErrors = false;\n  const errors: {[x: string]: string} = {};\n\n  if (fieldErrors) {\n    Object.entries(fieldErrors).forEach(([fieldName, error]) => {\n      const element = elements.find((e) => e.name === fieldName);\n      if (element) {\n        errors[fieldName] = this.props.intl.formatMessage({\n          id: error,\n          defaultMessage: error,\n        });\n      } else {\n        errors[fieldName] = this.props.intl.formatMessage({\n          id: 'form.error.unknown',\n          defaultMessage: 'Unknown error',\n        });\n      }\n    });\n  }\n\n  if (formError) {\n    errors['form'] = this.props.intl.formatMessage({\n      id: formError,\n      defaultMessage: formError,\n    });\n  }\n\n  if (Object.keys(errors).length > 0) {\n    hasErrors = true;\n  }\n\n  this.setState({errors});\n\n  return hasErrors;\n}", "CodeBleu_score": 42.07237965303178}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t  const errors: {[x: string]: string} = {};\n  const errorKeys = Object.keys(fieldErrors || {});\n  const hasFormError = !!formError;\n  const hasFieldErrors = errorKeys.length > 0;\n  const hasErrors = hasFormError || hasFieldErrors;\n  if (hasErrors) {\n    if (hasFormError) {\n      errors.formError = formError;\n    }\n    if (hasFieldErrors) {\n      errorKeys.forEach((key) => {\n        const element = elements.find((el) => el.name === key);\n        if (element) {\n          errors[key] = fieldErrors[key];\n        } else {\n          errors[key] = this.props.intl.formatMessage({\n            id: 'error.unknown',\n            defaultMessage: 'Unknown error',\n          });\n        }\n      });\n    }\n    this.setState({\n      errors,\n    });\n  }\n  return hasErrors;\n}", "CodeBleu_score": 34.23885453490199}]}
{"instance_id": "10be7e79f7e0", "generation_result": [{"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t    const lowercaseInput = userInput.toLowerCase();\n    const channelSearchResults = await autocompleteChannels(lowercaseInput);\n\n    return channelSearchResults.map((channel) => ({\n        label: channel.display_name,\n        value: channel.id,\n    }));\n}", "CodeBleu_score": 41.74578260320364}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t  const lowerCaseInput = userInput.toLowerCase();\n  const channels = await autocompleteChannels(lowerCaseInput);\n  return channels.map((channel) => ({\n    label: channel.display_name,\n    value: channel.id,\n  }));\n}", "CodeBleu_score": 38.31493875662386}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t  const lowercaseInput = userInput.toLowerCase();\n  const matchingChannels = await autocompleteChannels(lowercaseInput);\n\n  return matchingChannels.map((channel) => ({\n    label: channel.display_name || channel.name,\n    value: channel.id,\n  }));\n}", "CodeBleu_score": 38.55417626201041}]}
{"instance_id": "b44d060ba306", "generation_result": [{"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\t    const {\n        actions,\n        currentUserId,\n        teamId,\n        teamName,\n    } = this.props;\n\n    if (!this.isMemberOfChannel(channel)) {\n        let error;\n        try {\n            await actions.joinChannel(currentUserId, teamId, channel);\n        } catch (e) {\n            error = e;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n            return;\n        }\n\n        // update channel member count\n        actions.getChannelsMemberCount(currentUserId, teamId, [channel.id]);\n\n        // navigate to channel URL\n        const channelURL = getRelativeChannelURL(teamName, channel.name);\n        this.props.actions.goToChannel(channelURL);\n\n        // close right-hand sidebar\n        this.closeEditRHS();\n    }\n\n    if (done) {\n        done();\n    }\n}", "CodeBleu_score": 58.071953491325125}, {"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\t    const {actions, currentUserId, teamId, teamName} = this.props;\n    if (!this.isMemberOfChannel(channel)) {\n        const result = await actions.joinChannel(teamId, channel.id);\n        if (result.error) {\n            this.setState({serverError: result.error.message});\n            return;\n        }\n        this.updateChannelMemberCount(channel.id);\n        this.props.actions.getChannelsMemberCount(this.props.teamId);\n        navigate(getRelativeChannelURL(teamName, channel.name));\n        this.closeEditRHS();\n        if (done) {\n            done();\n        }\n    }\n}", "CodeBleu_score": 62.514807898428195}, {"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\t    const {actions, currentUserId, teamId, teamName} = this.props;\n\n    if (!this.isMemberOfChannel(channel)) {\n        const result = await actions.joinChannel(currentUserId, channel, teamId, teamName);\n\n        if (result.error) {\n            this.setState({serverError: result.error.message});\n            return;\n        }\n\n        this.updateChannelMemberCount(channel.id);\n        navigateToChannel(channel.name);\n        this.closeEditRHS();\n    }\n\n    if (done) {\n        done();\n    }\n}", "CodeBleu_score": 66.21842444897219}]}
{"instance_id": "c6636f0c9c0b", "generation_result": [{"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { isExpanded, onClick, children } = props;\n  const className = `card-header ${isExpanded ? 'expanded' : ''}`;\n\n  return (\n    <div className={className} onClick={onClick}>\n      {children}\n      {isExpanded && <hr />}\n    </div>\n  );\n}", "CodeBleu_score": 40.041120275046474}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { children, onClick, expanded } = props;\n  const className = expanded ? \"expanded\" : \"\";\n\n  return (\n    <div className={`card-header ${className}`} onClick={onClick}>\n      {children}\n      {expanded && <hr />}\n    </div>\n  );\n}", "CodeBleu_score": 41.42618415012356}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t    const { children, className, expanded, onClick, ...rest } = props;\n    const classes = classNames(\n        'card-header',\n        {\n            [className]: className,\n            'card-header--expanded': expanded,\n        }\n    );\n\n    return (\n        <div className={classes} onClick={onClick} {...rest}>\n            {children}\n            {expanded && <hr className=\"card-header__divider\" />}\n        </div>\n    );\n}", "CodeBleu_score": 42.119283304426766}]}
{"instance_id": "230cb3cd6dd5", "generation_result": [{"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n  return (\n    <div className=\"title-and-button-card-header\">\n      <h1>{title}</h1>\n      {subtitle && <h2>{subtitle}</h2>}\n      {buttonText && onClick && (\n        <button onClick={onClick} disabled={isDisabled}>\n          {buttonText}\n        </button>\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 29.233653786436122}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n  return (\n    <div className=\"title-and-button-card-header\">\n      <h2>{title}</h2>\n      {subtitle && <h3>{subtitle}</h3>}\n      {buttonText && onClick && (\n        <button onClick={onClick} disabled={isDisabled}>\n          {buttonText}\n        </button>\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 28.690175525566552}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t    const { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n    return (\n        <div className=\"title-and-button-card-header\">\n            <div className=\"title-and-button-card-header-title\">\n                <h2>{title}</h2>\n                {subtitle && <p>{subtitle}</p>}\n            </div>\n            {buttonText && onClick && (\n                <button\n                    className={`title-and-button-card-header-button ${\n                        isDisabled ? 'disabled' : ''\n                    }`}\n                    onClick={onClick}\n                    disabled={isDisabled}\n                >\n                    {buttonText}\n                </button>\n            )}\n        </div>\n    );\n}", "CodeBleu_score": 41.031158163933036}]}
{"instance_id": "eb5c7946fd59", "generation_result": [{"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t    if (!services.notifications) {\n        throw new Error('Notifications service is not available.');\n    }\n\n    const show = ({\n        title,\n        body,\n        color,\n        icon,\n        lifetime,\n        onClose,\n    }: {\n        title: string;\n        body: string;\n        color: string;\n        icon: string;\n        lifetime: number;\n        onClose: () => void;\n    }) => {\n        services.notifications.toasts.add({\n            title,\n            body,\n            color,\n            iconType: icon,\n            toastLifeTimeMs: lifetime,\n            onClose,\n        });\n    };\n\n    const success = ({\n        title,\n        body,\n        lifetime,\n        onClose,\n    }: {\n        title: string;\n        body: string;\n        lifetime: number;\n        onClose: () => void;\n    }) => {\n        show({\n            title,\n            body,\n            color: 'success',\n            icon: 'check',\n            lifetime,\n            onClose,\n        });\n    };\n\n    const warning = ({\n        title,\n        body,\n        lifetime,\n        onClose,\n    }: {\n        title: string;\n        body: string;\n        lifetime: number;\n        onClose: () => void;\n    }) => {\n        show({\n            title,\n            body,\n            color: 'warning',\n            icon: 'help',\n            lifetime,\n            onClose,\n        });\n    };\n\n    const danger = ({\n        title,\n        body,\n        lifetime,\n        onClose,\n    }: {\n        title: string;\n        body: string;\n        lifetime: number;\n        onClose: () => void;\n    }) => {\n        show({\n            title,\n            body,\n            color: 'danger',\n            icon: 'alert',\n            lifetime,\n            onClose,\n        });\n    };\n\n    return {\n        show,\n        success,\n        warning,\n        danger,\n    };\n}", "CodeBleu_score": 28.34523337913738}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t  const { notifications: notificationsService } = services;\n\n  if (!notificationsService) {\n    throw new Error('Notifications service is unavailable');\n  }\n\n  const success = (title: string, body?: string) => {\n    show({\n      title,\n      body,\n      color: 'success',\n      iconType: 'check',\n    });\n  };\n\n  const warning = (title: string, body?: string) => {\n    show({\n      title,\n      body,\n      color: 'warning',\n      iconType: 'help',\n    });\n  };\n\n  const danger = (title: string, body?: string) => {\n    show({\n      title,\n      body,\n      color: 'danger',\n      iconType: 'alert',\n    });\n  };\n\n  const show = ({\n    title,\n    body,\n    color,\n    iconType,\n    lifetimeMs = 5000,\n    onClose,\n  }: KibanaReactNotificationsOptions) => {\n    notificationsService.toasts.add({\n      title,\n      body,\n      color,\n      iconType,\n      toastLifeTimeMs: lifetimeMs,\n      onClose,\n    });\n  };\n\n  return {\n    show,\n    success,\n    warning,\n    danger,\n  };\n}", "CodeBleu_score": 32.200278839137184}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t  if (!services.notifications) {\n    throw new Error('services.notifications is not defined');\n  }\n\n  const toastLifeTimeMs = 5000;\n\n  const show = ({\n    title,\n    body,\n    color,\n    icon,\n    lifetimeMs = toastLifeTimeMs,\n    onClose,\n  }: KibanaReactNotifications['show']) => {\n    services.notifications.toasts.add({\n      title,\n      color,\n      iconType: icon,\n      text: body,\n      toastLifeTimeMs,\n      onClose,\n    });\n  };\n\n  const success = ({ title, body, lifetimeMs = toastLifeTimeMs, onClose }: KibanaReactNotifications['show']) =>\n    show({\n      title,\n      body,\n      color: 'success',\n      icon: 'check',\n      lifetimeMs,\n      onClose,\n    });\n\n  const warning = ({ title, body, lifetimeMs = toastLifeTimeMs, onClose }: KibanaReactNotifications['show']) =>\n    show({\n      title,\n      body,\n      color: 'warning',\n      icon: 'help',\n      lifetimeMs,\n      onClose,\n    });\n\n  const danger = ({ title, body, lifetimeMs = toastLifeTimeMs, onClose }: KibanaReactNotifications['show']) =>\n    show({\n      title,\n      body,\n      color: 'danger',\n      icon: 'alert',\n      lifetimeMs,\n      onClose,\n    });\n\n  return {\n    show,\n    success,\n    warning,\n    danger,\n  };\n}", "CodeBleu_score": 37.0109595816672}]}
{"instance_id": "e8c4d43e5232", "generation_result": [{"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t  checkCoreService();\n  const mount = toMountPoint(node, options);\n  return services.overlays.openFlyout(mount, options);\n}", "CodeBleu_score": 40.71537726343357}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t  checkCoreService();\n  const { theme$, overlays } = services;\n  const mount = toMountPoint(node, theme$);\n  return overlays.openFlyout(mount, options);\n}", "CodeBleu_score": 42.92094817813232}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t  checkCoreService();\n  const theme = useTheme();\n  const mount = toMountPoint(node, theme);\n  return services.overlays.openFlyout(mount, options);\n}", "CodeBleu_score": 44.921914120017995}]}
{"instance_id": "89d99efaa3c9", "generation_result": [{"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\t    if (onClickCallback) {\n      onClickCallback(event);\n    }\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n      return;\n    }\n    if (event.defaultPrevented === true) {\n      return;\n    }\n    event.preventDefault();\n    if (isLeftClickEvent(event) && (event.target as unknown as { getAttribute: (a: string) => unknown })?.getAttribute) {\n      const target = (event.target as unknown as { getAttribute: (a: string) => unknown }).getAttribute('target');\n      if (/\\S/.test(target)) {\n        return;\n      }\n    }\n    history.push(toLocationObject(to));\n  }", "CodeBleu_score": 72.47903036376817}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\t    if (onClickCallback) {\n      onClickCallback(event);\n    }\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n      return;\n    }\n\n    // The user middle-clicked or right-clicked the link.\n    if (event.button === 1 || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n      return;\n    }\n\n    if (event.defaultPrevented === true) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n      return;\n    }\n\n    // If target prop is set (e.g. to \"_blank\"), let browser handle link.\n    if (\n      (event.target as unknown as { getAttribute: (a: string) => unknown })?.getAttribute &&\n      (event.target as unknown as { getAttribute: (a: string) => unknown })?.getAttribute('target') !==\n        '_self'\n    ) {\n      return;\n    }\n\n    if (event.defaultPrevented === true) {\n      return;\n    }\n\n    history.push(toLocationObject(to));\n  }", "CodeBleu_score": 71.86775479082864}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\t    if (onClickCallback) {\n      onClickCallback(event);\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    history.push(toLocationObject(to));\n  }", "CodeBleu_score": 57.07512952723008}]}
{"instance_id": "8d8e28c04bbd", "generation_result": [{"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\t  const { globalClient } = useKibana().services;\n  const [value, setValue] = useState(globalClient.get(key, defaultValue));\n\n  useEffect(() => {\n    if (!globalClient) {\n      throw new Error('globalClient service is unavailable');\n    }\n\n    const subscription = globalClient.get$(key, defaultValue).subscribe(setValue);\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [globalClient, key, defaultValue]);\n\n  const setter = (newValue: T) => {\n    globalClient.set(key, newValue);\n  };\n\n  return [value, setter];\n}", "CodeBleu_score": 43.75018261457845}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\t  const { services } = useKibana<GlobalUiSettingsClient>();\n\n  if (!services.globalClient) {\n    throw new Error('Global UI Settings service not available');\n  }\n\n  const [value, setValue] = useState<T>(services.globalClient.get(key, defaultValue));\n\n  useEffect(() => {\n    const subscription = services.globalClient.get$(key, defaultValue).subscribe(setValue);\n    return () => subscription.unsubscribe();\n  }, [key, defaultValue, services.globalClient]);\n\n  const setter = (newValue: T) => {\n    services.globalClient.set(key, newValue);\n  };\n\n  return [value, setter];\n}", "CodeBleu_score": 42.25952043163914}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\t  const { globalClient } = useKibana().services;\n\n  if (!globalClient) {\n    throw new Error('Global client not available');\n  }\n\n  const setting = globalClient.get(key, defaultValue);\n  const setting$ = globalClient.get$(key, defaultValue);\n\n  const [value, setValue] = useState(setting);\n\n  useEffect(() => {\n    const subscription = setting$.subscribe((newValue) => {\n      setValue(newValue);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [setting$]);\n\n  const setter = (newValue: T) => {\n    globalClient.set(key, newValue);\n  };\n\n  return [value, setter];\n}", "CodeBleu_score": 42.24178691217316}]}
{"instance_id": "7da631faf620", "generation_result": [{"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t  const panel = panels[id];\n  const limit = 10;\n  if (panel && panel.items && panel.items.length > limit) {\n    const visibleItems = panel.items.slice(0, limit);\n    const submenuItems = panel.items.slice(limit);\n    const subpanel = {\n      id: `${id}-subpanel`,\n      title: 'More',\n      items: submenuItems,\n    };\n    panels[subpanel.id] = subpanel;\n    panel.items = visibleItems;\n    panel.items.push({\n      id: `${id}-more`,\n      title: 'More',\n      type: 'subpanel',\n      panelId: subpanel.id,\n    });\n  }\n}", "CodeBleu_score": 35.10534191585183}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t  const panel = panels[id]\n  if (!panel) return\n  const { items, limit } = panel\n  if (!items || !limit || items.length <= limit) return\n\n  const visibleItems = items.slice(0, limit)\n  const submenuItems = items.slice(limit)\n\n  const submenuPanel: PanelDescriptor = {\n    items: submenuItems,\n    limit: 0,\n  }\n\n  const newItems = [\n    ...visibleItems,\n    {\n      id: 'more',\n      type: 'panel',\n      panelId: `${id}_submenu`,\n      label: 'More',\n    },\n  ]\n\n  panels[id] = {\n    ...panel,\n    items: newItems,\n    limit: 0,\n  }\n\n  panels[`${id}_submenu`] = submenuPanel\n}", "CodeBleu_score": 36.17130658349175}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t  const panel = panels[id];\n  const { items } = panel;\n  const itemsCount = items.length;\n  const maxItemsInPanel = 10;\n  if (itemsCount > maxItemsInPanel) {\n    const visibleItems = items.slice(0, maxItemsInPanel);\n    const submenuItems = items.slice(maxItemsInPanel);\n    const submenuPanel = {\n      ...panel,\n      items: submenuItems,\n    };\n    panels[`${id}.submenu`] = submenuPanel;\n    panel.items = visibleItems;\n    panel.items.push({\n      type: 'submenu',\n      text: 'More',\n      panel: `${id}.submenu`,\n    });\n  }\n}", "CodeBleu_score": 35.50884872800471}]}
{"instance_id": "7a1a98211380", "generation_result": [{"code": "private scheduleFlush(){\n\t  if (this.batchingQueue.length === 0) {\n    return;\n  }\n\n  clearTimeout(this.flushTimeout);\n  this.flushTimeout = setTimeout(() => {\n    const tasks = this.batchingQueue.map(task => task.task);\n    const alwaysShowPopup = tasks.some(task => task.alwaysShowPopup);\n\n    if (alwaysShowPopup) {\n      this.showPopupMenu(tasks);\n    } else {\n      if (tasks.length === 1) {\n        this.executeTask(tasks[0]);\n      } else {\n        this.showPopupMenu(tasks);\n      }\n    }\n\n    this.batchingQueue = [];\n  }, 100);\n}", "CodeBleu_score": 48.78880633699839}, {"code": "private scheduleFlush(){\n\t    this.timeout = setTimeout(() => {\n        if (this.batchingQueue.length === 0) {\n            return;\n        }\n        const uniqueTasks = this.batchingQueue.filter((task, index, self) => {\n            return index === self.findIndex((t) => t.id === task.id);\n        });\n        if (uniqueTasks.some((task) => task.alwaysShowPopup)) {\n            this.showPopup(uniqueTasks);\n        } else if (uniqueTasks.length === 1) {\n            this.executeTask(uniqueTasks[0]);\n        } else {\n            this.showPopup(uniqueTasks);\n        }\n        this.batchingQueue = [];\n    }, 1000);\n}", "CodeBleu_score": 48.455056727399395}, {"code": "private scheduleFlush(){\n\t  // Clear any pending timeout\n  clearTimeout(this.timeout);\n\n  // Set a new timeout to flush the queue\n  this.timeout = setTimeout(() => {\n    // If there are no pending tasks, create a unique list of tasks from the batching queue\n    if (this.pendingTasks.length === 0) {\n      this.pendingTasks = [...new Set(this.batchingQueue)];\n    }\n\n    // If any task requires always showing a popup, display a popup menu with the tasks\n    if (this.pendingTasks.some((task) => task.alwaysShowPopup)) {\n      this.showPopupMenu();\n    } else {\n      // Otherwise, execute a single task if only one is present, or show the popup menu if multiple tasks are present\n      if (this.pendingTasks.length === 1) {\n        this.executeTask(this.pendingTasks[0]);\n      } else if (this.pendingTasks.length > 1) {\n        this.showPopupMenu();\n      }\n    }\n\n    // Clear the batching queue\n    this.batchingQueue = [];\n  }, this.flushTimeout);\n}", "CodeBleu_score": 23.615241483534938}]}
{"instance_id": "702779fd9f4a", "generation_result": [{"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t  const trigger = this.service.triggerService.getTrigger(context.trigger);\n  const actions = this.service.actionService.getCompatibleActions(trigger, context);\n\n  if (actions.length === 0) {\n    return;\n  }\n\n  await Promise.all(\n    actions.map(async (action) => {\n      const execution = await this.service.executionService.execute(action, context, trigger, alwaysShowPopup);\n\n      if (execution.result === ActionExecutionResult.SUCCESS) {\n        this.service.actionService.markActionAsExecuted(action.id);\n      }\n    }),\n  );\n}", "CodeBleu_score": 45.89969956665075}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t    const actions = await this.getCompatibleActions(context);\n    const trigger = context.trigger;\n\n    if (actions.length === 0) {\n        return;\n    }\n\n    await Promise.all(\n        actions.map(async (action) => {\n            return this.service.executionService.execute(action, context, trigger, alwaysShowPopup);\n        })\n    );\n}", "CodeBleu_score": 44.817410522284504}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t  const actions = await this.service.actionService.getCompatibleActions(context);\n  const trigger = await this.service.triggerService.getTrigger(context.trigger.name);\n  await Promise.all(\n    actions.map((action) => {\n      return this.service.executionService.execute(action, context, trigger, alwaysShowPopup);\n    })\n  );\n}", "CodeBleu_score": 49.83484917139178}]}
{"instance_id": "16fd1e46a9be", "generation_result": [{"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t  const images = [];\n  let offset = 8;\n\n  for (let i = 0; i < frameCount; i++) {\n    const subChunk = new Chunk(chunk.data, offset);\n    if (subChunk.type !== 'icon') {\n      throw new Error(`Invalid sub-chunk type at offset ${offset}`);\n    }\n    images.push(chunk.data.slice(offset + 8, offset + 8 + subChunk.length));\n    offset += 8 + subChunk.length;\n  }\n\n  return images;\n}", "CodeBleu_score": 40.84179923721569}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t  const images = [];\n\n  for (let i = 0; i < frameCount; i++) {\n    const subChunk = chunk.getSubChunk(i);\n\n    if (subChunk.type !== 'icon') {\n      throw new Error(`Invalid sub-chunk type at index ${i}: ${subChunk.type}`);\n    }\n\n    const imageData = subChunk.data.slice(0);\n    images.push(imageData);\n  }\n\n  return images;\n}", "CodeBleu_score": 43.13104713286761}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t  const images: Uint8Array[] = [];\n  const subChunkCount = chunk.data.readUInt32LE(0);\n  const subChunkOffset = 4;\n  const subChunkSize = 16;\n\n  for (let i = 0; i < frameCount; i++) {\n    const subChunkStart = subChunkOffset + i * subChunkSize;\n    const subChunkType = chunk.data.slice(subChunkStart, subChunkStart + 4).toString();\n    if (subChunkType !== 'icon') {\n      throw new Error(`Invalid sub-chunk type: ${subChunkType}`);\n    }\n    const subChunkDataOffset = chunk.data.readUInt32LE(subChunkStart + 8);\n    const subChunkDataSize = chunk.data.readUInt32LE(subChunkStart + 12);\n    const subChunkData = chunk.data.slice(subChunkDataOffset, subChunkDataOffset + subChunkDataSize);\n    images.push(subChunkData);\n  }\n\n  return images;\n}", "CodeBleu_score": 35.98014625520813}]}
{"instance_id": "6b6f91239073", "generation_result": [{"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t    const displayRate = contents[0x0c];\n    const totalDuration = contents[0x0e] * 10;\n\n    const frames: AniCursorFrame[] = [];\n    for (let i = 0x28; i < contents.length; i += 0x40) {\n        const frame = contents.slice(i, i + 0x40);\n        const image = frame.slice(0x10, 0x30);\n        const url = 'data:image/png;base64,' + btoa(String.fromCharCode(...image));\n        frames.push({ url, percents: [] });\n    }\n\n    const frameDuration = totalDuration / frames.length;\n    for (let i = 0; i < frames.length; i++) {\n        const frame = frames[i];\n        const percent = (i * frameDuration) / totalDuration;\n        frame.percents.push(percent);\n    }\n\n    return { totalDuration, frames };\n}", "CodeBleu_score": 31.333030596692296}, {"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t  const frames: AniCursorFrame[] = []\n  const displayRate = contents[12] | (contents[13] << 8)\n  const totalDuration = contents[8] | (contents[9] << 8)\n  const numFrames = contents[4] | (contents[5] << 8)\n\n  for (let i = 0; i < numFrames; i++) {\n    const frameIdx = contents[20 + i * 16]\n    const frame = {\n      url: `ani://${i}`,\n      percents: [],\n    }\n    frames[frameIdx] = frame\n  }\n\n  for (let i = 0; i < numFrames; i++) {\n    const frameIdx = contents[20 + i * 16]\n    const duration = contents[20 + i * 16 + 8] | (contents[20 + i * 16 + 9] << 8)\n    const elapsed = (duration * 1000) / displayRate\n    frames[frameIdx].percents.push(elapsed)\n  }\n\n  return {\n    totalDuration,\n    frames,\n  }\n}", "CodeBleu_score": 29.10504015945404}, {"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t  const header = new DataView(contents.buffer, 0, 12);\n\n  const numFrames = header.getUint16(4, true);\n  const displayRate = header.getUint16(6, true);\n  const totalDuration = (numFrames / displayRate) * 1000;\n\n  const frames: AniCursorFrame[] = [];\n\n  for (let i = 0; i < numFrames; i++) {\n    const frameOffset = 12 + (i * 4);\n    const frameData = new DataView(contents.buffer, frameOffset, 4);\n\n    const frameSize = frameData.getUint16(0, true);\n    const frameType = frameData.getUint16(2, true);\n    const frameUrl = `ani://${i}`;\n\n    frames.push({\n      url: frameUrl,\n      percents: [],\n    });\n  }\n\n  for (let i = 0; i < numFrames; i++) {\n    const frameIdx = i;\n    const frame = frames[frameIdx];\n\n    const frameOffset = 12 + (frameIdx * 4);\n    const frameData = new DataView(contents.buffer, frameOffset, 4);\n\n    const frameSize = frameData.getUint16(0, true);\n    const frameType = frameData.getUint16(2, true);\n\n    const elapsedDisplayPercent = (i / numFrames) * 100;\n    frame.percents.push(elapsedDisplayPercent);\n  }\n\n  return {\n    totalDuration,\n    frames,\n  };\n}", "CodeBleu_score": 29.776931123978578}]}
{"instance_id": "f059427111a8", "generation_result": [{"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t  const db = await getDatabase();\n  const items = await db.all(`SELECT * FROM items WHERE metadata NOT NULL`);\n\n  const tooManyFiles: any[] = [];\n  const tooFewFiles: any[] = [];\n  const missingSkinFile: any[] = [];\n\n  for (const item of items) {\n    const metadata = JSON.parse(item.metadata);\n    const files = Object.keys(metadata.files);\n\n    if (files.length > 10) {\n      tooManyFiles.push({ itemId: item.id, files });\n    } else if (files.length < 5) {\n      tooFewFiles.push({ itemId: item.id, files });\n    }\n\n    if (!files.some((file) => file.includes(\"skin\"))) {\n      missingSkinFile.push({ itemId: item.id, files });\n    }\n  }\n\n  console.table(tooManyFiles);\n  console.table(tooFewFiles);\n  console.table(missingSkinFile);\n}", "CodeBleu_score": 34.59432806668965}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t  const items = await getItemsWithMetadata();\n  const tooManyFiles: Item[] = [];\n  const tooFewFiles: Item[] = [];\n  const missingSkinFile: Item[] = [];\n\n  for (const item of items) {\n    const metadata = JSON.parse(item.metadata);\n    const files = Object.keys(metadata.files);\n\n    if (files.length > 20) {\n      tooManyFiles.push(item);\n    } else if (files.length < 10) {\n      tooFewFiles.push(item);\n    } else if (!files.some((file) => file.endsWith('.skin'))) {\n      missingSkinFile.push(item);\n    }\n  }\n\n  console.table({\n    'Too Many Files': tooManyFiles.length,\n    'Too Few Files': tooFewFiles.length,\n    'Missing Skin File': missingSkinFile.length,\n  });\n}", "CodeBleu_score": 27.90646590241289}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t  // Connect to the database\n  const db = await connectToDatabase();\n\n  // Retrieve all items with non-empty metadata\n  const items = await db.collection(\"items\").find({ metadata: { $ne: null } }).toArray();\n\n  // Initialize arrays to store categorized items\n  const tooManyFiles: any[] = [];\n  const tooFewFiles: any[] = [];\n  const missingSkinFile: any[] = [];\n\n  // Iterate through each item\n  for (const item of items) {\n    // Parse the metadata file\n    const metadata = JSON.parse(item.metadata);\n\n    // Check if there are too many files\n    if (metadata.files.length > 200) {\n      tooManyFiles.push(item);\n    }\n\n    // Check if there are too few files\n    if (metadata.files.length < 100) {\n      tooFewFiles.push(item);\n    }\n\n    // Check if the skin file is missing\n    const hasSkinFile = metadata.files.some((file: any) => file.name.includes(\"skin.png\"));\n    if (!hasSkinFile) {\n      missingSkinFile.push(item);\n    }\n  }\n\n  // Log a table summarizing the results\n  console.log(\"Too Many Files:\", tooManyFiles.length);\n  console.log(\"Too Few Files:\", tooFewFiles.length);\n  console.log(\"Missing Skin File:\", missingSkinFile.length);\n}", "CodeBleu_score": 34.48679504821656}]}
{"instance_id": "9d9b04763521", "generation_result": [{"code": "function useSkinKeyboardControls(){\n\t  const dispatch = useDispatch()\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'ArrowRight') {\n        dispatch(selectNextSkin())\n      } else if (event.key === 'ArrowLeft') {\n        dispatch(selectPreviousSkin())\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [dispatch])\n}", "CodeBleu_score": 37.809236591824316}, {"code": "function useSkinKeyboardControls(){\n\t  const { selectNextSkin, selectPreviousSkin } = useSkinControls();\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"ArrowRight\") {\n        selectNextSkin();\n      } else if (event.key === \"ArrowLeft\") {\n        selectPreviousSkin();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [selectNextSkin, selectPreviousSkin]);\n}", "CodeBleu_score": 37.2372050806912}, {"code": "function useSkinKeyboardControls(){\n\t  const { selectNextSkin, selectPreviousSkin } = useSkinSelection();\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'ArrowRight') {\n      selectNextSkin();\n    } else if (event.key === 'ArrowLeft') {\n      selectPreviousSkin();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n}", "CodeBleu_score": 34.188454191218256}]}
{"instance_id": "c49e878d86ad", "generation_result": [{"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t  return (dispatch) => {\n    const fileInput = document.createElement(\"input\");\n    fileInput.type = \"file\";\n    fileInput.multiple = true;\n    if (accept) {\n      fileInput.accept = accept;\n    }\n    fileInput.dispatch = dispatch;\n    fileInput.addEventListener(\"change\", (event) => {\n      const target = event.target as HTMLInputElement;\n      const files = target.files;\n      if (files) {\n        const file = files[0];\n        const fileName = file.name;\n        dispatch({\n          type: \"SET_FILE_REFERENCES\",\n          payload: {\n            expectedType,\n            fileName,\n            numberOfFiles: files.length,\n          },\n        });\n        dispatch(loadFilesFromReferences());\n      }\n    });\n    fileInput.click();\n  };\n}", "CodeBleu_score": 45.95863974526365}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t  return (dispatch) => {\n    const fileInput = document.createElement(\"input\");\n    fileInput.type = \"file\";\n    fileInput.multiple = true;\n    fileInput.accept = accept;\n\n    fileInput.onchange = () => {\n      const files = fileInput.files;\n      if (files) {\n        const fileCount = files.length;\n        const fileName = files[0].name;\n        dispatch(\n          setFileReferences({\n            expectedType,\n            fileCount,\n            fileName,\n          })\n        );\n        dispatch(loadFilesFromReferences());\n      }\n    };\n\n    fileInput.click();\n  };\n}", "CodeBleu_score": 46.50831052766665}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t  return (dispatch) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.multiple = true;\n    if (accept) input.accept = accept;\n    input.click();\n    input.onchange = () => {\n      const files = input.files;\n      if (!files) return;\n      const file = files[0];\n      dispatch({\n        type: \"OPEN_FILE_DIALOG\",\n        payload: {\n          expectedType,\n          fileCount: files.length,\n          fileName: file.name,\n        },\n      });\n      dispatch({\n        type: \"LOAD_FILES\",\n        payload: {\n          files,\n        },\n      });\n    };\n  };\n}", "CodeBleu_score": 48.411362149539116}]}
{"instance_id": "afa715d20f88", "generation_result": [{"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\t  return async (dispatch) => {\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      const references = await Promise.all(\n        Array.from(files).map(async (file) => {\n          const reference = await dispatch(\n            loadFilesFromReferences([file], loadStyle, atIndex)\n          );\n          return reference;\n        })\n      );\n      if (handleTrackDropEvent) {\n        handleTrackDropEvent(e);\n      } else {\n        dispatch(loadMediaFiles(references));\n      }\n    }\n  };\n}", "CodeBleu_score": 39.30251398055757}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\t  return async (dispatch) => {\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      if (handleTrackDropEvent) {\n        handleTrackDropEvent(e);\n        dispatch(loadMediaFiles(files, loadStyle, atIndex));\n      } else {\n        dispatch(loadFilesFromReferences(files, loadStyle, atIndex));\n      }\n    }\n  };\n}", "CodeBleu_score": 47.985613867643}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\t  return async (dispatch: Dispatch) => {\n    const files = extractFilesFromEvent(e);\n    if (files.length > 0) {\n      if (handleTrackDropEvent) {\n        await handleTrackDropEvent(e);\n        dispatch(loadMediaFiles(files, loadStyle, atIndex));\n      } else {\n        dispatch(loadFilesFromReferences(files, loadStyle, atIndex));\n      }\n    }\n  };\n}", "CodeBleu_score": 46.95905037390703}]}
{"instance_id": "0faea0aa350c", "generation_result": [{"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t    dispatch({ type: 'FETCH_MEDIA_TAGS_START', id });\n    try {\n      const metadata = await requireMusicMetadata(file);\n      const { artist, title, album, picture } = metadata.common;\n      const albumArt = picture ? URL.createObjectURL(new Blob([new Uint8Array(picture.data)])) : null;\n      dispatch({ type: 'FETCH_MEDIA_TAGS_SUCCESS', id, artist, title, album, albumArt });\n    } catch (error) {\n      dispatch({ type: 'FETCH_MEDIA_TAGS_FAILURE', id, error });\n    }\n  }", "CodeBleu_score": 27.846673951524746}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t    dispatch(requestMediaTags(id));\n    try {\n      const metadata = await requireMusicMetadata(file);\n      const { artist, title, album, picture } = metadata.common;\n      const albumArt = picture ? URL.createObjectURL(new Blob([picture.data], { type: picture.format })) : null;\n      const mediaTags = { artist, title, album, albumArt };\n      dispatch(setMediaTags(mediaTags, id));\n    } catch (error) {\n      dispatch(failureMediaTags(error, id));\n    }\n  }", "CodeBleu_score": 26.88679459376491}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t    dispatch(getMediaTagsRequest(id))\n    try {\n      const tags = await requireMusicMetadata(file)\n      const { artist, title, album, picture } = tags\n      const albumArt = picture ? URL.createObjectURL(new Blob(picture)) : null\n      dispatch(getMediaTagsSuccess({ id, artist, title, album, albumArt }))\n    } catch (error) {\n      dispatch(getMediaTagsFailure(id, error))\n    }\n  }", "CodeBleu_score": 17.610256743920797}]}
{"instance_id": "02174213852f", "generation_result": [{"code": "export function playTrack(id: number): Thunk {{\n\t    return (dispatch: Dispatch, getState: GetState) => {\n        const { mediaStatus } = getState();\n\n        if (mediaStatus === \"stopped\") {\n            dispatch(bufferTrack(id));\n        } else {\n            dispatch(playTrack(id));\n        }\n    };\n}", "CodeBleu_score": 30.46136729479492}, {"code": "export function playTrack(id: number): Thunk {{\n\t    return (dispatch, getState) => {\n        const state = getState();\n        const mediaStatus = Selectors.getMediaStatus(state);\n        if (mediaStatus === 'stopped') {\n            dispatch(Actions.bufferTrack(id));\n        } else {\n            dispatch(Actions.playTrack(id));\n        }\n    };\n}", "CodeBleu_score": 51.05250395944737}, {"code": "export function playTrack(id: number): Thunk {{\n\t    return (dispatch, getState) => {\n        const state = getState();\n        if (Selectors.getMediaStatus(state) === MediaStatus.STOPPED) {\n            dispatch(bufferTrack(id));\n        } else {\n            dispatch(playTrackAction(id));\n        }\n    }\n}", "CodeBleu_score": 43.70883836536316}]}
{"instance_id": "643b829015d2", "generation_result": [{"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t    e.preventDefault();\n    return (dispatch, getState) => {\n        const { volume } = getState().player;\n        dispatch(setVolume(volume + e.deltaY * 0.01));\n    };\n}", "CodeBleu_score": 62.64915646849018}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t  e.preventDefault();\n  return (dispatch, getState) => {\n    const { volume } = getState().player;\n    dispatch(setVolume(volume + e.deltaY * 0.01));\n  };\n}", "CodeBleu_score": 62.615253194439646}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t  e.preventDefault();\n  const currentVolume = getState().volume;\n  dispatch(setVolume(currentVolume + e.deltaY / 1000));\n}", "CodeBleu_score": 42.781989032007694}]}
{"instance_id": "d97c127090ce", "generation_result": [{"code": "function FullScreen(props: Props){\n\t  const { enabled, children, ...rest } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (!document.fullscreenElement) {\n        props.onExitFullScreen?.();\n      }\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      if (enabled) {\n        ref.current.requestFullscreen();\n        props.onEnterFullScreen?.();\n      } else if (document.fullscreenElement) {\n        document.exitFullscreen();\n      }\n    }\n  }, [enabled]);\n\n  return (\n    <div\n      ref={ref}\n      style={{ height: '100%', width: '100%' }}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n}", "CodeBleu_score": 50.68683939048644}, {"code": "function FullScreen(props: Props){\n\t  const { enabled, children } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (!ref.current) return;\n      if (document.fullscreenElement === ref.current) {\n        ref.current.classList.add(\"fullscreen\");\n      } else {\n        ref.current.classList.remove(\"fullscreen\");\n      }\n    };\n\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n    if (enabled) {\n      ref.current.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  }, [enabled]);\n\n  return (\n    <div\n      ref={ref}\n      className={`${enabled ? \"fullscreen\" : \"\"}`}\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}", "CodeBleu_score": 51.44353512963748}, {"code": "function FullScreen(props: Props){\n\t  const { enabled, children } = props;\n  const targetRef = useRef(null);\n\n  useEffect(() => {\n    const target = targetRef.current;\n\n    const handleFullscreenChange = () => {\n      if (!document.fullscreenElement) {\n        // Disable fullscreen mode\n      }\n    };\n\n    if (enabled) {\n      target.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, [enabled]);\n\n  useLayoutEffect(() => {\n    const target = targetRef.current;\n\n    if (enabled) {\n      target.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  }, [enabled]);\n\n  return (\n    <div\n      ref={targetRef}\n      style={{ height: '100%', width: '100%' }}\n    >\n      {children}\n    </div>\n  );\n}", "CodeBleu_score": 46.97302566034292}]}
{"instance_id": "d333738337a8", "generation_result": [{"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t  const clipPaths = {};\n  Object.entries(skinRegion).forEach(([regionName, regionData]) => {\n    if (regionData.polygons) {\n      clipPaths[regionName] = regionData.polygons.map((polygon) => polygon.id);\n    }\n  });\n  return clipPaths;\n}", "CodeBleu_score": 26.728665491180248}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t  const clipPaths = {}\n  Object.entries(skinRegion).forEach(([regionName, regionData]) => {\n    if (regionData.polygons) {\n      clipPaths[regionName] = regionData.polygons.map((polygon) => polygon.id)\n    }\n  })\n  return clipPaths\n}", "CodeBleu_score": 24.849445672432942}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t  const clipPaths = {};\n  Object.entries(skinRegion).forEach(([regionName, regionData]) => {\n    if (regionData.polygons) {\n      clipPaths[regionName] = regionData.polygons.map((polygon) => polygon.id);\n    }\n  });\n  return clipPaths;\n}", "CodeBleu_score": 26.728665491180248}]}
{"instance_id": "6d30b280ffbe", "generation_result": [{"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t  const buckets = new Array(NUM_BARS).fill(0);\n  const frequencyStep = Math.pow(2, 1 / NUM_BARS);\n\n  for (let i = 0; i < NUM_BARS; i++) {\n    const frequency = MIN_HZ * Math.pow(frequencyStep, i);\n    const bucket = Math.floor(bufferLength * (frequency / MAX_HZ));\n    buckets[i] = bucket;\n  }\n\n  return buckets;\n}", "CodeBleu_score": 37.91641207465571}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t  const octaveBuckets = new Array(NUM_BARS).fill(0);\n  const frequencyStep = (maxHz - minHz) / bufferLength;\n\n  for (let i = 0; i < bufferLength; i++) {\n    const frequency = minHz + i * frequencyStep;\n    const octave = Math.floor(Math.log2(frequency / minHz));\n    const octaveIndex = octave + NUM_BARS / 2;\n\n    if (octaveIndex >= 0 && octaveIndex < NUM_BARS) {\n      octaveBuckets[octaveIndex] = i;\n    }\n  }\n\n  return octaveBuckets;\n}", "CodeBleu_score": 44.310292610458454}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t  const buckets = new Array(NUM_BARS).fill(0);\n  const frequencyStep = Math.pow(2, 1 / 12);\n  const minHz = 27.5;\n  const maxHz = minHz * Math.pow(2, NUM_BARS - 1);\n\n  for (let hz = minHz; hz <= maxHz; hz *= frequencyStep) {\n    const bucket = Math.floor(hz / minHz);\n    const index = Math.floor((hz / minHz) * bufferLength);\n    buckets[bucket] = index;\n  }\n\n  return buckets;\n}", "CodeBleu_score": 40.03749456434721}]}
{"instance_id": "e7c399fb0db4", "generation_result": [{"code": "function EqGraph(){\n\t  const canvas = useRef(null);\n  const canvasCtx = useRef(null);\n  const [node, setNode] = useState(null);\n  const [image, setImage] = useState(null);\n  const [colorPattern, setColorPattern] = useState(null);\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext(\"2d\");\n    const node = document.querySelector(\"#eq-graph\");\n    const image = document.querySelector(\"#eq-image\");\n    const colorPattern = canvasCtx.createLinearGradient(0, 0, 0, 100);\n\n    colorPattern.addColorStop(0, \"#FF0000\");\n    colorPattern.addColorStop(0.25, \"#FFA500\");\n    colorPattern.addColorStop(0.5, \"#FFFF00\");\n    colorPattern.addColorStop(0.75, \"#00FF00\");\n    colorPattern.addColorStop(1, \"#0000FF\");\n\n    setNode(node);\n    setImage(image);\n    setColorPattern(colorPattern);\n    setCanvasCtx(canvasCtx);\n\n    return () => {\n      setNode(null);\n      setImage(null);\n      setColorPattern(null);\n      setCanvasCtx(null);\n    };\n  }, [canvas, canvasCtx, node, image, colorPattern]);\n\n  useLayoutEffect(() => {\n    if (canvasCtx.current && node && image && colorPattern) {\n      canvasCtx.current.clearRect(0, 0, node.offsetWidth, node.offsetHeight);\n      drawEqLine(canvasCtx.current, node, image, colorPattern);\n    }\n  }, [canvasCtx, node, image, colorPattern]);\n\n  return (\n    <canvas\n      ref={canvas}\n      id=\"eq-graph\"\n      width={100}\n      height={100}\n      style={{ width: \"100%\", height: \"100%\" }}\n    />\n  );\n}", "CodeBleu_score": 31.213907817486724}, {"code": "function EqGraph(){\n\t  const canvasRef = useRef(null);\n  const canvasCtx = useMemo(() => canvasRef.current?.getContext(\"2d\"), []);\n  const [canvasWidth, setCanvasWidth] = useState(0);\n  const [canvasHeight, setCanvasHeight] = useState(0);\n  const [node, setNode] = useState(null);\n  const [image, setImage] = useState(null);\n  const [colorPattern, setColorPattern] = useState(null);\n\n  useLayoutEffect(() => {\n    if (!canvasCtx) return;\n\n    const canvas = canvasRef.current;\n    setCanvasWidth(canvas.width);\n    setCanvasHeight(canvas.height);\n\n    const node = document.querySelector(\".node\");\n    setNode(node);\n\n    const image = document.querySelector(\".image\");\n    setImage(image);\n\n    const colorPattern = canvasCtx.createPattern(image, \"repeat\");\n    setColorPattern(colorPattern);\n\n    canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n    drawEqLine(canvasCtx, canvasWidth, canvasHeight, node, colorPattern);\n  }, [canvasCtx, canvasWidth, canvasHeight, node, image, colorPattern]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={canvasWidth}\n      height={canvasHeight}\n      className=\"canvas\"\n    />\n  );\n}", "CodeBleu_score": 36.20938855347464}, {"code": "function EqGraph(){\n\t  const canvasRef = useRef(null);\n  const [canvasCtx, setCanvasCtx] = useState(null);\n  const [node, setNode] = useState(null);\n  const [image, setImage] = useState(null);\n  const [colorPattern, setColorPattern] = useState(null);\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const node = document.querySelector(\".node\");\n    const image = document.querySelector(\".image\");\n    const colorPattern = ctx.createPattern(image, \"repeat\");\n    setCanvasCtx(ctx);\n    setNode(node);\n    setImage(image);\n    setColorPattern(colorPattern);\n\n    canvas.width = node.offsetWidth;\n    canvas.height = node.offsetHeight;\n  }, [canvasRef]);\n\n  useEffect(() => {\n    if (canvasCtx && node && image && colorPattern) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      const slider1 = document.querySelector(\".slider1\");\n      const slider2 = document.querySelector(\".slider2\");\n      const slider3 = document.querySelector(\".slider3\");\n      const slider4 = document.querySelector(\".slider4\");\n      const slider5 = document.querySelector(\".slider5\");\n      const slider6 = document.querySelector(\".slider6\");\n      const slider7 = document.querySelector(\".slider7\");\n      const slider8 = document.querySelector(\".slider8\");\n      const slider9 = document.querySelector(\".slider9\");\n      const slider10 = document.querySelector(\".slider10\");\n      const slider11 = document.querySelector(\".slider11\");\n      const slider12 = document.querySelector(\".slider12\");\n      const slider13 = document.querySelector(\".slider13\");\n      const slider14 = document.querySelector(\".slider14\");\n      const slider15 = document.querySelector(\".slider15\");\n      const slider16 = document.querySelector(\".slider16\");\n", "CodeBleu_score": 23.551985161938404}]}
{"instance_id": "b858f410c3f3", "generation_result": [{"code": "const ClutterBar = memo(() =>{\n\t  const {\n    setClutterBarFocus,\n    setClutterBarMouseUp,\n    setClutterBarMouseDown,\n  } = useActionCreator();\n\n  const { doubled } = useTypedSelector((state) => state.clutter);\n\n  const handleMouseDown = (event: MouseEvent) => {\n    setClutterBarMouseDown(event);\n  };\n\n  const handleMouseUp = (event: MouseEvent) => {\n    setClutterBarMouseUp(event);\n  };\n\n  return (\n    <div\n      className=\"clutter-bar\"\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onFocus={setClutterBarFocus}\n    >\n      <div\n        className={`clutter-bar-button ${doubled ? 'doubled' : ''}`}\n        onClick={() => setClutterBarFocus()}\n      >\n        <ClutterIcon />\n      </div>\n      <div className=\"clutter-bar-button\">\n        <div className=\"clutter-bar-button-text\">Clutter</div>\n      </div>\n      <div className=\"clutter-bar-button\">\n        <div className=\"clutter-bar-button-text\">Filter</div>\n      </div>\n      <div className=\"clutter-bar-button\">\n        <div className=\"clutter-bar-button-text\">Sort</div>\n      </div>\n      <div className=\"clutter-bar-button\">\n        <div className=\"clutter-bar-button-text\">Group</div>\n      </div>\n      <div className=\"clutter-bar-button\">\n        <div className=\"clutter-bar-button-text\">View</div>\n      </div>\n      <div className=\"clutter-bar-button\">\n        <div className=\"clutter-bar-button-text\">Help</div>\n      </div>\n    </div>\n  );\n}", "CodeBleu_score": 24.1814631534563}, {"code": "const ClutterBar = memo(() =>{\n\t\n    const doubled = useTypedSelector(state => state.clutter.doubled)\n    const { setClutterFocus, setClutterMouseUp } = useActionCreator()\n\n    const handleMouseDown = (e: React.MouseEvent<HTMLButtonElement>) => {\n        setClutterFocus(e.currentTarget.dataset.id!)\n    }\n\n    const handleMouseUp = (e: React.MouseEvent<HTMLButtonElement>) => {\n        setClutterMouseUp(e.currentTarget.dataset.id!)\n    }\n\n    const handleToggleDoubled = () => {\n        if (doubled) {\n            setClutterFocus('')\n        }\n        else {\n            setClutterFocus('doubled')\n        }\n    }\n\n    return (\n        <div className='clutter-bar'>\n            <div className='clutter-bar-buttons'>\n                <button\n                    className={doubled ? 'clutter-bar-button-doubled' : 'clutter-bar-button'}\n                    data-id='doubled'\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onClick={handleToggleDoubled}\n                >\n                    <img src={doubled ? doubledIcon : doubledIconGrey} alt='doubled' />\n                </button>\n                <button\n                    className='clutter-bar-button'\n                    data-id='clutter'\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                >\n                    <img src={clutterIcon} alt='clutter' />\n                </button>\n                <button\n                    className='clutter-bar-button'\n                    data-id='trash'\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                >\n                    <img src={trashIcon} alt='trash' />\n                </button>\n            </div>\n            <ClutterContextMenu />\n        </div>\n    )\n}", "CodeBleu_score": 26.027724934603235}, {"code": "const ClutterBar = memo(() =>{\n\t  const doubled = useTypedSelector((state) => state.doubled)\n  const { setFocus, setMouseUp } = useActionCreator()\n\n  const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    setFocus(event)\n  }\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    setMouseUp(event)\n  }\n\n  return (\n    <div className=\"clutter-bar\" onMouseDown={handleMouseDown} onMouseUp={handleMouseUp}>\n      <div className=\"clutter-bar__buttons\">\n        <div className=\"clutter-bar__buttons__button\">\n          <button>\n            <img src={trash} alt=\"trash\" />\n          </button>\n        </div>\n        <div className=\"clutter-bar__buttons__button\">\n          <button>\n            <img src={duplicate} alt=\"duplicate\" />\n          </button>\n        </div>\n        <div className=\"clutter-bar__buttons__button\">\n          <button>\n            <img src={alignLeft} alt=\"align-left\" />\n          </button>\n        </div>\n        <div className=\"clutter-bar__buttons__button\">\n          <button>\n            <img src={alignCenter} alt=\"align-center\" />\n          </button>\n        </div>\n        <div className=\"clutter-bar__buttons__button\">\n          <button>\n            <img src={alignRight} alt=\"align-right\" />\n          </button>\n        </div>\n        <div className=\"clutter-bar__buttons__button\">\n          <button>\n            <img src={alignTop} alt=\"align-top\" />\n          </button>\n        </div>\n        <div className=\"clutter-bar__buttons__button\">\n          <button>\n            <img src={alignMiddle} alt=\"align-middle\" />\n          </button>\n        </div>\n        <div className=\"clutter-bar__buttons__button\">", "CodeBleu_score": 24.501172862595155}]}
{"instance_id": "5946b13d68ba", "generation_result": [{"code": "const PlaylistToggleButton = memo(() =>{\n\t  const isOpen = useTypedSelector(Selectors.getWindowOpen)\n  const dispatch = useDispatch()\n  const togglePlaylist = useActionCreator(\n    Actions.togglePlaylist,\n    dispatch\n  )\n\n  const handleClick = () => {\n    togglePlaylist()\n  }\n\n  return (\n    <button\n      id='playlist-toggle'\n      className={`playlist-toggle${isOpen ? ' open' : ''}`}\n      onClick={handleClick}\n      title={isOpen ? 'Close Playlist Editor' : 'Open Playlist Editor'}\n    >\n      <Icon icon='list' />\n    </button>\n  )\n}", "CodeBleu_score": 32.10568111583683}, {"code": "const PlaylistToggleButton = memo(() =>{\n\t  const dispatch = useAppDispatch()\n  const isWindowOpen = useTypedSelector(Selectors.getWindowOpen)\n\n  const handleToggle = useCallback(() => {\n    dispatch(Actions.setWindowOpen(!isWindowOpen))\n  }, [dispatch, isWindowOpen])\n\n  return (\n    <button\n      id='playlist-toggle'\n      className={`playlist-toggle ${isWindowOpen ? 'is-open' : ''}`}\n      onClick={handleToggle}\n      title={isWindowOpen ? 'Close playlist editor' : 'Open playlist editor'}\n    />\n  )\n}", "CodeBleu_score": 34.615347949598444}, {"code": "const PlaylistToggleButton = memo(() =>{\n\t  const isPlaylistOpen = useTypedSelector(Selectors.getWindowOpen)\n  const togglePlaylist = useActionCreator(Actions.togglePlaylist)\n  return (\n    <button\n      id=\"playlist-toggle\"\n      className={`playlist-toggle${isPlaylistOpen ? ' open' : ''}`}\n      onClick={togglePlaylist}\n      title={isPlaylistOpen ? 'Close Playlist Editor' : 'Open Playlist Editor'}\n    >\n      <span className=\"icon\" />\n    </button>\n  )\n}", "CodeBleu_score": 29.524028676708358}]}
{"instance_id": "39ecf0db7a99", "generation_result": [{"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t  const [div] = React.useState(() => {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"webamp-desktop\");\n    document.body.appendChild(div);\n    return div;\n  });\n\n  React.useEffect(() => {\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n\n  return ReactDOM.createPortal(children, div);\n}", "CodeBleu_score": 51.513295231644875}, {"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t  const [div] = React.useState(() => {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"webamp-desktop\");\n    return div;\n  });\n\n  React.useEffect(() => {\n    document.body.appendChild(div);\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n\n  return ReactDOM.createPortal(children, div);\n}", "CodeBleu_score": 50.322819041168685}, {"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t  const [div] = React.useState(() => {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"webamp-desktop\");\n    return div;\n  });\n\n  React.useEffect(() => {\n    document.body.appendChild(div);\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n\n  return ReactDOM.createPortal(children, div);\n}", "CodeBleu_score": 50.322819041168685}]}
{"instance_id": "41be320578a4", "generation_result": [{"code": "export default function PlaylistScrollBar(){\n\t    const playlistHeight = useSelector(selectPlaylistHeight);\n    const scrollPosition = useSelector(selectPlaylistScrollPosition);\n    const allTracksVisible = useSelector(selectAllTracksVisible);\n\n    const dispatch = useDispatch();\n\n    const handleScroll = (event, newValue) => {\n        dispatch(setPlaylistScrollPosition(newValue));\n    };\n\n    return (\n        <VerticalSlider\n            value={scrollPosition}\n            min={0}\n            max={playlistHeight}\n            disabled={allTracksVisible}\n            onChange={handleScroll}\n            handle={<VerticalSliderHandle />}\n        />\n    );\n}", "CodeBleu_score": 29.231088736029538}, {"code": "export default function PlaylistScrollBar(){\n\t  const playlistHeight = useSelector(selectPlaylistHeight);\n  const playlistScrollPosition = useSelector(selectPlaylistScrollPosition);\n  const allTracksVisible = useSelector(selectAllTracksVisible);\n  const dispatch = useDispatch();\n\n  const handleScroll = (event, newValue) => {\n    dispatch(setPlaylistScrollPosition(newValue));\n  };\n\n  return (\n    <VerticalScrollbar\n      height={playlistHeight}\n      scrollPosition={playlistScrollPosition}\n      disabled={allTracksVisible}\n      onScroll={handleScroll}\n    />\n  );\n}", "CodeBleu_score": 26.60800508829391}, {"code": "export default function PlaylistScrollBar(){\n\t  const playlistHeight = useSelector((state) => state.playlist.playlistHeight);\n  const scrollPosition = useSelector((state) => state.playlist.scrollPosition);\n  const allTracksVisible = useSelector((state) => state.playlist.allTracksVisible);\n\n  const dispatch = useDispatch();\n\n  const handleScroll = (event, newValue) => {\n    dispatch(setPlaylistScrollPosition(newValue));\n  };\n\n  return (\n    <VerticalScrollbar\n      style={{\n        width: \"8px\",\n        height: `${playlistHeight}px`,\n        position: \"absolute\",\n        right: \"0\",\n        top: `${scrollPosition}px`,\n        zIndex: \"2\",\n      }}\n      value={scrollPosition}\n      onChange={handleScroll}\n      disabled={allTracksVisible}\n      disableSwipeToScroll={true}\n      ThumbComponent={VerticalScrollbarThumb}\n      trackProps={{\n        style: {\n          backgroundColor: \"transparent\",\n          width: \"8px\",\n          marginRight: \"2px\",\n          right: \"2px\",\n          borderRadius: \"4px\",\n        },\n      }}\n    />\n  );\n}", "CodeBleu_score": 31.604187871500365}]}
{"instance_id": "fccf51432007", "generation_result": [{"code": "export function genMediaDuration(url: string): Promise<number>{\n\t  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('durationchange', () => {\n      resolve(audio.duration);\n      audio.removeEventListener('durationchange', () => {});\n    });\n    audio.addEventListener('error', (e) => {\n      reject(e);\n      audio.removeEventListener('error', () => {});\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 38.6845205062282}, {"code": "export function genMediaDuration(url: string): Promise<number>{\n\t  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = \"anonymous\";\n    audio.addEventListener(\"durationchange\", () => {\n      resolve(audio.duration);\n      audio.removeEventListener(\"durationchange\", () => {});\n    });\n    audio.addEventListener(\"error\", (e) => {\n      reject(e);\n      audio.removeEventListener(\"error\", () => {});\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 40.75002148376328}, {"code": "export function genMediaDuration(url: string): Promise<number>{\n\t  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = \"anonymous\";\n    audio.addEventListener(\"durationchange\", () => {\n      resolve(audio.duration);\n      audio.removeEventListener(\"durationchange\", () => {});\n    });\n    audio.addEventListener(\"error\", (err) => {\n      reject(err);\n      audio.removeEventListener(\"error\", () => {});\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 39.609728093331356}]}
{"instance_id": "8055da9c9425", "generation_result": [{"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t  return new Promise((resolve, reject) => {\n    if (fileReference === null) {\n      reject(new Error(\"File reference is null\"));\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = (event) => {\n      const result = event.target.result;\n      resolve(result);\n    };\n    fileReader.onerror = (event) => {\n      reject(event.target.error);\n    };\n    fileReader.readAsArrayBuffer(fileReference);\n  });\n}", "CodeBleu_score": 58.26991081920747}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t  return new Promise((resolve, reject) => {\n    if (fileReference === null) {\n      reject(\"File reference is null\");\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      resolve(fileReader.result as ArrayBuffer);\n    };\n\n    fileReader.onerror = () => {\n      reject(fileReader.error);\n    };\n\n    fileReader.readAsArrayBuffer(fileReference);\n  });\n}", "CodeBleu_score": 67.25615944910358}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t  return new Promise((resolve, reject) => {\n    if (fileReference == null) {\n      reject(\"fileReference is null\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsArrayBuffer(fileReference);\n  });\n}", "CodeBleu_score": 67.2538797238052}]}
{"instance_id": "b3dc12d7d309", "generation_result": [{"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t  const [value, setValue] = useState<T | null>(null);\n  const [disposed, setDisposed] = useState(false);\n\n  useEffect(() => {\n    propValue.then((value) => {\n      if (!disposed) {\n        setValue(value);\n      }\n    });\n\n    return () => {\n      setDisposed(true);\n    };\n  }, [propValue]);\n\n  return value;\n}", "CodeBleu_score": 65.4524902619374}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t  const [value, setValue] = useState<T | null>(null);\n  const [disposed, setDisposed] = useState(false);\n\n  useEffect(() => {\n    propValue.then((newValue) => {\n      if (!disposed) {\n        setValue(newValue);\n      }\n    });\n\n    return () => {\n      setDisposed(true);\n    };\n  }, [propValue, disposed]);\n\n  return value;\n}", "CodeBleu_score": 62.523752863786086}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t    const [value, setValue] = useState<T | null>(null);\n    const [disposed, setDisposed] = useState(false);\n\n    useEffect(() => {\n        let disposed = false;\n        propValue.then((value) => {\n            if (!disposed) {\n                setValue(value);\n            }\n        });\n        return () => {\n            setDisposed(true);\n        };\n    }, [propValue]);\n\n    return value;\n}", "CodeBleu_score": 66.79200134470598}]}
{"instance_id": "7fc14a50df16", "generation_result": [{"code": "export default function regionParser(regionStr: string): RegionData{\n\t  const output: RegionData = {};\n  const sections = regionStr.split(/^\\[(.*)\\]$/gm);\n  for (let i = 1; i < sections.length; i += 2) {\n    const section = sections[i];\n    const points = section.split(/\n/g).map((point) => point.trim());\n    const polygon = points.map((point) => {\n      const [x, y] = point.split(/\\s/g);\n      return { x: parseFloat(x), y: parseFloat(y) };\n    });\n    const validPolygon = polygon.every(\n      (point) => !isNaN(point.x) && !isNaN(point.y)\n    );\n    if (validPolygon) {\n      output[sections[i - 1]] = polygon;\n    }\n  }\n  return output;\n}", "CodeBleu_score": 28.900223274118154}, {"code": "export default function regionParser(regionStr: string): RegionData{\n\t  const output: RegionData = {};\n\n  // Split the input string into sections\n  const sections = regionStr.split('\n\n');\n\n  // Process each section\n  for (const section of sections) {\n    const lines = section.split('\n');\n\n    // Extract the section name and polygon points\n    const sectionName = lines[0].trim();\n    const polygonPoints = lines\n      .slice(1)\n      .map((line) => line.split(',').map((coord) => parseFloat(coord)));\n\n    // Filter out invalid polygons\n    const validPolygons = polygonPoints.filter((polygon) =>\n      isValidPolygon(polygon)\n    );\n\n    // Store the valid polygons under their respective sections\n    output[sectionName] = validPolygons;\n  }\n\n  return output;\n}", "CodeBleu_score": 23.049291690226198}, {"code": "export default function regionParser(regionStr: string): RegionData{\n\t    const sections = regionStr.split('\n\n');\n    const output: RegionData = {};\n\n    for (const section of sections) {\n        const lines = section.split('\n');\n        const sectionName = lines[0].replace('[', '').replace(']', '');\n        const polygonPoints: PolygonPoint[] = [];\n\n        for (let i = 1; i < lines.length; i++) {\n            const line = lines[i];\n            const [x, y] = line.split(',');\n            const point: PolygonPoint = { x: parseFloat(x), y: parseFloat(y) };\n            polygonPoints.push(point);\n        }\n\n        const validPolygons = filterInvalidPolygons(polygonPoints);\n        output[sectionName] = validPolygons;\n    }\n\n    return output;\n}", "CodeBleu_score": 26.559225136579386}]}
{"instance_id": "6e97ec2706cf", "generation_result": [{"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t    mediaIsPlaying: state => state.media.mediaIsPlaying,\n    currentTrack: state => state.media.currentTrack,\n    mediaTags: state => state.media.mediaTags,\n}", "CodeBleu_score": 10.099082381271602}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t\tmediaPlayback,\n\tcurrentTrack,\n\tmediaTags,\n}", "CodeBleu_score": 0.2947217943410638}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t  mediaIsPlaying,\n  getCurrentTrackId,\n  getCurrentTrackMediaTagsLoadedState,\n}", "CodeBleu_score": 1.6171038427380455}]}
{"instance_id": "5dbbdd07f829", "generation_result": [{"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t    // Dispatch an action to center windows\n    this._store.dispatch(centerWindows());\n\n    // Wait for the skin to load\n    await this._skin.load();\n\n    // Ensure the instance is not already rendered\n    if (this._root) {\n      throw new Error('Instance is already rendered');\n    }\n\n    // Create a React root and set up cleanup to unmount it later\n    this._root = createRoot(node);\n    this._cleanup.push(() => this._root.unmount());\n\n    // Render the application within a Redux Provider, passing media and file picker options\n    this._root.render(\n      <Provider store={this._store}>\n        <App\n          media={this._media}\n          filePickerOptions={this._filePickerOptions}\n          onFilePicked={this._onFilePicked}\n        />\n      </Provider>\n    );\n  }", "CodeBleu_score": 31.91092112643745}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t    await this._root.renderWhenReady(node);\n  }", "CodeBleu_score": 6.7243845304004655}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t    const {\n      dispatch,\n      getState,\n      media,\n      filePicker,\n    } = this._store;\n\n    // center windows\n    dispatch(actions.centerWindows());\n\n    // wait for skin to load\n    await this._skin.load();\n\n    // ensure instance is not already rendered\n    if (this._root) {\n      return;\n    }\n\n    // create react root\n    this._root = createRoot(node);\n\n    // setup cleanup\n    this._cleanup = () => {\n      this._root.unmount();\n      this._root = null;\n    };\n\n    // render application\n    this._root.render(\n      <ReduxProvider store={this._store}>\n        <App\n          media={media}\n          filePicker={filePicker}\n          onClose={() => {\n            dispatch(actions.close());\n          }}\n          onOpen={(path) => {\n            dispatch(actions.open(path));\n          }}\n          onSave={(path) => {\n            dispatch(actions.save(path));\n          }}\n          onSaveAs={(path) => {\n            dispatch(actions.saveAs(path));\n          }}\n          onOpenRecent={(path) => {\n            dispatch(actions.openRecent(path));\n          }}\n          onOpenLocal={(path) => {\n            dispatch(actions.openLocal(path));\n          }}\n          onOpenRemote={(path) => {\n            dispatch(actions.openRemote(path));\n          }}\n          onOpenSample={(path) => {\n            dispatch(actions.openSample(path));\n          }}\n          onOpenSettings={() => {\n            dispatch(actions.openSettings());\n          }}\n          onOpenHelp={() => {\n            dispatch(actions.openHelp());\n          }}\n          onOpenWelcome={() => {\n            dispatch(actions.openWelcome());\n          }}\n          onOpenExport={() => {\n            dispatch(actions.openExport());\n          }}\n          onOpenImport={() => {\n            dispatch(actions.openImport());\n          }}\n          onOpenShortcuts={() => {\n            dispatch(actions.open", "CodeBleu_score": 34.11486310983729}]}
{"instance_id": "2598a3bbc50d", "generation_result": [{"code": "handleContextMenu(e: any){\n\t    const activeElem = document.activeElement;\n    const isInput = activeElem.tagName === \"INPUT\" || activeElem.tagName === \"TEXTAREA\";\n    const isNonTerminalInput = isInput && !activeElem.classList.contains(\"terminal\");\n    const sel = window.getSelection();\n    const isBlank = sel?.toString().trim().length === 0;\n    const options = {\n      cut: !isNonTerminalInput && !isBlank,\n      copy: true,\n      paste: true,\n    };\n    GlobalModel.contextEditMenu(e, options);\n  }", "CodeBleu_score": 35.815467309586055}, {"code": "handleContextMenu(e: any){\n\t  let isInput = false;\n  if (activeElem.tagName === \"TEXTAREA\" || activeElem.tagName === \"INPUT\") {\n    isInput = true;\n  }\n  let isSelected = false;\n  if (window.getSelection) {\n    if (window.getSelection().toString() !== \"\") {\n      isSelected = true;\n    }\n  }\n  if (isInput || isSelected) {\n    GlobalModel.contextEditMenu(e, {\n      copy: true,\n      cut: true,\n      paste: true,\n      selectAll: true,\n    });\n  }\n}", "CodeBleu_score": 27.710203848537198}, {"code": "handleContextMenu(e: any){\n\t  let isInput = false;\n  if (activeElem.tagName === 'TEXTAREA' || (activeElem.tagName === 'INPUT' && activeElem.type === 'text')) {\n    isInput = true;\n  }\n  if (isInput || sel?.toString() !== '') {\n    GlobalModel.contextEditMenu(e, {\n      isInput: isInput,\n      hasSelection: sel?.toString() !== '',\n    });\n  }\n}", "CodeBleu_score": 23.434886955555967}]}
{"instance_id": "9a7475588195", "generation_result": [{"code": "handleChangeFontSize(fontSize: string): void{\n\t  const newFontSize = Number(fontSize);\n  if (newFontSize !== GlobalModel.getTermFontSize()) {\n    GlobalModel.setTermFontSize(newFontSize);\n    commandRtnHandler(GlobalCommandRunner.setTermFontSize(newFontSize));\n  }\n}", "CodeBleu_score": 48.086764048040855}, {"code": "handleChangeFontSize(fontSize: string): void{\n\t  const newFontSize = Number(fontSize);\n  if (newFontSize !== GlobalModel.getTermFontSize()) {\n    GlobalCommandRunner.setTermFontSize(newFontSize);\n    commandRtnHandler(GlobalCommandRunner.getLastCommandReturnValue());\n  }\n}", "CodeBleu_score": 43.67738964557551}, {"code": "handleChangeFontSize(fontSize: string): void{\n\t    const fontSizeNum = Number(fontSize);\n    if (fontSizeNum !== GlobalModel.getTermFontSize()) {\n        GlobalModel.setTermFontSize(fontSizeNum);\n        commandRtnHandler(GlobalCommandRunner.setTermFontSize(fontSizeNum));\n    }\n}", "CodeBleu_score": 42.723183518731304}]}
{"instance_id": "d4d74a9c8035", "generation_result": [{"code": "handleChangeTermTheme(theme: string): void{\n\t  const currentTheme = GlobalModel.getTermThemeSettings();\n  if (currentTheme === theme) return;\n  GlobalModel.setTermThemeSettings(theme);\n  commandRtnHandler(GlobalCommandRunner.setRootTermTheme(theme));\n}", "CodeBleu_score": 36.14811026727395}, {"code": "handleChangeTermTheme(theme: string): void{\n\t    const currentTheme = GlobalModel.getTermThemeSettings().theme;\n    if (currentTheme === theme) return;\n\n    GlobalModel.setTermThemeSettings({ theme });\n\n    const commandRtn = GlobalCommandRunner.setRootTermTheme(theme);\n\n    commandRtnHandler(commandRtn);\n}", "CodeBleu_score": 44.54451275135926}, {"code": "handleChangeTermTheme(theme: string): void{\n\t  const currentTheme = GlobalModel.getTermThemeSettings();\n  if (currentTheme === theme) {\n    return;\n  }\n  GlobalModel.setTermThemeSettings(theme);\n  GlobalCommandRunner.setRootTermTheme(theme);\n  commandRtnHandler(GlobalCommandRunner.runCommand(`setTheme ${theme}`));\n}", "CodeBleu_score": 40.56957561942779}]}
{"instance_id": "329444949255", "generation_result": [{"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t  const [isOpen, setIsOpen] = useState(true);\n\n  const handleClose = () => {\n    setIsOpen(false);\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"modal-header\">\n      <div className=\"modal-title\">{title}</div>\n      {onClose && (\n        <button className=\"modal-close-button\" onClick={handleClose}>\n          <Icon icon=\"close\" />\n        </button>\n      )}\n      {keybindings && <ModalKeybindings keybindings={keybindings} />}\n    </div>\n  );\n}", "CodeBleu_score": 31.86850389782957}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t  return (\n    <div className=\"modal-header\">\n      <h3>{title}</h3>\n      {onClose && (\n        <button className=\"close-button\" onClick={onClose}>\n          <i className=\"fa fa-times\"></i>\n        </button>\n      )}\n      {keybindings && <ModalKeybindings keybindings={keybindings} />}\n    </div>\n  );\n}", "CodeBleu_score": 24.653909347657905}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t    return (\n      <div className=\"modal-header\">\n        <div className=\"modal-title\">{title}</div>\n        {onClose && (\n          <button type=\"button\" className=\"modal-close-button\" onClick={onClose}>\n            <Icon name=\"close\" />\n          </button>\n        )}\n        {keybindings && <ModalKeybindings keybindings={keybindings} />}\n      </div>\n    );\n  }", "CodeBleu_score": 26.117747000201856}]}
{"instance_id": "1da69d707d33", "generation_result": [{"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t    if (!rptr || !rptr.remoteid) return '';\n    const remoteName = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n    if (rptr.name) return `[${remoteName}:${rptr.name}]`;\n    return `[${remoteName}]`;\n}", "CodeBleu_score": 37.456666344600706}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t    if (rptr == null || rptr.remoteid == null || rptr.remoteid.isBlank()) {\n        return \"\";\n    }\n    let name = rnames[rptr.remoteid];\n    if (name == null) {\n        name = rptr.remoteid.substring(0, 8);\n    }\n    if (rptr.name != null && !rptr.name.isBlank()) {\n        name += \":\" + rptr.name;\n    }\n    return \"[\" + name + \"]\";\n}", "CodeBleu_score": 65.9564557587702}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t  if (rptr == null || rptr.remoteid == null || rptr.remoteid.length === 0) {\n    return \"\";\n  }\n  const remoteName = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n  if (rptr.name) {\n    return `[${remoteName}:${rptr.name}]`;\n  } else {\n    return `[${remoteName}]`;\n  }\n}", "CodeBleu_score": 47.48108241018064}]}
{"instance_id": "757ee5b9626f", "generation_result": [{"code": "adjustTextAreaHeight(){\n\t  const textarea = document.getElementById('myTextarea');\n  const minHeight = 50; // Minimum height in pixels\n  const maxHeight = 200; // Maximum height in pixels\n  const maxLines = 5; // Maximum number of lines\n\n  // Set initial height to 1px to measure scrollHeight\n  textarea.style.height = '1px';\n\n  // Calculate new height based on font size and maximum number of lines\n  const fontSize = parseInt(window.getComputedStyle(textarea).fontSize);\n  const lineHeight = fontSize * 1.5; // Adjust line height as needed\n  const newHeight = Math.min(Math.max(textarea.scrollHeight, minHeight), maxHeight);\n\n  // Apply new height to textarea\n  textarea.style.height = `${newHeight}px`;\n}", "CodeBleu_score": 31.490346657892005}, {"code": "adjustTextAreaHeight(){\n\t  const textarea = this.$refs.textarea;\n  const fontSize = parseFloat(getComputedStyle(textarea).fontSize);\n  const maxLines = 10; // Define the maximum number of lines you want to allow\n\n  // Set the initial height to 1px to measure the scrollHeight\n  textarea.style.height = '1px';\n\n  // Calculate the new height within a minimum and maximum range\n  const newHeight = Math.min(\n    Math.max(textarea.scrollHeight, fontSize * maxLines),\n    fontSize * maxLines\n  );\n\n  // Apply the new height to the textarea to fit the text\n  textarea.style.height = `${newHeight}px`;\n}", "CodeBleu_score": 35.70409154490858}, {"code": "adjustTextAreaHeight(){\n\t  const textarea = document.getElementById(\"textarea\");\n  textarea.style.height = \"1px\"; // Set initial height to measure scrollHeight\n  const scrollHeight = textarea.scrollHeight;\n  const fontSize = parseInt(getComputedStyle(textarea).fontSize);\n  const maxLines = 10;\n  const minHeight = fontSize * 1.5; // Minimum height based on font size\n  const maxHeight = fontSize * maxLines; // Maximum height based on font size and maximum number of lines\n  const newHeight = Math.min(Math.max(scrollHeight, minHeight), maxHeight);\n  textarea.style.height = `${newHeight}px`;\n}", "CodeBleu_score": 41.03137625964826}]}
{"instance_id": "c0fa6e5d0067", "generation_result": [{"code": "onEnterKeyPressed(){\n\t  const codeBlockIndex = GlobalModel.sidebarchatModel.getSelectedCodeBlockIndex();\n  if (codeBlockIndex !== -1) {\n    this.onSetCmdInputValue();\n  } else {\n    const currentMessage = this.value.get();\n    this.submitChatMessage(currentMessage);\n    this.value.set('');\n    GlobalModel.sidebarchatModel.resetCmdAndOutput();\n  }\n  return true;\n}", "CodeBleu_score": 69.75141790710002}, {"code": "onEnterKeyPressed(){\n\t    if (GlobalModel.sidebarchatModel.getSelectedCodeBlockIndex() !== -1) {\n        this.onSetCmdInputValue()\n    } else {\n        let message = this.value.get()\n        this.submitChatMessage(message)\n        this.value.set('')\n        GlobalModel.sidebarchatModel.resetCmdAndOutput()\n    }\n    return true\n}", "CodeBleu_score": 51.158836328063}, {"code": "onEnterKeyPressed(){\n\t  if (GlobalModel.sidebarchatModel.getSelectedCodeBlockIndex() !== -1) {\n    this.onSetCmdInputValue()\n  } else {\n    const message = this.value.get()\n    this.submitChatMessage(message)\n    this.value.set(\"\")\n    GlobalModel.sidebarchatModel.resetCmdAndOutput()\n  }\n  return true\n}", "CodeBleu_score": 50.3342902868395}]}
{"instance_id": "a022487e54ff", "generation_result": [{"code": "function readAuthKey(): string{\n\t  const homeDir = process.env.HOME || process.env.USERPROFILE;\n  const authKeyFile = path.join(homeDir, '.authKey');\n\n  if (!fs.existsSync(authKeyFile)) {\n    const newKey = uuidv4();\n    fs.writeFileSync(authKeyFile, newKey, { mode: 0o600 });\n    return newKey;\n  }\n\n  const key = fs.readFileSync(authKeyFile, 'utf8').trim();\n  if (!uuidValidate(key)) {\n    throw new Error('Invalid auth key');\n  }\n  return key;\n}", "CodeBleu_score": 28.82713665934692}, {"code": "function readAuthKey(): string{\n\t  const homeDir = os.homedir()\n  const authKeyFile = path.join(homeDir, '.zmNinja', 'authKey')\n\n  if (!fs.existsSync(authKeyFile)) {\n    const newKey = uuid.v4()\n    fs.writeFileSync(authKeyFile, newKey, { mode: 0o600 })\n    return newKey\n  }\n\n  const key = fs.readFileSync(authKeyFile, 'utf8').trim()\n  if (!uuid.validate(key)) {\n    throw new Error('Invalid authorization key')\n  }\n  return key\n}", "CodeBleu_score": 27.006041017611377}, {"code": "function readAuthKey(): string{\n\t  const homeDir = os.homedir()\n  const authKeyPath = path.join(homeDir, '.auth-key')\n\n  if (!fs.existsSync(authKeyPath)) {\n    const uuid = crypto.randomUUID()\n    fs.writeFileSync(authKeyPath, uuid, { mode: 0o600 })\n    return uuid\n  }\n\n  const authKey = fs.readFileSync(authKeyPath, 'utf8')\n  if (!uuidValidate(authKey)) {\n    throw new Error('Invalid auth key')\n  }\n  return authKey\n}", "CodeBleu_score": 25.2247732116891}]}
{"instance_id": "9c3e2f93e1c1", "generation_result": [{"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t  if (!this.isRunning) {\n    return;\n  }\n\n  const chunkSize = 1000;\n  let start = 0;\n  while (start < data.length) {\n    const end = start + chunkSize;\n    const chunk = data.slice(start, end);\n    this.handleInputChunk(chunk, renderer);\n    start = end;\n  }\n}", "CodeBleu_score": 40.40610674649374}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t    if (!this.isRunning) {\n        return;\n    }\n\n    let chunkSize = 100;\n    let chunkStart = 0;\n    while (chunkStart < data.length) {\n        let chunkEnd = Math.min(chunkStart + chunkSize, data.length);\n        let chunk = data.slice(chunkStart, chunkEnd);\n        this.handleInputChunk(chunk, renderer);\n        chunkStart = chunkEnd;\n    }\n}", "CodeBleu_score": 36.87533839370201}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t  if (!this.isRunning) {\n    return;\n  }\n\n  const chunkSize = 10000;\n  for (let i = 0; i < data.length; i += chunkSize) {\n    const chunk = data.slice(i, i + chunkSize);\n    this.handleInputChunk(chunk, renderer);\n  }\n}", "CodeBleu_score": 52.036149174466885}]}
{"instance_id": "37ad09d7b939", "generation_result": [{"code": "function checkValidServiceWorker(swUrl) {\n\t  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}", "CodeBleu_score": 99.89465400455778}, {"code": "function checkValidServiceWorker(swUrl) {\n\t    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }", "CodeBleu_score": 98.13197016504614}, {"code": "function checkValidServiceWorker(swUrl) {\n\t  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}", "CodeBleu_score": 100.0}]}
{"instance_id": "27dabe0c40aa", "generation_result": [{"code": "function areAllRequiredElementsHighlighted{\n\t    let highlightedElements = 0\n    for (const element of requiredElements) {\n        if (highlighted.includes(element)) {\n            highlightedElements++\n        }\n    }\n    if (highlightedElements === 0) {\n        return CheckboxState.UNCHECKED\n    } else if (highlightedElements === requiredElements.length) {\n        return CheckboxState.CHECKED\n    } else {\n        return CheckboxState.INDETERMINATE\n    }\n}", "CodeBleu_score": 23.58169229253202}, {"code": "function areAllRequiredElementsHighlighted{\n\t  let numberOfHighlightedElements = 0\n  for (const element of elementsToHighlight) {\n    if (highlighted.includes(element)) {\n      numberOfHighlightedElements++\n    }\n  }\n  if (numberOfHighlightedElements === 0) {\n    return CheckboxState.UNCHECKED\n  }\n  if (numberOfHighlightedElements === elementsToHighlight.length) {\n    return CheckboxState.CHECKED\n  }\n  return CheckboxState.INDETERMINATE\n}", "CodeBleu_score": 25.24636160343488}, {"code": "function areAllRequiredElementsHighlighted{\n\t  const highlighted = this.state.highlighted\n  const requiredElements = this.state.requiredElements\n\n  if (highlighted.length === 0) {\n    return CheckboxState.UNCHECKED\n  }\n\n  const areAllHighlighted = requiredElements.every(element => highlighted.includes(element))\n\n  if (areAllHighlighted) {\n    return CheckboxState.CHECKED\n  }\n\n  return CheckboxState.INDETERMINATE\n}", "CodeBleu_score": 33.89313166692338}]}
{"instance_id": "c60e532809af", "generation_result": [{"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t  const actions = actionsFn(...handles);\n  return Object.entries(actions).map(([key, action]) => {\n    const [eventName, selector] = key.split(\":\");\n    return {\n      eventName,\n      handler: (event: any) => {\n        if (!selector || event.target.matches(selector)) {\n          action(event);\n        }\n      },\n    };\n  });\n}", "CodeBleu_score": 55.34297176068962}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t  const actions = actionsFn(...handles)\n\n  return Object.entries(actions).map(([key, action]) => {\n    const [eventName, selector] = key.split('@')\n    const handler = (e: Event) => {\n      if (!selector || hasMatchInAncestry(e.target as HTMLElement, selector)) {\n        action(e)\n      }\n    }\n    return { eventName, handler }\n  })\n}", "CodeBleu_score": 50.53213455945526}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t  const actions = actionsFn(...handles);\n  const handlers = [];\n\n  for (const [key, action] of Object.entries(actions)) {\n    const [eventName, selector] = key.split(':');\n\n    const handler = (event: Event) => {\n      if (!selector || hasMatchInAncestry(event.target, selector)) {\n        action(event);\n      }\n    };\n\n    handlers.push({ eventName, handler });\n  }\n\n  return handlers;\n}", "CodeBleu_score": 51.89124980121843}]}
{"instance_id": "8c81ca953249", "generation_result": [{"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t  useEffect(() => {\n    const root = document.getElementById('storybook-root');\n    if (root) {\n      handles.forEach((handle) => {\n        root.addEventListener(handle, actionsFn);\n      });\n    }\n    return () => {\n      if (root) {\n        handles.forEach((handle) => {\n          root.removeEventListener(handle, actionsFn);\n        });\n      }\n    };\n  }, [actionsFn, ...handles]);\n}", "CodeBleu_score": 43.920837884247554}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t  const root = document.getElementById(\"storybook-root\");\n  if (!root) return;\n\n  const handleEvent = (event: any) => {\n    const { type, eventName } = event.detail;\n    if (type === \"action\") {\n      actionsFn[eventName](event);\n    } else if (type === \"handle\") {\n      handles[eventName](event);\n    }\n  };\n\n  root.addEventListener(\"storybookAction\", handleEvent);\n  root.addEventListener(\"storybookHandle\", handleEvent);\n\n  return () => {\n    root.removeEventListener(\"storybookAction\", handleEvent);\n    root.removeEventListener(\"storybookHandle\", handleEvent);\n  };\n}", "CodeBleu_score": 39.68511102299003}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t  const root = document.getElementById('storybook-root');\n\n  if (!root) return;\n\n  React.useEffect(() => {\n    const handler = (event: any) => {\n      const { type, data } = event;\n      actionsFn({ type, data });\n    };\n\n    root.addEventListener('storybookAction', handler);\n\n    handles.forEach((handle) => {\n      root.addEventListener(handle, handler);\n    });\n\n    return () => {\n      root.removeEventListener('storybookAction', handler);\n\n      handles.forEach((handle) => {\n        root.removeEventListener(handle, handler);\n      });\n    };\n  }, [root, actionsFn, ...handles]);\n}", "CodeBleu_score": 44.22817550049495}]}
{"instance_id": "3b9dc9070ef1", "generation_result": [{"code": "addAction = (action: ActionDisplay) =>{\n\t  const prevState = this.state;\n  const actions = prevState.actions.slice(0);\n  const lastAction = actions[actions.length - 1];\n  if (lastAction && safeDeepEqual(lastAction.data, action.data)) {\n    lastAction.count++;\n  } else {\n    actions.push({\n      count: 1,\n      data: action.data,\n    });\n  }\n  this.setState(\n    {\n      actions: actions.slice(-this.props.options.limit),\n    },\n    () => {\n      if (this.props.options.callback) {\n        this.props.options.callback(actions);\n      }\n    }\n  );\n}", "CodeBleu_score": 43.45373893756593}, {"code": "addAction = (action: ActionDisplay) =>{\n\t  const { state, options } = this;\n  const { actions } = state;\n  const lastAction = actions[actions.length - 1];\n  if (lastAction && safeDeepEqual(lastAction.data, action.data)) {\n    lastAction.count++;\n  } else {\n    action.count = 1;\n    actions.push(action);\n  }\n  this.setState({\n    actions: actions.slice(-options.limit),\n  });\n}", "CodeBleu_score": 47.266063986609026}, {"code": "addAction = (action: ActionDisplay) =>{\n\t  const { state, options } = this.props;\n  const actions = state.actions;\n  const lastAction = actions[actions.length - 1];\n\n  if (lastAction && safeDeepEqual(lastAction.data, action.data)) {\n    lastAction.count++;\n  } else {\n    action.count = 1;\n    actions.push(action);\n  }\n\n  this.props.update(\n    {\n      actions: actions.slice(-options.limit),\n    },\n    true\n  );\n}", "CodeBleu_score": 50.68237251679003}]}
{"instance_id": "c58b95bdb84e", "generation_result": [{"code": "export const addGridStyle = (selector: string, css: string) => {\n\t    const style = document.getElementById(selector)\n    if (style) {\n        if (style.innerHTML !== css) {\n            style.innerHTML = css\n        }\n    } else {\n        const style = document.createElement('style')\n        style.setAttribute('id', selector)\n        style.innerHTML = css\n        document.head.appendChild(style)\n    }\n}", "CodeBleu_score": 56.383729223864506}, {"code": "export const addGridStyle = (selector: string, css: string) => {\n\t  let style = document.getElementById(selector)\n  if (!style) {\n    style = document.createElement('style')\n    style.setAttribute('id', selector)\n    document.head.appendChild(style)\n  }\n  style.textContent = css\n}", "CodeBleu_score": 39.14990964394603}, {"code": "export const addGridStyle = (selector: string, css: string) => {\n\t  const style = document.getElementById(selector) || document.createElement(\"style\");\n  style.setAttribute(\"id\", selector);\n  style.textContent = css;\n  document.head.appendChild(style);\n}", "CodeBleu_score": 38.6621518273926}]}
{"instance_id": "882d870a20b2", "generation_result": [{"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t  const existingStyle = document.getElementById(selector);\n  if (existingStyle) {\n    if (existingStyle.textContent !== css) {\n      existingStyle.textContent = css;\n    }\n  } else {\n    const style = document.createElement('style');\n    style.setAttribute('id', selector);\n    style.textContent = css;\n    document.head.appendChild(style);\n  }\n\n  const existingGridStyle = document.getElementById(`${selector}-${storyId}`);\n  if (existingGridStyle) {\n    existingGridStyle.parentElement?.insertBefore(existingStyle, existingGridStyle);\n  } else {\n    document.head.appendChild(existingStyle);\n  }\n}", "CodeBleu_score": 58.801455411184065}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t  const existingStyle = document.getElementById(selector)\n  if (existingStyle) {\n    if (existingStyle.innerHTML !== css) {\n      existingStyle.innerHTML = css\n    }\n  } else {\n    const style = document.createElement('style')\n    style.setAttribute('id', selector)\n    style.innerHTML = css\n    document.head.appendChild(style)\n  }\n\n  const existingGridStyle = document.getElementById(`${selector}-${storyId}`)\n  if (existingGridStyle) {\n    existingGridStyle.parentElement?.insertBefore(style, existingGridStyle)\n  } else {\n    document.head.appendChild(style)\n  }\n}", "CodeBleu_score": 59.74006920781698}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t  const existingStyle = document.getElementById(selector);\n  const existingGridStyle = document.getElementById(`${storyId}-grid`);\n\n  if (existingStyle) {\n    if (existingStyle.innerHTML !== css) {\n      existingStyle.innerHTML = css;\n    }\n  } else {\n    const style = document.createElement('style');\n    style.setAttribute('id', selector);\n    style.innerHTML = css;\n    if (existingGridStyle) {\n      existingGridStyle.parentElement?.insertBefore(style, existingGridStyle);\n    } else {\n      document.head.appendChild(style);\n    }\n  }\n}", "CodeBleu_score": 63.49965615303551}]}
{"instance_id": "c17e647327b5", "generation_result": [{"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\t  event.preventDefault();\n\n  if (isSaving) {\n    return;\n  }\n\n  setErrorMessage('');\n  setSaving(true);\n\n  try {\n    setCreating(true);\n    await createStory({\n      variables: {\n        storyName: storyName.replace(/^[^a-z]/i, '').replaceAll(' ', '-'),\n      },\n    });\n    setCreating(false);\n  } catch (error) {\n    setErrorMessage('Something went wrong. Please try again.');\n    setSaving(false);\n  }\n}", "CodeBleu_score": 52.87689953187844}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\t  event.preventDefault();\n  if (isSaving) return;\n\n  setErrorMessage('');\n  setSaving(true);\n  try {\n    const sanitizedStoryName = storyName.replace(/^[^a-z]/i, '').replaceAll(' ', '-');\n    await createStory(sanitizedStoryName);\n    setCreating(false);\n  } catch (error) {\n    setErrorMessage((error as Error).message);\n  }\n  setSaving(false);\n}", "CodeBleu_score": 53.843653459312925}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\t  event.preventDefault();\n\n  if (isSaving) {\n    return;\n  }\n\n  setErrorMessage('');\n  setSaving(true);\n\n  try {\n    setCreating(true);\n    await createStory(storyName.replace(/^[^a-z]/i, '').replaceAll(' ', '-'));\n    setCreating(false);\n  } catch (error) {\n    setErrorMessage(error.message);\n  } finally {\n    setSaving(false);\n  }\n}", "CodeBleu_score": 56.79678582370694}]}
{"instance_id": "2d58c69eda27", "generation_result": [{"code": "function Title(){\n\t  const { argTypes } = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) => argType?.control && argType.control !== 'none'\n  ).length;\n  const suffix = controlsCount ? ` (${controlsCount})` : '';\n\n  return (\n    <div>\n      <span>Controls</span>\n      {suffix && <Badge suffix={suffix} />}\n    </div>\n  );\n}", "CodeBleu_score": 41.14383219562177}, {"code": "function Title(){\n\t  const argTypes = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) => argType?.control && argType?.control !== 'none'\n  ).length;\n\n  return (\n    <div>\n      Controls\n      {controlsCount > 0 && (\n        <Badge status=\"neutral\">\n          <span>{controlsCount}</span>\n        </Badge>\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 37.503885766156245}, {"code": "function Title(){\n\t  const { argTypes } = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) => argType?.control && argType.control !== 'none'\n  ).length;\n\n  return (\n    <div>\n      <span>Controls</span>\n      {controlsCount > 0 && (\n        <span\n          style={{\n            display: 'inline-block',\n            backgroundColor: '#FF4785',\n            color: '#333',\n            marginLeft: 10,\n            padding: '2px 5px',\n            fontSize: 12,\n            borderRadius: 3,\n            fontWeight: 'bold',\n          }}\n        >\n          {controlsCount}\n        </span>\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 36.101861645876696}]}
{"instance_id": "b8fba20204d6", "generation_result": [{"code": "const highlight = (infos: HighlightInfo) =>{\n\t  const { elements, styles } = infos;\n\n  // Reset existing highlights\n  resetHighlights();\n\n  // Ensure no duplicate selectors in the elements array\n  const uniqueElements = [...new Set(elements)];\n\n  // Create a new style element\n  const style = document.createElement(\"style\");\n\n  // Set the style element's ID\n  style.id = HIGHLIGHT_STYLE_ID;\n\n  // Define CSS rules for each element\n  const rules = uniqueElements.map((element) => {\n    const selector = getElementSelector(element);\n    const styles = getElementStyles(element, infos);\n    return `${selector} { ${styles} }`;\n  });\n\n  // Set the style element's innerHTML\n  style.innerHTML = rules.join(\"\n\");\n\n  // Append the style element to the document head\n  document.head.appendChild(style);\n}", "CodeBleu_score": 45.612158248959865}, {"code": "const highlight = (infos: HighlightInfo) =>{\n\t  const { elements, color, backgroundColor, borderColor, borderWidth, borderStyle, borderRadius } = infos;\n  const style = document.createElement('style');\n  style.id = 'highlight-style';\n  style.innerHTML = `\n    ${elements.map((element) => `\n      ${element} {\n        background-color: ${backgroundColor};\n        color: ${color};\n        border: ${borderWidth}px ${borderStyle} ${borderColor};\n        border-radius: ${borderRadius}px;\n      }\n    `).join('\n')}\n  `;\n  document.head.appendChild(style);\n}", "CodeBleu_score": 41.724912302334346}, {"code": "const highlight = (infos: HighlightInfo) =>{\n\t  const { elements, color, label } = infos;\n  resetHighlights();\n  const styleElement = document.createElement(\"style\");\n  styleElement.id = \"highlight-style\";\n  const cssRules = elements.reduce((rules, element) => {\n    const selector = element.tagName.toLowerCase();\n    const cssRule = `${selector} {\n      animation: highlight 1s;\n      outline: 2px solid ${color};\n      outline-offset: -2px;\n      box-shadow: 0 0 0 2px ${color};\n    }`;\n    return `${rules}\n${cssRule}`;\n  }, \"\");\n  styleElement.innerHTML = cssRules;\n  document.head.appendChild(styleElement);\n}", "CodeBleu_score": 41.66202414837578}]}
{"instance_id": "08a3fb827e48", "generation_result": [{"code": "const resetHighlight = () =>{\n\t    const sheetToBeRemoved = document.getElementById(\"highlight-style\");\n    if (sheetToBeRemoved) {\n        sheetToBeRemoved.parentNode?.removeChild(sheetToBeRemoved);\n    }\n}", "CodeBleu_score": 56.402600746876196}, {"code": "const resetHighlight = () =>{\n\t  const sheetToBeRemoved = document.getElementById('highlight-style')\n  if (sheetToBeRemoved) {\n    sheetToBeRemoved.parentNode?.removeChild(sheetToBeRemoved)\n  }\n}", "CodeBleu_score": 46.16244535523355}, {"code": "const resetHighlight = () =>{\n\t  const sheetToBeRemoved = document.getElementById(\"highlight-style\");\n  if (sheetToBeRemoved) {\n    sheetToBeRemoved.parentNode?.removeChild(sheetToBeRemoved);\n  }\n}", "CodeBleu_score": 56.16833006230637}]}
{"instance_id": "1287df4e99b3", "generation_result": [{"code": "function parseQuery(queryString: string){\n\t    const obj = {};\n    const pairs = (queryString[0] === '?' ? queryString.substring(1) : queryString).split('&');\n    for (let i = 0; i < pairs.length; i++) {\n        const pair = pairs[i].split('=');\n        obj[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n    return obj;\n}", "CodeBleu_score": 69.78384378573035}, {"code": "function parseQuery(queryString: string){\n\t    const obj: Record<string, string> = {}\n    const pairs = (queryString[0] === '?' ? queryString.substring(1) : queryString)\n        .split('&')\n    for (let i = 0; i < pairs.length; i++) {\n        const pair = pairs[i].split('=')\n        obj[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n    return obj\n}", "CodeBleu_score": 68.77490389600217}, {"code": "function parseQuery(queryString: string){\n\t    const queryObject: { [key: string]: string } = {};\n\n    if (queryString.length > 0) {\n        const pairs = (queryString[0] === '?' ? queryString.substring(1) : queryString)\n            .split('&')\n            .filter(pair => pair.length > 0);\n\n        for (let i = 0; i < pairs.length; i++) {\n            const pair = pairs[i].split('=');\n            queryObject[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n        }\n    }\n\n    return queryObject;\n}", "CodeBleu_score": 68.6754402401839}]}
{"instance_id": "83c4f520b99a", "generation_result": [{"code": "const linksListener = (e: Event) =>{\n\t  if (e.target instanceof HTMLElement) {\n    const { sbKind, sbStory } = e.target.dataset;\n    if (sbKind || sbStory) {\n      e.preventDefault();\n      navigate(sbKind, sbStory);\n    }\n  }\n}", "CodeBleu_score": 29.60825360022866}, {"code": "const linksListener = (e: Event) =>{\n\t    const target = e.target as HTMLElement;\n    const kind = target.dataset.sbKind;\n    const story = target.dataset.sbStory;\n\n    if (kind || story) {\n        e.preventDefault();\n        navigate(kind, story);\n    }\n}", "CodeBleu_score": 37.17042909133761}, {"code": "const linksListener = (e: Event) =>{\n\t  if (!(e.target instanceof HTMLElement)) return;\n  const { sbKind, sbStory } = e.target.dataset;\n  if (sbKind || sbStory) {\n    e.preventDefault();\n    navigate(sbKind, sbStory);\n  }\n}", "CodeBleu_score": 32.833073537904035}]}
{"instance_id": "8b8e277eb593", "generation_result": [{"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t  const { shadowRoot } = node;\n  if (shadowRoot) {\n    const nestedElement = shadowRoot.elementFromPoint(1, 1);\n    if (nestedElement === node) {\n      return node;\n    }\n    if (nestedElement.shadowRoot) {\n      return crawlShadows(nestedElement);\n    }\n    return nestedElement;\n  }\n  return node;\n}", "CodeBleu_score": 59.657492909117124}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t  if (node.shadowRoot) {\n    const nested = node.shadowRoot.elementFromPoint(\n      node.getBoundingClientRect().x,\n      node.getBoundingClientRect().y\n    );\n    if (node.isEqualNode(nested)) {\n      return node;\n    } else if (nested.shadowRoot) {\n      return crawlShadows(nested);\n    } else {\n      return nested;\n    }\n  } else {\n    return node;\n  }\n}", "CodeBleu_score": 50.81179040524796}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t  if (node.shadowRoot) {\n    const nested = node.shadowRoot.elementFromPoint(1, 1);\n    if (nested === node) {\n      return node;\n    }\n    if (nested.shadowRoot) {\n      return crawlShadows(nested);\n    }\n    return nested;\n  }\n  return node;\n}", "CodeBleu_score": 47.88287801785816}]}
{"instance_id": "2fa298c35659", "generation_result": [{"code": "function createCanvas(): CanvasState{\n\t  const canvas = document.createElement('canvas')\n  const context = canvas.getContext('2d')\n  invariant(context, 'Context should be defined')\n  setCanvasWidthAndHeight(canvas)\n  canvas.id = 'canvas'\n  canvas.style.position = 'absolute'\n  canvas.style.top = '0'\n  canvas.style.left = '0'\n  canvas.style.zIndex = '100000'\n  canvas.style.pointerEvents = 'none'\n  document.body.appendChild(canvas)\n  return {\n    canvas,\n    context,\n    width: canvas.width,\n    height: canvas.height,\n  }\n}", "CodeBleu_score": 44.56216419177587}, {"code": "function createCanvas(): CanvasState{\n\t  const canvas = document.createElement('canvas')\n  canvas.id = 'canvas'\n  const context = canvas.getContext('2d')\n  invariant(context !== null, 'Failed to get canvas 2D context')\n\n  setCanvasWidthAndHeight(canvas)\n\n  canvas.style.position = 'absolute'\n  canvas.style.top = '0px'\n  canvas.style.left = '0px'\n  canvas.style.zIndex = '100000'\n  canvas.style.pointerEvents = 'none'\n\n  document.body.appendChild(canvas)\n\n  return {\n    canvas,\n    context,\n    width: canvas.width,\n    height: canvas.height,\n  }\n}", "CodeBleu_score": 45.93975459594494}, {"code": "function createCanvas(): CanvasState{\n\t  const canvas = document.createElement('canvas')\n  const context = canvas.getContext('2d')\n  invariant(context !== null, 'Canvas context is null')\n\n  canvas.id = 'canvas'\n  setCanvasWidthAndHeight(canvas)\n\n  canvas.style.position = 'absolute'\n  canvas.style.top = '0'\n  canvas.style.left = '0'\n  canvas.style.zIndex = '99999'\n  canvas.style.pointerEvents = 'none'\n\n  document.body.appendChild(canvas)\n\n  return {\n    canvas,\n    context,\n    width: canvas.width,\n    height: canvas.height,\n  }\n}", "CodeBleu_score": 45.18182490187074}]}
{"instance_id": "0484eaeba359", "generation_result": [{"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t  const { telemetry } = options;\n  if (telemetry === false) {\n    return channel;\n  }\n  const { version } = await import('@storybook/addon-onboarding/package.json');\n  channel.on(TELEMETRY, (event) => {\n    channel.emit(TELEMETRY, {\n      ...event,\n      version,\n    });\n  });\n  return channel;\n}", "CodeBleu_score": 23.3309716638437}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t  const {\n    telemetryDisabled,\n    telemetryDebug,\n  } = await getServerChannelOptions(options);\n  if (telemetryDisabled) {\n    return channel;\n  }\n  const addonVersion = await getAddonVersion();\n  channel.addListener(TELEMETRY_EVENT, (event) => {\n    if (telemetryDebug) {\n      logger.info(`[telemetry] ${event.eventName}`);\n    }\n    channel.emit(TELEMETRY_EVENT, {\n      ...event,\n      addonVersion,\n    });\n  });\n  return channel;\n}", "CodeBleu_score": 30.536498914535276}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t  const { telemetry, configDir } = await coreConfig(options);\n  if (!telemetry) {\n    return channel;\n  }\n  const addonVersion = await getVersion('@storybook/addon-onboarding', configDir);\n  channel.addListener(TELEMETRY, (event) => {\n    channel.emit(TELEMETRY, {\n      ...event,\n      addonVersion,\n    });\n  });\n  return channel;\n}", "CodeBleu_score": 27.424078687906047}]}
{"instance_id": "8552de1f8368", "generation_result": [{"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t    const existingStyle = document.getElementById(selector)\n    if (existingStyle) {\n        if (existingStyle.innerHTML !== css) {\n            existingStyle.innerHTML = css\n        }\n    } else {\n        const style = document.createElement('style')\n        style.setAttribute('id', selector)\n        style.innerHTML = css\n        document.head.appendChild(style)\n    }\n}", "CodeBleu_score": 65.20449508216029}, {"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t  const existingStyle = document.getElementById(selector)\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css\n  } else if (!existingStyle) {\n    const style = document.createElement('style')\n    style.setAttribute('id', selector)\n    style.innerHTML = css\n    document.head.appendChild(style)\n  }\n}", "CodeBleu_score": 56.963674795478866}, {"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t  const existingStyle = document.getElementById(selector);\n\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css;\n  } else if (!existingStyle) {\n    const style = document.createElement('style');\n    style.setAttribute('id', selector);\n    style.innerHTML = css;\n    document.head.appendChild(style);\n  }\n}", "CodeBleu_score": 63.15983388015407}]}
{"instance_id": "2472b6d48b9a", "generation_result": [{"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\t  const { locales, sourceLocale } = i18n;\n\n  for (const locale of locales) {\n    if (locale.skipInlineTranslations) {\n      continue;\n    }\n\n    if (locale.locale === sourceLocale) {\n      continue;\n    }\n\n    if (locale.translations) {\n      const loader = new TranslationLoader(locale.translations, locale.locale);\n\n      await loader.loadTranslations(\n        context.logger,\n        i18n.duplicateTranslationBehavior,\n      );\n    }\n  }\n}", "CodeBleu_score": 37.41986408990618}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\t  const logger = context.logger;\n\n  const sourceLocale = i18n.sourceLocale;\n  const locales = i18n.locales;\n\n  for (const locale of locales) {\n    if (locale.skipInlineTranslation && locale.locale !== sourceLocale) {\n      continue;\n    }\n\n    if (locale.translationFiles) {\n      const loader = new TranslationLoader(locale.translationFiles);\n\n      try {\n        await loader.loadTranslations(\n          sourceLocale,\n          locale.locale,\n          i18n.duplicateTranslationBehavior,\n        );\n      } catch (error) {\n        logger.error(\n          `Error loading translations for locale \"${locale.locale}\": ${error}`,\n        );\n      }\n    }\n  }\n}", "CodeBleu_score": 42.386513194964174}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\t  const { sourceLocale, duplicateTranslation } = i18n;\n  const locales = i18n.locales.filter((l) => !l.inlineLocale);\n\n  for (const locale of locales) {\n    if (locale.locale === sourceLocale) {\n      continue;\n    }\n\n    const translationFiles = await context.getProjectGraphFromHost().loadTranslations(locale.locale);\n    if (translationFiles) {\n      const translationLoader = new TranslationLoader(locale.locale, duplicateTranslation);\n      translationLoader.loadTranslations(translationFiles, context.logger as Logger);\n    }\n  }\n}", "CodeBleu_score": 37.7578292691892}]}
{"instance_id": "24579c798101", "generation_result": [{"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t  return buildApplicationInternal(options, context, pluginsOrExtensions);\n}", "CodeBleu_score": 21.177377512516095}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t  const normalizedExtensions = normalizeExtensions(pluginsOrExtensions);\n  const application = new Application(options);\n  const buildResult = buildApplicationInternal(application, context, normalizedExtensions);\n\n  return buildResult;\n}", "CodeBleu_score": 32.19282577461433}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t  return buildApplicationInternal(options, context, pluginsOrExtensions);\n}", "CodeBleu_score": 21.177377512516095}]}
{"instance_id": "126e9e9e4010", "generation_result": [{"code": "const diagnostics = checkDuplicateMessages{\n\t  checkFileSystem: any,\n  messages: extractionResult.messages,\n  level: 'warning',\n  basePath: extractionResult.basePath,\n}", "CodeBleu_score": 31.785629503967606}, {"code": "const diagnostics = checkDuplicateMessages{\n\t    checkFileSystem: any,\n    messages: extractionResult.messages,\n    level: 'warning',\n    basePath: extractionResult.basePath,\n}", "CodeBleu_score": 30.69925969499995}, {"code": "const diagnostics = checkDuplicateMessages{\n\t  checkFileSystem,\n  messages: extractionResult.messages,\n  level: 'warning',\n  basePath: extractionResult.basePath,\n}", "CodeBleu_score": 42.75107224161685}]}
{"instance_id": "349518a072df", "generation_result": [{"code": "function isTslibHelperName(name: string): boolean{\n\t  const parts = name.split('$');\n  if (parts.length !== 2) {\n    return false;\n  }\n  const originalName = parts[0];\n  if (isNaN(Number(parts[1]))) {\n    return false;\n  }\n  return tslibHelpers.has(originalName);\n}", "CodeBleu_score": 66.12641498931664}, {"code": "function isTslibHelperName(name: string): boolean{\n\t    const [originalName, num] = name.split('$');\n    if (num === undefined || !/^\\d+$/.test(num)) {\n        return false;\n    }\n    return tslibHelpers.has(originalName);\n}", "CodeBleu_score": 45.61278872148862}, {"code": "function isTslibHelperName(name: string): boolean{\n\t  const parts = name.split('$');\n  if (parts.length !== 2) {\n    return false;\n  }\n\n  const originalName = parts[0];\n  if (!tslibHelpers.has(originalName)) {\n    return false;\n  }\n\n  const num = parseInt(parts[1], 10);\n  return !isNaN(num);\n}", "CodeBleu_score": 61.81498596191206}]}
{"instance_id": "0a9b3093b5bc", "generation_result": [{"code": "async bundle(): Promise<BundleContextResult>{\n\t\n    // If the cache is enabled, try to retrieve the result from the cache.\n    if (this.#cacheEnabled) {\n        const cachedResult = await this.#cache.get(this.#cacheKey);\n        if (cachedResult) {\n            return cachedResult;\n        }\n    }\n\n    // If the cache is not enabled or the result is not found in the cache, perform the bundle operation.\n    const result = await this.#performBundle();\n\n    // If the cache is enabled, store the result in the cache for future use.\n    if (this.#cacheEnabled) {\n        await this.#cache.set(this.#cacheKey, result);\n    }\n\n    // Return the result of the bundle operation.\n    return result;\n}", "CodeBleu_score": 53.90608686180831}, {"code": "async bundle(): Promise<BundleContextResult>{\n\t  if (this.#cachedResult) {\n    return this.#cachedResult;\n  }\n\n  const result = await this.#performBundle();\n  if (this.#cacheEnabled) {\n    this.#cachedResult = result;\n  }\n  return result;\n}", "CodeBleu_score": 83.28478402210155}, {"code": "async bundle(): Promise<BundleContextResult>{\n\t  if (this.#caching && this.#cachedResult) {\n    return this.#cachedResult;\n  }\n\n  const result = await this.#performBundle();\n\n  if (this.#caching) {\n    this.#cachedResult = result;\n  }\n\n  return result;\n}", "CodeBleu_score": 78.57738834048524}]}
{"instance_id": "f4fe3e6ac648", "generation_result": [{"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t    const changed = new Set<string>();\n    for (const [file, hash] of this.outputFiles.entries()) {\n      const previous = previousOutputHashes.get(file);\n      if (previous === undefined || previous !== hash) {\n        changed.add(file);\n      }\n    }\n    return changed;\n  }", "CodeBleu_score": 67.75389240002137}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t  const changed = new Set<string>();\n  for (const [filePath, hash] of this.outputHashes.entries()) {\n    const previousHash = previousOutputHashes.get(filePath);\n    if (previousHash === undefined || previousHash !== hash) {\n      changed.add(filePath);\n    }\n  }\n  return changed;\n}", "CodeBleu_score": 73.35987381711344}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t    const changed: Set<string> = new Set();\n    for (const [filePath, hash] of Object.entries(this.outputFiles)) {\n        const previousHash = previousOutputHashes.get(filePath);\n        if (!previousHash || previousHash !== hash) {\n            changed.add(filePath);\n        }\n    }\n    return changed;\n}", "CodeBleu_score": 59.203557944213614}]}
{"instance_id": "8969b8ce5198", "generation_result": [{"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t    return localizeToolsModule ??= await loadEsmModule<LocalizeUtilityModule>('@angular/localize/tools');\n}", "CodeBleu_score": 66.85910442760996}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t    return localizeToolsModule ??= await import('@angular/localize/tools');\n}", "CodeBleu_score": 37.498582386643264}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t  return localizeTools ??= await import('@angular/localize/tools');\n}", "CodeBleu_score": 32.9710765884629}]}
{"instance_id": "d7c4df80e1ac", "generation_result": [{"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t    const { loadTranslations } = await import('@angular/localize');\n    const diagnostics = new Diagnostics();\n    const translationPlugin = new TranslationPlugin(loadTranslations(translation, locale), locale, diagnostics, undefined, undefined);\n    const missingTranslationPlugin = new MissingTranslationPlugin(diagnostics);\n    const replaceLocaleSpecifier = new ReplaceLocaleSpecifier(locale);\n    return {\n        diagnostics,\n        plugins: [translationPlugin, missingTranslationPlugin, replaceLocaleSpecifier],\n    };\n}", "CodeBleu_score": 34.9527335723404}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t  const { diagnostics, initFormat, createFormat, createTranslation } = await import('@angular/localize');\n  const { \u0275ParsedTranslation, \u0275makeTemplateObject } = await import('@angular/localize/src/utils');\n\n  const { $localize: { messageParts, placeholderNames }} = \u0275makeTemplateObject(translation ?? {}, true);\n  const parsedTranslation = new \u0275ParsedTranslation(messageParts, placeholderNames);\n\n  const translationPlugin = createTranslation(parsedTranslation);\n  const missingTranslationPlugin = createTranslation({\n    messageParts: {\n      0: '{LOCALE, select, en {Missing locale: en} other {Missing locale: {LOCALE}}}',\n    },\n    placeholderNames: ['LOCALE'],\n  });\n  const format = createFormat(locale);\n  const localeSpecifierPlugin = path.replaceWith(stringLiteral(locale));\n\n  return {\n    diagnostics,\n    plugins: [translationPlugin, missingTranslationPlugin, format, localeSpecifierPlugin],\n  };\n}", "CodeBleu_score": 27.767458955416274}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t  const { init, diagnostics } = await import('@angular/localize');\n\n  init({\n    missingTranslation: 'error',\n  });\n\n  const translationPlugin = createTranslationPlugin(translation);\n  const localePlugin = createReplaceLocalePlugin(locale);\n\n  return {\n    diagnostics,\n    plugins: [translationPlugin, localePlugin],\n  };\n}", "CodeBleu_score": 24.399819323221173}]}
{"instance_id": "9486259c4631", "generation_result": [{"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t  const path = filePath.replace(/^\\//, '');\n  const file = browserOutputFiles.find(f => f.path === path);\n  if (!file) {\n    throw new Error(`File does not exist: ${filePath}`);\n  }\n  return file.text;\n}", "CodeBleu_score": 47.63980668687316}, {"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t    const relativePath = filePath.replace(/^\\//, \"\");\n    const file = browserOutputFiles.find((file) => file.path === relativePath);\n    if (file) {\n        return file.text;\n    } else {\n        throw new Error(`File ${filePath} does not exist`);\n    }\n}", "CodeBleu_score": 63.02998072924625}, {"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t  const relativePath = filePath.replace(`${process.cwd()}/`, \"\");\n  const file = browserOutputFiles.find((file) => file.path === relativePath);\n  if (file) {\n    return file.text;\n  } else {\n    throw new Error(`File ${relativePath} does not exist`);\n  }\n}", "CodeBleu_score": 63.14961418754756}]}
{"instance_id": "2206ca03c7ec", "generation_result": [{"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t    this.#loadResults.set(path, result);\n\n    if (result.watchFiles) {\n      const normalizedWatchFiles = await Promise.all(\n        result.watchFiles.map(async (file) => {\n          const normalized = await normalize(file);\n          this.#fileDependencies.get(normalized)?.add(path);\n          return normalized;\n        }),\n      );\n      result.watchFiles = normalizedWatchFiles;\n    }\n  }", "CodeBleu_score": 55.182295445161245}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t    this.#loadResults.set(path, result);\n\n    if (result.watchFiles) {\n      for (const watchFile of result.watchFiles) {\n        const normalizedWatchFile = normalize(watchFile);\n        let affected = this.#fileDependencies.get(normalizedWatchFile);\n        if (!affected) {\n          affected = new Set();\n          this.#fileDependencies.set(normalizedWatchFile, affected);\n        }\n        affected.add(path);\n      }\n    }\n  }", "CodeBleu_score": 91.28120070020579}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t    this.#loadResults.set(path, result);\n\n    if (result.watchFiles) {\n        for (const watchFile of result.watchFiles) {\n            const normalizedWatchFile = normalize(watchFile);\n            let affected = this.#fileDependencies.get(normalizedWatchFile);\n            if (!affected) {\n                affected = new Set();\n                this.#fileDependencies.set(normalizedWatchFile, affected);\n            }\n            affected.add(path);\n        }\n    }\n}", "CodeBleu_score": 89.59210821596005}]}
{"instance_id": "a261d85630d0", "generation_result": [{"code": "invalidate(path: string): boolean{\n\t    const affectedPaths = this.#fileDependencies.get(path);\n    if (!affectedPaths) {\n        return false;\n    }\n\n    let found = false;\n    for (const affectedPath of affectedPaths) {\n        if (this.#loadResults.delete(affectedPath)) {\n            found = true;\n        }\n    }\n\n    this.#fileDependencies.delete(path);\n    return found;\n}", "CodeBleu_score": 80.3986943340498}, {"code": "invalidate(path: string): boolean{\n\t    const affected = this.#fileDependencies.get(path);\n    if (!affected) return false;\n\n    let deleted = false;\n    for (const p of affected) {\n        if (this.#loadResults.delete(p)) {\n            deleted = true;\n        }\n    }\n\n    this.#fileDependencies.delete(path);\n    return deleted;\n}", "CodeBleu_score": 71.4501703694413}, {"code": "invalidate(path: string): boolean{\n\t  let found = false;\n  for (const file of this.#fileDependencies.get(path) ?? []) {\n    if (this.#loadResults.delete(file)) {\n      found = true;\n    }\n  }\n  this.#fileDependencies.delete(path);\n  return found;\n}", "CodeBleu_score": 47.80105293230175}]}
{"instance_id": "8fa6dee0ba79", "generation_result": [{"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t  const duration = process.hrtime.bigint() - startTime;\n  if (cumulative) {\n    const cumulativeDurations = new Map<string, bigint>();\n    const cumulativeDuration = cumulativeDurations.get(name) ?? BigInt(0);\n    cumulativeDurations.set(name, cumulativeDuration + duration);\n    return;\n  }\n  const durations: bigint[] = [];\n  durations.push(duration);\n  const averageDuration = durations.reduce((a, b) => a + b) / BigInt(durations.length);\n  console.log(`${name} took ${(Number(averageDuration) / 1000000000).toFixed(9)} seconds on average`);\n}", "CodeBleu_score": 50.277416688214196}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t  const endTime = process.hrtime.bigint();\n  const duration = Number(endTime - startTime) / 1000000000;\n  if (cumulative) {\n    const cumulativeDurations = new Map<string, number>();\n    const existingDuration = cumulativeDurations.get(name) || 0;\n    cumulativeDurations.set(name, existingDuration + duration);\n  } else {\n    console.log(`${name}: ${duration.toFixed(9)} seconds`);\n  }\n}", "CodeBleu_score": 50.32197885171199}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t  const duration = Number((process.hrtime.bigint() - startTime) / BigInt(1e9))\n  if (cumulative) {\n    const cumulativeDurations = new Map<string, number>()\n    const previousDuration = cumulativeDurations.get(name) || 0\n    cumulativeDurations.set(name, previousDuration + duration)\n  } else {\n    console.log(`${name}: ${duration.toFixed(9)}s`)\n  }\n}", "CodeBleu_score": 56.78384769534255}]}
{"instance_id": "0c530cbeb386", "generation_result": [{"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\t  const originalGetSourceFiles = program.getSourceFiles;\n  const originalGetSourceFile = program.getSourceFile;\n\n  program.getSourceFiles = () => {\n    const sourceFiles = originalGetSourceFiles();\n    for (const sourceFile of sourceFiles) {\n      if (!sourceFile.version) {\n        const version = createHash('sha256').update(sourceFile.text).digest('hex');\n        sourceFile.version = version;\n      }\n    }\n    return sourceFiles;\n  };\n\n  program.getSourceFile = (fileNameOrPath: string) => {\n    const sourceFile = originalGetSourceFile(fileNameOrPath);\n    if (sourceFile && !sourceFile.version) {\n      const version = createHash('sha256').update(sourceFile.text).digest('hex');\n      sourceFile.version = version;\n    }\n    return sourceFile;\n  };\n}", "CodeBleu_score": 41.89393857966416}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\t  const baseGetSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = () => {\n    const sourceFiles = baseGetSourceFiles();\n    for (const sourceFile of sourceFiles) {\n      if (!sourceFile.version) {\n        sourceFile.version = createHash(\"sha256\")\n          .update(sourceFile.text)\n          .digest();\n      }\n    }\n    return sourceFiles;\n  };\n}", "CodeBleu_score": 46.21132162526513}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\t  const originalGetSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = () => {\n    const sourceFiles = originalGetSourceFiles();\n    for (const sourceFile of sourceFiles) {\n      if (!sourceFile.version) {\n        const hash = createHash('sha256').update(sourceFile.text).digest('hex');\n        sourceFile.version = hash;\n      }\n    }\n    return sourceFiles;\n  };\n}", "CodeBleu_score": 48.71011740378162}]}
{"instance_id": "3faf480d56ae", "generation_result": [{"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t    if (!resolvedModule) return resolvedModule;\n\n    const { resolvedFileName } = resolvedModule;\n\n    const replacements = {\n        \"typescript\": {\n            \"replacement\": \"tslib\",\n            \"external\": true\n        },\n        \"util\": {\n            \"replacement\": \"@sveltejs/tslib/util\",\n            \"external\": true\n        },\n        \"fs\": {\n            \"replacement\": \"@sveltejs/tslib/fs\",\n            \"external\": true\n        },\n        \"path\": {\n            \"replacement\": \"@sveltejs/tslib/path\",\n            \"external\": true\n        },\n        \"os\": {\n            \"replacement\": \"@sveltejs/tslib/os\",\n            \"external\": true\n        },\n        \"crypto\": {\n            \"replacement\": \"@sveltejs/tslib/crypto\",\n            \"external\": true\n        },\n        \"events\": {\n            \"replacement\": \"@sveltejs/tslib/events\",\n            \"external\": true\n        },\n        \"stream\": {\n            \"replacement\": \"@sveltejs/tslib/stream\",\n            \"external\": true\n        },\n        \"url\": {\n            \"replacement\": \"@sveltejs/tslib/url\",\n            \"external\": true\n        },\n        \"zlib\": {\n            \"replacement\": \"@sveltejs/tslib/zlib\",\n            \"external\": true\n        },\n        \"tty\": {\n            \"replacement\": \"@sveltejs/tslib/tty\",\n            \"external\": true\n        },\n        \"worker_threads\": {\n            \"replacement\": \"@sveltejs/tslib/worker_threads\",\n            \"external\": true\n        },\n        \"http\": {\n            \"replacement\": \"@sveltejs/tslib/http\",\n            \"external\": true\n        },\n        \"https\": {\n            \"replacement\": \"@sveltejs/tslib/https\",\n            \"external\": true\n        },\n        \"net\": {\n            \"replacement\": \"@", "CodeBleu_score": 9.887113409485284}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t    if (resolvedModule && resolvedModule.resolvedFileName) {\n        const normalizedFileName = normalizeFileName(resolvedModule.resolvedFileName);\n        const replacement = replacementModule(normalizedFileName);\n        if (replacement) {\n            return {\n                resolvedFileName: replacement.replaceWith,\n                isExternalLibraryImport: replacement.isExternalLibraryImport,\n            };\n        }\n    }\n    return resolvedModule;\n}", "CodeBleu_score": 45.85742258931664}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t  if (!resolvedModule) return resolvedModule;\n  const { resolvedFileName } = resolvedModule;\n  const replacement = replacements[resolvedFileName];\n  if (replacement) {\n    return {\n      resolvedFileName: replacement,\n      isExternalLibraryImport: true,\n    };\n  }\n  return resolvedModule;\n}", "CodeBleu_score": 51.549952043922495}]}
{"instance_id": "382672b61228", "generation_result": [{"code": "get waitUntilReady(): Promise<boolean>{\n\t    if (this.compilationReadyPromise) {\n        return this.compilationReadyPromise;\n    }\n\n    if (this.compilation) {\n        return this.compilation.ready;\n    }\n\n    const error = this.compilationError;\n    if (error) {\n        return Promise.reject(error);\n    }\n\n    return Promise.resolve(false);\n}", "CodeBleu_score": 23.08989118653596}, {"code": "get waitUntilReady(): Promise<boolean>{\n\t  return this.compilationReadyPromise;\n}", "CodeBleu_score": 4.610746344969917}, {"code": "get waitUntilReady(): Promise<boolean>{\n\t    if (!this.compilationReadyPromise) {\n        this.compilationReadyPromise = new Promise((resolve, reject) => {\n            this.compilationReadyResolve = resolve;\n            this.compilationReadyReject = reject;\n        });\n    }\n    return this.compilationReadyPromise;\n}", "CodeBleu_score": 25.514197022453455}]}
{"instance_id": "27f631043b39", "generation_result": [{"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t  const namespace = 'angular:styles/component';\n  const context = new BundlerContext(this.workspaceRoot, this.incremental);\n\n  context.setup({\n    stylesheet: {\n      bundleOptions: {\n        writeToDisk: true,\n        path: path.join(this.workspaceRoot, 'dist', 'styles.css'),\n      },\n      entryPoints: [entry],\n    },\n  });\n\n  context.addPlugin({\n    name: 'angular:styles/component',\n    resolveId(id) {\n      if (id === entry) {\n        return {\n          id,\n          namespace,\n          syntheticNamedExports: 'default',\n          meta: {\n            loader: 'angular:styles/component',\n            resolveDir: path.dirname(entry),\n          },\n        };\n      }\n\n      return null;\n    },\n    async load(id) {\n      if (id === entry) {\n        const { content } = await this.fs.promises.readFile(entry, 'utf8');\n\n        return {\n          code: content,\n          map: null,\n          syntheticNamedExports: 'default',\n        };\n      }\n\n      return null;\n    },\n  });\n\n  return context;\n}", "CodeBleu_score": 33.089819600935876}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t  const namespace = 'angular:styles/component';\n  const ctx = new BundlerContext(this.workspaceRoot, this.#incrementalOptions);\n  ctx.setup(\n    stylesheetBundleOptions(\n      {\n        entryPoints: [entry],\n      },\n      {\n        namespace,\n        loadPath: path.dirname(entry),\n      }\n    )\n  );\n  ctx.addPlugin(\n    new StylesheetPlugin({\n      loader: (path) => this.#load(path),\n      resolve: (url, context) => this.#resolve(url, context),\n      content: (url) => this.#content(url),\n      namespace,\n    })\n  );\n  return ctx;\n}", "CodeBleu_score": 21.480542405617697}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t  const context = new BundlerContext(this.workspaceRoot, {\n    incremental: this.incrementalBuilds,\n  });\n\n  context.setup({\n    stylesheet: {\n      bundleOptions: {\n        writeToDisk: true,\n        path: path.join(this.outputPath, 'styles.css'),\n        namespace: 'angular:styles/component',\n      },\n      entryPoints: [entry],\n    },\n  });\n\n  context.addPlugin({\n    name: 'angular:styles/component',\n    setup(build) {\n      build.onResolve({ filter: /\\.css$/ }, (args) => {\n        return {\n          path: args.path,\n          namespace: 'angular:styles/component',\n        };\n      });\n\n      build.onLoad({ filter: /.*/, namespace: 'angular:styles/component' }, async (args) => {\n        const content = await fs.promises.readFile(args.path, 'utf8');\n\n        return {\n          loader: 'text',\n          contents: content,\n          resolveDir: path.dirname(args.path),\n        };\n      });\n    },\n  });\n\n  return context;\n}", "CodeBleu_score": 36.83989449673868}]}
{"instance_id": "b89b44b794a7", "generation_result": [{"code": "invalidate(files: Iterable<string>) {\n\t    if (this.#incremental) {\n      const normalizedFiles = [...files].map(file => this.#normalizePath(file));\n      for (const bundler of this.#fileContexts.values()) {\n        bundler.invalidate(normalizedFiles);\n      }\n      for (const bundler of this.#inlineContexts.values()) {\n        bundler.invalidate(normalizedFiles);\n      }\n    }\n  }", "CodeBleu_score": 74.27687628807469}, {"code": "invalidate(files: Iterable<string>) {\n\t  const normalizedFiles = new Set(\n    [...files].map((file) => normalizePath(file))\n  );\n\n  for (const bundler of this.#fileContexts.values()) {\n    bundler.invalidate(normalizedFiles);\n  }\n\n  for (const bundler of this.#inlineContexts.values()) {\n    bundler.invalidate(normalizedFiles);\n  }\n}", "CodeBleu_score": 75.84098976500171}, {"code": "invalidate(files: Iterable<string>) {\n\t    if (this.#incremental) {\n        const normalized = this.#normalizePaths(files)\n        for (const bundler of this.#fileContexts.values()) {\n            bundler.invalidate(normalized)\n        }\n        for (const bundler of this.#inlineContexts.values()) {\n            bundler.invalidate(normalized)\n        }\n    }\n}", "CodeBleu_score": 59.554393756839}]}
{"instance_id": "aa3aa0817adf", "generation_result": [{"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t  const message = convertTypeScriptDiagnosticInfo(typescript, diagnostic.messageText, diagnostic.code);\n  message.codePrefix = diagnostic.source === 'ts' ? 'TS' : 'NG';\n  message.code = message.codePrefix + message.code;\n\n  if (diagnostic.relatedInformation) {\n    for (const relatedInformation of diagnostic.relatedInformation) {\n      message.notes?.push(convertTypeScriptDiagnosticInfo(typescript, relatedInformation.messageText, relatedInformation.code));\n    }\n  }\n\n  return message;\n}", "CodeBleu_score": 40.06480337680986}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t  const {\n    messageText: message,\n    file,\n    start,\n  } = diagnostic;\n\n  const fileName = file.fileName;\n  const location = file.getLineAndCharacterOfPosition(start);\n\n  const codePrefix = typescript === ts ? 'TS' : 'NG';\n  const code = `${codePrefix}${diagnostic.code}`;\n\n  const mainMessage = convertTypeScriptDiagnosticInfo(\n    typescript,\n    diagnostic,\n    code,\n  );\n\n  const relatedDiagnostics = typescript.getPushDiagnostics(diagnostic);\n\n  if (relatedDiagnostics) {\n    for (const relatedDiagnostic of relatedDiagnostics) {\n      const relatedMessage = convertTypeScriptDiagnosticInfo(\n        typescript,\n        relatedDiagnostic,\n        code,\n      );\n\n      mainMessage.notes.push(relatedMessage);\n    }\n  }\n\n  return mainMessage;\n}", "CodeBleu_score": 36.96150774625425}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t  const codePrefix = diagnostic.source === 'typescript' ? 'TS' : 'NG';\n  const code = `${codePrefix}${diagnostic.code}`;\n  const message = convertTypeScriptDiagnosticInfo(typescript, diagnostic.messageText, code);\n  if (diagnostic.relatedInformation) {\n    for (const relatedInformation of diagnostic.relatedInformation) {\n      const relatedMessage = convertTypeScriptDiagnosticInfo(\n        typescript,\n        relatedInformation.messageText,\n        code,\n      );\n      message.notes.push(relatedMessage);\n    }\n  }\n  return message;\n}", "CodeBleu_score": 46.61394434287269}]}
{"instance_id": "0cd0285018f1", "generation_result": [{"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t  const normalizedContainingFile = normalize(containingFile);\n  for (const referencedFile of referencedFiles) {\n    if (referencedFile === normalizedContainingFile) {\n      continue;\n    }\n    const normalizedReferencedFile = normalize(referencedFile);\n    const referencingFiles =\n      this.#referencingFiles.get(normalizedReferencedFile) ?? new Set();\n    referencingFiles.add(normalizedContainingFile);\n    this.#referencingFiles.set(normalizedReferencedFile, referencingFiles);\n  }\n}", "CodeBleu_score": 65.26097432632861}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t  const normalizedContainingFile = normalize(containingFile);\n  for (const referencedFile of referencedFiles) {\n    const normalizedReferencedFile = normalize(referencedFile);\n    if (normalizedContainingFile === normalizedReferencedFile) {\n      continue;\n    }\n    let referencingFiles = this.#referencingFiles.get(normalizedReferencedFile);\n    if (!referencingFiles) {\n      referencingFiles = new Set<string>();\n      this.#referencingFiles.set(normalizedReferencedFile, referencingFiles);\n    }\n    referencingFiles.add(normalizedContainingFile);\n  }\n}", "CodeBleu_score": 70.67990028236466}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t  containingFile = normalize(containingFile);\n  for (const referencedFile of referencedFiles) {\n    if (referencedFile === containingFile) continue;\n    referencedFile = normalize(referencedFile);\n    let referencing = this.#referencingFiles.get(referencedFile);\n    if (!referencing) {\n      referencing = new Set();\n      this.#referencingFiles.set(referencedFile, referencing);\n    }\n    referencing.add(containingFile);\n  }\n}", "CodeBleu_score": 48.621097155473926}]}
{"instance_id": "e22be1916b33", "generation_result": [{"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t    return this.ng = this.ng ?? await import('@angular/compiler-cli');\n}", "CodeBleu_score": 21.97379374502917}, {"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t  return this.ng ??= await import('@angular/compiler-cli')\n}", "CodeBleu_score": 28.067666116392896}, {"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t  return this.compilerCli ??= await import('@angular/compiler-cli');\n}", "CodeBleu_score": 29.77227585789758}]}
{"instance_id": "64e42342101f", "generation_result": [{"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t  if (jit) {\n    const { JitCompilation } = await import('@angular/compiler-cli/src/jit-compilation');\n    return new JitCompilation();\n  } else {\n    const { AotCompilation } = await import('@angular/compiler-cli/src/aot-compilation');\n    return new AotCompilation();\n  }\n}", "CodeBleu_score": 59.694722735559814}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t  if (useParallelTs) {\n    const { ParallelCompilation } = await import('./parallel-compilation');\n    return new ParallelCompilation(jit);\n  }\n\n  if (jit) {\n    const { JitCompilation } = await import('./jit-compilation');\n    return new JitCompilation();\n  }\n\n  const { AotCompilation } = await import('./aot-compilation');\n  return new AotCompilation();\n}", "CodeBleu_score": 92.82733972985314}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t  if (jit) {\n    const { JitCompilation } = await import('./jit-compilation');\n    return new JitCompilation();\n  }\n\n  const { AotCompilation } = await import('./aot-compilation');\n  return new AotCompilation();\n}", "CodeBleu_score": 56.648398661337694}]}
{"instance_id": "37804d74eb2d", "generation_result": [{"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t  const relativePaths = new Map<string, string>();\n\n  function updateSource(source: string): string {\n    if (relativePaths.has(source)) {\n      return relativePaths.get(source)!;\n    }\n\n    const relativePath = relative(root, source);\n    relativePaths.set(source, relativePath);\n    return relativePath;\n  }\n\n  sourceMap.sources = sourceMap.sources.map(updateSource);\n  const base64EncodedMap = Buffer.from(JSON.stringify(sourceMap)).toString(\n    'base64',\n  );\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64EncodedMap}`;\n}", "CodeBleu_score": 45.32318472440456}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t  const map = JSON.parse(sourceMap) as SourceMap;\n  map.sources = map.sources.map((source) =>\n    fileURLToPath(pathToFileURL(path.relative(root, source)))\n  );\n  const serializedMap = JSON.stringify(map);\n  const base64Map = Buffer.from(serializedMap, 'utf8').toString('base64');\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64Map}`;\n}", "CodeBleu_score": 51.34288702957765}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t  const { sources, ...rest } = sourceMap;\n\n  const newSourceMap = {\n    ...rest,\n    sources: sources.map((source) => pathToFileURL(source).href),\n  };\n\n  const base64 = Buffer.from(JSON.stringify(newSourceMap)).toString('base64');\n\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64}`;\n}", "CodeBleu_score": 52.519984101494124}]}
{"instance_id": "bccb5eeb4c4d", "generation_result": [{"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t  const lines = stack.split(\"\n\");\n  for (const line of lines) {\n    const segments = line.split(\" \");\n    let filePath = \"\";\n    for (const segment of segments) {\n      if (segment.includes(\":\")) {\n        break;\n      }\n      filePath += segment + \" \";\n    }\n    filePath = filePath.trim();\n    if (filePath.startsWith(\"at\")) {\n      filePath = filePath.slice(2).trim();\n    }\n    if (filePath.startsWith(\"(\")) {\n      filePath = filePath.slice(1);\n    }\n    if (filePath.endsWith(\")\")) {\n      filePath = filePath.slice(0, -1);\n    }\n    yield filePath;\n  }\n}", "CodeBleu_score": 40.55415893121791}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t  const cwd = process.cwd();\n  const lines = stack.split('\n');\n  for (const line of lines) {\n    const segments = line.split(' ');\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      if (segment.includes(':') || segment.includes('@')) {\n        const filePath = segments.slice(0, i).join(' ');\n        const adjustedPath = path.relative(cwd, filePath);\n        yield adjustedPath;\n        break;\n      }\n    }\n  }\n}", "CodeBleu_score": 50.25032310166942}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t  const cwd = process.cwd();\n  const lines = stack.split('\n');\n  for (const line of lines) {\n    const segments = line.split(' ');\n    const filePath = segments\n      .slice(0, segments.indexOf(':'))\n      .join(' ')\n      .replace(/^at\\s+/, '');\n    if (filePath.startsWith('(') && filePath.endsWith(')')) {\n      continue;\n    }\n    const relativePath = path.relative(cwd, filePath);\n    yield relativePath;\n  }\n}", "CodeBleu_score": 46.65025499349531}]}
{"instance_id": "e73986d88a00", "generation_result": [{"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t  const tailwindKeywords = [\n    'bg', 'text', 'font', 'border', 'rounded', 'shadow', 'w', 'h', 'p', 'm', 'mx', 'my', 'mt', 'mr', 'mb', 'ml', 'px', 'py', 'pt', 'pr', 'pb', 'pl', 'flex', 'items', 'justify', 'self', 'content', 'gap', 'grid', 'col', 'row', 'gap', 'auto', 'fr', 'min', 'max', 'h', 'w', 'order', 'grid', 'col', 'row', 'span', 'order', 'grid', 'auto', 'rows', 'cols', 'transform', 'scale', 'rotate', 'translate', 'skew', 'origin', 'transition', 'ease', 'duration', 'delay', 'animate', 'from', 'to', 'via', 'hover', 'focus', 'active', 'group', 'even', 'odd', 'first', 'last', 'only', 'before', 'after', 'placeholder', 'selection', 'appearance', 'pointer', 'resize', 'cursor', 'outline', 'shadow', 'fill', 'stroke', 'table', 'caption', 'td', 'th', 'tr', 'tbody', 'thead', 'tfoot', 'list', 'marker', 'counter', 'columns', 'column', 'break', 'avoid', 'break', 'before', 'break', 'after', 'break', 'inside', 'motion', 'safe', 'animation', 'ease', 'linear', 'infinite', 'reverse', 'alternate', 'normal', 'none', 'prose', 'sm', 'md', 'lg', 'xl', '2xl', 'dark', 'hocus', 'focus', 'dark', 'motion', 'safe', 'screens', 'sm', 'md', 'lg', 'xl', '2xl', 'print', 'lg', 'landscape', 'portrait', 'motion', 'safe', 'variants', 'responsive', 'screen', 'variants', 'motion', 'safe', 'accessibility', 'sr', 'not', 'sr', 'only', 'motion', 'safe', 'container', 'box', 'decoration', '", "CodeBleu_score": 6.030264957755798}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t    const tailwindKeywords = [\n        'container',\n        'mx-auto',\n        'px-4',\n        'py-8',\n        'flex',\n        'flex-col',\n        'items-center',\n        'text-center',\n        'text-gray-900',\n        'leading-normal',\n        'tracking-tight',\n        'w-full',\n        'max-w-2xl',\n        'mb-8',\n        'text-lg',\n        'font-medium',\n        'text-gray-600',\n        'mb-6',\n        'text-xl',\n        'font-bold',\n        'text-gray-900',\n        'mb-8',\n        'text-gray-700',\n        'leading-relaxed',\n        'mb-8',\n        'bg-gray-200',\n        'h-px',\n        'mb-8',\n        'text-gray-700',\n        'font-medium',\n        'mb-2',\n        'text-lg',\n        'mb-4',\n        'text-gray-600',\n        'leading-relaxed',\n        'mb-8',\n        'bg-gray-200',\n        'h-px',\n        'mb-8',\n        'text-gray-700',\n        'font-medium',\n        'mb-2',\n        'text-lg',\n        'mb-4',\n        'text-gray-600',\n        'leading-relaxed',\n        'mb-8',\n        'bg-gray-200',\n        'h-px',\n        'mb-8',\n        'text-gray-700',\n        'font-medium',\n        'mb-2',\n        'text-lg',\n        'mb-4',\n        'text-gray-600',\n        'leading-relaxed',\n        'mb-8',\n        'bg-gray-200',\n        'h-px',\n        'mb-8',\n        'text-gray-700", "CodeBleu_score": 5.792862832622627}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t  const tailwindKeywords = [\n    \"bg\",\n    \"border\",\n    \"text\",\n    \"font\",\n    \"leading\",\n    \"tracking\",\n    \"antialiased\",\n    \"subpixel\",\n    \"normal\",\n    \"italic\",\n    \"not-italic\",\n    \"ordinal\",\n    \"slashed-zero\",\n    \"lining-nums\",\n    \"oldstyle-nums\",\n    \"proportional-nums\",\n    \"tabular-nums\",\n    \"diagonal-fractions\",\n    \"stacked-fractions\",\n    \"motion-safe\",\n    \"motion-reduce\",\n    \"duration\",\n    \"ease\",\n    \"transition\",\n    \"transform\",\n    \"translate\",\n    \"scale\",\n    \"rotate\",\n    \"skew\",\n    \"origin\",\n    \"accent\",\n    \"accent-color\",\n    \"opacity\",\n    \"ring\",\n    \"ring-width\",\n    \"ring-opacity\",\n    \"ring-offset\",\n    \"ring-offset-width\",\n    \"ring-offset-color\",\n    \"ring-color\",\n    \"fill\",\n    \"stroke\",\n    \"stroke-width\",\n    \"table\",\n    \"table-layout\",\n    \"table-auto\",\n    \"table-fixed\",\n    \"table-caption\",\n    \"table-cell\",\n    \"table-column\",\n    \"table-column-group\",\n    \"table-footer-group\",\n    \"table-header-group\",\n    \"table-row\",\n    \"table-row-group\",\n    \"container\",\n    \"columns\",\n    \"column\",\n    \"break-after\",\n    \"break-before\",\n    \"break-inside\",\n    \"object-contain\",\n    \"object-cover\",\n    \"object-fill\",\n    \"object-none\",\n    \"object-scale-down\",\n    \"object-bottom\",\n    \"object-center\",\n    \"object-left\",\n    \"object-left-bottom\",\n    \"object-left-top\",\n    \"object-right\",\n    \"object", "CodeBleu_score": 5.928054101562998}]}
{"instance_id": "ff27dc4f1deb", "generation_result": [{"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t  const headers = server.config.server.headers\n  if (headers) {\n    for (const [key, value] of Object.entries(headers)) {\n      if (value !== undefined) {\n        res.setHeader(key, value)\n      }\n    }\n  }\n}", "CodeBleu_score": 77.58642163925855}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t  const headers = server.config.server.headers;\n  if (headers) {\n    for (const [key, value] of Object.entries(headers)) {\n      if (value !== undefined) {\n        res.setHeader(key, value);\n      }\n    }\n  }\n}", "CodeBleu_score": 81.08269677456312}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t  const headers = server.config.server.headers;\n  if (headers) {\n    for (const [key, value] of Object.entries(headers)) {\n      if (value !== undefined) {\n        res.setHeader(key, value);\n      }\n    }\n  }\n}", "CodeBleu_score": 81.08269677456312}]}
{"instance_id": "1d547de72724", "generation_result": [{"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t  const parsers = await import('./parsers');\n  const diagnostics = await import('./diagnostics');\n\n  return async function loadTranslations(filePath: string) {\n    const content = await fs.readFile(filePath, 'utf8');\n    const format = findFormat(content);\n    const locale = findLocale(filePath);\n    const diagnostics: Diagnostic[] = [];\n    const translations = {};\n\n    for (const [parserName, parser] of Object.entries(parsers)) {\n      const result = parser.parse(content);\n      if (result) {\n        diagnostics.push(...parser.analyze(result));\n        Object.assign(translations, result.translations);\n        break;\n      }\n    }\n\n    if (Object.keys(translations).length === 0) {\n      throw new Error(`Unable to load translations from ${filePath}.\n${diagnostics.map((d) => `${d.message}\n`).join('')}`);\n    }\n\n    return {\n      format,\n      locale,\n      translations,\n      diagnostics,\n      integrity: createHash('sha256').update(content).digest('hex'),\n    };\n  };\n}", "CodeBleu_score": 37.85961930213775}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t  const parsers = await import('./parsers');\n  const diagnostics = await import('./diagnostics');\n\n  return async function loadTranslation(filePath: string) {\n    const content = await fs.readFileSync(filePath, 'utf-8');\n    const messages: string[] = [];\n\n    for (const [format, parser] of Object.entries(parsers)) {\n      const analysis = parser.analyze(content);\n\n      if (analysis.canParse) {\n        const { locale, translations } = parser.parse(content);\n        const diagnostics = analysis.diagnostics.formatDiagnostics();\n\n        return {\n          format,\n          locale,\n          translations,\n          diagnostics,\n          integrity: createHash('sha256').update(content).digest('hex'),\n        };\n      }\n\n      messages.push(analysis.diagnostics.formatDiagnostics());\n    }\n\n    throw new Error(`Unable to load translations from ${filePath}.\n${messages.join('\n')}`);\n  };\n}", "CodeBleu_score": 45.466325786359214}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t  const parsers = await importParsers();\n  const { formatDiagnostics } = await import('./diagnostics');\n\n  return async function loadTranslations(filePath: string) {\n    const content = await fs.readFile(filePath, 'utf8');\n    const diagnostics: Diagnostic[] = [];\n\n    for (const [format, parser] of parsers.entries()) {\n      const analysis = parser.analyze(content);\n      diagnostics.push(...analysis.diagnostics);\n      if (analysis.canParse) {\n        const { locale, translations } = parser.parse(content);\n        const integrity = createHash('sha256').update(content).digest('base64');\n        return { format, locale, translations, diagnostics: formatDiagnostics(diagnostics), integrity };\n      }\n    }\n\n    throw new Error(`Unable to determine translation format for \"${filePath}\".\n${formatDiagnostics(diagnostics)}`);\n  };\n}", "CodeBleu_score": 44.317503778135304}]}
{"instance_id": "0c0d3dcf983c", "generation_result": [{"code": "toggleSidebar(): boolean{\n\t  this.sidebarService.toggle(false, 'menu-sidebar');\n  this.layoutService.changeLayoutSize();\n\n  return false;\n}", "CodeBleu_score": 57.24112589442336}, {"code": "toggleSidebar(): boolean{\n\t  this.sidebarService.toggle(true, 'menu-sidebar');\n  this.layoutService.changeLayoutSize();\n\n  return false;\n}", "CodeBleu_score": 74.49297484123683}, {"code": "toggleSidebar(): boolean{\n\t  this.sidebarService.toggle(true, 'menu-sidebar');\n  this.layoutService.changeLayoutSize();\n\n  return false;\n}", "CodeBleu_score": 74.49297484123683}]}
{"instance_id": "c5ebbdd1dadf", "generation_result": [{"code": "loadNext(cardData){\n\t    if (!this.loading) {\n      this.loading = true;\n      this.placeholders = new Array(this.placeholdersLength);\n      this.newsService.load(this.pageToLoadNext, this.pageSize).subscribe(this.nextNewsLoaded());\n    }\n  }", "CodeBleu_score": 16.582618781556736}, {"code": "loadNext(cardData){\n\t    if (!this.loading) {\n        this.loading = true;\n        this.news = [];\n        this.newsService.loadNext().subscribe(news => {\n            this.news = this.news.concat(news);\n            this.loading = false;\n            this.page++;\n        });\n    }\n}", "CodeBleu_score": 16.696270278960633}, {"code": "loadNext(cardData){\n\t  if (!this.loading) {\n    this.loading = true;\n    this.news.push({\n      type: 'placeholder',\n      data: {}\n    });\n    this.news.push({\n      type: 'placeholder',\n      data: {}\n    });\n    this.newsService.getNews(this.page).subscribe(nextNews => {\n      this.news.pop();\n      this.news.pop();\n      for (const news of nextNews) {\n        this.news.push({\n          type: 'news',\n          data: news\n        });\n      }\n      this.loading = false;\n      this.page++;\n    });\n  }\n}", "CodeBleu_score": 24.944457393396256}]}
{"instance_id": "1bd87ab8efa2", "generation_result": [{"code": "backToTop(){\n\t  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  if (scrollTop > 0) {\n    this.scrollToTopInProgress = true;\n    const scrollInterval = setInterval(() => {\n      const timeElapsed = Date.now() - this.scrollStartTime;\n      const scrollPosition = this.easeInOutQuad(timeElapsed / this.scrollDuration);\n      const newScrollTop = Math.floor(scrollTop * (1 - scrollPosition));\n      window.scrollTo(0, newScrollTop);\n      if (newScrollTop <= 0) {\n        clearInterval(scrollInterval);\n        this.scrollToTopInProgress = false;\n      }\n    }, 16.7);\n  }\n}", "CodeBleu_score": 36.92338616902692}, {"code": "backToTop(){\n\t  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  if (this.scrollToTopInProgress) {\n    return;\n  }\n  this.scrollToTopInProgress = true;\n  let startTime;\n  const duration = 300;\n  const startPosition = scrollTop;\n  const endPosition = 0;\n  const distance = endPosition - startPosition;\n  let scrollCount = 0;\n  const scrollMotion = (timestamp) => {\n    if (!startTime) {\n      startTime = timestamp;\n    }\n    const progress = timestamp - startTime;\n    const nextScrollTop = this.easeInOutQuad(progress, startPosition, distance, duration);\n    window.scrollTo(0, nextScrollTop);\n    if (progress < duration) {\n      window.requestAnimationFrame(scrollMotion);\n    } else {\n      this.scrollToTopInProgress = false;\n    }\n  };\n  window.requestAnimationFrame(scrollMotion);\n}", "CodeBleu_score": 30.770231430634443}, {"code": "backToTop(){\n\t  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  if (this.isScrolling) {\n    return;\n  }\n  this.isScrolling = true;\n  const scroll = (timestamp) => {\n    if (!this.start) this.start = timestamp;\n    const progress = timestamp - this.start;\n    const easing = this.easeInOutQuad(progress, 0, scrollTop, 500);\n    window.scrollTo(0, easing);\n    if (progress < 500) {\n      window.requestAnimationFrame(scroll);\n    } else {\n      this.isScrolling = false;\n    }\n  };\n  window.requestAnimationFrame(scroll);\n}", "CodeBleu_score": 36.52496915905554}]}
{"instance_id": "0ef728b56235", "generation_result": [{"code": "getBreadcrumb(){\n\t  const routes = this.$route.matched.filter(route => route.meta.title);\n  if (routes[0].path !== '/dashboard') {\n    routes.unshift({ path: '/dashboard', meta: { title: 'Dashboard' } });\n  }\n  this.levelList = routes.filter(route => !route.meta.excludeFromBreadcrumb);\n}", "CodeBleu_score": 40.37729921412374}, {"code": "getBreadcrumb(){\n\t  const routes = this.$route.matched.filter(route => route.meta.title);\n  if (!this.isDashboard) {\n    routes.unshift({ path: '/dashboard', meta: { title: 'Dashboard' } });\n  }\n  this.levelList = routes.filter(route => !route.meta.excludeFromBreadcrumb);\n}", "CodeBleu_score": 39.96541287655699}, {"code": "getBreadcrumb(){\n\t    let routes = this.$route.matched.filter(route => route.meta.title);\n    if (routes[0].path !== '/dashboard') {\n        routes.unshift({ path: '/dashboard', meta: { title: 'Dashboard' } });\n    }\n    this.levelList = routes.filter(route => !route.meta.excludeFromBreadcrumb);\n}", "CodeBleu_score": 40.61866205765795}]}
{"instance_id": "4431fde0a559", "generation_result": [{"code": "destroyListener(){\n\t    if (!this.$_isMobile) {\n        window.removeEventListener('resize', this._onResize);\n        this.$_resizeHandler = null;\n\n        if (this.$_sidebarElm) {\n            this.$_sidebarElm.removeEventListener('transitionend', this._onTransitionEnd);\n        }\n    }\n}", "CodeBleu_score": 36.21505349676004}, {"code": "destroyListener(){\n\t    if (!this.$_isMobile) {\n        window.removeEventListener('resize', this.sidebarResizeHandler)\n        this.$_sidebarElm && this.$_sidebarElm.removeEventListener('transitionend', this.sidebarTransitionEnd)\n    }\n    this.sidebarResizeHandler = null\n    this.sidebarTransitionEnd = null\n}", "CodeBleu_score": 40.82019538022424}, {"code": "destroyListener(){\n\t  if (!this.$_windowResizeHandler) {\n    return;\n  }\n\n  window.removeEventListener('resize', this.$_windowResizeHandler);\n  this.$_windowResizeHandler = null;\n\n  if (this.$_sidebarElm) {\n    this.$_sidebarElm.removeEventListener('transitionend', this.$_sidebarTransitionEndHandler);\n  }\n}", "CodeBleu_score": 36.49183079351089}]}
{"instance_id": "7215170e04cd", "generation_result": [{"code": "deleteEle(ele){\n\t  this.list1 = this.list1.filter((item) => {\n    return item.id !== ele.id;\n  });\n  if (this.isNotInList2(ele)) {\n    this.list2.unshift(ele);\n  }\n}", "CodeBleu_score": 34.498228583108194}, {"code": "deleteEle(ele){\n\t  for (let i = 0; i < this.list1.length; i++) {\n    if (this.list1[i].id === ele.id) {\n      this.list1.splice(i, 1);\n      if (this.isNotInList2(ele)) {\n        this.list2.unshift(ele);\n      }\n      break;\n    }\n  }\n}", "CodeBleu_score": 46.62065426075841}, {"code": "deleteEle(ele){\n\t  for (let i = 0; i < this.list1.length; i++) {\n    if (this.list1[i].id === ele.id) {\n      this.list1.splice(i, 1);\n      if (this.isNotInList2(ele)) {\n        this.list2.unshift(ele);\n      }\n      break;\n    }\n  }\n}", "CodeBleu_score": 46.62065426075841}]}
{"instance_id": "b2acc5757074", "generation_result": [{"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\t  let res = []\n  routes.forEach(route => {\n    if (route.meta && route.meta.hidden) return\n    let lastRoute = route\n    let path = resolvePath(route.path, basePath)\n    let title = [...prefixTitle]\n    if (route.meta && route.meta.title) {\n      title.push(route.meta.title)\n    }\n    if (!route.redirect) {\n      const obj = {\n        path,\n        title: title.join('-')\n      }\n      if (lastRoute.meta && lastRoute.meta.title && !lastRoute.meta.noRedirect) {\n        res.push(obj)\n      }\n    }\n    if (route.children) {\n      res = res.concat(this.generateRoutes(route.children, path, title))\n    }\n  })\n  return res\n}", "CodeBleu_score": 48.81502788504106}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\t  const res = [];\n  routes.forEach((route) => {\n    if (route.meta && route.meta.hidden) {\n      return;\n    }\n    const data = {\n      path: path.resolve(basePath, route.path),\n      title: [...prefixTitle],\n    };\n    if (route.meta && route.meta.title) {\n      data.title = [...data.title, route.meta.title];\n    }\n    if (route.meta && route.meta.title && !route.meta.noRedirect) {\n      res.push(data);\n    }\n    if (route.children) {\n      res.push(...this.generateRoutes(route.children, data.path, data.title));\n    }\n  });\n  return res;\n}", "CodeBleu_score": 53.066771434911075}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\t  let res = [];\n  routes.forEach((route) => {\n    // skip hidden routes\n    if (route.meta && route.meta.hidden) return;\n    // only keep the name of the route that matters here\n    const routePath = path.resolve(route.path, 'index.md');\n    const routeParts = routePath.split('/');\n    const fileName = routeParts[routeParts.length - 1];\n    // remove .md extension\n    const name = fileName.replace(/\\.md$/, '');\n    // remove readme\n    const sanitizedName = name.toLowerCase() === 'readme' ? route.path : name;\n    // title can have 2 types of syntax:\n    // 1. title: Page Title\n    // 2. title: Page Title | Site Title\n    const title = route.meta && route.meta.title ? route.meta.title : name;\n    const prefixedTitle = [...prefixTitle];\n    if (route.meta && route.meta.title) {\n      const index = route.meta.title.indexOf('|');\n      if (index > 0) {\n        const _title = route.meta.title.slice(0, index);\n        prefixedTitle.push(_title);\n      }\n    }\n    if (route.children) {\n      const nestedRoutes = this.generateRoutes(route.children, route.path, prefixedTitle);\n      res = res.concat(nestedRoutes);\n    } else {\n      // remove starting slash\n      const path = basePath + route.path.slice(1);\n      res.push({\n        title: prefixedTitle.concat(title).join(' | '),\n        path,\n      });\n    }\n  });\n  return res;\n}", "CodeBleu_score": 40.60846615874255}]}
{"instance_id": "c4e47c376d30", "generation_result": [{"code": "closeSidebar(evt){\n\t    if (!evt.target.closest('.rightPanel')) {\n        this.show = false;\n        window.removeEventListener('click', this.closeSidebar);\n    }\n}", "CodeBleu_score": 39.10118619826423}, {"code": "closeSidebar(evt){\n\t  if (!evt.target.closest(\".rightPanel\")) {\n    this.show = false;\n    window.removeEventListener(\"click\", this.closeSidebar);\n  }\n}", "CodeBleu_score": 37.15019361219978}, {"code": "closeSidebar(evt){\n\t  if (evt.target.closest('.rightPanel') === null) {\n    this.show = false;\n    window.removeEventListener('click', this.closeSidebar);\n  }\n}", "CodeBleu_score": 38.90822007829349}]}
{"instance_id": "ab91e02736a1", "generation_result": [{"code": "click(){\n\t  if (!screenfull.enabled) {\n    this.$message({\n      message: 'your browser cannot work',\n      type: 'warning'\n    })\n    return false\n  }\n  screenfull.toggle()\n}", "CodeBleu_score": 62.98250233226372}, {"code": "click(){\n\t  if (!screenfull.enabled) {\n    this.$message({\n      message: 'your browser cannot work',\n      type: 'warning'\n    })\n    return false\n  }\n  screenfull.toggle()\n}", "CodeBleu_score": 62.98250233226372}, {"code": "click(){\n\t  if (!screenfull.enabled) {\n    this.$message({\n      message: 'your browser cannot work',\n      type: 'warning'\n    })\n    return false\n  }\n  screenfull.toggle()\n}", "CodeBleu_score": 62.98250233226372}]}
{"instance_id": "3f27cb09d8c2", "generation_result": [{"code": "function checkPermission(el, binding) {\n\t  const { value } = binding;\n  if (value && value instanceof Array && value.length > 0) {\n    const permissionRoles = value;\n    const hasPermission = roles.some((role) => {\n      return permissionRoles.includes(role);\n    });\n    if (!hasPermission) {\n      el.parentNode && el.parentNode.removeChild(el);\n    }\n  } else {\n    throw new Error(`need roles: like v-permission=\"['admin','editor']\"`);\n  }\n}", "CodeBleu_score": 60.52313928440881}, {"code": "function checkPermission(el, binding) {\n\t  const { value } = binding\n  if (value && value instanceof Array && value.length > 0) {\n    const permissionRoles = value\n    const hasPermission = roles.some(role => {\n      return permissionRoles.includes(role)\n    })\n    if (!hasPermission) {\n      el.parentNode && el.parentNode.removeChild(el)\n    }\n  } else {\n    throw new Error(`need roles: like v-permission=\"['admin','editor']\"`)\n  }\n}", "CodeBleu_score": 68.53878860298377}, {"code": "function checkPermission(el, binding) {\n\t  const { value } = binding\n  if (value && value instanceof Array && value.length > 0) {\n    const roles = store.getters && store.getters.roles\n    const permissionRoles = value\n    const hasPermission = roles.some(role => {\n      return permissionRoles.includes(role)\n    })\n    if (!hasPermission) {\n      el.parentNode && el.parentNode.removeChild(el)\n    }\n  } else {\n    throw new Error(`need roles: like v-permission=\"['admin','editor']\"`)\n  }\n}", "CodeBleu_score": 79.93458224603418}]}
{"instance_id": "04e47e771281", "generation_result": [{"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\t    const result = await this.adminService.inviteUserToSignInViaEmail(\n      adminUser.userId,\n      inviteeEmail,\n    );\n    if (E.isLeft(result)) {\n      throwErr(result.left);\n    }\n    return result.right;\n  }", "CodeBleu_score": 59.878028979072}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\t    const result = await this.adminService.inviteUserToSignInViaEmail(\n      adminUser,\n      inviteeEmail,\n    );\n\n    if (E.isLeft(result)) {\n      throwErr(result.left);\n    }\n\n    return result.right;\n  }", "CodeBleu_score": 56.606823054624144}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\t    const result = await this.adminService.inviteUserToSignInViaEmail(\n      adminUser,\n      inviteeEmail,\n    );\n    if (E.isLeft(result)) {\n      throwErr(result.left);\n    }\n    return result.right;\n  }", "CodeBleu_score": 56.606823054624144}]}
{"instance_id": "3f25736bfbcd", "generation_result": [{"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\t    const {\n      data: { accessToken, refreshToken },\n      error,\n    } = await this.authService.generateAuthTokens(req.user);\n\n    if (error) {\n      throwHTTPErr(error);\n    }\n\n    this.authCookieHandler.setAuthCookies(res, accessToken, refreshToken);\n\n    res.redirect(this.configService.get('FRONTEND_URI'));\n  }", "CodeBleu_score": 40.29194050702382}, {"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\t    const { accessToken, refreshToken } = await this.authService.generateAuthTokens(req.user);\n\n    // Set the authentication cookies in the response\n    res.cookie('accessToken', accessToken, {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'none',\n      maxAge: 1000 * 60 * 60 * 24 * 7, // 7 days\n    });\n    res.cookie('refreshToken', refreshToken, {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'none',\n      maxAge: 1000 * 60 * 60 * 24 * 30, // 30 days\n    });\n\n    // Redirect the user to the specified URI\n    res.redirect(`${process.env.CLIENT_URL}/`);\n  }", "CodeBleu_score": 40.00010859473579}, {"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\t    const { code } = req.query;\n    const result = await this.authService.googleAuthRedirect(code);\n    if (E.isLeft(result)) {\n      throw new HttpException(result.left.message, result.left.statusCode);\n    }\n    const { accessToken, refreshToken } = result.right;\n    res.cookie('accessToken', accessToken, {\n      httpOnly: true,\n      sameSite: 'none',\n      secure: true,\n      maxAge: 1000 * 60 * 15,\n    });\n    res.cookie('refreshToken', refreshToken, {\n      httpOnly: true,\n      sameSite: 'none',\n      secure: true,\n      maxAge: 1000 * 60 * 60 * 24 * 7,\n    });\n    res.redirect(`${process.env.CLIENT_URL}/profile`);\n  }", "CodeBleu_score": 37.894649538344105}]}
{"instance_id": "52aa108e3521", "generation_result": [{"code": "const mousewheel = function(element, callback){\n\t    if (element && element.addEventListener) {\n        element.addEventListener(\n            'DOMMouseScroll' in document ? 'DOMMouseScroll' : 'mousewheel',\n            function(event) {\n                const normalized = normalizeWheel(event);\n                callback && callback.apply(this, [event].concat(normalized));\n            },\n            false\n        );\n    }\n}", "CodeBleu_score": 60.214603576986306}, {"code": "const mousewheel = function(element, callback){\n\t    if (element && element.addEventListener) {\n        element.addEventListener(\n            'DOMMouseScroll' in document ? 'DOMMouseScroll' : 'mousewheel',\n            function(event) {\n                const normalized = normalizeWheel(event);\n                callback && callback.apply(this, [event].concat(normalized));\n            },\n            false\n        );\n    }\n}", "CodeBleu_score": 60.214603576986306}, {"code": "const mousewheel = function(element, callback){\n\t  if (element && element.addEventListener) {\n    element.addEventListener(\n      \"DOMMouseScroll\" in document ? \"DOMMouseScroll\" : \"mousewheel\",\n      function(event) {\n        const normalized = normalizeWheel(event);\n        callback && callback.apply(this, [event].concat(normalized));\n      },\n      false\n    );\n  }\n}", "CodeBleu_score": 58.18102686170771}]}
{"instance_id": "bb9e14122636", "generation_result": [{"code": "let i18nHandler = function(){\n\t    let $t = Object.getPrototypeOf(this).$t;\n    if (typeof $t === 'function') {\n        if (!Vue.locale) {\n            Vue.locale = {};\n        }\n        if (!Vue.locale.merged) {\n            Vue.locale.merged = true;\n            Vue.locale.messages = deepmerge(Vue.locale.messages || {}, this.$root.$i18n.messages || {});\n        }\n        return $t.apply(this, arguments);\n    }\n    return '';\n}", "CodeBleu_score": 46.023353368244415}, {"code": "let i18nHandler = function(){\n\t    let $t = Object.getPrototypeOf(this).$t;\n    if (typeof $t === 'function') {\n        let Vue = this.$root.$options.Vue;\n        if (Vue && Vue.locale) {\n            if (!this.$root.$options.Vue.locale.merged) {\n                Vue.locale.merged = true;\n                Vue.locale.messages = deepmerge(Vue.locale.messages, this.$root.$options.Vue.locale.messages);\n            }\n            return $t.apply(this, arguments);\n        }\n    }\n}", "CodeBleu_score": 39.648440746151834}, {"code": "let i18nHandler = function(){\n\t    let $t = Object.getPrototypeOf(this).$t;\n    if (typeof $t !== 'function') {\n        return;\n    }\n\n    if (!Vue.locale) {\n        Vue.locale = 'en';\n    }\n\n    if (!this.$i18n.merged) {\n        Vue.use(vuei18n, {\n            lang: Vue.locale,\n            messages: deepmerge(this.$i18n.lang, this.$i18n.messages)\n        });\n        this.$i18n.merged = true;\n    }\n\n    return $t.apply(this, arguments);\n}", "CodeBleu_score": 42.62424531247769}]}
{"instance_id": "b0608b85127a", "generation_result": [{"code": "function broadcast(componentName, eventName, params){\n\t  this.$children.forEach(child => {\n    const name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat(params));\n    }\n  });\n}", "CodeBleu_score": 74.94053844251044}, {"code": "function broadcast(componentName, eventName, params){\n\t  this.$children.forEach(child => {\n    const name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat(params));\n    }\n  });\n}", "CodeBleu_score": 74.94053844251044}, {"code": "function broadcast(componentName, eventName, params){\n\t  this.$children.forEach(child => {\n    var name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat(params));\n    }\n  });\n}", "CodeBleu_score": 79.52304060766578}]}
{"instance_id": "da57b9dc5023", "generation_result": [{"code": "aria.Utils.focusFirstDescendant = function(element){\n\t  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n}", "CodeBleu_score": 87.83904016470923}, {"code": "aria.Utils.focusFirstDescendant = function(element){\n\t    for (var i = 0; i < element.childNodes.length; i++) {\n        var child = element.childNodes[i];\n        if (attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n            return true;\n        }\n    }\n    return false;\n}", "CodeBleu_score": 86.66726220806589}, {"code": "aria.Utils.focusFirstDescendant = function(element){\n\t    for (var i = 0; i < element.childNodes.length; i++) {\n        var child = element.childNodes[i];\n        if (attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n            return true;\n        }\n    }\n    return false;\n}", "CodeBleu_score": 86.66726220806589}]}
{"instance_id": "a029702e104d", "generation_result": [{"code": "highlight(index){\n\t    if (!this.suggestionsVisible || this.loading) {\n        return;\n    }\n\n    index = Math.max(0, Math.min(index, this.suggestions.length - 1));\n\n    if (this.suggestions[index] === this.$refs.suggestions.$el.querySelector('.list-group-item.active')) {\n        return;\n    }\n\n    const suggestions = this.$refs.suggestions.$el.querySelectorAll('.list-group-item');\n    const active = this.$refs.suggestions.$el.querySelector('.list-group-item.active');\n\n    if (active) {\n        active.classList.remove('active');\n    }\n\n    suggestions[index].classList.add('active');\n    this.highlightedIndex = index;\n    this.$refs.suggestions.$el.setAttribute('aria-activedescendant', `${this.id}-${index}`);\n\n    const scrollContainer = this.$refs.suggestions.$el.closest('.modal-body, .list-group');\n    const top = suggestions[index].offsetTop - scrollContainer.offsetTop + scrollContainer.scrollTop;\n    scrollContainer.scrollTop = top;\n}", "CodeBleu_score": 43.23259129162372}, {"code": "highlight(index){\n\t    if (!this.isVisible || this.isLoading) {\n        return;\n    }\n    if (index < 0) {\n        index = this.suggestions.length - 1;\n    }\n    if (index >= this.suggestions.length) {\n        index = 0;\n    }\n    this.highlightedIndex = index;\n    this.$refs.suggestions.$el.querySelector(`[data-index=\"${index}\"]`).scrollIntoView({ block: 'nearest' });\n    this.$refs.suggestions.$el.setAttribute('aria-activedescendant', `${this.id}-${index}`);\n}", "CodeBleu_score": 25.685462789864676}, {"code": "highlight(index){\n\t  if (!this.suggestionsVisible || this.loading) {\n    return;\n  }\n\n  // Adjust the index if it is out of bounds\n  if (index < 0) {\n    index = 0;\n  } else if (index >= this.filteredSuggestions.length) {\n    index = this.filteredSuggestions.length - 1;\n  }\n\n  // Update the scroll position to ensure the highlighted item is visible\n  const suggestionsEl = this.$refs.suggestions.$el;\n  const highlightedEl = suggestionsEl.querySelector(`[data-index=\"${index}\"]`);\n  if (highlightedEl) {\n    const containerHeight = suggestionsEl.offsetHeight;\n    const highlightedTop = highlightedEl.offsetTop;\n    const highlightedBottom = highlightedTop + highlightedEl.offsetHeight;\n    const scrollTop = suggestionsEl.scrollTop;\n    if (highlightedTop < scrollTop) {\n      suggestionsEl.scrollTop = highlightedTop;\n    } else if (highlightedBottom > scrollTop + containerHeight) {\n      suggestionsEl.scrollTop = highlightedBottom - containerHeight;\n    }\n  }\n\n  // Set the highlighted index and update the aria-activedescendant attribute\n  this.highlightedIndex = index;\n  this.$refs.suggestions.$el.setAttribute('aria-activedescendant', `suggestion-${index}`);\n}", "CodeBleu_score": 52.62521911177418}]}
{"instance_id": "2db32f7ad18f", "generation_result": [{"code": "translateItem(index, activeIndex, oldIndex){\n\t  const {\n    props,\n    state: {\n      translate,\n      itemWidth,\n      itemHeight,\n      itemMargin,\n      isVertical,\n      isHorizontal,\n      isCard,\n      isRTL,\n      isMulti,\n      isLoop,\n      isAuto,\n      isAutoWidth,\n      isAutoHeight,\n      isAutoPlay,\n      isAutoPlayReverse,\n      isAutoPlaying,\n      isAutoPlayPaused,\n      isAutoPlayingForward,\n      isAutoPlayingReverse,\n      isAutoPlayingRepeat,\n      isAutoPlayingRepeatReverse,\n      isAutoPlayingRepeatForward,\n      isAutoPlayingRepeatReverseForward,\n      isAutoPlayingRepeatReverseReverse,\n      isAutoPlayingRepeatReverseReverseForward,\n      isAutoPlayingRepeatReverseReverseReverse,\n      isAutoPlayingRepeatReverseReverseReverseForward,\n      isAutoPlayingRepeatReverseReverseReverseReverse,\n      isAutoPlayingRepeatReverseReverseReverseReverseForward,\n      isAutoPlayingRepeatReverseReverseReverseReverseReverse,\n      isAutoPlayingRepeatReverseReverseReverseReverseReverseForward,\n      isAutoPlayingRepeatReverseReverseReverseReverseReverseReverse,\n      isAutoPlayingRepeatReverseReverseReverseReverseReverseReverseForward,\n      isAutoPlayingRepeatReverseReverseReverseReverseReverseReverseReverse,\n      isAutoPlayingRepeatReverseReverseReverseReverseReverseReverseReverseForward,\n      isAutoPlayingRepeatReverseReverseReverseReverseReverseReverseReverseReverse,\n      isAutoPlayingRepeatReverseReverseReverseReverse", "CodeBleu_score": 6.663816861084859}, {"code": "translateItem(index, activeIndex, oldIndex){\n\t  const { type, direction } = this.props;\n  const { items, loop } = this.state;\n  const item = items[index];\n  const active = index === activeIndex;\n  const translate = this.calcTranslate(index, activeIndex, oldIndex);\n  const scale = this.calcScale(index, activeIndex, oldIndex);\n  const animating = this.state.animating;\n  const horizontal = direction === 'horizontal';\n\n  if (type === 'card') {\n    const translateItem = this.calcCardTranslate(index, activeIndex, oldIndex);\n    const scaleItem = this.calcScale(index, activeIndex, oldIndex);\n\n    if (direction === 'vertical') {\n      console.warn('React-carousel-3d does not support vertical direction for card types.');\n    }\n\n    item.translate = translateItem;\n    item.scale = scaleItem;\n  } else {\n    if (horizontal) {\n      if (animating) {\n        item.translate = translate;\n        item.scale = scale;\n      } else {\n        item.translate = 0;\n        item.scale = 1;\n      }\n    } else {\n      item.translate = translate;\n      item.scale = scale;\n    }\n  }\n\n  item.active = active;\n\n  if (loop) {\n    this.processIndex(index);\n  }\n\n  this.setState({\n    items,\n    ready: true,\n  });\n}", "CodeBleu_score": 41.433534718327365}, {"code": "translateItem(index, activeIndex, oldIndex){\n\t  const {\n    type,\n    animation,\n    direction,\n    vertical,\n    isVertical,\n    isMultiItem,\n    items,\n    itemsCount,\n    wrapperSize,\n    slideWidth,\n    slideHeight,\n    slideWidthGap,\n    slideHeightGap,\n    snapAlign,\n    slideIndex\n  } = this.state;\n  let translate = 0;\n  let scale = 1;\n  let animating = false;\n  let ready = false;\n  let active = false;\n  let item = items[index];\n\n  if (type === 'card') {\n    translate = this.calcCardTranslate(index, activeIndex, oldIndex);\n    scale = this.calcCardScale(index, activeIndex, oldIndex);\n  } else {\n    translate = this.calcTranslate(index, activeIndex, oldIndex);\n  }\n\n  if (animation === 'fade') {\n    animating = Math.abs(activeIndex - index) === 1;\n  }\n\n  if (type !== 'card') {\n    if (direction === 'vertical') {\n      if (vertical) {\n        translate = translate * wrapperSize;\n      } else {\n        translate = 0;\n      }\n    } else if (direction === 'horizontal') {\n      if (vertical) {\n        translate = 0;\n      }\n    }\n\n    if (isVertical) {\n      if (vertical) {\n        translate = translate * slideHeight;\n      } else {\n        translate = 0;\n      }\n    } else {\n      if (vertical) {\n        translate = 0;\n      } else {\n        translate = translate * slideWidth;\n      }\n    }\n\n    if (snapAlign === 'center') {\n      if (vertical) {\n        translate = translate - (wrapperSize - slideHeight) / 2;\n      } else {\n        translate = translate - (wrapperSize - slideWidth) / 2;\n      }\n    }\n\n    if (snapAlign === 'start') {\n      if (vertical) {\n        translate = translate - slideHeightGap / 2;\n      } else {\n        translate = translate -", "CodeBleu_score": 29.285514504791234}]}
{"instance_id": "49b9aa91f62e", "generation_result": [{"code": "handleButtonEnter(arrow){\n\t  if (this.direction === 'vertical') return;\n  this.items.forEach((item, i) => {\n    if (item.itemInStage(arrow) === i) {\n      item.hover = true;\n    }\n  });\n}", "CodeBleu_score": 74.26080771393984}, {"code": "handleButtonEnter(arrow){\n\t    if (this.direction === 'vertical') {\n        return;\n    }\n    this.items.forEach((item, i) => {\n        if (this.itemInStage(arrow, i)) {\n            item.hover = true;\n        }\n    });\n}", "CodeBleu_score": 55.80013438188143}, {"code": "handleButtonEnter(arrow){\n\t  if (this.direction === \"vertical\") {\n    return;\n  }\n  this.items.forEach((item, i) => {\n    if (item.itemInStage(arrow)) {\n      this.items[i].hover = true;\n    }\n  });\n}", "CodeBleu_score": 58.94250433334645}]}
{"instance_id": "85cdf6991b1f", "generation_result": [{"code": "scrollIntoView(){\n\t  if (typeof window === 'undefined') return;\n\n  menus.forEach(menu => {\n    const menuElement = this.getMenuElement(menu);\n    const container = menuElement.querySelector('.scrollable');\n    const activeNode = menuElement.querySelector('.active') || menuElement.querySelector('.in-active-path');\n\n    if (container && activeNode) {\n      container.scrollTop = activeNode.offsetTop;\n    }\n  });\n}", "CodeBleu_score": 48.75564244545377}, {"code": "scrollIntoView(){\n\t  if (typeof window === 'undefined') {\n    return;\n  }\n  menus.forEach((menuRef) => {\n    const menuElement = document.querySelector(`[data-menu-ref=\"${menuRef}\"]`);\n    if (!menuElement) {\n      return;\n    }\n    const scrollContainer = menuElement.querySelector(`[data-menu-scroll-container=\"${menuRef}\"]`);\n    if (!scrollContainer) {\n      return;\n    }\n    const activeNode = menuElement.querySelector(`[data-menu-active-path=\"${menuRef}\"]`);\n    if (!activeNode) {\n      return;\n    }\n    scrollContainer.scrollTop = activeNode.offsetTop - scrollContainer.offsetTop;\n  });\n}", "CodeBleu_score": 36.77304090209054}, {"code": "scrollIntoView(){\n\t  if (typeof window === 'undefined') return;\n  menus.forEach(menuRef => {\n    const menuElement = document.querySelector(`[data-menu-ref=\"${menuRef}\"]`);\n    const scrollableContainer = menuElement.querySelector(\n      '[data-menu-scroll-container]',\n    );\n    const activeNode = menuElement.querySelector('[data-menu-active-node]');\n    const inactiveNode = menuElement.querySelector('[data-menu-inactive-node]');\n    const nodeToScrollIntoView = activeNode || inactiveNode;\n    if (nodeToScrollIntoView) {\n      scrollableContainer.scrollTo({\n        top: nodeToScrollIntoView.offsetTop,\n        behavior: 'smooth',\n      });\n    }\n  });\n}", "CodeBleu_score": 41.254244313529206}]}
{"instance_id": "fc6784c79aa5", "generation_result": [{"code": "const rgb2hsv = function(r, g, b){\n\t  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const diff = max - min;\n\n  let h = 0;\n  let s = 0;\n  let v = max;\n\n  if (max !== min) {\n    if (max === r) {\n      h = (g - b) / diff + (g < b ? 6 : 0);\n    } else if (max === g) {\n      h = (b - r) / diff + 2;\n    } else {\n      h = (r - g) / diff + 4;\n    }\n\n    s = diff / max;\n  }\n\n  return { h: h * 60, s: s * 100, v: v * 100 };\n}", "CodeBleu_score": 48.80784578641379}, {"code": "const rgb2hsv = function(r, g, b){\n\t    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const v = max;\n\n    const d = max - min;\n    const s = max === 0 ? 0 : d / max;\n\n    let h;\n    if (max === min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n\n    return {\n        h: h * 360,\n        s: s * 100,\n        v: v * 100\n    };\n}", "CodeBleu_score": 80.86088096478687}, {"code": "const rgb2hsv = function(r, g, b){\n\t  r /= 255;\n  g /= 255;\n  b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const diff = max - min;\n  let h = 0;\n  let s = 0;\n  let v = max;\n  if (diff === 0) {\n    h = 0;\n  } else if (max === r) {\n    h = (g - b) / diff;\n  } else if (max === g) {\n    h = 2 + (b - r) / diff;\n  } else if (max === b) {\n    h = 4 + (r - g) / diff;\n  }\n  if (max !== 0) {\n    s = diff / max;\n  }\n  h *= 60;\n  if (h < 0) {\n    h += 360;\n  }\n  return [h, s, v];\n}", "CodeBleu_score": 39.09049987706329}]}
{"instance_id": "37b868b6a5cc", "generation_result": [{"code": "handleDrag(event){\n\t    const {\n        width,\n        height\n    } = this.$el.getBoundingClientRect();\n    const {\n        orientation\n    } = this.options;\n    const position = orientation === 'vertical' ? event.clientY : event.clientX;\n    const max = orientation === 'vertical' ? height : width;\n    const min = orientation === 'vertical' ? 0 : 0;\n    const alpha = Math.max(min, Math.min(max, position)) / max;\n    this.color.setAlpha(alpha);\n    this.$emit('update:color', this.color);\n}", "CodeBleu_score": 29.297959620244885}, {"code": "handleDrag(event){\n\t  if (this.orientation === 'vertical') {\n    this.color.set('alpha', 1 - (event.clientY - this.$el.getBoundingClientRect().top) / this.$el.clientHeight);\n  } else {\n    this.color.set('alpha', (event.clientX - this.$el.getBoundingClientRect().left) / this.$el.clientWidth);\n  }\n}", "CodeBleu_score": 14.668550456074293}, {"code": "handleDrag(event){\n\t    const {\n        orientation,\n        color\n    } = this;\n    const {\n        left,\n        top,\n        width,\n        height\n    } = this.$el.getBoundingClientRect();\n    let {\n        clientX,\n        clientY\n    } = event;\n    clientX = Math.round(clientX);\n    clientY = Math.round(clientY);\n    if (orientation === 'vertical') {\n        const y = Math.max(top, clientY);\n        const yMax = Math.min(top + height, clientY);\n        const value = (yMax - y) / height;\n        color.set({\n            a: value\n        });\n    } else {\n        const x = Math.max(left, clientX);\n        const xMax = Math.min(left + width, clientX);\n        const value = (xMax - x) / width;\n        color.set({\n            a: value\n        });\n    }\n}", "CodeBleu_score": 28.404234147788245}]}
{"instance_id": "a3b2c61b5a1e", "generation_result": [{"code": "displayValue(){\n\t  const { parsedInput, format, type, rangeSeparator } = this.props;\n  const formattedValue = this.formatValue(parsedInput, format, type, rangeSeparator);\n  if (Array.isArray(parsedInput)) {\n    return formattedValue.join(rangeSeparator);\n  }\n  if (parsedInput !== null) {\n    return parsedInput;\n  }\n  if (formattedValue) {\n    return type === 'time' || type === 'date' ? formattedValue : formattedValue.join(rangeSeparator);\n  }\n  return '';\n}", "CodeBleu_score": 39.346041348909885}, {"code": "displayValue(){\n\t    const { format, type, rangeSeparator } = this.props;\n    const { value, formattedValue } = this.state;\n    if (Array.isArray(value)) {\n      return this.props.formatSelectedValue(value, format, type);\n    }\n    if (value !== null) {\n      return value;\n    }\n    if (formattedValue) {\n      if (type === 'multiRange') {\n        return formattedValue.join(rangeSeparator);\n      }\n      return formattedValue;\n    }\n    return '';\n  }", "CodeBleu_score": 30.514943172610092}, {"code": "displayValue(){\n\t  const { parsedInput, format, type, rangeSeparator } = this.props;\n  const { formattedValue } = this.state;\n\n  if (Array.isArray(parsedInput)) {\n    return parsedInput.map((value, index) => {\n      if (formattedValue && formattedValue[index]) {\n        return formattedValue[index];\n      }\n      return value;\n    });\n  }\n\n  if (parsedInput !== null) {\n    return parsedInput;\n  }\n\n  if (formattedValue) {\n    if (type === 'range') {\n      return formattedValue.join(rangeSeparator);\n    }\n    return formattedValue;\n  }\n\n  return '';\n}", "CodeBleu_score": 38.86430997906908}]}
{"instance_id": "305dba2399e1", "generation_result": [{"code": "handleStartChange(event){\n\t  const value = event.detail.value;\n  const parsedValue = this.parseString(value);\n  this.userInput = [parsedValue, this.endDisplayValue];\n  this.value = [parsedValue, this.endValue];\n  if (this.isValidValue(parsedValue)) {\n    this.emitInput(this.value);\n    this.userInput = null;\n  }\n}", "CodeBleu_score": 37.75785304463083}, {"code": "handleStartChange(event){\n\t  const newValue = this.parseString(event.detail.value);\n  this.userInput = [this.formatToString(newValue), this.userInput[1]];\n  this.value = [newValue, this.value[1]];\n  if (this.isValidValue(newValue)) {\n    this.emitInput();\n    this.userInput = null;\n  }\n}", "CodeBleu_score": 39.79600964292297}, {"code": "handleStartChange(event){\n\t    // Parse the user input\n    const parsedValue = this.parseString(event.target.value);\n\n    // Update the userInput array with the formatted start value and the existing end display value\n    this.userInput = [parsedValue, this.endDisplay];\n\n    // Set the new picker value with the parsed start value and the existing end value\n    this.pickerValue = [parsedValue, this.endValue];\n\n    // Check if the new value is valid\n    if (this.isValidValue(this.pickerValue)) {\n        // Emit the input event with the new value\n        this.emitInput(this.pickerValue);\n\n        // Reset the userInput to null\n        this.userInput = null;\n    }\n}", "CodeBleu_score": 34.790089615615784}]}
{"instance_id": "0f76d5fb83b3", "generation_result": [{"code": "bindScrollEvent(){\n\t    const hours = this.$refs.hours.wrap;\n    const minutes = this.$refs.minutes.wrap;\n    const seconds = this.$refs.seconds.wrap;\n\n    const bindFunction = (element, type) => {\n        element.onscroll = (e) => {\n            this.handleScroll(type, e);\n        };\n    };\n\n    bindFunction(hours, 'hours');\n    bindFunction(minutes, 'minutes');\n    bindFunction(seconds, 'seconds');\n}", "CodeBleu_score": 52.62827627637536}, {"code": "bindScrollEvent(){\n\t    const bindFunction = (type) => {\n        const element = this.$refs[type].wrap;\n        element.onscroll = (e) => {\n            this.handleScroll(type, e);\n        };\n    };\n\n    bindFunction('hours');\n    bindFunction('minutes');\n    bindFunction('seconds');\n}", "CodeBleu_score": 74.59251027978574}, {"code": "bindScrollEvent(){\n\t  const bindFunction = (element) => {\n    element.wrap.onscroll = (e) => {\n      this.handleScroll(element.type, e);\n    };\n  };\n\n  bindFunction(this.hours);\n  bindFunction(this.minutes);\n  bindFunction(this.seconds);\n}", "CodeBleu_score": 48.89838792269526}]}
{"instance_id": "fe8ad366d911", "generation_result": [{"code": "scrollDown(step){\n\t  const scrollbar = this.activeScrollbar;\n  const scrollbarValue = this.scrollbarValues[scrollbar];\n  const scrollbarList = this.scrollbarLists[scrollbar];\n\n  if (scrollbar === 'hours') {\n    const hoursList = this.hoursList;\n    let i = 0;\n    while (i < hoursList.length) {\n      const hour = hoursList[i];\n      if (scrollbarList.includes(hour)) {\n        const newValue = scrollbarValue + step;\n        if (newValue >= 0 && newValue < hoursList.length) {\n          this.scrollbarValues[scrollbar] = newValue;\n          break;\n        }\n      }\n      i++;\n    }\n  } else {\n    const newValue = scrollbarValue + step;\n    if (newValue >= 0 && newValue < scrollbarList.length) {\n      this.scrollbarValues[scrollbar] = newValue;\n    }\n  }\n\n  this.modifyDateField();\n  this.adjustSpinner();\n  this.$nextTick(() => {\n    this.emitSelectRange(scrollbar);\n  });\n}", "CodeBleu_score": 35.44862598621822}, {"code": "scrollDown(step){\n\t    if (this.scrollbar === null) {\n      this.emitSelectRange('hours');\n      return;\n    }\n\n    let value = this.scrollbar.value;\n    let step = Math.abs(step);\n\n    if (this.scrollbar.scrollbar === 'hours') {\n      let hours = this.hours;\n      let index = hours.indexOf(value);\n      let length = hours.length;\n\n      for (let i = 1; i <= step; i++) {\n        index = (index + 1) % length;\n\n        while (!this.isHourAvailable(hours[index])) {\n          index = (index + 1) % length;\n        }\n      }\n\n      value = hours[index];\n    } else {\n      value = (value + step) % 60;\n    }\n\n    this.scrollbar.value = value;\n    this.modifyDateField();\n    this.adjustSpinner();\n    this.$nextTick(() => this.emitSelectRange(this.scrollbar.scrollbar));\n  }", "CodeBleu_score": 40.046878259670216}, {"code": "scrollDown(step){\n\t  if (!this.activeScrollbar) {\n    this.emitSelectRange('hours')\n    return\n  }\n\n  const hours = this.hours\n  const minutes = this.minutes\n\n  if (this.activeScrollbar === 'hours') {\n    let i = 0\n    while (i < hours.length) {\n      const hour = hours[i]\n      if (this.isAvailable(hour)) {\n        this.value[0] = hour\n        break\n      }\n      i++\n    }\n  } else {\n    const hour = this.value[0]\n    const minute = this.value[1]\n    const index = minutes.indexOf(minute)\n    const newIndex = index + step\n    const newMinute = minutes[newIndex]\n    if (newMinute !== undefined) {\n      this.value[1] = newMinute\n    }\n  }\n\n  this.modifyDateField()\n  this.adjustSpinner()\n  this.$nextTick(() => {\n    this.emitSelectRange(this.activeScrollbar)\n  })\n}", "CodeBleu_score": 33.530751440443}]}
{"instance_id": "9b22163fdfde", "generation_result": [{"code": "imgStyle(){\n\t    const { scale, rotation, offsetX, offsetY, mode, enableTransition } = this.state;\n\n    const style = {\n        transform: `scale(${scale}) rotate(${rotation}deg)`,\n        position: 'absolute',\n        left: `${offsetX}px`,\n        top: `${offsetY}px`,\n    };\n\n    if (mode === 'CONTAIN') {\n        style.maxWidth = '100%';\n        style.maxHeight = '100%';\n    }\n\n    if (enableTransition) {\n        style.transition = 'transform 0.3s ease-out';\n    }\n\n    return style;\n}", "CodeBleu_score": 56.99613356187301}, {"code": "imgStyle(){\n\t    let style = {\n        transform: `scale(${this.scale}) rotate(${this.rotate}deg)`,\n        transition: this.enableTransition ? 'all 0.5s ease' : 'none',\n        position: 'absolute',\n        left: this.offsetX + 'px',\n        top: this.offsetY + 'px',\n    };\n\n    if (this.mode === 'CONTAIN') {\n        style.maxWidth = '100%';\n        style.maxHeight = '100%';\n    }\n\n    return style;\n}", "CodeBleu_score": 41.99826798357309}, {"code": "imgStyle(){\n\t    const { scale, rotation, offsetX, offsetY, enableTransition, mode } = this.state;\n    const style = {\n      transform: `scale(${scale}) rotate(${rotation}deg)`,\n      left: `${offsetX}px`,\n      top: `${offsetY}px`,\n    };\n\n    if (enableTransition) {\n      style.transition = 'transform 0.3s ease-out';\n    }\n\n    if (mode === 'CONTAIN') {\n      style.maxWidth = '100%';\n      style.maxHeight = '100%';\n    }\n\n    return style;\n  }", "CodeBleu_score": 56.56161471430911}]}
{"instance_id": "3bf2230ab870", "generation_result": [{"code": "addLazyLoadListener(){\n\t  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const { scrollContainer } = this.props;\n  let container = scrollContainer;\n\n  if (!container) {\n    container = getScrollContainer(this.element);\n  } else if (isHtmlElement(container)) {\n    container = container;\n  } else if (isString(container)) {\n    container = document.querySelector(container);\n  } else {\n    container = getScrollContainer(this.element);\n  }\n\n  const lazyLoadHandler = throttle(this.handleLazyLoad, 200);\n  container.addEventListener('scroll', lazyLoadHandler);\n  lazyLoadHandler();\n}", "CodeBleu_score": 47.21532159232115}, {"code": "addLazyLoadListener(){\n\t  if (this.isServer) return;\n  const scrollContainer = this.getScrollContainer(this.scrollContainer);\n  const lazyLoadHandler = this.throttle(this.handleLazyLoad.bind(this), this.throttleMs);\n  scrollContainer.addEventListener('scroll', lazyLoadHandler);\n  lazyLoadHandler();\n}", "CodeBleu_score": 20.314190192926183}, {"code": "addLazyLoadListener(){\n\t  if (isHtmlElement(this.scrollContainer)) {\n    const container = this.scrollContainer;\n    const throttledHandler = throttle(this.handleLazyLoad, 50);\n    container.addEventListener('scroll', throttledHandler);\n    this.handleLazyLoad();\n  } else if (isString(this.scrollContainer)) {\n    const container = document.querySelector(this.scrollContainer);\n    if (container) {\n      const throttledHandler = throttle(this.handleLazyLoad, 50);\n      container.addEventListener('scroll', throttledHandler);\n      this.handleLazyLoad();\n    }\n  } else {\n    const container = getScrollContainer(this.$el);\n    if (container) {\n      const throttledHandler = throttle(this.handleLazyLoad, 50);\n      container.addEventListener('scroll', throttledHandler);\n      this.handleLazyLoad();\n    }\n  }\n}", "CodeBleu_score": 32.35297502146505}]}
{"instance_id": "7180fba29076", "generation_result": [{"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\t  if (result.error instanceof TRPCClientError) {\n    return {\n      ...result,\n      error: new TRPCClientError(\n        result.error.message,\n        result.error.data,\n        result.error.shape,\n      ),\n    }\n  }\n  return result\n}", "CodeBleu_score": 26.224193326796957}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\t  if (result.error instanceof TRPCClientError) {\n    return {\n      ...result,\n      error: new TRPCClientError(\n        result.error.message,\n        result.error.data,\n        result.error.shape,\n      ),\n    } as TState\n  }\n  return result as TState\n}", "CodeBleu_score": 26.884622578769147}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\t  const error = result.error as unknown;\n  if (error instanceof TRPCClientError) {\n    return {\n      ...result,\n      error: new TRPCClientError(\n        error.message,\n        error.data,\n        error.shape,\n      ),\n    } as TState;\n  }\n  return result;\n}", "CodeBleu_score": 35.52803889309782}]}
{"instance_id": "b0ff12e8aa0d", "generation_result": [{"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t  // 1. We use ctx.AppTree to determine whether we're in an app or page\n  const isApp = appOrPageCtx.AppTree;\n  // 2. We next call the appropriate getInitialProps for the wrapped component\n  const appOrPageProps = await NextApp.getInitialProps(appOrPageCtx);\n  // 3. We provide this data to the `render()` method of the wrapped component\n  return { ...appOrPageProps, isApp };\n}", "CodeBleu_score": 12.321577033088705}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t    const appOrPageProps = await appOrPageCtx.Component.getInitialProps?.(appOrPageCtx);\n\n    const trpcProps = await ssr.fetchQuery(appOrPageCtx.apolloClient, appOrPageCtx.ctx);\n\n    return { ...appOrPageProps, ...trpcProps };\n}", "CodeBleu_score": 19.82631031175205}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t  const appProps = await App.getInitialProps(appOrPageCtx);\n  return {\n    ...appProps,\n    pageProps: {\n      ...appProps.pageProps,\n      trpcState: appOrPageCtx.ctx.trpcState,\n    },\n  };\n}", "CodeBleu_score": 12.639844748950127}]}
{"instance_id": "b46c87572278", "generation_result": [{"code": "export function formDataToObject(formData: FormData){\n\t  const result: Record<string, any> = {};\n\n  for (const [key, value] of formData.entries()) {\n    const parts = key.split(/[\\.\\[\\]]/).filter(Boolean);\n    const lastIndex = parts.length - 1;\n    let current = result;\n\n    parts.forEach((part, index) => {\n      if (index === lastIndex) {\n        current[part] = value;\n      } else {\n        current[part] = current[part] || {};\n        current = current[part];\n      }\n    });\n  }\n\n  return result;\n}", "CodeBleu_score": 66.2989054389581}, {"code": "export function formDataToObject(formData: FormData){\n\t  const obj: Record<string, any> = {};\n  for (const [key, value] of formData.entries()) {\n    const parts = key.split(/[\\.\\[\\]]/).filter((part) => part !== '');\n    let currentObj = obj;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const part = parts[i];\n      if (!currentObj[part]) {\n        currentObj[part] = {};\n      }\n      currentObj = currentObj[part];\n    }\n    currentObj[parts[parts.length - 1]] = value;\n  }\n  return obj;\n}", "CodeBleu_score": 61.320510709218865}, {"code": "export function formDataToObject(formData: FormData){\n\t  const result: Record<string, any> = {};\n\n  for (const [key, value] of formData.entries()) {\n    const parts = key.split(/[\\.\\[\\]]/).filter(Boolean);\n    let current = result;\n\n    for (let i = 0; i < parts.length - 1; i++) {\n      const part = parts[i];\n      if (!current[part]) {\n        current[part] = {};\n      }\n      current = current[part];\n    }\n\n    current[parts[parts.length - 1]] = value;\n  }\n\n  return result;\n}", "CodeBleu_score": 66.79302729831119}]}
{"instance_id": "b63467546c58", "generation_result": [{"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t  const cacheTag = req.json.cacheTag;\n  if (typeof cacheTag !== 'string') {\n    return new Response(\n      JSON.stringify({\n        message: 'Invalid cache tag',\n      }),\n      {\n        status: 400,\n      }\n    );\n  }\n  await revalidateTag(cacheTag);\n  return new Response(\n    JSON.stringify({\n      message: 'Revalidated tag',\n      timestamp: Date.now(),\n    }),\n    {\n      status: 200,\n    }\n  );\n}", "CodeBleu_score": 50.13160968518806}, {"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t  const cacheTag = req.json?.cacheTag;\n  if (typeof cacheTag !== 'string') {\n    return new Response(\n      JSON.stringify({\n        message: 'Invalid cache tag',\n        cacheTag,\n        timestamp: Date.now(),\n      }),\n      {\n        status: 400,\n      }\n    );\n  }\n  await revalidateTag(cacheTag);\n  return new Response(\n    JSON.stringify({\n      message: 'Revalidation successful',\n      cacheTag,\n      timestamp: Date.now(),\n    }),\n    {\n      status: 200,\n    }\n  );\n}", "CodeBleu_score": 47.39145979420522}, {"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t  const { cacheTag } = await req.json();\n  if (typeof cacheTag !== 'string') {\n    return new Response(\n      `{\"error\": \"cacheTag must be a string, but received ${typeof cacheTag}\"}`,\n      {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n  }\n\n  await revalidateTag(cacheTag);\n\n  return new Response(\n    JSON.stringify({\n      message: `Revalidated tag ${cacheTag}`,\n      timestamp: Date.now(),\n    }),\n    {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n}", "CodeBleu_score": 64.99624584409386}]}
{"instance_id": "4cc5d9754d1f", "generation_result": [{"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t  return (\n    client: TRPCClient<TRouter>,\n    opts: {\n      path: string[]\n    } = { path: [] }\n  ) => {\n    return createRecursiveProxy<TRouter>(opts.path, client)\n  }\n}", "CodeBleu_score": 25.493812471444212}, {"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t  return function useProxy<TPath extends TRouter['_def']['_routes']>(\n    opts: {\n      path: TPath\n      args: any\n      client: TRPCClient<TRouter>\n    }\n  ) {\n    return createRecursiveProxy({\n      path: opts.path,\n      client: opts.client,\n      args: opts.args,\n    })\n  }\n}", "CodeBleu_score": 35.642929766469635}, {"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t  return <TInput extends inferProcedureInput<TRouter>>(\n    client: TRPCClient<TRouter>,\n    opts: CreateUseProxyOptions<TRouter>\n  ) => {\n    const path = opts.path.join('/');\n\n    return createRecursiveProxy<TRouter>((procedure, input) => {\n      return client.query(`${path}.${procedure}`, input as any);\n    });\n  };\n}", "CodeBleu_score": 56.14012668963261}]}
{"instance_id": "ec07b15792dd", "generation_result": [{"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t  const [isOpen, setIsOpen] = useState(false);\n  const { button, panel } = styles;\n\n  return (\n    <AccordionPrimitive.Root\n      type=\"single\"\n      collapsible\n      value={isOpen ? name : \"\"}\n      onValueChange={(value) => setIsOpen(value === name)}\n    >\n      <AccordionPrimitive.Button\n        css={button}\n        aria-label={`toggle ${name}`}\n        aria-controls={`${name}-panel`}\n      >\n        {name}\n        <ChevronIcon\n          css={{\n            transition: \"transform 300ms cubic-bezier(0.87, 0, 0.13, 1)\",\n            \"[data-state=open] &\": { transform: \"rotate(180deg)\" },\n          }}\n        />\n      </AccordionPrimitive.Button>\n      <AccordionPrimitive.Content\n        css={panel}\n        aria-hidden={isOpen}\n        id={`${name}-panel`}\n      >\n        {child}\n      </AccordionPrimitive.Content>\n    </AccordionPrimitive.Root>\n  );\n}", "CodeBleu_score": 39.68641470494968}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <AccordionPrimitive.Root\n      type=\"single\"\n      defaultValue=\"item-1\"\n      collapsible\n      value={isOpen ? \"item-1\" : \"\"}\n      onValueChange={(value) => setIsOpen(value === \"item-1\")}\n    >\n      <AccordionPrimitive.Item value=\"item-1\">\n        <AccordionPrimitive.Header>\n          <AccordionPrimitive.Trigger>\n            <div className=\"flex w-full items-center justify-between\">\n              <h3 className=\"text-xl font-bold\">{name}</h3>\n              <ChevronDownIcon\n                className={`h-5 w-5 text-slate-500 transition-transform ${\n                  isOpen ? \"rotate-180\" : \"\"\n                }`}\n              />\n            </div>\n          </AccordionPrimitive.Trigger>\n        </AccordionPrimitive.Header>\n        <AccordionPrimitive.Content>\n          <div className=\"data-[state=open]:animate-slideDown data-[state=closed]:animate-slideUp rounded-b-md border-x border-b border-slate-400 bg-white p-6\">\n            {child}\n          </div>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n}", "CodeBleu_score": 28.280570241451652}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t  return (\n    <AccordionPrimitive.Root\n      type=\"single\"\n      defaultValue=\"item-1\"\n      collapsible\n    >\n      <AccordionPrimitive.Item value=\"item-1\">\n        <AccordionPrimitive.Header>\n          <AccordionPrimitive.Trigger>\n            <span className=\"text-lg font-medium\">{name}</span>\n            <ChevronDownIcon className=\"h-5 w-5 text-gray-500\" />\n          </AccordionPrimitive.Trigger>\n        </AccordionPrimitive.Header>\n        <AccordionPrimitive.Content>\n          <div className=\"pt-2\">{child}</div>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n}", "CodeBleu_score": 39.525477138652384}]}
{"instance_id": "728fa96ca3cf", "generation_result": [{"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t  return (\n    <MenuPrimitive>\n      <MenuButton buttonPosition={buttonPosition}>\n        {icon}\n        {name}\n        {chevron}\n      </MenuButton>\n      <MenuItems>\n        {items.map((item, index) => (\n          <MenuItem key={index}>{item}</MenuItem>\n        ))}\n      </MenuItems>\n    </MenuPrimitive>\n  );\n}", "CodeBleu_score": 31.62491739654506}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t  const [isOpen, setIsOpen] = useState(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (\n      buttonRef.current &&\n      !buttonRef.current.contains(event.target as Node)\n    ) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <MenuPrimitive.Root>\n      <MenuPrimitive.Trigger asChild>\n        <button\n          ref={buttonRef}\n          className=\"flex items-center gap-2 px-2 py-1 text-sm text-gray-700 rounded-md hover:bg-gray-100\"\n          onClick={handleClick}\n        >\n          {icon && <Icon icon={icon} />}\n          {name && <span>{name}</span>}\n          {chevron && (\n            <Icon\n              icon={isOpen ? \"chevronDown\" : \"chevronRight\"}\n              className=\"text-gray-500\"\n            />\n          )}\n        </button>\n      </MenuPrimitive.Trigger>\n      <MenuPrimitive.Content\n        className={`absolute z-10 w-48 py-1 bg-white rounded-md shadow-lg ${\n          buttonPosition === \"top\"\n            ? \"bottom-full left-0 origin-top-left\"\n            : \"top-full left-0 origin-bottom-left\"\n        }`}\n        sideOffset={8}\n        hidden={isOpen}\n      >\n        <MenuPrimitive.Group className=\"px-1 py-1\">\n          {items.map((item, index) => (\n            <MenuPrimitive.Item\n              key={index}\n              asChild\n              onSelect={item.", "CodeBleu_score": 24.69290421863458}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [menuRef]);\n\n  return (\n    <MenuPrimitive.Root>\n      <MenuPrimitive.Trigger asChild>\n        <button\n          className={`flex items-center gap-2 p-2 rounded-md bg-gray-100 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 focus:ring-offset-gray-100`}\n          onClick={() => setIsOpen(!isOpen)}\n        >\n          {icon && icon}\n          {name && <span className=\"text-sm font-medium text-gray-700\">{name}</span>}\n          {chevron && (\n            <svg\n              className=\"w-4 h-4 text-gray-700\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M19 9l-7 7-7-7\"\n              />\n            </svg>\n          )}\n        </button>\n      </MenuPrimitive.Trigger>\n      <MenuPrimitive.Content\n        ref={menuRef}\n        className={`absolute z-10 w-48 py-1 mt-2 bg-white rounded-md shadow-lg", "CodeBleu_score": 24.853769279176436}]}
{"instance_id": "a2733fb19224", "generation_result": [{"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const hasUserScrolled = scrollTop + clientHeight >= scrollHeight - threshold;\n    setHasUserScrolled(hasUserScrolled);\n  }", "CodeBleu_score": 61.63567309237209}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const hasUserScrolled = scrollTop + clientHeight >= scrollHeight - threshold;\n    setHasUserScrolled(hasUserScrolled);\n}", "CodeBleu_score": 61.891530220933674}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const hasUserScrolled = scrollTop + clientHeight >= scrollHeight - threshold;\n    setHasUserScrolled(hasUserScrolled);\n  }", "CodeBleu_score": 61.63567309237209}]}
{"instance_id": "128baf9be3e8", "generation_result": [{"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t  if (scrollRef && scrollRef.current) {\n    scrollRef.current.scrollTo({\n      top: scrollRef.current.scrollHeight,\n      behavior: behaviour,\n    });\n  }\n}", "CodeBleu_score": 64.22184523391238}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t  if (scrollRef.current) {\n    scrollRef.current.scrollTo({\n      top: scrollRef.current.scrollHeight,\n      behavior,\n    });\n  }\n}", "CodeBleu_score": 49.9609466303718}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t  if (scrollRef.current) {\n    scrollRef.current.scrollTo({\n      top: scrollRef.current.scrollHeight,\n      behavior: behaviour,\n    });\n  }\n}", "CodeBleu_score": 63.90424776881412}]}
{"instance_id": "070c4b1ac0b5", "generation_result": [{"code": "const saveElementAsImage = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n  if (!element) {\n    alert(\"Element not found\");\n    return;\n  }\n\n  const style = {\n    backgroundColor: \"white\",\n    padding: \"10px\",\n    borderRadius: \"5px\",\n    boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n  };\n\n  htmlToImage\n    .toJpeg(element, { style })\n    .then((dataUrl) => {\n      const link = document.createElement(\"a\");\n      link.download = \"agent-gpt-output.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((error) => {\n      alert(\"Failed to save image\");\n      console.error(\"Failed to save image:\", error);\n    });\n}", "CodeBleu_score": 59.68824349124847}, {"code": "const saveElementAsImage = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n  if (!element) {\n    alert(\"Element not found\");\n    return;\n  }\n\n  htmlToImage\n    .toJpeg(element, {\n      quality: 1,\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        margin: \"20px\",\n        borderRadius: \"5px\",\n        boxShadow: \"0 0 10px rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"#fff\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSize: \"16px\",\n        lineHeight: \"1.5\",\n        color: \"#333\",\n      },\n    })\n    .then((dataUrl) => {\n      const link = document.createElement(\"a\");\n      link.download = \"agent-gpt-output.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((error) => {\n      alert(\"Error saving image: \" + error);\n    });\n}", "CodeBleu_score": 57.445735015546376}, {"code": "const saveElementAsImage = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n\n  if (!element) {\n    alert(\"Element not found. Please try again.\");\n    return;\n  }\n\n  htmlToImage\n    .toJpeg(element, {\n      quality: 1,\n      style: {\n        border: \"1px solid #ccc\",\n        \"border-radius\": \"5px\",\n        padding: \"10px\",\n        margin: \"10px\",\n        width: \"500px\",\n        height: \"500px\",\n        \"box-shadow\": \"0 0 10px rgba(0, 0, 0, 0.3)\",\n        \"background-color\": \"#fff\",\n      },\n    })\n    .then((dataUrl) => {\n      const link = document.createElement(\"a\");\n      link.download = \"agent-gpt-output.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((error) => {\n      alert(\"Error: Saving the image failed.\");\n      console.error(\"Error:\", error);\n    });\n}", "CodeBleu_score": 58.2027231427312}]}
{"instance_id": "346ea48343da", "generation_result": [{"code": "const copyElementText = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n\n  if (!element) {\n    console.error(`Element with ID \"${elementId}\" not found.`);\n    return;\n  }\n\n  const text = element.innerText;\n\n  if (!navigator.clipboard) {\n    // Clipboard API not available, fallback to manual copy\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textArea);\n  } else {\n    navigator.clipboard.writeText(text);\n  }\n}", "CodeBleu_score": 62.55619980969139}, {"code": "const copyElementText = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n  if (!element) {\n    console.error(`Element with ID '${elementId}' not found.`);\n    return;\n  }\n\n  const text = element.innerText;\n\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        console.log(`Text copied to clipboard: ${text}`);\n      },\n      (err) => {\n        console.error(`Failed to copy text to clipboard: ${err}`);\n      }\n    );\n  } else {\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.position = \"fixed\";\n    textArea.style.left = \"-9999px\";\n    textArea.style.top = \"-9999px\";\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textArea);\n  }\n}", "CodeBleu_score": 66.43357668112209}, {"code": "const copyElementText = (elementId: string) =>{\n\t    const element = document.getElementById(elementId)\n    if (!element) {\n        console.error(`Element with ID '${elementId}' not found.`)\n        return\n    }\n\n    const text = element.innerText\n\n    if (navigator.clipboard) {\n        navigator.clipboard.writeText(text)\n            .then(() => {\n                console.log('Text copied to clipboard.')\n            })\n            .catch((error) => {\n                console.error('Error copying text:', error)\n            })\n    } else {\n        // Fallback for unsupported browsers\n        const textArea = document.createElement('textarea')\n        textArea.value = text\n        document.body.appendChild(textArea)\n        textArea.select()\n        document.execCommand('copy')\n        document.body.removeChild(textArea)\n    }\n}", "CodeBleu_score": 59.61457722449563}]}
{"instance_id": "25f193a0eddf", "generation_result": [{"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t  const language = className ? className.replace(/language-/, '') : 'javascript';\n  return !inline ? (\n    <Highlight {...defaultProps} code={children} language={language}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={style}>\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  ) : (\n    <code className={className}>{children}</code>\n  );\n}", "CodeBleu_score": 24.307987326947604}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t  const match = /language-(\\w+)/.exec(className || '');\n  const language = match?.[1];\n\n  if (inline) {\n    return <code className={className}>{children}</code>;\n  }\n\n  const highlightedCode = language\n    ? highlight(children, languages[language], language)\n    : children;\n\n  return (\n    <pre className={className}>\n      <code\n        className={`language-${language}`}\n        dangerouslySetInnerHTML={{ __html: highlightedCode }}\n      />\n    </pre>\n  );\n}", "CodeBleu_score": 41.55722265063465}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t  const language = className && className.replace(/language-/, '');\n  const highlight = (code: string) => {\n    if (language) {\n      try {\n        return hljs.highlight(code, { language }).value;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    return code;\n  };\n\n  if (inline) {\n    return <code className={className}>{children}</code>;\n  }\n\n  return (\n    <pre className={className}>\n      <code\n        className={className}\n        dangerouslySetInnerHTML={{\n          __html: highlight(children as string),\n        }}\n      />\n    </pre>\n  );\n}", "CodeBleu_score": 40.060849630728924}]}
{"instance_id": "7ba7dfdc0ab6", "generation_result": [{"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\t  if (typeof node === 'string') {\n    return node;\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  }\n\n  if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n\n  return '';\n}", "CodeBleu_score": 86.72556646128649}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\t  if (typeof node === 'string') {\n    return node;\n  } else if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  } else if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  } else {\n    return '';\n  }\n}", "CodeBleu_score": 77.61988642988327}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\t  if (typeof node === \"string\") {\n    return node;\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join(\"\");\n  }\n\n  if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n\n  return \"\";\n}", "CodeBleu_score": 94.82004662749023}]}
{"instance_id": "a67cb8d31dde", "generation_result": [{"code": "const Summarize = () =>{\n\t  const [summary, setSummary] = useState(false);\n\n  if (\n    agent?.available &&\n    agent?.lifecycle === \"stopped\" &&\n    agent?.tasks.filter((task) => task.result).length > 0 &&\n    !summary\n  ) {\n    return (\n      <div>\n        <p>\n          Please summarize the conversation so far. This will help us\n          understand the conversation better.\n        </p>\n        <button\n          onClick={() => {\n            setSummary(true);\n            agent?.summarize();\n          }}\n        >\n          Summarize\n        </button>\n      </div>\n    );\n  }\n  return null;\n}", "CodeBleu_score": 31.142521724034694}, {"code": "const Summarize = () =>{\n\t  const { agent } = useContext(AgentContext);\n  const { lifecycle } = useContext(LifecycleContext);\n  const { tasks } = useContext(TasksContext);\n  const [summary, setSummary] = useState(false);\n\n  if (\n    agent &&\n    lifecycle === \"stopped\" &&\n    tasks.filter((task) => task.result).length > 0 &&\n    !summary\n  ) {\n    return (\n      <div>\n        <p>Would you like to summarize the conversation?</p>\n        <button\n          onClick={() => {\n            setSummary(true);\n            agent.summarize();\n          }}\n        >\n          Summarize\n        </button>\n      </div>\n    );\n  }\n\n  return null;\n}", "CodeBleu_score": 20.026983519707994}, {"code": "const Summarize = () =>{\n\t  const { agent, lifecycle, tasks, summary } = useContext(AppContext);\n\n  const canSummarize =\n    agent?.available && lifecycle === \"stopped\" && tasks.length > 0;\n\n  const hasResults = tasks.some((task) => task.status === \"completed\");\n\n  const handleSummarize = () => {\n    setSummary(true);\n    agent?.summarize();\n  };\n\n  return (\n    <div>\n      {canSummarize && hasResults && !summary && (\n        <div>\n          <div>Summarize the conversation</div>\n          <button onClick={handleSummarize}>Summarize</button>\n        </div>\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 29.989981881141116}]}
{"instance_id": "983031b20224", "generation_result": [{"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t  return (\n    <ClerkProvider\n      appearance={{\n        elements: {\n          card: \"shadow-sm border dark:border-slate-700\",\n          footer: \"bg-white dark:bg-slate-800\",\n          headerTitle: \"text-3xl font-bold\",\n          headerSubtitle: \"text-sm text-slate-500\",\n          footerActionSecondary: \"text-slate-400\",\n          footerHeading: \"text-slate-900 dark:text-slate-200\",\n          footerParagraph: \"text-slate-400\",\n          formButtonPrimary:\n            \"bg-primary-500 hover:bg-primary-400 active:bg-primary-600 focus-visible:ring-primary-500\",\n          formInput:\n            \"bg-transparent border-slate-300 placeholder:text-slate-400 focus:ring-primary-500 focus:border-primary-500 dark:border-slate-400 dark:text-slate-50 dark:focus:border-primary-500\",\n          formLabel: \"text-slate-500 dark:text-slate-400\",\n          formSelect:\n            \"appearance-none bg-transparent border-slate-300 placeholder:text-slate-400 focus:ring-primary-500 focus:border-primary-500 dark:border-slate-400\",\n          formFieldError: \"text-red-500\",\n          loader: \"text-primary-500\",\n          button: \"text-white bg-primary-500 hover:bg-primary-400 active:bg-primary-600 focus-visible:ring-primary-500\",\n          buttonPrimary:\n            \"text-white bg-primary-500 hover:bg-primary-400 active:bg-primary-600 focus-visible:ring-primary-500\",\n          buttonSecondary:\n            \"text-slate-900 bg-slate", "CodeBleu_score": 16.049643756821443}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t  return (\n    <ClerkProvider\n      appearance={{\n        elements: {\n          card: \"shadow-sm\",\n          footer: \"bg-transparent\",\n          headerTitle: \"font-medium\",\n          label: \"block text-sm text-gray-500\",\n          input:\n            \"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-300 rounded-md dark:placeholder-gray-600 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\",\n          inputContainer: \"mb-4\",\n          button:\n            \"block w-full px-4 py-2 mt-4 text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300\",\n          buttonPrimary:\n            \"block w-full px-4 py-2 mt-4 text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300\",\n          loaderContainer: \"flex justify-center mt-4\",\n          checkboxInput: \"mt-1 mr-2\",\n          checkboxLabel: \"text-gray-700 dark:text-gray-300\",\n          divider: \"my-4 border-t border-gray-300 dark:border-gray-700\",\n          formFieldError: \"text-red-500 dark:text-red-500\",\n          formFieldSuccess: \"text-green-500 dark:text-green-500\",\n          footerActionLink: \"text-blue-600 dark:text-blue-400 hover:underline\",\n          footerActionLinkPrimary:\n            \"text-blue-600 dark:text-blue-4", "CodeBleu_score": 16.291989290595073}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <ClerkProvider\n      appearance={{\n        baseTheme: dark,\n        variables: {\n          colorPrimary: \"#000000\",\n        },\n        elements: {\n          card: {\n            borderRadius: \"0.5rem\",\n            boxShadow: \"none\",\n            padding: \"2rem\",\n          },\n          footer: {\n            background: \"transparent\",\n          },\n          headerTitle: {\n            fontSize: \"1.5rem\",\n            fontWeight: \"bold\",\n          },\n          headerSubtitle: {\n            fontSize: \"1rem\",\n            fontWeight: \"normal\",\n          },\n          formFieldInput: {\n            borderRadius: \"0.5rem\",\n            boxShadow: \"none\",\n          },\n          formFieldLabel: {\n            fontSize: \"1rem\",\n            fontWeight: \"bold\",\n          },\n          formButtonPrimary: {\n            background: \"#000000\",\n            borderRadius: \"0.5rem\",\n            boxShadow: \"none\",\n            fontSize: \"1rem\",\n            fontWeight: \"bold\",\n          },\n        },\n      }}\n    >\n      <TRPCReactProvider>{children}</TRPCReactProvider>\n    </ClerkProvider>\n  );\n}", "CodeBleu_score": 43.73043898911989}]}
{"instance_id": "0ba912ee94c7", "generation_result": [{"code": "export function ActiveButton({ href, label, icon }: Props){\n\t  const pathname = usePathname()\n  const isActive = pathname === href\n  const activeClass = isActive ? 'bg-primary text-white' : 'hover:bg-primary hover:text-white'\n\n  return (\n    <button className={`${activeClass} flex w-full items-center gap-2 rounded-md p-2 text-sm font-medium text-primary transition-colors`}>\n      <Link href={href} className='flex items-center gap-2'>\n        <span className='text-xl'>{icon}</span>\n        <span className='truncate'>{label}</span>\n      </Link>\n    </button>\n  )\n}", "CodeBleu_score": 43.97053437108169}, {"code": "export function ActiveButton({ href, label, icon }: Props){\n\t  const pathname = usePathname()\n\n  return (\n    <Button\n      variant=\"ghost\"\n      className={clsx(\n        pathname === href && 'bg-slate-200 dark:bg-slate-800',\n        'w-full justify-start'\n      )}\n    >\n      <Link href={href} className=\"block p-2\">\n        <div className=\"flex items-center gap-x-3\">\n          {icon}\n          <div className=\"flex-1 text-left truncate\">{label}</div>\n        </div>\n      </Link>\n    </Button>\n  )\n}", "CodeBleu_score": 60.77252666334053}, {"code": "export function ActiveButton({ href, label, icon }: Props){\n\t  const pathname = usePathname();\n  const isActive = pathname === href;\n\n  return (\n    <Button\n      as={Link}\n      variant=\"ghost\"\n      className={isActive ? \"active\" : undefined}\n      href={href}\n    >\n      <Icon as={icon} />\n      <span className=\"truncate\">{label}</span>\n    </Button>\n  );\n}", "CodeBleu_score": 52.90551368512323}]}
{"instance_id": "1fd5b7fdcc9b", "generation_result": [{"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={`${inter.className} bg-background font-sans`}>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"dark\">\n          {children}\n          <Toaster />\n          <Analytics />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 50.67525572219221}, {"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={`${inter.className} ${robotoMono.variable} ${robotoMono.className}`}>\n        <ThemeProvider attribute=\"class\">\n          {children}\n          <Analytics />\n          <Toaster />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 47.72725355746379}, {"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={`${inter.className} bg-white dark:bg-zinc-900`}>\n        <ThemeProvider attribute=\"class\">\n          {children}\n          <Toaster />\n          <Analytics />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 49.801206609778816}]}
{"instance_id": "390ef9405b57", "generation_result": [{"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t  return (\n    <a\n      className={twMerge(\n        \"inline-block rounded-lg text-sm font-semibold leading-6 text-slate-900 transition-colors hover:text-slate-900/75\",\n        intent === \"primary\" &&\n          \"bg-sky-500 text-white hover:bg-sky-500/90 active:bg-sky-500/70\",\n        intent === \"secondary\" &&\n          \"bg-slate-100 text-slate-900 shadow hover:bg-slate-100/90 active:bg-slate-100/70\",\n        size === \"small\" && \"px-3 py-1 text-xs\",\n        size === \"medium\" && \"px-4 py-2\",\n        size === \"large\" && \"px-5 py-2\",\n        underline === \"always\" && \"underline\",\n        underline === \"hover\" && \"hover:underline\",\n        className\n      )}\n      {...props}\n    />\n  );\n}", "CodeBleu_score": 14.239720146807947}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t  return (\n    <a\n      className={twMerge(\n        \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n        intent === \"primary\" &&\n          \"bg-primary-600 text-white hover:bg-primary-500\",\n        intent === \"secondary\" &&\n          \"bg-secondary-600 text-white hover:bg-secondary-500\",\n        intent === \"tertiary\" &&\n          \"bg-tertiary-600 text-white hover:bg-tertiary-500\",\n        intent === \"outline\" &&\n          \"bg-transparent border border-secondary-600 text-secondary-600 hover:bg-secondary-500 hover:text-white\",\n        intent === \"outline-secondary\" &&\n          \"bg-transparent border border-secondary-600 text-secondary-600 hover:bg-secondary-500 hover:text-white\",\n        intent === \"outline-tertiary\" &&\n          \"bg-transparent border border-tertiary-600 text-tertiary-600 hover:bg-tertiary-500 hover:text-white\",\n        size === \"sm\" && \"h-9 rounded-md px-3\",\n        size === \"md\" && \"h-10 rounded-md px-4\",\n        size === \"lg\" && \"h-11 rounded-md px-5\",\n        size === \"xl\" && \"h-14 rounded-md px-6\",\n        underline && \"underline\",\n        className\n      )}\n      {...props}\n    />\n  );\n}", "CodeBleu_score": 12.704063319329894}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t  return (\n    <a\n      className={twMerge(\n        \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=open]:bg-primary data-[state=open]:text-primary-foreground\",\n        className\n      )}\n      {...props}\n    />\n  );\n}", "CodeBleu_score": 15.512083522923684}]}
{"instance_id": "aa655671cb7e", "generation_result": [{"code": "export function middleware(request: NextRequest){\n\t  if (request.headers?.get(\"host\")?.includes(\"next-enterprise.vercel.app\")) {\n    return NextResponse.redirect(\n      \"https://blazity.com/open-source/nextjs-enterprise-boilerplate\",\n      301\n    );\n  }\n}", "CodeBleu_score": 47.000675105794066}, {"code": "export function middleware(request: NextRequest){\n\t  if (request.headers.get(\"host\")?.includes(\"next-enterprise.vercel.app\")) {\n    return NextResponse.redirect(\n      \"https://blazity.com/open-source/nextjs-enterprise-boilerplate\",\n      301\n    );\n  }\n}", "CodeBleu_score": 34.19466239539722}, {"code": "export function middleware(request: NextRequest){\n\t  if (request.headers?.get(\"host\")?.includes(\"next-enterprise.vercel.app\")) {\n    return NextResponse.redirect(\n      \"https://blazity.com/open-source/nextjs-enterprise-boilerplate\",\n      301\n    );\n  }\n}", "CodeBleu_score": 47.000675105794066}]}
{"instance_id": "b33fa69187fb", "generation_result": [{"code": "app.lazyrouter = function lazyrouter(){\n\t  if (this._router) return;\n  var opts = this.enabled('query parser')\n    ? { caseSensitive: true, strict: false, _parseUrl: false }\n    : {};\n  this._router = Router(opts);\n  this._router.use(query(this.get('query parser fn')));\n  this._router.use(middleware.init(this));\n}", "CodeBleu_score": 39.78527902169187}, {"code": "app.lazyrouter = function lazyrouter(){\n\t  if (this._router) return;\n  var opts = this.enabled(\"query parser\") ? {\n    caseSensitive: this.enabled(\"case sensitive routing\"),\n    strict: this.enabled(\"strict routing\")\n  } : {};\n  this._router = Router(opts);\n  this._router.use(query(this.get(\"query parser\")));\n  this._router.use(middleware.init(this));\n}", "CodeBleu_score": 37.564060712931806}, {"code": "app.lazyrouter = function lazyrouter(){\n\t  if (this._router) return;\n  var router = this._router = express.Router({\n    caseSensitive: this.enabled('case sensitive routing'),\n    strict: this.enabled('strict routing')\n  });\n\n  router.use(query(express));\n  router.use(middleware.init(this));\n}", "CodeBleu_score": 41.98200028020719}]}
{"instance_id": "7aadf79801c0", "generation_result": [{"code": "function createApplication(){\n\t  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  });\n\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  });\n\n  app.init();\n  return app;\n}", "CodeBleu_score": 97.13541198207953}, {"code": "function createApplication(){\n\t  var app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app },\n  });\n\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app },\n  });\n\n  app.init();\n  return app;\n}", "CodeBleu_score": 87.97074591925251}, {"code": "function createApplication(){\n\t  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  });\n\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  });\n\n  app.init();\n  return app;\n}", "CodeBleu_score": 97.13541198207953}]}
{"instance_id": "2b4af4a14e81", "generation_result": [{"code": "res.sendFile = function sendFile(path, options, callback) {\n\t  var callback = callback || function (err) {\n    if (err) {\n      if (err.status !== 404) {\n        next(err);\n      } else {\n        res.originalUrl = req.url;\n        res.statusCode = 404;\n        next();\n      }\n    }\n  };\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // support express 3.x\n  if (callback && typeof callback !== 'function') {\n    throw new TypeError('callback function required');\n  }\n\n  // support express 4.x\n  if (options && typeof options === 'string') {\n    options = { root: options };\n  }\n\n  options = options || {};\n\n  var root = options.root || '';\n\n  // assign the root directory\n  if (root && !path.startsWith(root)) {\n    path = join(root, path);\n  }\n\n  // create a file stream\n  var stream = fs.createReadStream(path);\n\n  // handle stream errors\n  stream.on('error', function error(err) {\n    if (err.code === 'ENOENT') {\n      // file not found\n      err.status = 404;\n    }\n    callback(err);\n  });\n\n  // set content-type\n  if (!res.getHeader('Content-Type')) {\n    res.setHeader('Content-Type', mime.lookup(path));\n  }\n\n  // pipe the file stream to the response\n  stream.pipe(res);\n}", "CodeBleu_score": 45.31857162685456}, {"code": "res.sendFile = function sendFile(path, options, callback) {\n\t    // Validate the path argument\n    if (typeof path !== 'string') {\n      throw new TypeError('Argument \"path\" must be a string');\n    }\n  \n    // Validate the options argument\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n  \n    // Ensure the path is absolute or has a root directory\n    if (!path.startsWith('/') && !options.root) {\n      throw new Error('Argument \"path\" must be absolute or specify a root directory');\n    }\n  \n    // Create a file stream for the specified path\n    const fileStream = fs.createReadStream(path);\n  \n    // Set the appropriate response headers for the file\n    res.setHeader('Content-Type', mime.lookup(path));\n    res.setHeader('Content-Disposition', 'attachment; filename=' + path.split('/').pop());\n  \n    // Transfer the file and handle errors\n    fileStream.pipe(res);\n    fileStream.on('error', (err) => {\n      if (callback) {\n        callback(err);\n      } else {\n        next(err);\n      }\n    });\n  \n    // Return the file stream for chaining\n    return fileStream;\n  }", "CodeBleu_score": 37.897770852045916}, {"code": "res.sendFile = function sendFile(path, options, callback) {\n\t  var root = options.root;\n  var dotfiles = options.dotfiles;\n  var headers = options.headers;\n  var maxAge = options.maxAge;\n  var lastModified = options.lastModified;\n  var etag = options.etag;\n  var extensions = options.extensions;\n  var setHeaders = options.setHeaders;\n  var fallthrough = options.fallthrough;\n  var acceptRanges = options.acceptRanges;\n  var cacheControl = options.cacheControl;\n  var immutable = options.immutable;\n  var stat = options.stat;\n  var gzip = options.gzip;\n  var brotli = options.brotli;\n  var gzipOptions = options.gzipOptions;\n  var brotliOptions = options.brotliOptions;\n  var onError = options.onError;\n  var redirect = options.redirect;\n  var index = options.index;\n  var lastModified = options.lastModified;\n  var etag = options.etag;\n  var setHeaders = options.setHeaders;\n  var fallthrough = options.fallthrough;\n  var acceptRanges = options.acceptRanges;\n  var cacheControl = options.cacheControl;\n  var immutable = options.immutable;\n  var stat = options.stat;\n  var gzip = options.gzip;\n  var brotli = options.brotli;\n  var gzipOptions = options.gzipOptions;\n  var brotliOptions = options.brotliOptions;\n  var onError = options.onError;\n  var redirect = options.redirect;\n  var index = options.index;\n  var lastModified = options.lastModified;\n  var etag = options.etag;\n  var setHeaders = options.setHeaders;\n  var fallthrough = options.fallthrough;\n  var acceptRanges = options.acceptRanges;\n  var cacheControl = options.cacheControl;\n  var immutable = options.immutable;\n  var stat = options.stat;\n  var gzip = options.gzip;\n  var brotli = options.brotli;\n  var g", "CodeBleu_score": 16.717215915720168}]}
{"instance_id": "24ba2258749d", "generation_result": [{"code": "View.prototype.lookup = function lookup(name){\n\t  const roots = [].concat(this.root);\n  let debugs = this.debug;\n  let tried = [];\n\n  if (debugs) debugs('view.lookup \"%s\"', name);\n\n  for (let i = 0; i < roots.length; i++) {\n    let path = this.resolve(roots[i], name);\n    let dir = dirname(path);\n    let file = basename(path);\n    let res = resolve.resolve(dir, file, debugs);\n    if (res) return res;\n    tried.push(res.path);\n  }\n\n  // throw an error\n  let err = new Error(\n    'Failed to lookup view \"' + name + '\" in views ' + roots.join(\", \")\n  );\n  err.paths = tried;\n  throw err;\n}", "CodeBleu_score": 37.38695861290948}, {"code": "View.prototype.lookup = function lookup(name){\n\t  var roots = this.root.length ? this.root : [this.root];\n  var debug = this.debug;\n  var ext = this.ext;\n  var len = roots.length;\n  var i = 0;\n  var path;\n  var dir;\n  var file;\n\n  debug('lookup %s', name);\n\n  while (len--) {\n    path = roots[i++];\n    dir = path;\n    file = resolve(dir, name);\n\n    if (exists(file)) {\n      return file;\n    }\n\n    // store parsed `ext`\n    if (typeof ext === 'string') {\n      ext = resolve(path, ext);\n    }\n\n    // try it as a file\n    file = ext + name;\n    if (exists(file)) {\n      return file;\n    }\n\n    // try it as a directory\n    dir = join(dir, name);\n    if (exists(dir)) {\n      return this.resolve(dir);\n    }\n  }\n}", "CodeBleu_score": 32.60395752939898}, {"code": "View.prototype.lookup = function lookup(name){\n\t  var self = this;\n  var roots = self.root.map(function(root) {\n    return root.filename;\n  });\n  var dirs = self.dirs;\n  var debug = self.debug;\n  var cache = self.cache;\n  var res = '';\n\n  // use negative indexing to avoid unnecessary array\n  // reverse calls. This is faster than `array.unshift`.\n  var len = roots.length;\n  while (len--) {\n    var root = roots[len];\n    var loc = resolve(root, name);\n    if (debug) console.log('  lookup \"%s\" in \"%s\"', name, root);\n\n    // cache `package.json` files, since they're small and\n    // have a higher chance of being requested again.\n    // this is a micro-optimization.\n    if (cache[loc] != null) {\n      res = cache[loc];\n      if (debug) console.log('  cached \"%s\"', loc);\n      break;\n    }\n\n    // resolve the path\n    var path = self.resolve(loc);\n    if (debug) console.log('  resolved \"%s\"', path);\n\n    // ensure that the path exists\n    if (path != null && fs.existsSync(path)) {\n      res = path;\n      if (debug) console.log('  found \"%s\"', path);\n      break;\n    }\n  }\n\n  // cache the filepath\n  cache[name] = res;\n  return res;\n}", "CodeBleu_score": 28.035673154988455}]}
{"instance_id": "4a3a45242878", "generation_result": [{"code": "module.exports = function query(options){\n\t  var opts = options || {}\n  var parse = opts.parser || parseUrl.parseQueryString\n  var allowDots = opts.allowDots || false\n  var allowPrototypes = opts.allowPrototypes || false\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      req.query = ~req.url.indexOf(\"?\")\n        ? parse(req.url.split(\"?\")[1], allowDots, allowPrototypes)\n        : {}\n    }\n\n    next()\n  }\n}", "CodeBleu_score": 37.46122122850537}, {"code": "module.exports = function query(options){\n\t  var opts = options || {};\n  var queryparse = opts.parser || parseUrl.parseQueryString;\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      req.query = ~req.url.indexOf('?')\n        ? queryparse(req.url.split('?')[1])\n        : {};\n    }\n\n    next();\n  };\n}", "CodeBleu_score": 32.553377478722844}, {"code": "module.exports = function query(options){\n\t  var opts = options || {};\n  var queryparse = opts.parser || parseUrl.parseQueryString || parseUrl.parseQuery;\n\n  var queryparseRev = function (str) {\n    var obj = queryparse(str);\n    var keys = Object.keys(obj);\n    var n = keys.length;\n    var pair;\n    while (n--) {\n      pair = keys[n];\n      if (Array.isArray(obj[pair])) {\n        obj[pair] = obj[pair].reverse();\n      }\n    }\n    return obj;\n  };\n\n  var getQuery = opts.allowDots ? queryparse : queryparseRev;\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      req.query = getQuery(req.url);\n    }\n\n    next();\n  };\n}", "CodeBleu_score": 39.059726984964385}]}
{"instance_id": "786ae7051b03", "generation_result": [{"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basepath=\"activitypub\">\n        <DesignSystemApp designSystem={designSystem} className=\"activitypub\">\n          <MainContent />\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n}", "CodeBleu_score": 60.3432616689181}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t  const {\n    FrameworkProvider,\n    RoutingProvider,\n    ModalsProvider,\n    Modal,\n    DesignSystemApp,\n    DesignSystemProvider,\n  } = framework;\n\n  return (\n    <FrameworkProvider>\n      <RoutingProvider basePath=\"activitypub\">\n        <ModalsProvider modals={modals}>\n          <DesignSystemProvider designSystem={designSystem}>\n            <DesignSystemApp className=\"activitypub\">\n              <Modal />\n              <Routes />\n            </DesignSystemApp>\n          </DesignSystemProvider>\n        </ModalsProvider>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n}", "CodeBleu_score": 43.1267384011931}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basePath=\"activitypub\" modals={modals}>\n        <DesignSystemApp designSystem={designSystem} className=\"activitypub\">\n          <MainContent />\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n}", "CodeBleu_score": 67.40910413274837}]}
{"instance_id": "8100930f7ce7", "generation_result": [{"code": "const darkMode = () =>{\n\t  const el = document.getElementById('container');\n  const containerColor = getComputedStyle(el.parentElement).getPropertyValue('background-color');\n  const colorScheme = getComputedStyle(el).getPropertyValue('color-scheme');\n  if (colorScheme === 'light') {\n    return false;\n  } else if (colorScheme === 'dark') {\n    return true;\n  } else {\n    const rgb = containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(',');\n    const r = parseInt(rgb[0]);\n    const g = parseInt(rgb[1]);\n    const b = parseInt(rgb[2]);\n    const contrast = Math.round(((r * 299) + (g * 587) + (b * 114)) / 1000);\n    return contrast < 5;\n  }\n}", "CodeBleu_score": 58.87062207817447}, {"code": "const darkMode = () =>{\n\t    const colorScheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    if (colorScheme === 'light') {\n        return false;\n    }\n    if (colorScheme === 'dark') {\n        return true;\n    }\n    const el = document.getElementById('container');\n    const containerColor = getComputedStyle(el.parentElement).getPropertyValue('background-color');\n    const rgb = containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(',');\n    const contrast = Math.sqrt(\n        0.299 * Math.pow(parseInt(rgb[0]), 2) +\n        0.587 * Math.pow(parseInt(rgb[1]), 2) +\n        0.114 * Math.pow(parseInt(rgb[2]), 2)\n    );\n    return contrast < 5;\n}", "CodeBleu_score": 55.00587070326661}, {"code": "const darkMode = () =>{\n\t    if (colorScheme === 'light') {\n        return false;\n    } else if (colorScheme === 'dark') {\n        return true;\n    } else {\n        const el = document.getElementById('container');\n        const containerColor = getComputedStyle(el.parentElement).getPropertyValue('background-color');\n        const contrast = contrastRatio(containerColor, 'white');\n        return contrast < 5;\n    }\n}", "CodeBleu_score": 35.69534549588463}]}
{"instance_id": "7da55fac8ceb", "generation_result": [{"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t    if (!title && !showCount) return null;\n    return (\n        <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-medium text-gray-900\">{title}</h2>\n            {showCount && <span className=\"text-sm text-gray-500\">{count}</span>}\n        </div>\n    );\n}", "CodeBleu_score": 39.44591816363442}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t    if(!title && !showCount) return null;\n    return (\n        <div className=\"flex justify-between items-center\">\n            {title && <h1 className=\"text-xl font-bold\">{title}</h1>}\n            {showCount && <span className=\"text-gray-500\">{count}</span>}\n        </div>\n    )\n}", "CodeBleu_score": 38.04817096074071}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t    if (!title && !showCount) {\n        return null;\n    }\n\n    return (\n        <div className=\"content-title\">\n            <h2>{title}</h2>\n            {showCount && <span>{count}</span>}\n        </div>\n    );\n}", "CodeBleu_score": 39.74838483951565}]}
{"instance_id": "1d104e0b7fc7", "generation_result": [{"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if not args:\n        raise ValueError(\"At least one queryset must be provided.\")\n\n    if base_queryset is None:\n        base_queryset = args[0].model.objects.all()\n\n    # Order each queryset\n    ordered_querysets = [q.order_by('pk') for q in args]\n\n    # Perform a union operation on the ordered querysets\n    union_queryset = ordered_querysets[0].union(*ordered_querysets[1:])\n\n    # Retrieve the IDs from the union result\n    ids = union_queryset.values_list('pk', flat=True)\n\n    # Filter the base queryset or the model's objects using the IDs\n    combined_queryset = base_queryset.filter(pk__in=ids)\n\n    return combined_queryset\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "CodeBleu_score": 51.03942703482336}, {"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if len(args) == 0:\n        raise ValueError(\"At least one queryset must be provided\")\n    elif len(args) == 1:\n        return args[0]\n    else:\n        if base_queryset is None:\n            base_queryset = args[0].model.objects.all()\n        q = base_queryset.none()\n        for sub_query in args:\n            sub_query = sub_query.order_by(\"-id\")\n            q = q.union(sub_query)\n        ids = q.values_list(\"id\", flat=True)\n        return base_queryset.filter(id__in=ids)", "CodeBleu_score": 47.88135684102666}, {"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if not args:\n        raise ValueError(\"At least one queryset must be provided.\")\n    if base_queryset is None:\n        base_queryset = args[0].model.objects.all()\n    querysets = [q.order_by(\"id\") for q in args]\n    result = querysets[0].union(*querysets[1:])\n    ids = result.values_list(\"id\", flat=True)\n    return base_queryset.filter(id__in=ids)\n\n", "CodeBleu_score": 48.619468414534026}]}
{"instance_id": "96fe55f8e114", "generation_result": [{"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    with translation.override('en'):\n        resource_type = model._meta.verbose_name\n        operate_log = OperateLog.objects.create_or_update(\n            resource_type=resource_type,\n            action=action,\n            detail=detail,\n            **kwargs\n        )\n        activity_logs = []\n        for resource_id in ids:\n            activity_log = ActivityLog(\n                resource_id=resource_id,\n                resource_type=resource_type,\n                operate_log=operate_log,\n                detail=detail,\n                organization_id=self.request.user.org_id,\n                **kwargs\n            )\n            activity_logs.append(activity_log)\n        ActivityLog.objects.bulk_create(activity_logs)\n\n", "CodeBleu_score": 45.59367350727859}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    with translation.override('en'):\n        resource_type = model._meta.verbose_name_plural\n    operate_log = OperateLog.objects.create_or_update(\n        action=action,\n        detail=detail,\n        **kwargs\n    )\n    activity_logs = [\n        ActivityLog(\n            resource_type=resource_type,\n            resource_id=resource_id,\n            operate_log=operate_log,\n            detail=detail,\n            org_id=self.org_id,\n            org_name=self.org_name,\n        )\n        for resource_id in ids\n    ]\n    ActivityLog.objects.bulk_create(activity_logs)\n\n", "CodeBleu_score": 57.771565412679514}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    with translation.override('en'):\n        if model is None:\n            model = self.model\n        resource_type = model._meta.verbose_name\n        create_or_update_operate_log(action, resource_type, detail)\n        activity_logs = []\n        for resource_id in ids:\n            activity_log = ActivityLog(\n                resource_type=resource_type,\n                resource_id=resource_id,\n                action=action,\n                detail=detail,\n                **kwargs\n            )\n            activity_logs.append(activity_log)\n        ActivityLog.objects.bulk_create(activity_logs)\n\n", "CodeBleu_score": 46.64162402794086}]}
{"instance_id": "9e851c424f45", "generation_result": [{"code": "def prepare_django_request(self, request)\n\t\n    if request.is_secure():\n        scheme = 'https'\n    else:\n        scheme = 'http'\n    return {\n        'PATH_INFO': request.META['PATH_INFO'],\n        'HTTP_HOST': request.META['HTTP_HOST'],\n        'REMOTE_ADDR': request.META['REMOTE_ADDR'],\n        'REQUEST_METHOD': request.META['REQUEST_METHOD'],\n        'SERVER_NAME': request.META['SERVER_NAME'],\n        'SERVER_PORT': request.META['SERVER_PORT'],\n        'wsgi.url_scheme': scheme,\n        'wsgi.input': request.META['wsgi.input'],\n        'wsgi.errors': sys.stderr,\n        'QUERY_STRING': request.META['QUERY_STRING'],\n        'CONTENT_TYPE': request.META.get('CONTENT_TYPE'),\n        'CONTENT_LENGTH': request.META.get('CONTENT_LENGTH'),\n        'wsgi.version': (1, 0),\n        'wsgi.run_once': False,\n        'wsgi.multithread': False,\n        'wsgi.multiprocess': False,\n        'wsgi.file_wrapper': None,\n        'SERVER_PROTOCOL': 'HTTP/%s.%s' % request.META['SERVER_PROTOCOL'].split('/', 1),\n        'SERVER_SOFTWARE': 'Django/%s' % django.get_version(),\n        'REQUEST_URI': request.build_absolute_uri(),\n        'PATH_INFO': request.META['PATH_INFO'],\n        'REMOTE_ADDR': request.META['REMOTE_ADDR'],\n        'REMOTE_HOST': request.META['REMOTE_HOST'],\n        'REQUEST_METHOD': request.META['REQUEST_METHOD'],\n        'SCRIPT_NAME': request.META['SCRIPT_NAME'],\n        'SERVER_NAME': request.META['SERVER_NAME'],\n        'SERVER_PORT': request.META", "CodeBleu_score": 24.717508500551617}, {"code": "def prepare_django_request(self, request)\n\t\n    return {\n        'secure': request.is_secure(),\n        'http_host': request.META['HTTP_HOST'],\n        'script_name': request.META['PATH_INFO'],\n        'get_data': request.GET.copy(),\n        'post_data': request.POST.copy()\n    }\n\n", "CodeBleu_score": 57.23028094467468}, {"code": "def prepare_django_request(self, request)\n\t\n    self.is_secure = request.is_secure()\n    self.host = request.get_host()\n    self.script_name = request.META['SCRIPT_NAME']\n    self.path = request.META['PATH_INFO']\n    self.path_info = request.META['PATH_INFO']\n    self.method = request.META['REQUEST_METHOD']\n    self.query_string = request.META['QUERY_STRING']\n    self.get_data = request.GET.copy()\n    self.post_data = request.POST.copy()\n    self.request_uri = request.build_absolute_uri()\n    self.full_path_info = request.get_full_path()\n    self.headers = request.META.items()\n    self.body = request.body\n    self.scheme = request.scheme\n    self.cookies = request.COOKIES\n    self.session = request.session\n    self.user = request.user\n    self.meta = request.META\n    self.environ = request.environ\n    self.content_type = request.content_type\n    self.content_params = request.content_params\n    self.content_length = request.META['CONTENT_LENGTH']\n    self.content_type_params = request.content_type_params\n    self.encoding = request.encoding\n    self.content_length = request.META['CONTENT_LENGTH']\n    self.content_type_params = request.content_type_params\n    self.encoding = request.encoding\n    self.content_length = request.META['CONTENT_LENGTH']\n    self.content_type_params = request.content_type_params\n    self.encoding = request.encoding\n    self.content_length = request.META['CONTENT_LENGTH']\n    self.content_type_params = request.content_type_params\n    self.encoding = request.encoding\n    self.content_length = request.META['CONTENT_LENGTH']\n    self.content_type_params = request.content_type_params\n    self.encoding = request.encoding\n    self.content_length =", "CodeBleu_score": 17.835927622011873}]}
{"instance_id": "dcea4bd482c4", "generation_result": [{"code": "function getUserLang() {\n\t    if (document.cookie.indexOf('django_language=en') > -1) {\n        return 'en-US';\n    } else {\n        return 'zh-CN';\n    }\n}", "CodeBleu_score": 39.506929996048136}, {"code": "function getUserLang() {\n\t    if (document.cookie.indexOf('django_language=en') > -1) {\n        return 'en-US';\n    } else {\n        return 'zh-CN';\n    }\n}", "CodeBleu_score": 39.506929996048136}, {"code": "function getUserLang() {\n\t    if (document.cookie.indexOf('django_language=en') > -1) {\n        return 'en-US';\n    }\n    else {\n        return 'zh-CN';\n    }\n}", "CodeBleu_score": 39.86545567929174}]}
{"instance_id": "fd6824a005d5", "generation_result": [{"code": "function reloadPage(){\n\t    setTimeout(function() {\n        window.location.reload();\n    }, 300);\n}", "CodeBleu_score": 62.00081931951388}, {"code": "function reloadPage(){\n\t  setTimeout(function() {\n    window.location.reload();\n  }, 300);\n}", "CodeBleu_score": 59.25855359143873}, {"code": "function reloadPage(){\n\t    setTimeout(function() {\n        window.location.reload();\n    }, 300);\n}", "CodeBleu_score": 62.00081931951388}]}
{"instance_id": "b32d5862b6b1", "generation_result": [{"code": "function fillKey(key){\n\t    if (key.length > 16) {\n        key = key.slice(0, 16);\n    } else if (key.length < 16) {\n        const fill = Buffer.alloc(16 - key.length);\n        fill.fill(0);\n        key = Buffer.concat([key, fill]);\n    }\n    return key;\n}", "CodeBleu_score": 31.70143520245573}, {"code": "function fillKey(key){\n\t  const filledKey = Buffer.alloc(16);\n  key.copy(filledKey);\n  return filledKey;\n}", "CodeBleu_score": 14.835350723763252}, {"code": "function fillKey(key){\n\t    const filledKey = Buffer.alloc(16);\n    filledKey.fill(0);\n    const keyBuffer = Buffer.from(key);\n    keyBuffer.copy(filledKey);\n    return filledKey;\n}", "CodeBleu_score": 27.881474908293757}]}
{"instance_id": "c839d19e0833", "generation_result": [{"code": "function rsaEncrypt(text, pubKey){\n\t  if (text.length === 0) {\n    return text;\n  }\n  const encrypt = new jsEncrypt.JSEncrypt();\n  encrypt.setPublicKey(pubKey);\n  return encrypt.encrypt(text);\n}", "CodeBleu_score": 50.62851985159376}, {"code": "function rsaEncrypt(text, pubKey){\n\t    if (text === \"\") {\n        return text;\n    }\n    var encrypt = new jsEncrypt.JSEncrypt();\n    encrypt.setPublicKey(pubKey);\n    return encrypt.encrypt(text);\n}", "CodeBleu_score": 51.244797807596264}, {"code": "function rsaEncrypt(text, pubKey){\n\t    if (text.length == 0) {\n        return text;\n    }\n    var encrypt = new jsEncrypt.JSEncrypt();\n    encrypt.setPublicKey(pubKey);\n    return encrypt.encrypt(text);\n}", "CodeBleu_score": 50.62211327535425}]}
{"instance_id": "c73bc91399b9", "generation_result": [{"code": "function checkAll(id, name){\n\t    var master = document.getElementById(id);\n    var checkboxes = document.getElementsByName(name);\n    for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = master.checked;\n    }\n}", "CodeBleu_score": 43.275501575834234}, {"code": "function checkAll(id, name){\n\t    var master = document.getElementById(id);\n    var checkboxes = document.getElementsByName(name);\n\n    for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = master.checked;\n    }\n}", "CodeBleu_score": 43.275501575834234}, {"code": "function checkAll(id, name){\n\t    var checkboxes = document.getElementsByName(name);\n    var masterCheckbox = document.getElementById(id);\n\n    for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = masterCheckbox.checked;\n    }\n}", "CodeBleu_score": 44.03250587401482}]}
{"instance_id": "5164f2c2d67e", "generation_result": [{"code": "function getCookie(name){\n\t    if (document.cookie) {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                return decodeURIComponent(cookie.substring(name.length + 1));\n            }\n        }\n    }\n    return null;\n}", "CodeBleu_score": 65.13949813630455}, {"code": "function getCookie(name){\n\t    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}", "CodeBleu_score": 93.98347840515937}, {"code": "function getCookie(name){\n\t    if (document.cookie) {\n        var cookies = document.cookie.split(\";\");\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + \"=\")) {\n                return decodeURIComponent(cookie.substring(name.length + 1));\n            }\n        }\n    }\n    return null;\n}", "CodeBleu_score": 62.45474048360834}]}
{"instance_id": "7ce6dc0f1f24", "generation_result": [{"code": "def post(self, request)\n\t\n    image_model = self.get_image_model()\n    creation_form = self.get_creation_form(image_model, request.POST, request.FILES)\n    if creation_form.is_valid():\n        self.save_form(creation_form)\n        duplicates = self.find_image_duplicates(creation_form)\n        if duplicates:\n            return self.render_duplicate_found_response(duplicates)\n        if self.select_format:\n            return self.render_select_format_response(creation_form)\n        return self.get_chosen_response(creation_form)\n    else:\n        return self.get_reshow_creation_form_response(creation_form)\n\n", "CodeBleu_score": 20.74726501332608}, {"code": "def post(self, request)\n\t\n    image_model = self.get_image_model()\n    creation_form = self.get_creation_form(image_model, request.POST, request.FILES)\n    if creation_form.is_valid():\n        self.save_form(creation_form, image_model)\n        duplicates = self.find_image_duplicates(creation_form)\n        if duplicates:\n            return self.render_duplicate_found_response(request, duplicates)\n        if request.GET.get('select_format'):\n            return self.render_select_format_response(request, creation_form)\n        return self.get_chosen_response(request, creation_form)\n    return self.get_reshow_creation_form_response(request, creation_form)", "CodeBleu_score": 23.929015689666016}, {"code": "def post(self, request)\n\t\n    image_model = self.get_image_model()\n    creation_form = self.get_creation_form(image_model)\n    if creation_form.is_valid():\n        image = self.save_form(creation_form, image_model)\n        duplicates = self.find_image_duplicates(image)\n        if duplicates:\n            return self.render_duplicate_found_response(request, duplicates, image)\n        if request.GET.get('select_format'):\n            return self.render_select_format_response(request, image, creation_form)\n        return self.get_chosen_response(request, image)\n    return self.get_reshow_creation_form_response(request, image, creation_form)\n\n", "CodeBleu_score": 27.132707922352918}]}
{"instance_id": "2ee66e343cd1", "generation_result": [{"code": "def _annotate_queryset(self, pages)\n\t\n    pages = pages.annotate_site_root_state().defer_streamfields().prefetch_related(\n        \"content_type\", \"site_root\", \"parent_page\"\n    )\n    if self.explorable_instances:\n        pages = pages.explorable_instances(self.user)\n    if self.specific:\n        pages = pages.specific()\n    if self.prefetch_workflow_states:\n        pages = pages.prefetch_workflow_states()\n    return pages.annotate_approved_schedule()\n\n", "CodeBleu_score": 36.901635068470945}, {"code": "def _annotate_queryset(self, pages)\n\t\n    pages = pages.prefetch_related(\"content_type\")\n    pages = pages.prefetch_related(\"site_root\")\n    pages = pages.defer_streamfields(\n        defer=True,\n        specific=self.explorable_instances,\n    )\n    if self.explorable_instances:\n        pages = pages.filter(pk__in=self.explorable_instances)\n    if self.workflow_enabled:\n        pages = pages.prefetch_workflow_states()\n    pages = pages.annotate_site_root_state()\n    pages = pages.annotate_approved_schedule()\n    return pages\n\n", "CodeBleu_score": 49.3291075800251}, {"code": "def _annotate_queryset(self, pages)\n\t\n    pages = pages.prefetch_related('content_type')\n    pages = pages.prefetch_related('site_root')\n    if self.user_can_explore:\n        pages = pages.explorable_instances(self.user, include_hidden=True)\n    pages = pages.defer_streamfields(self.defer_streamfields)\n    pages = pages.specific()\n    if WAGTAIL_WORKFLOW_ENABLED:\n        pages = pages.prefetch_workflow_states()\n    pages = pages.annotate_site_root_state(self.request.site)\n    pages = pages.annotate_approved_schedule()\n    return pages\n\n", "CodeBleu_score": 52.81564708072152}]}
{"instance_id": "970bf123b037", "generation_result": [{"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        queryset = queryset.autocomplete(self.query_string)\n        if not queryset.ordered:\n            queryset = queryset.order_by(\"-relevance\")\n    return queryset\n\n", "CodeBleu_score": 55.41377885035654}, {"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        queryset = queryset.autocomplete(self.query_string)\n        if not self.is_ordered:\n            queryset = queryset.order_by('-relevance')\n    return queryset", "CodeBleu_score": 56.48876270641799}, {"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        queryset = self.filter_queryset(queryset)\n        if not self.is_ordered:\n            queryset = queryset.order_by(self.query_string)\n    return queryset\n\n", "CodeBleu_score": 56.20989382016934}]}
{"instance_id": "b2058bd51dfa", "generation_result": [{"code": "def user_can_access_snippets(user)\n\t\n    snippet_models = get_snippet_models()\n    for model in snippet_models:\n        if user_has_any_permission(user, model):\n            return True\n    return False", "CodeBleu_score": 32.71746328736942}, {"code": "def user_can_access_snippets(user)\n\t\n    snippet_models = get_snippet_models()\n    for model in snippet_models:\n        if user_has_any_permission(user, model):\n            return True\n    return False", "CodeBleu_score": 32.71746328736942}, {"code": "def user_can_access_snippets(user)\n\t\n    snippet_models = get_snippet_models()\n    for model in snippet_models:\n        if user_has_any_permission(user, model):\n            return True\n    return False\n", "CodeBleu_score": 32.71746328736942}]}
{"instance_id": "bf09fb693900", "generation_result": [{"code": "def get_auth_backends(self, request)\n\t\n    auth_backends = []\n    for backend in load_backends(settings.AUTHENTICATION_BACKENDS):\n        if hasattr(backend, 'get_saml_idps'):\n            for idp in backend.get_saml_idps():\n                auth_backends.append(self.gen_auth_data(backend, request, idp))\n        else:\n            auth_backends.append(self.gen_auth_data(backend, request))\n    return auth_backends\n\n", "CodeBleu_score": 21.40987102294359}, {"code": "def get_auth_backends(self, request)\n\t\n\n    backends = self.load_backends()\n    auth_data = self.gen_auth_data(request, backends)\n    return auth_data\n\n", "CodeBleu_score": 1.8026873739009526}, {"code": "def get_auth_backends(self, request)\n\t\n    auth_backends = []\n    for name, backend in load_backends().items():\n        if not backend.enabled:\n            continue\n        auth_data = self.gen_auth_data(name, backend, request)\n        if auth_data:\n            auth_backends.append(auth_data)\n    return auth_backends\n", "CodeBleu_score": 16.983773113836865}]}
{"instance_id": "ea59163b25cc", "generation_result": [{"code": "def as_sql(self, qn, connection)\n\t\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s @> %s' % (lhs, rhs), params\n\n", "CodeBleu_score": 61.022275663242574}, {"code": "def as_sql(self, qn, connection)\n\t\n\n    lhs_sql, lhs_params = self.process_lhs(qn, connection)\n    rhs_sql, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s @> %s' % (lhs_sql, rhs_sql), params", "CodeBleu_score": 53.92661667438882}, {"code": "def as_sql(self, qn, connection)\n\t\n    lhs_sql, lhs_params = self.process_lhs(qn, connection)\n    rhs_sql, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s %s %s' % (lhs_sql, self.get_cast_type(connection), rhs_sql), params", "CodeBleu_score": 51.038873709562615}]}
{"instance_id": "6658ddec6820", "generation_result": [{"code": "def get_model_urls(app_label, model_name)\n\t\n    paths = []\n    for view_config in registry.get(app_label, {}).get(model_name, []):\n        view = import_string(view_config['view'])\n        if issubclass(view, View):\n            view = view.as_view()\n        paths.append(path(view_config['name'], view, kwargs=view_config['kwargs']))\n    return paths", "CodeBleu_score": 27.297410122457467}, {"code": "def get_model_urls(app_label, model_name)\n\t\n    try:\n        view_configs = registry[app_label][model_name]\n    except KeyError:\n        return []\n\n    paths = []\n    for view_config in view_configs:\n        view = view_config[\"view\"]\n        if issubclass(view, View):\n            view = view.as_view()\n        elif isinstance(view, str):\n            view = import_string(view)\n        paths.append(path(view_config[\"name\"], view, name=view_config[\"name\"], kwargs=view_config[\"kwargs\"]))\n    return paths\n\n", "CodeBleu_score": 33.34965888799864}, {"code": "def get_model_urls(app_label, model_name)\n\t\n    view_configs = registry.get_model_views(app_label, model_name)\n    if not view_configs:\n        return []\n    paths = []\n    for view_config in view_configs:\n        view = import_string(view_config[\"view\"])\n        if issubclass(view, View):\n            view = view.as_view()\n        name = view_config[\"name\"]\n        kwargs = view_config.get(\"kwargs\", {})\n        paths.append(path(name, view, kwargs=kwargs))\n    return paths", "CodeBleu_score": 34.51717193905369}]}
{"instance_id": "9f4c69dfe312", "generation_result": [{"code": "def run_validators(instance, validators)\n\t\n    request = current_request.get()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_class = importlib.import_module(validator).CustomValidator\n        elif isinstance(validator, dict):\n            validator_class = CustomValidator(**validator)\n        else:\n            raise ImproperlyConfigured(\"Validator must be a string or a dictionary.\")\n        if not issubclass(validator_class, CustomValidator):\n            raise ImproperlyConfigured(\"Validator must be a subclass of CustomValidator.\")\n        validator_class.validate(instance, request)\n\n", "CodeBleu_score": 33.642857792557216}, {"code": "def run_validators(instance, validators)\n\t\n    request = current_request.get()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator = importlib.import_module(validator)\n        elif isinstance(validator, dict):\n            validator = CustomValidator(**validator)\n        if not issubclass(validator, CustomValidator):\n            raise ImproperlyConfigured(\n                f\"{validator} is not a subclass of CustomValidator\"\n            )\n        validator.apply(instance, request)\n\n", "CodeBleu_score": 35.32308345840309}, {"code": "def run_validators(instance, validators)\n\t\n    request = current_request.get()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator = importlib.import_module(validator)\n        elif isinstance(validator, dict):\n            validator = CustomValidator(**validator)\n        if not issubclass(type(validator), CustomValidator):\n            raise ImproperlyConfigured(\n                f\"Validator {validator} is not a subclass of CustomValidator\"\n            )\n        validator.apply(instance, request)", "CodeBleu_score": 37.57515997113105}]}
{"instance_id": "0b2ff7fe76f6", "generation_result": [{"code": "export function playMedia(destiny){\n\t    const panel = document.querySelector(destiny);\n    const videos = panel.querySelectorAll('video[data-autoplay]');\n    const audios = panel.querySelectorAll('audio[data-autoplay]');\n    const youtubeIframes = panel.querySelectorAll('iframe[data-autoplay]');\n\n    videos.forEach(video => {\n        if (video.play) {\n            video.play();\n        }\n    });\n\n    audios.forEach(audio => {\n        if (audio.play) {\n            audio.play();\n        }\n    });\n\n    youtubeIframes.forEach(iframe => {\n        iframe.onload = () => {\n            playYoutube(iframe);\n        }\n    });\n}", "CodeBleu_score": 39.14666596673014}, {"code": "export function playMedia(destiny){\n\t  const panel = document.querySelector(destiny);\n  const videos = panel.querySelectorAll('video[data-autoplay]');\n  const audios = panel.querySelectorAll('audio[data-autoplay]');\n  const youtubes = panel.querySelectorAll('iframe[data-autoplay]');\n\n  videos.forEach(video => {\n    if (video.play) {\n      video.play();\n    }\n  });\n\n  audios.forEach(audio => {\n    if (audio.play) {\n      audio.play();\n    }\n  });\n\n  youtubes.forEach(youtube => {\n    playYoutube(youtube);\n    youtube.onload = () => {\n      playYoutube(youtube);\n    };\n  });\n}", "CodeBleu_score": 37.18449868023364}, {"code": "export function playMedia(destiny){\n\t  const panel = document.querySelector(`#${destiny}`);\n  const video = panel.querySelector('video[data-autoplay]');\n  const audio = panel.querySelector('audio[data-autoplay]');\n  const youtube = panel.querySelector('iframe[data-autoplay]');\n\n  if (video && typeof video.play === 'function') {\n    video.play();\n  }\n\n  if (audio && typeof audio.play === 'function') {\n    audio.play();\n  }\n\n  if (youtube) {\n    youtube.onload = () => {\n      playYoutube(youtube);\n    };\n  }\n}", "CodeBleu_score": 35.00672926423918}]}
{"instance_id": "12d28719c647", "generation_result": [{"code": "export function stopMedia(destiny){\n\t  const panel = getSlideOrSection(destiny)\n  utils.$('video, audio', panel).forEach(element => {\n    if (!element.hasAttribute('data-keepplaying')) {\n      element.pause()\n    }\n  })\n  utils.$('iframe[src*=\"youtube.com/embed/\"]', panel).forEach(element => {\n    if (!element.hasAttribute('data-keepplaying')) {\n      element.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*')\n    }\n  })\n}", "CodeBleu_score": 54.936129019360315}, {"code": "export function stopMedia(destiny){\n\t  const panel = getSlideOrSection(destiny);\n\n  utils.$('video, audio', panel).forEach(element => {\n    if (!element.hasAttribute('data-keepplaying')) {\n      element.pause();\n    }\n  });\n\n  utils.$('iframe[src*=\"youtube.com/embed/\"]', panel).forEach(element => {\n    if (!element.hasAttribute('data-keepplaying')) {\n      element.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n    }\n  });\n}", "CodeBleu_score": 61.322604999801065}, {"code": "export function stopMedia(destiny){\n\t  const panel = getSlideOrSection(destiny);\n\n  utils.$('video, audio', panel).forEach(element => {\n    if (!element.hasAttribute('data-keepplaying')) {\n      element.pause();\n    }\n  });\n\n  utils.$('iframe[src*=\"youtube.com/embed/\"]', panel).forEach(element => {\n    if (!element.hasAttribute('data-keepplaying')) {\n      element.contentWindow.postMessage(\n        '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\n        '*'\n      );\n    }\n  });\n}", "CodeBleu_score": 62.24337790593233}]}
{"instance_id": "e0d58d76f87e", "generation_result": [{"code": "export function createSlideArrows(section){\n\t  const { slideWrapper, slideList, options } = section\n  const {\n    arrowPrev,\n    arrowNext,\n    arrowColor,\n    arrowPrevClasses,\n    arrowNextClasses,\n    arrowPrevContent,\n    arrowNextContent,\n    horizontalLoop,\n  } = options\n\n  // Create prev arrow\n  const prevArrow = utils.createElementFromHTML(arrowPrev)\n  prevArrow.classList.add(arrowPrevClasses)\n  prevArrow.style.color = arrowColor\n  slideWrapper.appendChild(prevArrow)\n\n  // Create next arrow\n  const nextArrow = utils.createElementFromHTML(arrowNext)\n  nextArrow.classList.add(arrowNextClasses)\n  nextArrow.style.color = arrowColor\n  slideWrapper.appendChild(nextArrow)\n\n  // Set arrow content\n  if (arrowPrevContent) {\n    prevArrow.innerHTML = arrowPrevContent\n  }\n  if (arrowNextContent) {\n    nextArrow.innerHTML = arrowNextContent\n  }\n\n  // Hide prev arrow if horizontal looping is disabled\n  if (!horizontalLoop) {\n    utils.hide(prevArrow)\n  }\n\n  // Set arrows click events\n  prevArrow.addEventListener('click', () => {\n    section.prevSlide()\n  })\n\n  nextArrow.addEventListener('click', () => {\n    section.nextSlide()\n  })\n}", "CodeBleu_score": 22.624743695538356}, {"code": "export function createSlideArrows(section){\n\t  const {\n    slideWrapper,\n    slideList,\n    options: {\n      horizontalLoop,\n      arrowColor,\n      arrowSize,\n      arrowStyle,\n      arrowPadding,\n      arrowPosition,\n      arrowOpacity,\n      arrowOpacityHover,\n      arrowScale,\n      arrowBorderRadius,\n      arrowBorderWidth,\n      arrowBorderColor,\n      arrowBoxShadow,\n      arrowBoxShadowHover,\n      arrowBoxShadowActive,\n      arrowBoxShadowPosition,\n      arrowBoxShadowBlur,\n      arrowBoxShadowSpread,\n      arrowBoxShadowColor,\n      arrowBoxShadowColorHover,\n      arrowBoxShadowColorActive,\n      arrowBorder,\n      arrowBorderHover,\n      arrowBorderActive,\n      arrowBorderRadiusHover,\n      arrowBorderWidthHover,\n      arrowBorderColorHover,\n      arrowBorderRadiusActive,\n      arrowBorderWidthActive,\n      arrowBorderColorActive,\n      arrowScaleActive,\n      arrowScaleHover,\n      arrowOpacityActive,\n      arrowBoxShadowBlurHover,\n      arrowBoxShadowBlurActive,\n      arrowBoxShadowSpreadHover,\n      arrowBoxShadowSpreadActive,\n    },\n  } = section\n\n  const arrowPrev = utils.createElementFromHTML(\n    '<button class=\"splide__arrow splide__arrow--prev\">' +\n      '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">' +\n      '<path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>' +\n      '</svg>' +\n      '</button>'\n  )\n  const arrowNext = utils.createElementFromHTML(\n    '<button class=\"splide__arrow splide__arrow--next\">' +\n      '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"", "CodeBleu_score": 10.621465908057484}, {"code": "export function createSlideArrows(section){\n\t  const {\n    wrapper,\n    slideWrapper,\n    slideWrapperClass,\n    slideWrapperSelector,\n    arrowClass,\n    arrowColor,\n    arrowPrevClass,\n    arrowPrevSelector,\n    arrowNextClass,\n    arrowNextSelector,\n    horizontalLoop,\n    arrowPrevHTML,\n    arrowNextHTML,\n  } = getOptions(section);\n\n  const prevArrow = utils.createElementFromHTML(arrowPrevHTML);\n  const nextArrow = utils.createElementFromHTML(arrowNextHTML);\n\n  prevArrow.classList.add(arrowClass, arrowPrevClass);\n  nextArrow.classList.add(arrowClass, arrowNextClass);\n\n  if (arrowColor) {\n    utils.css(prevArrow, { color: arrowColor });\n    utils.css(nextArrow, { color: arrowColor });\n  }\n\n  if (horizontalLoop === false) {\n    utils.addClass(prevArrow, 'no-loop');\n  }\n\n  if (wrapper) {\n    wrapper.appendChild(prevArrow);\n    wrapper.appendChild(nextArrow);\n  } else {\n    slideWrapper.appendChild(prevArrow);\n    slideWrapper.appendChild(nextArrow);\n  }\n\n  utils.$(arrowPrevSelector, slideWrapper).on('click', () => {\n    section.prev();\n  });\n\n  utils.$(arrowNextSelector, slideWrapper).on('click', () => {\n    section.next();\n  });\n}", "CodeBleu_score": 23.898249456503585}]}
{"instance_id": "09898985b216", "generation_result": [{"code": "function slideArrowHandler(){\n\t  const arrow = this;\n  const section = utils.closest(arrow, 'section');\n  const isPrev = utils.hasClass(arrow, SLIDES_PREV);\n  const isLeftScrollAllowed = getIsScrollAllowed(section, 'left');\n  const isRightScrollAllowed = getIsScrollAllowed(section, 'right');\n\n  if (isPrev && isLeftScrollAllowed) {\n    setState(section, {\n      isLeftScrollAllowed: false,\n      isRightScrollAllowed: true,\n    });\n    EventEmitter.emit('moveSlideLeft', section);\n  } else if (!isPrev && isRightScrollAllowed) {\n    setState(section, {\n      isLeftScrollAllowed: true,\n      isRightScrollAllowed: false,\n    });\n    EventEmitter.emit('moveSlideRight', section);\n  }\n}", "CodeBleu_score": 32.47228986594699}, {"code": "function slideArrowHandler(){\n\t  const $closestSection = utils.closest(this, '.section');\n  const isPrev = $closestSection.classList.contains(SLIDES_PREV);\n  const isScrollAllowed = getIsScrollAllowed($closestSection);\n\n  if (isPrev && isScrollAllowed.left) {\n    setState({\n      currentSlide: state.currentSlide - 1,\n      currentSection: state.currentSection - 1,\n    });\n\n    EventEmitter.emit(MOVE_SLIDE_LEFT);\n  } else if (!isPrev && isScrollAllowed.right) {\n    setState({\n      currentSlide: state.currentSlide + 1,\n      currentSection: state.currentSection + 1,\n    });\n\n    EventEmitter.emit(MOVE_SLIDE_RIGHT);\n  }\n}", "CodeBleu_score": 35.204425635810956}, {"code": "function slideArrowHandler(){\n\t    var section = utils.closest(this, '.section');\n    var isPrev = utils.hasClass(this, SLIDES_PREV);\n    var isLeft = isPrev && getIsScrollAllowed('left', section);\n    var isRight = !isPrev && getIsScrollAllowed('right', section);\n\n    if (isLeft || isRight) {\n        setState({\n            section: section,\n            isLeft: isLeft,\n            isRight: isRight,\n            isPrev: isPrev\n        });\n\n        EventEmitter.emit(isLeft ? 'moveSlideLeft' : 'moveSlideRight');\n    }\n}", "CodeBleu_score": 46.15694459294433}]}
{"instance_id": "69ef3030fb15", "generation_result": [{"code": "export function addSlidesNavigation(section){\n\t  const options = getOptions(section)\n  const { navigation } = options\n  const { position } = navigation\n\n  const navigationContainer = utils.createElementFromHTML(\n    `<div class=\"${section.className}__navigation\"></div>`\n  )\n  utils.appendTo(section.element, navigationContainer)\n\n  const slides = section.slides\n  const slidesCount = slides.length\n\n  let bulletIndex = 0\n  for (let i = 0; i < slidesCount; i++) {\n    const slide = slides[i]\n    const bullet = utils.createElementFromHTML(\n      `<a href=\"#${slide.id}\" class=\"${section.className}__bullet\" data-index=\"${i}\">${getBulletLinkName(\n        slide\n      )}</a>`\n    )\n    utils.appendTo(navigationContainer, bullet)\n  }\n\n  if (position === 'center') {\n    utils.css(navigationContainer, {\n      left: '50%',\n      transform: 'translateX(-50%)',\n    })\n  }\n\n  const activeSlide = section.activeSlide\n  const activeSlideIndex = activeSlide.index\n  const activeSlideBullet = navigationContainer.querySelector(\n    `.${section.className}__bullet[data-index=\"${activeSlideIndex}\"]`\n  )\n  utils.addClass(activeSlideBullet, `${section.className}__bullet--active`)\n}", "CodeBleu_score": 30.957249539880127}, {"code": "export function addSlidesNavigation(section){\n\t  const options = getOptions(section);\n  const sectionElement = section.element;\n  const slides = section.slides;\n  const slidesCount = slides.length;\n\n  // Create the navigation container\n  const navigationContainer = utils.createElementFromHTML(\n    '<div class=\"slides-navigation\"></div>'\n  );\n\n  // Append the navigation container to the section element\n  utils.appendTo(sectionElement, navigationContainer);\n\n  // Position the navigation container based on configuration options\n  const position = options.slidesNavigationPosition;\n  switch (position) {\n    case 'top':\n      utils.css(navigationContainer, {\n        top: '0',\n        left: '50%',\n        transform: 'translateX(-50%)',\n      });\n      break;\n    case 'bottom':\n      utils.css(navigationContainer, {\n        bottom: '0',\n        left: '50%',\n        transform: 'translateX(-50%)',\n      });\n      break;\n    case 'left':\n      utils.css(navigationContainer, {\n        top: '50%',\n        left: '0',\n        transform: 'translateY(-50%)',\n      });\n      break;\n    case 'right':\n      utils.css(navigationContainer, {\n        top: '50%',\n        right: '0',\n        transform: 'translateY(-50%)',\n      });\n      break;\n  }\n\n  // Center the navigation container\n  utils.css(navigationContainer, {\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  });\n\n  // Create a navigation bullet for each slide\n  for (let i = 0; i < slidesCount; i++) {\n    const slide = slides[i];\n    const slideElement = slide.element;\n\n    // Create the navigation bullet\n    const navigationBullet = utils.createElementFromHTML(\n      '<a class=\"slides-navigation-bullet\"></a>'\n    );\n\n    // Set the link name for the navigation bullet\n    const", "CodeBleu_score": 25.0063318081871}, {"code": "export function addSlidesNavigation(section){\n\t  const options = getOptions()\n  const { navigation } = options\n  const { position } = navigation\n\n  const navigationContainer = utils.createElementFromHTML(`\n    <div class=\"${options.classes.navigation}\"></div>\n  `)\n\n  utils.appendTo(navigationContainer, section.container)\n\n  const slides = section.slides\n\n  slides.forEach((slide, index) => {\n    const bullet = utils.createElementFromHTML(`\n      <a href=\"#\" class=\"${options.classes.bullet}\" data-index=\"${index}\">\n        ${getBulletLinkName(slide)}\n      </a>\n    `)\n\n    utils.appendTo(bullet, navigationContainer)\n  })\n\n  if (position === 'inside') {\n    const { container } = section.slides[0]\n\n    utils.css(navigationContainer, {\n      position: 'absolute',\n      left: '50%',\n      bottom: '10px',\n      transform: 'translateX(-50%)',\n    })\n\n    utils.css(container, {\n      position: 'relative',\n    })\n  }\n\n  const activeSlide = section.activeSlide\n  const activeBullet = navigationContainer.querySelector(\n    `[data-index=\"${activeSlide.index}\"]`\n  )\n\n  utils.addClass(activeBullet, options.classes.active)\n}", "CodeBleu_score": 32.423545930276575}]}
{"instance_id": "d86cd1fd918a", "generation_result": [{"code": "function menuItemsHandler(e){\n\t  const self = this\n  const { scrollTrigger } = self.getState()\n  const { menu, anchorsLocked, anchors } = self.getOptions()\n  const { anchor } = utils.getAttr(e.target, 'data-anchor')\n  const anchorExists = anchors.find(({ name }) => name === anchor)\n  if (scrollTrigger !== 'menu') {\n    self.setState({ scrollTrigger: 'menu' })\n  }\n  if (menu && anchorExists && !anchorsLocked) {\n    utils.preventDefault(e)\n    self.emit('onMenuClick', anchor)\n  }\n}", "CodeBleu_score": 34.600381242340084}, {"code": "function menuItemsHandler(e){\n\t    var anchor = utils.getAttr(e.currentTarget, 'data-anchor')\n    if (!anchor) return\n    if (this.options.anchors.locked) {\n        utils.preventDefault(e)\n        this.emit('onMenuClick', anchor)\n    } else {\n        this.setState('scrollTrigger', 'menu')\n    }\n}", "CodeBleu_score": 37.31398903833423}, {"code": "function menuItemsHandler(e){\n\t  const {\n    anchor,\n    menu,\n    options,\n    state,\n  } = this;\n\n  const $menu = utils.$(menu);\n  const $item = closest(e.target, '[data-anchor]');\n\n  if (!$menu || !$item) return;\n\n  setState(state, 'scrollTrigger', 'menu');\n\n  if (options.anchorsLocked) return;\n\n  const anchorName = getOptions($item, 'anchor');\n\n  if (!anchorName) return;\n\n  utils.preventDefault(e);\n\n  anchor.emit('onMenuClick', anchorName);\n}", "CodeBleu_score": 27.91203392772833}]}
{"instance_id": "19fb16a46144", "generation_result": [{"code": "export function setScrolling(element, val){\n\t  if (this.options.autoScrolling || utils.hasClass(element, SLIDES_WRAPPER)) {\n    if (element !== window && utils.hasClass(element, SLIDES_WRAPPER)) {\n      element.scrollLeft = val;\n    } else {\n      element.scrollTo({\n        top: val,\n        behavior: 'smooth',\n      });\n    }\n  } else {\n    element.style.top = `${val}px`;\n  }\n}", "CodeBleu_score": 46.9853161568423}, {"code": "export function setScrolling(element, val){\n\t  const isAutoScrolling = utils.hasClass(element, 'auto-scrolling');\n  const hasScrollbar = element.scrollHeight > element.clientHeight;\n\n  if (\n    !isAutoScrolling &&\n    hasScrollbar &&\n    element !== window &&\n    utils.hasClass(element, SLIDES_WRAPPER)\n  ) {\n    element.scrollLeft = val;\n  } else {\n    element.scrollTo({\n      top: val,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }\n}", "CodeBleu_score": 41.256379778404636}, {"code": "export function setScrolling(element, val){\n\t  const options = this.getOptions();\n  const isWindow = element === window;\n  const isAutoScrolling = options.autoScrolling && !this.utils.hasClass(this.element, this.constants.CLASS_NAMES.SCROLLBAR);\n  const isSlidesWrapper = !isWindow && this.utils.hasClass(element, this.constants.CLASS_NAMES.SLIDES_WRAPPER);\n\n  if (isSlidesWrapper) {\n    element.scrollLeft = val;\n  } else if (isAutoScrolling) {\n    element.style.top = `${val}px`;\n  } else {\n    element.scrollTo({\n      top: val,\n      behavior: 'smooth',\n    });\n  }\n}", "CodeBleu_score": 33.031749146923225}]}
{"instance_id": "09a10e1f1af9", "generation_result": [{"code": "function activateMenuElement(name){\n\t  if (getOptions().menu) {\n    var menu = utils.$(getOptions().menu);\n    if (menu) {\n      var active = menu.querySelector('[data-menuanchor].active');\n      if (active) {\n        utils.removeClass(active, 'active');\n      }\n      var anchor = menu.querySelector('[data-menuanchor=\"' + name + '\"]');\n      if (anchor) {\n        utils.addClass(anchor, 'active');\n      }\n    }\n  }\n}", "CodeBleu_score": 41.49555519436039}, {"code": "function activateMenuElement(name){\n\t  // Check if the menu options exist and are not empty\n  if (!getOptions().menu || !getOptions().menu.length) {\n    return;\n  }\n\n  // For each menu, remove the active class from the currently active element and add it to the element with the corresponding data-menuanchor attribute\n  utils.$(getOptions().menu).forEach(function (menu) {\n    var activeElement = menu.querySelector('[data-menuanchor].active');\n    var newActiveElement = menu.querySelector('[data-menuanchor=\"' + name + '\"]');\n\n    if (activeElement) {\n      utils.removeClass(activeElement, 'active');\n    }\n\n    if (newActiveElement) {\n      utils.addClass(newActiveElement, 'active');\n    }\n  });\n}", "CodeBleu_score": 44.128827250069556}, {"code": "function activateMenuElement(name){\n\t  var menuOptions = getOptions().menu;\n\n  if (!menuOptions || !menuOptions.length) {\n    return;\n  }\n\n  menuOptions.forEach(function (menuOption) {\n    var activeMenuElement = menuOption.querySelector(\n      '[data-menuanchor]:not(.is-active)'\n    );\n\n    if (activeMenuElement) {\n      utils.removeClass(activeMenuElement, 'is-active');\n    }\n\n    var menuElementToActivate = menuOption.querySelector(\n      '[data-menuanchor=\"' + name + '\"]'\n    );\n\n    if (menuElementToActivate) {\n      utils.addClass(menuElementToActivate, 'is-active');\n    }\n  });\n}", "CodeBleu_score": 32.50839696707594}]}
{"instance_id": "4556a956fd7c", "generation_result": [{"code": "export function lazyLoadOthers(){\n\t  if (getOptions().lazyLoad) {\n    const sections = utils.$(SECTION_SEL + ':not(' + ACTIVE_SEL + ')');\n    const hasAutoHeight = utils.$(SECTION_SEL + '.' + AUTO_HEIGHT_SEL).length > 0;\n    const isResponsive = isResponsiveMode();\n    const hasResponsiveAutoHeight = isResponsive && utils.$(SECTION_SEL + '.' + RESPONSIVE_AUTO_HEIGHT_SEL).length > 0;\n\n    if (hasAutoHeight || hasResponsiveAutoHeight) {\n      sections.forEach((section) => {\n        if (isSectionInViewport(section)) {\n          lazyLoad(section);\n        }\n      });\n    }\n  }\n}", "CodeBleu_score": 53.75176084164443}, {"code": "export function lazyLoadOthers(){\n\t  const { lazyLoad } = utils.$(SECTION_SEL).filter(section => !section.classList.contains(ACTIVE_SEL))\n    .reduce((acc, section) => {\n      if (acc.lazyLoad || isSectionInViewport(section)) {\n        const { autoHeight } = getOptions(section)\n        if (autoHeight || (isResponsiveMode() && autoHeight)) {\n          lazyLoad(section)\n        }\n      }\n      return acc\n    }, { lazyLoad })\n}", "CodeBleu_score": 41.635041484131996}, {"code": "export function lazyLoadOthers(){\n\t  const options = getOptions();\n  if (!options.lazyLoad) return;\n\n  const sections = utils.$(SECTION_SEL + ':not(' + ACTIVE_SEL + ')');\n  const hasAutoHeight = sections.some(section => section.style.height === 'auto');\n  const isResponsiveAutoHeight = isResponsiveMode() && options.responsiveAutoHeight;\n\n  if (hasAutoHeight || isResponsiveAutoHeight) {\n    sections.forEach(section => {\n      if (isSectionInViewport(section)) {\n        lazyLoad(section);\n      }\n    });\n  }\n}", "CodeBleu_score": 48.02113840779625}]}
{"instance_id": "a4324e094376", "generation_result": [{"code": "function keepSlidesPosition(){\n\t    const activeSlides = utils.getActiveSlides();\n    activeSlides.forEach(slide => {\n        silentLandscapeScroll(slide, 'internal');\n    });\n}", "CodeBleu_score": 28.93032131046505}, {"code": "function keepSlidesPosition(){\n\t  var activeSlides = utils.getActiveSlides();\n  for (var i = 0; i < activeSlides.length; i++) {\n    silentLandscapeScroll(activeSlides[i], 'internal');\n  }\n}", "CodeBleu_score": 53.974292172193906}, {"code": "function keepSlidesPosition(){\n\t    var activeSlides = getActiveSlides();\n    for (var i = 0; i < activeSlides.length; i++) {\n        silentLandscapeScroll(activeSlides[i], 'internal');\n    }\n}", "CodeBleu_score": 54.711947326300184}]}
{"instance_id": "9eb664182655", "generation_result": [{"code": "export function updateStructuralState(){\n\t  const allSectionItems = this.getContainer().querySelectorAll('.section-item');\n  const visibleSectionItems = Array.from(allSectionItems).filter(item => utils.getVisible(item));\n  const sectionPanels = visibleSectionItems.map(item => new SectionPanel(item, this));\n  const allSlides = sectionPanels.reduce((acc, panel) => acc.concat(panel.getSlides()), []);\n  const prevActiveSectionIndex = this.state.prevActiveSectionIndex;\n  const prevActiveSlideIndex = this.state.prevActiveSlideIndex;\n  const prevActivePanelIndex = this.getPrevActivePanelIndex(prevActiveSectionIndex, prevActiveSlideIndex);\n\n  this.state.numberOfSections = sectionPanels.length;\n  this.state.numberOfSlides = allSlides.length;\n  this.state.sections = sectionPanels;\n  this.state.slides = allSlides;\n  this.state.panels = allSlides.map((slide, index) => new Panel(slide, index, this));\n  this.state.prevActiveSectionIndex = prevActiveSectionIndex;\n  this.state.prevActiveSlideIndex = prevActiveSlideIndex;\n  this.state.prevActivePanelIndex = prevActivePanelIndex;\n}", "CodeBleu_score": 39.86164429590938}, {"code": "export function updateStructuralState(){\n\t  const allSectionItems = Array.from(this.getContainer().querySelectorAll(`.${this.options.sectionSelector}`));\n  const visibleSectionItems = allSectionItems.filter(\n    (sectionItem) => utils.getVisible(sectionItem)\n  );\n\n  const sectionPanels = visibleSectionItems.map(\n    (sectionItem) => new SectionPanel(sectionItem, this)\n  );\n\n  const allSections = sectionPanels.reduce(\n    (acc, sectionPanel) => acc.concat(sectionPanel.getSections()),\n    []\n  );\n\n  const allSlides = allSections.reduce(\n    (acc, section) => acc.concat(section.getSlides()),\n    []\n  );\n\n  const panels = allSections.reduce(\n    (acc, section) => acc.concat(section.getPanels()),\n    []\n  );\n\n  const prevActiveSectionIndex = this.state.prevActiveSectionIndex;\n  const prevActiveSlideIndex = this.state.prevActiveSlideIndex;\n  const prevActivePanelIndex = this.state.prevActivePanelIndex;\n\n  this.state.sections = allSections;\n  this.state.slides = allSlides;\n  this.state.panels = panels;\n  this.state.numOfSections = allSections.length;\n  this.state.numOfSlides = allSlides.length;\n\n  this.state.prevActiveSectionIndex = this.getPrevActiveSectionIndex(prevActiveSectionIndex);\n  this.state.prevActiveSlideIndex = this.getPrevActiveSlideIndex(prevActiveSlideIndex);\n  this.state.prevActivePanelIndex = this.getPrevActivePanelIndex(prevActivePanelIndex);\n}", "CodeBleu_score": 39.67036141441954}, {"code": "export function updateStructuralState(){\n\t  const allSectionItems = Array.from(\n    utils.$(\n      this.getContainer(),\n      \"[data-section-item]\",\n      utils.$.ALL\n    )\n  );\n  const visibleSections = allSectionItems.filter((item) => {\n    return utils.getVisible(item);\n  });\n  const panels = visibleSections.reduce((acc, section) => {\n    const sectionPanel = new SectionPanel(section);\n    return sectionPanel.isVisible() ? acc.concat(sectionPanel) : acc;\n  }, []);\n  const allSlides = panels.reduce((acc, panel) => {\n    return acc.concat(panel.getSlides());\n  }, []);\n  const prevActiveSectionIndex = this.getPrevActivePanelIndex(\n    \"section\",\n    panels\n  );\n  const prevActiveSlideIndex = this.getPrevActivePanelIndex(\n    \"slide\",\n    allSlides\n  );\n  this.setState({\n    sections: panels,\n    slides: allSlides,\n    numSections: panels.length,\n    numSlides: allSlides.length,\n    prevActiveSectionIndex,\n    prevActiveSlideIndex,\n  });\n}", "CodeBleu_score": 42.339924856917165}]}
{"instance_id": "2b3c1077db45", "generation_result": [{"code": "function performHorizontalMove(slides, v, fireCallback){\n\t    var $slides = utils.$(slides);\n    var options = getOptions();\n\n    if (options.css3) {\n        var t = getTransforms();\n        var scrollLeft = Math.round($slides.scrollLeft() + v);\n\n        $slides.css(t.prefix + 'transform', 'translate3d(' + scrollLeft + 'px, 0px, 0px)');\n\n        setTimeout(function () {\n            setState(slides, 'moving', false);\n            fireCallback();\n        }, options.css3Easing.duration);\n    } else {\n        var scrollLeft = $slides.scrollLeft() + v;\n\n        $slides.scrollLeft(scrollLeft);\n\n        setTimeout(function () {\n            setState(slides, 'moving', false);\n            fireCallback();\n        }, 0);\n    }\n}", "CodeBleu_score": 32.90974430217883}, {"code": "function performHorizontalMove(slides, v, fireCallback){\n\t    if (slides.options.css3) {\n        slides.navigation.update(slides.current);\n        slides.slides.css(\"transform\", \"translate3d(\" + v + \"px, 0, 0)\");\n        setTimeout(function () {\n            fireCallback();\n        }, 500);\n    } else {\n        slides.slides.scrollTo(v, 0, 500, fireCallback);\n    }\n}", "CodeBleu_score": 14.671982471041058}, {"code": "function performHorizontalMove(slides, v, fireCallback){\n\t    var options = getOptions();\n    var slidesNavigation = activeSlidesNavigation;\n    var slidesContainer = utils.$(options.slidesContainerSelector);\n    var slidesNavigationContainer = utils.$(options.slidesNavigationContainerSelector);\n    var slidesNavigationContainerWidth = slidesNavigationContainer.width();\n    var slidesContainerWidth = slidesContainer.width();\n    var slidesContainerHeight = slidesContainer.height();\n    var slidesContainerPosition = slidesContainer.position();\n    var slidesContainerLeft = slidesContainerPosition.left;\n    var slidesContainerTop = slidesContainerPosition.top;\n    var slidesContainerScrollLeft = slidesContainer.scrollLeft();\n    var slidesContainerScrollTop = slidesContainer.scrollTop();\n    var slidesContainerTransforms = getTransforms(slidesContainer);\n    var slidesContainerTransformsX = slidesContainerTransforms.x;\n    var slidesContainerTransformsY = slidesContainerTransforms.y;\n    var slidesContainerTransformsZ = slidesContainerTransforms.z;\n    var slidesContainerTransformsPerspective = slidesContainerTransforms.perspective;\n    var slidesContainerTransformsPerspectiveOrigin = slidesContainerTransforms.perspectiveOrigin;\n    var slidesContainerTransformsMatrix = slidesContainerTransforms.matrix;\n    var slidesContainerTransformsMatrixX = slidesContainerTransformsMatrix.x;\n    var slidesContainerTransformsMatrixY = slidesContainerTransformsMatrix.y;\n    var slidesContainerTransformsMatrixZ = slidesContainerTransformsMatrix.z;\n    var slidesContainerTransformsMatrixPerspective = slidesContainerTransformsMatrix.perspective;\n    var slidesContainerTransformsMatrixPerspectiveOrigin = slidesContainerTransformsMatrix.perspectiveOrigin;\n    var slidesContainerTransformsMatrixMatrix = slidesContainerTransformsMatrix.matrix;\n    var slidesContainerTransformsMatrixMatrixX = slidesContainerTransformsMatrixMatrix.x;\n    var slidesContainerTransformsMatrixMatrixY = slidesContainerTransformsMatrixMatrix.y;\n    var slidesContainerTransformsMatrixMatrixZ = slidesContainerTransformsMatrixMatrix.z;\n    var slidesContainerTransformsMatrixMatrixPerspective = slidesContainerTransformsMatrixMatrix.perspective;\n    var slidesContainerTransformsMatrixMatrixPerspectiveOrigin = slidesContainerTransformsMatrixMatrix.perspectiveOrigin;\n    var slidesContainerTransformsMatrixMatrixMatrix = slidesContainerTrans", "CodeBleu_score": 25.612375001914835}]}
{"instance_id": "82491a251576", "generation_result": [{"code": "buildLink (name: string, params: Record<string, any>): string{\n\t  const queryString = Object.keys(params)\n    .sort()\n    .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n    .join('&')\n\n  return `${name}?${queryString}`\n}", "CodeBleu_score": 44.977728435068734}, {"code": "buildLink (name: string, params: Record<string, any>): string{\n\t  const queryString = Object.keys(params)\n    .sort()\n    .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n    .join('&')\n    .replace(/%20/g, '+')\n  return `${name}?${queryString}`.replace(/&$/, '')\n}", "CodeBleu_score": 46.13351420710771}, {"code": "buildLink (name: string, params: Record<string, any>): string{\n\t  const query = Object.keys(params)\n    .sort()\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`)\n    .join('&')\n  return `${name}?${query}`\n}", "CodeBleu_score": 43.22590279113422}]}
{"instance_id": "89f175570176", "generation_result": [{"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\t    return Promise.reject({\n        errMsg: 'showLoading: fail'\n    })\n}", "CodeBleu_score": 8.414319378426622}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\t  return Promise.resolve({ errMsg: 'showLoading:ok' })\n}", "CodeBleu_score": 8.197700503983219}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\t    return Taro.showLoading(options)\n}", "CodeBleu_score": 8.178573279012872}]}
{"instance_id": "7d41757a0645", "generation_result": [{"code": "export function HomepageTweets(){\n\t  return (\n    <div className=\"container\">\n      <h2 className=\"text-center\">Tweets</h2>\n      <div className=\"row\">\n        {TweetList.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            id={tweet.id}\n            username={tweet.username}\n            name={tweet.name}\n            date={tweet.date}\n            tweet={tweet.tweet}\n            image={tweet.image}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}", "CodeBleu_score": 58.777725795372724}, {"code": "export function HomepageTweets(){\n\t    return (\n        <div className=\"container\">\n            <h1 className=\"text-center\">Tweets</h1>\n            <div className=\"row\">\n                {TweetList.map(tweet => (\n                    <Tweet\n                        key={tweet.id}\n                        id={tweet.id}\n                        name={tweet.name}\n                        username={tweet.username}\n                        date={tweet.date}\n                        message={tweet.message}\n                        comments={tweet.comments}\n                        retweets={tweet.retweets}\n                        likes={tweet.likes}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}", "CodeBleu_score": 51.96622312249487}, {"code": "export function HomepageTweets(){\n\t    return (\n        <div className=\"container\">\n            <h2 className=\"text-center m-4\">Homepage Tweets</h2>\n            <div className=\"row\">\n                <Tweet tweet={TweetList[0]} />\n                <Tweet tweet={TweetList[1]} />\n            </div>\n        </div>\n    )\n}", "CodeBleu_score": 56.03106093632406}]}
