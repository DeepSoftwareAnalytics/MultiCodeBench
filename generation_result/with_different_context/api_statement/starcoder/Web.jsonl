{"instance_id": "112855ce32e1", "generation_result": [{"code": "handleOpenMarketplace = (): void => {\n\t\tconst modalID: string = \"marketplaceModal\"\n\tconst dialogType: string = \"marketplace\"\n\tconst dialogProps: IMarketplaceDialogProps = {\n\t\tsource: \"actions_menu\"\n\t}\n\tthis.openModal(modalID, dialogType, dialogProps)\n}", "CodeBleu_score": 25.702301097998127}, {"code": "handleOpenMarketplace = (): void => {\n\t\tconst modalId = 'marketplace'\n\tconst dialogType = MODAL_TYPES.MARKETPLACE\n\tconst dialogProps = {}\n\n\tthis.openModal(modalId, dialogType, dialogProps)\n}", "CodeBleu_score": 22.955656735899975}, {"code": "handleOpenMarketplace = (): void => {\n\t\tconst { openModal } = this.props.actions\n\tconst modalProps = {\n\t\tmodalId: MODAL_ID,\n\t\tdialogType: MarketPlaceDialog,\n\t\tdialogProps: {\n\t\t\tsource: 'actions_menu',\n\t\t},\n\t}\n\topenModal(modalProps)\n}", "CodeBleu_score": 34.31141823198375}]}
{"instance_id": "421836df0bf0", "generation_result": [{"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\tconst {\nchannelID,\nlocation,\npostID,\nrootID,\nteamID,\n} = binding\nconst context = createCallContext(channelID, location, postID, rootID, teamID)\ntry {\nconst result = await this.props.actions.handleBindingClick(binding, context, intl)\nswitch (result.type) {\ncase 'OK':\n{\nconst { message } = result\nthis.props.actions.postEphemeralCallResponseForPost(postID, message)\nbreak\n}\ncase 'NAVIGATE':\n{\nconst { path } = result\nthis.props.actions.navigateToApp(path)\nbreak\n}\ncase 'FORM':\n{\nconst { form } = result\nthis.props.actions.openAppsModal(form)\nbreak\n}\ndefault:\n{\nconst { message } = result\nthis.props.actions.postEphemeralCallResponseForPost(postID, message)\nbreak\n}\n}\n} catch (error) {\nconst errorMessage = error.message || 'Something went wrong.'\nthis.props.actions.postEphemeralCallResponseForPost(postID, errorMessage)\n}\n}", "CodeBleu_score": 27.587939059057824}, {"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\tconst { postEphemeralCallResponseForPost } = this.props.actions\nconst { formatMessage } = this.props.intl\nconst {\napp_id: appId,\nlocation,\nchannel_id: channelId,\nteam_id: teamId,\npost_id: postId,\nroot_id: rootId,\n} = binding\nconst context = createCallContext(\nappId,\nlocation,\nchannelId,\nteamId,\npostId,\nrootId,\n)\ntry {\nconst response = await this.props.actions.handleBindingClick(binding, context, formatMessage)\nif (response.type === 'OK') {\npostEphemeralCallResponseForPost(postId, response.text)\n} else if (response.type === 'NAVIGATE') {\nthis.props.actions.navigateToApp(response.app_id, response.context, response.url)\n} else if (response.type === 'FORM') {\nthis.props.actions.openAppsModal(response)\n} else {\nthrow new Error(`Unsupported response type: ${response.type}`)\n}\n} catch (error) {\npostEphemeralCallResponseForPost(postId, {\ntype: 'plain_text',\ntext: error.message,\n})\n}\n}", "CodeBleu_score": 27.85320236757115}, {"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\tconst {\nlocation,\npostId,\nrootId,\nchannelId,\nteamId,\n} = this.props\nconst context = createCallContext(appID, location, channelId, teamId, postId, rootId)\ntry {\nconst response = await this.props.actions.handleBindingClick(binding, context, intl)\nif (response.type === 'OK') {\nthis.props.actions.postEphemeralCallResponseForPost(postId, rootId, response.message)\n} else if (response.type === 'NAVIGATE') {\nthis.props.actions.navigateToApp(response.appID, response.page, response.arguments)\n} else if (response.type === 'FORM') {\nthis.props.actions.openAppsModal(response.appID, response.form, response.arguments)\n} else {\nthis.props.actions.postEphemeralCallResponseForPost(postId, rootId, {\ntype: 'error',\nmessage: 'unhandled_response',\n})\n}\n} catch (error) {\nthis.props.actions.postEphemeralCallResponseForPost(postId, rootId, {\ntype: 'error',\nmessage: error.message,\n})\n}\n}", "CodeBleu_score": 28.528798373690744}]}
{"instance_id": "7b2d58ae93e2", "generation_result": [{"code": "handleDropdownOpened = (open: boolean) =>{\n\t\tconst {\n\t\tdropdownButtonRef,\n\t\tdropdownContainerRef,\n\t\tdropdownPosition,\n\t\tdropdownTop,\n\t\tdropdownBottom,\n\t} = this.state;\n\n\t// Trigger the prop function to handle the dropdown state\n\tthis.props.handleDropdownOpened(open);\n\n\tif (open) {\n\t\t// Calculate the position of the dropdown button\n\t\tconst buttonPosition = dropdownButtonRef.current.getBoundingClientRect();\n\n\t\t// Determine the available space above and below the button\n\t\tconst top = buttonPosition.top - dropdownPosition.top;\n\t\tconst bottom = dropdownPosition.bottom - buttonPosition.bottom;\n\n\t\t// Update the component state to open the dropdown upwards if there is more space on top than on the bottom\n\t\tthis.setState({\n\t\t\tdropdownTop: top > bottom ? top : bottom,\n\t\t\tdropdownBottom: top > bottom ? bottom : top,\n\t\t});\n\t} else {\n\t\t// Reset the component state to close the dropdown\n\t\tthis.setState({\n\t\t\tdropdownTop: 0,\n\t\t\tdropdownBottom: 0,\n\t\t});\n\t}\n\n\t// Calculate the available space on the right and left of the dropdown button\n\tconst right = dropdownPosition.right - dropdownButtonRef.current.getBoundingClientRect().right;\n\tconst left = dropdownButtonRef.current.getBoundingClientRect().left - dropdownPosition.left;\n\n\t// Calculate the available space on the right and left of the dropdown container\n\tconst rightContainer =\n\t\tdropdownContainerRef.current.getBoundingClientRect().right - dropdownPosition.right;\n\tconst leftContainer = dropdownPosition.left - dropdownContainerRef.current.getBoundingClientRect().left;\n\n\t// Update the component state to open the dropdown to the left if there is more space on the left than on the right\n\tthis.setState({\n\t\tdropdownLeft: left > right ? left : right,\n\t\tdropdownRight: left > right ? right : left,\n\t\tdropdownLeftContainer: leftContainer > rightContainer ? leftContainer : rightContainer,\n\t\tdropdownRightContainer: leftContainer > rightContainer ? rightContainer : leftContainer,\n\t});\n}", "CodeBleu_score": 23.151093541315042}, {"code": "handleDropdownOpened = (open: boolean) =>{\n\t\tconst { dropdownButtonRef, dropdownButtonHeight, dropdownHeight } = this.state;\n\tconst { dropdownButtonPosition, dropdownPosition } = this.props;\n\tconst dropdownButtonPositionTop = dropdownButtonPosition.top;\n\tconst dropdownButtonPositionBottom = dropdownButtonPosition.bottom;\n\tconst dropdownPositionTop = dropdownPosition.top;\n\tconst dropdownPositionBottom = dropdownPosition.bottom;\n\tconst spaceAboveButton = dropdownButtonPositionTop - dropdownPositionTop;\n\tconst spaceBelowButton = dropdownPositionBottom - dropdownButtonPositionBottom;\n\tconst spaceAboveButtonWithDropdown = spaceAboveButton - dropdownHeight;\n\tconst spaceBelowButtonWithDropdown = spaceBelowButton - dropdownHeight;\n\n\tif (open) {\n\t\tthis.setState({\n\t\t\tdropdownOpened: true,\n\t\t\tdropdownButtonPositionTop: dropdownButtonPositionTop - dropdownHeight,\n\t\t\tdropdownPositionTop: dropdownPositionTop - dropdownHeight,\n\t\t});\n\t} else {\n\t\tthis.setState({\n\t\t\tdropdownOpened: false,\n\t\t\tdropdownButtonPositionTop: dropdownButtonPositionTop + dropdownHeight,\n\t\t\tdropdownPositionTop: dropdownPositionTop + dropdownHeight,\n\t\t});\n\t}\n\n\tif (spaceAboveButtonWithDropdown > spaceBelowButtonWithDropdown) {\n\t\tthis.setState({\n\t\t\tdropdownPositionTop: dropdownPositionTop - dropdownHeight,\n\t\t});\n\t} else {\n\t\tthis.setState({\n\t\t\tdropdownPositionTop: dropdownPositionTop + dropdownHeight,\n\t\t});\n\t}\n\n\treturn !open;\n}", "CodeBleu_score": 19.852266394173174}, {"code": "handleDropdownOpened = (open: boolean) =>{\n\t\tconst dropdownHeight = this.state.dropdownHeight;\n\tconst dropdownWidth = this.state.dropdownWidth;\n\tconst dropdownButtonHeight = this.state.dropdownButtonHeight;\n\tconst dropdownButtonWidth = this.state.dropdownButtonWidth;\n\tconst dropdownButtonY = this.state.dropdownButtonY;\n\tconst dropdownButtonX = this.state.dropdownButtonX;\n\tconst dropdownButtonX2 = this.state.dropdownButtonX2;\n\tconst dropdownButtonY2 = this.state.dropdownButtonY2;\n\tconst dropdownButtonX3 = this.state.dropdownButtonX3;\n\tconst dropdownButtonY3 = this.state.dropdownButtonY3;\n\tconst dropdownButtonX4 = this.state.dropdownButtonX4;\n\tconst dropdownButtonY4 = this.state.dropdownButtonY4;\n\tconst dropdownButtonX5 = this.state.dropdownButtonX5;\n\tconst dropdownButtonY5 = this.state.dropdownButtonY5;\n\tconst dropdownButtonX6 = this.state.dropdownButtonX6;\n\tconst dropdownButtonY6 = this.state.dropdownButtonY6;\n\tconst dropdownButtonX7 = this.state.dropdownButtonX7;\n\tconst dropdownButtonY7 = this.state.dropdownButtonY7;\n\tconst dropdownButtonX8 = this.state.dropdownButtonX8;\n\tconst dropdownButtonY8 = this.state.dropdownButtonY8;\n\tconst dropdownButtonX9 = this.state.dropdownButtonX9;\n\tconst dropdownButtonY9 = this.state.dropdownButtonY9;\n\tconst dropdownButtonX10 = this.state.dropdownButtonX10;\n\tconst dropdownButtonY10 = this.state.dropdownButtonY10;\n\tconst dropdownButtonX11 = this.state.dropdownButtonX11;\n\tconst dropdownButtonY11 = this.state.dropdownButtonY11;\n\tconst dropdownButtonX12 = this.state.dropdownButtonX12;\n\tconst dropdownButtonY12 = this.state.dropdownButtonY12;\n\tconst dropdownButtonX13 = this.state.dropdownButtonX13;\n\tconst dropdownButtonY13 = this.state.dropdownButtonY13;\n\tconst", "CodeBleu_score": 14.880478138066945}]}
{"instance_id": "024f57c26061", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\tconst {post} = ownProps;\nconst isSystemMessage = post.type === PostTypes.SYSTEM_WITHHELD;\nconst appBindings = getAppBindingsForPost(state, post.id);\nconst appsEnabled = state.entities.general.config.EnableCustomEmoji === 'true' || state.entities.general.config.EnableGifPicker === 'true';\nconst pluginComponents = getPlugins(state);\nconst userRoles = getUserRoles(state);\nconst teamID = getCurrentTeamId(state);\nconst isMobileView = getIsMobileView(state);\nconst marketplaceEnabled = state.entities.general.config.EnableMarketplace === 'true';\nconst isSystemAdmin = haveICurrentTeamPermission(state, {permission: Permissions.MANAGE_SYSTEM});\n\nreturn {\nappBindings,\nappsEnabled,\npluginComponents,\nuserRoles,\nteamID,\nisMobileView,\nisSystemMessage,\nmarketplaceEnabled,\nisSystemAdmin,\n};\n}", "CodeBleu_score": 43.926007254183865}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\tconst {post} = ownProps;\nconst isSystemMessage = isSystemMessagePost(post);\nconst appBindings = getAppBindingsForPost(state, post);\nconst appsEnabled = isSystemMessage ? state.entities.apps.appsEnabled : state.entities.apps.userHasAppBindings;\nconst pluginComponents = getPluginPostComponents(state, post);\nconst userRoles = getUserRolesForPost(state, post);\nconst teamId = getCurrentTeamId(state);\nconst isMobileView = getIsMobileView(state);\nconst haveICurrentTeamPermission = haveICurrentTeamPermissionFactory(state);\nconst haveICurrentChannelPermission = haveICurrentChannelPermissionFactory(state);\nconst haveICurrentUserPermission = haveICurrentUserPermissionFactory(state);\nconst marketplacePermissions = getMarketplacePermissions(state);\nconst isMarketplaceEnabled = state.entities.general.marketplaceEnabled;\nconst isCombinedUserActivityPost = isCombinedUserActivityPostFactory(state);\nconst currentUser = getCurrentUser(state);\nconst isSystemAdmin = currentUser ? currentUser.is_admin : false;\n\nreturn {\nappBindings,\nappsEnabled,\npluginComponents,\nuserRoles,\nteamId,\nisMobileView,\nhaveICurrentTeamPermission,\nhaveICurrentChannelPermission,\nhaveICurrentUserPermission,\nmarketplacePermissions,\nisMarketplaceEnabled,\nisCombinedUserActivityPost,\nisSystemAdmin,\n};\n}", "CodeBleu_score": 42.2565039609723}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\tconst {", "CodeBleu_score": 2.802871483359016}]}
{"instance_id": "ae0a07f4dbea", "generation_result": [{"code": "export default function DeviceIcon(props: Props){\n\t\tconst intl = useIntl();\n\tconst title = isMessageDescriptor(props.deviceTitle)\n\t\t? intl.formatMessage(props.deviceTitle)\n\t\t: props.deviceTitle;\n\treturn (\n\t\t<Icon\n\t\t\tclassName={props.devicePicture}\n\t\t\ttitle={title}\n\t\t/>\n\t);\n}", "CodeBleu_score": 53.43101419472842}, {"code": "export default function DeviceIcon(props: Props){\n\t\tconst {\n\t\tdevicePicture,\n\t\tdeviceTitle,\n\t\t...rest\n\t} = props;\n\n\tconst intl = useIntl();\n\n\tconst title = isMessageDescriptor(deviceTitle)\n\t\t? intl.formatMessage(deviceTitle)\n\t\t: deviceTitle;\n\n\treturn (\n\t\t<Icon\n\t\t\t{...rest}\n\t\t\tclassName={devicePicture}\n\t\t\ttitle={title}\n\t\t/>\n\t);\n}", "CodeBleu_score": 30.748898216247323}, {"code": "export default function DeviceIcon(props: Props){\n\t\tconst intl = useIntl();\n\tconst title = isMessageDescriptor(props.deviceTitle) ? intl.formatMessage(props.deviceTitle) : props.deviceTitle;\n\treturn (\n\t\t<span className={props.devicePicture} title={title}>\n\t\t\t{props.children}\n\t\t</span>\n\t);\n}", "CodeBleu_score": 50.63211602175291}]}
{"instance_id": "e0a805402908", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t\tconst {currentChannelId, currentTeamId} = ownProps;\n\tconst currentChannel = state.entities.channels.channels[currentChannelId];\n\tconst teammateNameDisplaySetting = getTeammateNameDisplaySetting(state, currentChannelId);\n\n\tconst searchTerm = getSearchTerm(state);\n\tconst teammateGroups = getTeammateGroups(state, currentChannelId, currentTeamId, teammateNameDisplaySetting, searchTerm);\n\n\treturn {\n\t\tcurrentChannelName: currentChannel.display_name,\n\t\tcurrentChannelId,\n\t\tcurrentTeamId,\n\t\tteammateGroups,\n\t\tteammateNameDisplaySetting,\n\t\tsearchTerm,\n\t};\n}", "CodeBleu_score": 34.278227488691385}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t\tconst currentChannel = ownProps.channel || getCurrentChannelId(state)\n\tconst currentChannelInfo = getChannel(state, currentChannel)\n\tconst teamId = currentChannelInfo.team_id\n\tconst groups = getGroupsNotAssociatedToChannel(state, teamId, currentChannel)\n\tconst searchTerm = getSearchTerm(state)\n\tconst filteredGroups = filterGroups(groups, searchTerm)\n\n\treturn {\n\t\tcurrentChannelName: currentChannelInfo.name,\n\t\tcurrentChannelId: currentChannel,\n\t\tteamId,\n\t\tsearchTerm,\n\t\tfilteredGroups,\n\t}\n}", "CodeBleu_score": 35.13933113083111}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t\tconst {currentChannelId} = state.entities.channels;\n\tconst {currentTeamId} = state.entities.teams;\n\tconst {searchTerm} = state.entities.search;\n\tconst {groups} = state.entities.groups;\n\tconst {channels} = state.entities.channels;\n\n\tconst currentChannel = channels[currentChannelId];\n\tconst currentTeam = state.entities.teams[currentTeamId];\n\n\tconst filteredGroups = Object.values(groups).filter((group) => {\n\t\tif (group.channel_id === currentChannelId) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (currentTeam && group.team_id === currentTeamId) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t});\n\n\tif (searchTerm) {\n\t\tconst regex = new RegExp(searchTerm, 'i');\n\n\t\tfilteredGroups.forEach((group) => {\n\t\t\tgroup.display_name = regex.test(group.display_name) || regex.test(group.name);\n\t\t});\n\t}\n\n\treturn {\n\t\t...ownProps,\n\t\tcurrentChannel,\n\t\tcurrentTeam,\n\t\tsearchTerm,\n\t\tfilteredGroups,\n\t};\n}", "CodeBleu_score": 37.79651661932579}]}
{"instance_id": "a3412b1c0762", "generation_result": [{"code": "componentDidUpdate(prevProps: Props){\n\t\tif (this.props.searchTerm !== prevProps.searchTerm) {\n\t\tif (this.searchTimeout) {\n\t\t\tclearTimeout(this.searchTimeout);\n\t\t}\n\t\tthis.searchTimeout = setTimeout(() => {\n\t\t\tthis.setGroupsLoadingState(true);\n\t\t\tthis.props.actions.getGroupsNotAssociatedToChannel(this.props.currentChannelId, this.props.searchTerm)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.setGroupsLoadingState(false);\n\t\t\t\t});\n\t\t}, 300);\n\t}\n}", "CodeBleu_score": 30.44114877165723}, {"code": "componentDidUpdate(prevProps: Props){\n\t\tif (this.props.searchTerm !== prevProps.searchTerm) {\n\t\tclearTimeout(this.searchTimeout);\n\t\tthis.searchTimeout = setTimeout(() => {\n\t\t\tthis.props.actions.setGroupsNotAssociatedToChannel(this.props.searchTerm);\n\t\t\tthis.props.actions.setGroupsLoadingState(true);\n\t\t}, 500);\n\t}\n}", "CodeBleu_score": 22.53177148410922}, {"code": "componentDidUpdate(prevProps: Props){\n\t\tif (this.props.currentChannelId !== prevProps.currentChannelId) {\n\t\tthis.props.actions.getGroupsNotAssociatedToChannel(this.props.currentChannelId);\n\t}\n\tif (this.props.searchTerm !== prevProps.searchTerm) {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t}\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.setGroupsLoadingState(true);\n\t\t\tthis.props.actions.getGroupsNotAssociatedToChannel(this.props.currentChannelId);\n\t\t\tthis.setGroupsLoadingState(false);\n\t\t}, 500);\n\t}\n}", "CodeBleu_score": 33.37556177081318}]}
{"instance_id": "0f47faf97411", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t\tconst {currentChannelId, searchTerm} = state;\n\tconst currentChannel = state.entities.channels.channels[currentChannelId];\n\tconst currentChannelGroupIds = currentChannel.group_ids || [];\n\n\tconst groups = Object.values(state.entities.groups.groups);\n\tconst filteredGroups = searchTerm ? filterGroups(groups, searchTerm) : groups;\n\tconst excludedGroups = getExcludedGroups(currentChannelGroupIds, filteredGroups);\n\n\treturn {\n\t\tcurrentChannel,\n\t\tcurrentChannelGroupIds,\n\t\tfilteredGroups,\n\t\tsearchTerm,\n\t\texcludedGroups,\n\t\tactions: bindActionCreators({\n\t\t\tgetGroupsNotAssociatedToChannel,\n\t\t\tgetGroupsAssociatedToChannel,\n\t\t\tsetChannelDisplayName,\n\t\t\tsetChannelPurpose,\n\t\t\tsetChannelHeader,\n\t\t\tsetChannelType,\n\t\t\tsetChannelReadOnly,\n\t\t\tsetChannelTotalMsgCount,\n\t\t\tsetChannelMemberCount,\n\t\t\tsetChannelFavorite,\n\t\t\tsetChannelMuted,\n\t\t\tsetChannelArchived,\n\t\t\tsetChannelScheme,\n\t\t\tsetChannelGroupConstrained,\n\t\t\tsetChannelGroup,\n\t\t\tsetChannelGroupSyncable,\n\t\t\tsetChannelScheme,\n\t\t\tsetChannelSchemeRoles,\n\t\t\tsetChannelSchemeAdmins,\n\t\t\tsetChannelSchemeGuests,\n\t\t\tsetChannelSchemeChannels,\n\t\t\tsetChannelSchemeCategories,\n\t\t\tsetChannelSchemeAll,\n\t\t\tsetChannelSchemeDelete,\n\t\t\tsetChannelSchemeManageMembers,\n\t\t\tsetChannelSchemeRead,\n\t\t\tsetChannelSchemeCreatePost,\n\t\t\tsetChannelSchemeUploadFile,\n\t\t\tsetChannelSchemeAddUserToTeam,\n\t\t\tsetChannelSchemeJoinPublicChannels,\n\t\t\tsetChannelSchemeCreatePrivateChannels,\n\t\t\tsetChannelSchemeCreateSharedChannels,\n\t\t\tsetChannelSchemeAddTeamToOrg,\n\t\t\tsetChannelSchemeManagePublicChannels,\n\t\t\tsetChannelSchemeManagePrivateChannels,\n\t\t\tsetChannelSchemeManageSharedChannels,\n\t\t\tsetChannelSchemeImport,\n\t\t\tsetChannelSchemeExport,\n\t\t\tsetChannelSchemeManageGuests,\n\t\t\tsetChannelSchemeSetProfileImage,\n\t\t\tsetChannelSchemeSetProfileBanner,\n\t\t\tsetChannelSchemeCreateDirectChannel,\n\t\t\tsetChannelSchemeCreateGroupChannel,\n\t\t\tsetChannelSchemeCreatePrivateChannel,\n\t\t\tsetChannelSchemeCreatePublicChannel,\n\t\t\tsetChannelSchemeCreateTeamChannel,\n\t\t\tsetChannelSchemeManageChannels,\n\t\t\tsetChannelScheme", "CodeBleu_score": 27.244023073049874}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t\tconst currentChannel = ownProps.currentChannelId || state.entities.channels.currentChannelId;\n\tconst currentChannelGroupIds = state.entities.channels.channels[currentChannel].group_constrained ? state.entities.channels.channels[currentChannel].group_constrained.split(',') : [];\n\tconst searchTerm = state.entities.search.currentSearchTerm;\n\tconst groups = state.entities.groups.groups;\n\tconst excludedGroups = state.entities.search.excludedGroups;\n\n\tlet filteredGroups = {};\n\tif (searchTerm === '') {\n\t\tfilteredGroups = groups;\n\t} else {\n\t\tfilteredGroups = Object.keys(groups).reduce((accumulator, key) => {\n\t\t\tconst group = groups[key];\n\t\t\tconst groupMatch = group.name.match(searchRegex.test(searchTerm));\n\t\t\tif (groupMatch) {\n\t\t\t\taccumulator[key] = group;\n\t\t\t}\n\t\t\treturn accumulator;\n\t\t}, {});\n\t}\n\n\tconst filteredGroupIds = Object.keys(filteredGroups);\n\n\tconst groupIds = Object.keys(groups);\n\n\tconst notInCurrentChannel = groupIds.filter((id) => !currentChannelGroupIds.includes(id));\n\n\tconst notExcluded = notInCurrentChannel.filter((id) => !excludedGroups.includes(id));\n\n\treturn {\n\t\tcurrentChannel,\n\t\tcurrentChannelGroupIds,\n\t\tsearchTerm,\n\t\tfilteredGroups,\n\t\tnotExcluded,\n\t\tnotInCurrentChannel,\n\t\texcludedGroups,\n\t};\n}", "CodeBleu_score": 35.185899192037986}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t\tconst {currentChannelId} = state.entities.channels;\n\tconst {searchTerm} = state.entities.search;\n\tconst {id: teamId} = state.entities.teams.currentTeam;\n\tconst {groupIds, channelIds} = state.entities.groups;\n\tconst {groupSyncable} = state.entities.preferences;\n\tconst {groupMentions} = state.entities.preferences.myPreferences;\n\n\tconst currentChannel = state.entities.channels.channels[currentChannelId];\n\n\tlet channelGroups = [];\n\tif (currentChannel) {\n\t\tchannelGroups = groupIds.filter((id) => {\n\t\t\tconst group = state.entities.groups.groups[id];\n\t\t\treturn group.channel_id === currentChannelId;\n\t\t});\n\t}\n\n\tlet filteredGroups = [];\n\tif (searchTerm) {\n\t\tfilteredGroups = filterGroups(state, teamId, groupIds, searchTerm);\n\t} else {\n\t\tfilteredGroups = channelGroups;\n\t}\n\n\tconst excludedGroups = getExcludedGroups(state, teamId);\n\n\treturn {\n\t\tcurrentChannel,\n\t\tchannelGroups,\n\t\tfilteredGroups,\n\t\texcludedGroups,\n\t\tsearchTerm,\n\t\tgroupSyncable,\n\t\tgroupMentions\n\t};\n}", "CodeBleu_score": 29.697720557294872}]}
{"instance_id": "923c0c472c01", "generation_result": [{"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t\tconst { groupId } = this.state;\n\tconst { setUsersLoadingState, setUsers } = this;\n\tconst { setPage } = this.props;\n\n\tif (page > prevPage) {\n\t\tsetUsersLoadingState(true);\n\t\tif (groupId) {\n\t\t\tthis.fetchGroupUsers(groupId, page);\n\t\t} else {\n\t\t\tthis.fetchUsers(page);\n\t\t}\n\t} else {\n\t\tsetPage(page);\n\t}\n}", "CodeBleu_score": 36.082504740048186}, {"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t\tif (page > prevPage) {\n\t\tthis.setUsersLoadingState(true)\n\t\tconst { groupId } = this.props\n\t\tconst { limit } = this.state\n\t\tif (groupId) {\n\t\t\tthis.fetchGroupUsers(groupId, page, limit)\n\t\t} else {\n\t\t\tthis.fetchUsers(page, limit)\n\t\t}\n\t}\n}", "CodeBleu_score": 38.28554218839213}, {"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t\tif (page > prevPage) {\n\t\tthis.setUsersLoadingState(true)\n\t}\n\n\tconst fetchUsers = async (): Promise<void> => {\n\t\tif (this.groupId) {\n\t\t\tawait this.fetchGroupUsers(page)\n\t\t} else {\n\t\t\tawait this.fetchUsers(page)\n\t\t}\n\t}\n\n\tfetchUsers().then(() => {\n\t\tthis.setUsersLoadingState(false)\n\t})\n}", "CodeBleu_score": 46.232982608896464}]}
{"instance_id": "4614bb3319bb", "generation_result": [{"code": "public search = (searchTerm: string): void => {\n\tconst trimmedSearchTerm = searchTerm.trim()\nclearTimeout(this.props.actions.searchTimeout)\nthis.props.actions.setSearchTerm(trimmedSearchTerm)\nif (trimmedSearchTerm !== '') {\nthis.props.actions.setUsersLoadingState(true)\nthis.props.actions.searchTimeout = setTimeout(() => {\nthis.props.actions.searchProfiles(trimmedSearchTerm)\nthis.props.actions.setUsersLoadingState(false)\n}, SEARCH_DELAY)\n}\n}", "CodeBleu_score": 49.37841647844303}, {"code": "public search = (searchTerm: string): void => {\n\tconst trimmedSearchTerm = searchTerm.trim()\nif (trimmedSearchTerm.length > 0) {\nthis.setUsersLoadingState(true)\nclearTimeout(this.searchTimeout)\nthis.searchTimeout = setTimeout(() => {\nthis.props.actions.searchProfiles(trimmedSearchTerm)\nthis.setUsersLoadingState(false)\n}, 1000)\n} else {\nthis.props.actions.clearSearch()\n}\n}", "CodeBleu_score": 51.25203184437448}, {"code": "public search = (searchTerm: string): void => {\n\tconst trimmedSearchTerm: string = searchTerm.trim()\nthis.clearSearchTimeout()\nthis.setState({ searchTerm: trimmedSearchTerm })\nif (trimmedSearchTerm) {\nthis.setUsersLoadingState()\nthis.searchTimeout = setTimeout(() => {\nthis.props.actions.searchProfiles(trimmedSearchTerm)\n}, SEARCH_DELAY_MS)\n}\n}", "CodeBleu_score": 44.67515167208966}]}
{"instance_id": "aeafe2d0ee11", "generation_result": [{"code": "visibleSections = () =>{\n\t\tconst sections = [];\n\tconst visibleItems = new Set();\n\tconst visibleSubsections = new Set();\n\n\tfor (const section of Object.values(sectionsConfig)) {\n\t\tconst { schema, title, subsections } = section;\n\n\t\tif (!schema || !title) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isVisible = checkVisibility(section);\n\n\t\tif (!isVisible) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsections.push({\n\t\t\t...section,\n\t\t\tsubsections: subsections.filter(subsection => {\n\t\t\t\tconst { schema, title } = subsection;\n\n\t\t\t\tif (!schema || !title) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst isVisible = checkVisibility(subsection);\n\n\t\t\t\tif (isVisible) {\n\t\t\t\t\tvisibleSubsections.add(subsection.schema);\n\t\t\t\t}\n\n\t\t\t\treturn isVisible;\n\t\t\t}),\n\t\t});\n\n\t\tsection.items.forEach(item => {\n\t\t\tconst isVisible = checkVisibility(item);\n\n\t\t\tif (isVisible) {\n\t\t\t\tvisibleItems.add(item.schema);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tsections: sections.map(section => ({\n\t\t\t...section,\n\t\t\titems: section.items.filter(item => visibleItems.has(item.schema)),\n\t\t})),\n\t\tsubsections: sectionsConfig.subsections.filter(subsection => visibleSubsections.has(subsection.schema)),\n\t};\n}", "CodeBleu_score": 30.72574339782018}, {"code": "visibleSections = () =>{\n\t\tconst result = new Set()\n\tconst sections = Object.values(sectionsMap)\n\n\tfor (const section of sections) {\n\t\tif (!section.schema || !section.title) {\n\t\t\tcontinue\n\t\t}\n\n\t\tif (\n\t\t\t!section.isHidden &&\n\t\t\t!section.isEnterpriseReady &&\n\t\t\t!section.isConsoleAccess &&\n\t\t\t!section.isAdminDefinition &&\n\t\t\t!section.isCloud\n\t\t) {\n\t\t\tresult.add(section.url)\n\t\t}\n\t}\n\n\treturn result\n}", "CodeBleu_score": 18.9455189597151}, {"code": "visibleSections = () =>{\n\t\tconst {\n\t\tconfiguration,\n\t\tlicense,\n\t\tbuildEnterpriseReady,\n\t\tconsoleAccess,\n\t\tadminDefinition,\n\t\tcloud\n\t} = this.props;\n\n\tconst sections = [];\n\n\tfor (const section of this.sections) {\n\t\tconst subsections = [];\n\t\tconst items = [];\n\n\t\tfor (const subsection of section.subsections) {\n\t\t\tfor (const item of subsection.items) {\n\t\t\t\tif (\n\t\t\t\t\t!item.schema ||\n\t\t\t\t\t!item.title ||\n\t\t\t\t\titem.isHidden ||\n\t\t\t\t\t(item.enterpriseReady && !buildEnterpriseReady) ||\n\t\t\t\t\t(item.cloudOnly && !cloud) ||\n\t\t\t\t\t(item.adminOnly && !adminDefinition) ||\n\t\t\t\t\t(item.consoleOnly && !consoleAccess) ||\n\t\t\t\t\t(item.license && !license) ||\n\t\t\t\t\t(item.enterpriseOnly && license !== \"enterprise\") ||\n\t\t\t\t\t(item.professionalOnly && license !== \"professional\") ||\n\t\t\t\t\t(item.standardOnly && license !== \"standard\") ||\n\t\t\t\t\t(item.communityOnly && license !== \"community\") ||\n\t\t\t\t\t(item.evaluationOnly && license !== \"evaluation\") ||\n\t\t\t\t\t(item.evaluationReady && license !== \"evaluation\" && license !== \"community\")\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\titems.push(item);\n\t\t\t}\n\n\t\t\tif (items.length > 0) {\n\t\t\t\tsubsections.push({\n\t\t\t\t\ttitle: subsection.title,\n\t\t\t\t\titems\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (subsections.length > 0) {\n\t\t\tsections.push({\n\t\t\t\ttitle: section.title,\n\t\t\t\tsubsections\n\t\t\t});\n\t\t}\n\t}\n\n\treturn sections;\n}", "CodeBleu_score": 26.81111722282359}]}
{"instance_id": "e869682a1b2c", "generation_result": [{"code": "handleImageChange = () =>{\n\t\tif (this.imageInputRef.current.files.length > 0) {\n\t\tthis.props.setSaveNeeded(true)\n\t\tthis.setState({\n\t\t\tselectedImage: this.imageInputRef.current.files[0],\n\t\t\tdeleteImage: false\n\t\t})\n\t}\n}", "CodeBleu_score": 16.398773476858448}, {"code": "handleImageChange = () =>{\n\t\tif (this.refs.image.files.length > 0) {\n\t\tthis.props.setSaveNeeded(true);\n\t\tthis.setState({\n\t\t\timage: this.refs.image.files[0],\n\t\t\tdeleteImage: false\n\t\t});\n\t}\n}", "CodeBleu_score": 13.49671595915084}, {"code": "handleImageChange = () =>{\n\t\tif (this.imageInput.current.files.length > 0) {\n\t\tthis.props.setSaveNeeded(true)\n\t\tthis.setState({\n\t\t\timage: this.imageInput.current.files[0],\n\t\t\tdeleteImage: false\n\t\t})\n\t}\n}", "CodeBleu_score": 15.062712790335317}]}
{"instance_id": "8bc13681a6b2", "generation_result": [{"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\t\tif (this.state.channelsToRemove.includes(channel.id)) {\n\t\treturn;\n\t}\n\tthis.setState((prevState: ChannelSelectorState) => {\n\t\tconst page = prevState.page;\n\t\tconst pagination = prevState.pagination;\n\t\tif (page > 1 && pagination.total_count - pagination.page_size <= pagination.page_size * (page - 1)) {\n\t\t\treturn {\n\t\t\t\tchannelsToRemove: [...prevState.channelsToRemove, channel.id],\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tchannelsToRemove: [...prevState.channelsToRemove, channel.id],\n\t\t\tpage: page - 1,\n\t\t};\n\t}, () => {\n\t\tthis.props.onRemoveCallback(this.state.channelsToRemove);\n\t\tthis.setStatePage(this.state.page);\n\t});\n}", "CodeBleu_score": 21.69570970736869}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\tconst { channels } = this.state;\nconst { onRemoveCallback } = this.props;\nconst channelIndex = channels.indexOf(channel);\nif (channelIndex === -1) {\nreturn;\n}\nconst channelToRemove = channels[channelIndex];\nif (channelToRemove.markedForRemoval) {\nreturn;\n}\nconst { page, perPage } = this.state;\nconst { totalCount, totalPageCount } = this.getPaginationProps(channels);\nconst newTotalCount = totalCount - 1;\nconst newTotalPageCount = totalPageCount - 1;\nif (newTotalCount <= perPage && page > 1) {\nthis.setStatePage(page - 1);\n} else if (newTotalCount <= perPage * (page - 1) && newTotalCount > 0) {\nthis.setStatePage(page - 1);\n} else if (newTotalPageCount < 1) {\nthis.setStatePage(1);\n}\nchannelToRemove.markedForRemoval = true;\nonRemoveCallback(channelToRemove);\nthis.setState({\nchannels,\n});\n}", "CodeBleu_score": 32.92944895001163}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\t\tif (this.state.markedForRemoval.includes(channel.id)) {\n\t\treturn;\n\t}\n\n\tconst { page, totalPages, totalCount } = this.getPaginationProps();\n\n\tthis.setState({\n\t\tmarkedForRemoval: [...this.state.markedForRemoval, channel.id],\n\t});\n\n\tthis.props.onRemoveCallback(channel.id);\n\n\tif (totalCount - this.state.markedForRemoval.length <= page * this.props.perPage) {\n\t\tthis.setStatePage(page - 1);\n\t}\n}", "CodeBleu_score": 24.743061652465173}]}
{"instance_id": "ac41454927ac", "generation_result": [{"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t\tconst { channels, removedChannels } = this.state\n\tconst channelId = channel.id\n\tconst channelName = channel.display_name\n\tconst channelTeamId = channel.team_id\n\tconst channelType = channel.type\n\tconst channelIsArchived = channel.delete_at !== 0\n\tconst channelIsMuted = channel.is_muted\n\tconst channelIsReadOnly = channel.is_read_only\n\tconst channelIsDefault = channel.is_default\n\tconst channelIsMember = channel.is_member\n\tconst channelIsPublic = channel.public\n\tconst channelIsShared = channel.shared\n\tconst channelIsGroup = channel.group_constrained\n\tconst channelIsOpen = channel.scheme_id === 'open'\n\tconst channelIsPrivate = channel.scheme_id === 'private'\n\tconst channelIsSecret = channel.scheme_id === 'secret'\n\tconst channelIsArchivedOrMuted = channelIsArchived || channelIsMuted\n\tconst channelIsPublicOrPrivate = channelIsPublic || channelIsPrivate\n\tconst channelIsPublicOrPrivateOrSecret = channelIsPublicOrPrivate || channelIsSecret\n\tconst channelIsPrivateOrSecret = channelIsPrivate || channelIsSecret\n\tconst channelIsPublicOrSecret = channelIsPublic || channelIsSecret\n\tconst channelIsPublicOrGroup = channelIsPublic || channelIsGroup\n\tconst channelIsPublicOrGroupOrSecret = channelIsPublicOrGroup || channelIsSecret\n\tconst channelIsPublicOrGroupOrSecretOrReadOnly = channelIsPublicOrGroupOrSecret || channelIsReadOnly\n\tconst channelIsPublicOrGroupOrSecretOrReadOnlyOrArchivedOrMuted = channelIsPublicOrGroupOrSecretOrReadOnly || channelIsArchivedOrMuted\n\tconst channelIsPublicOrGroupOrSecretOrReadOnlyOrArchivedOrMutedOrReadOnly = channelIsPublicOrGroupOrSecretOrReadOnly || channelIsArchivedOrMuted || channelIsReadOnly\n\tconst channelIsPublicOrGroupOrSecretOrReadOnlyOrArchivedOrMutedOrReadOnlyOrDefault = channelIsPublicOrGroupOrSecretOrReadOnly || channelIsArchivedOrMuted || channelIsReadOnly || channelIsDefault\n\tconst channelIsPublicOrGroupOrSecretOrReadOnlyOrArchivedOrMutedOrReadOnlyOrDefaultOrArchivedOrMuted = channelIsPublicOrGroupOrSecretOrReadOnly", "CodeBleu_score": 19.754837446517236}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t\tconst { removedChannels } = this.state;\n\tconst { teamId } = this.props;\n\tconst { id } = channel;\n\n\tif (!removedChannels.includes(id)) {\n\t\tthis.props.actions.removeChannelFromTeam(teamId, id);\n\t\tthis.setState({\n\t\t\tremovedChannels: [...removedChannels, id],\n\t\t\tnewChannels: this.state.newChannels.filter((channel) => channel.id !== id),\n\t\t\tnavigationBlocked: true,\n\t\t});\n\t} else {\n\t\tthis.props.actions.addChannelToTeam(teamId, id);\n\t\tthis.setState({\n\t\t\tremovedChannels: this.state.removedChannels.filter((channel) => channel.id !== id),\n\t\t\tnavigationBlocked: true,\n\t\t});\n\t}\n}", "CodeBleu_score": 35.44723308158692}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t\tconst { channels } = this.props;\n\tconst { removedChannels } = this.state;\n\n\tif (channels.length === 0) {\n\t\treturn;\n\t}\n\n\tconst channelIds = channels.map((channel) => channel.id);\n\tconst channelIndex = channelIds.indexOf(channel.id);\n\tif (channelIndex === -1) {\n\t\treturn;\n\t}\n\n\tconst newChannels = channels.slice();\n\tnewChannels.splice(channelIndex, 1);\n\n\tconst newRemovedChannels = removedChannels.slice();\n\tif (newRemovedChannels.indexOf(channel.id) === -1) {\n\t\tnewRemovedChannels.push(channel.id);\n\t}\n\n\tthis.props.actions.setNavigationBlocked(true);\n\tthis.setState({\n\t\tremovedChannels: newRemovedChannels,\n\t\tchannels: newChannels,\n\t});\n}", "CodeBleu_score": 34.02842587697818}]}
{"instance_id": "bdc81f9a884e", "generation_result": [{"code": "private removeTeam = (team: Team) =>{\n\tconst { paginationProps, onRemoveCallback } = this.props;\nconst { page, totalCount, pageSize } = paginationProps;\nconst { teams } = this.state;\n\n// If the team is already marked for removal, return.\nif (teams.some((t) => t.id === team.id && t.markedForRemoval)) {\nreturn;\n}\n\n// Update the team list to mark the team for removal.\nconst updatedTeams = teams.map((t) => {\nif (t.id === team.id) {\nreturn { ...t, markedForRemoval: true };\n}\nreturn t;\n});\n\n// Update the pagination props.\nconst updatedPaginationProps = {\n...paginationProps,\ntotalCount: totalCount - 1,\n};\n\n// If the removal affects the pagination, update the current page number.\nif (totalCount - 1 < pageSize * page) {\nthis.setStatePage(page - 1);\n}\n\n// Update the page number in the state.\nthis.setState({ teams: updatedTeams, paginationProps: updatedPaginationProps });\n\n// Invoke the callback.\nonRemoveCallback(team);\n}", "CodeBleu_score": 32.469919193835125}, {"code": "private removeTeam = (team: Team) =>{\n\tconst { onRemoveCallback, paginationProps } = this.props;\nconst { page, totalCount, pageSize } = paginationProps;\nconst { teams } = this.state;\nconst teamIndex = teams.indexOf(team);\nif (teamIndex === -1) {\nreturn;\n}\nconst newTeams = [...teams];\nnewTeams[teamIndex] = { ...newTeams[teamIndex], isMarkedForRemoval: true };\nthis.setState({ teams: newTeams });\nif (onRemoveCallback) {\nonRemoveCallback(team);\n}\nconst newTotalCount = totalCount - 1;\nconst newPage = Math.ceil(newTotalCount / pageSize);\nif (newPage < page) {\nthis.setStatePage(newPage);\n}\nthis.setState({\npaginationProps: {\n...paginationProps,\ntotalCount: newTotalCount,\npage: newPage,\n},\n});\n}", "CodeBleu_score": 32.42394501482361}, {"code": "private removeTeam = (team: Team) =>{\n\t\tif (this.state.teamsToRemove.indexOf(team) !== -1) {\n\t\treturn;\n\t}\n\n\tthis.setState({\n\t\tteamsToRemove: this.state.teamsToRemove.concat(team),\n\t});\n\n\tthis.props.onRemoveCallback(this.state.teamsToRemove);\n\n\tconst paginationProps = this.getPaginationProps();\n\tif (paginationProps.totalPages > 1) {\n\t\tconst visibleTotalCount = this.getVisibleTotalCount();\n\t\tconst visiblePageCount = Math.ceil(visibleTotalCount / paginationProps.pageSize);\n\t\tif (visiblePageCount < paginationProps.currentPage) {\n\t\t\tthis.setStatePage(paginationProps.currentPage - 1);\n\t\t}\n\t}\n\n\tthis.setState({\n\t\tpage: paginationProps.currentPage,\n\t});\n}", "CodeBleu_score": 29.84766556844367}]}
{"instance_id": "e55dd105e5d2", "generation_result": [{"code": "async function loadListInPageNumber(page: number){\n\t\ttry {\n\t\tconst teams = await getTeams(page);\n\t\tconst mappedTeams = teams.map((team) => ({\n\t\t\t...team,\n\t\t\tdisplay_name: team.display_name.split(\" \")[0],\n\t\t}));\n\t\tconst sortedTeams = mappedTeams.sort((a, b) =>\n\t\t\ta.display_name.localeCompare(b.display_name)\n\t\t);\n\t\tif (page === 1) {\n\t\t\tsetList(sortedTeams);\n\t\t} else {\n\t\t\tsetList([...list, ...sortedTeams]);\n\t\t}\n\t\tsetPageNumber(page + 1);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}", "CodeBleu_score": 37.68929000571555}, {"code": "async function loadListInPageNumber(page: number){\n\t\tconst response = await fetch(\n\t\t\"https://api.overwatchleague.com/v2/teams?expand=team.roster&page=\" +\n\t\t\tpage\n\t);\n\tconst data = await response.json();\n\tconst teams = data.data;\n\tconst mappedTeams = teams.map(\n\t\t(team: { name: string; id: string; abbreviation: string }) => {\n\t\t\treturn {\n\t\t\t\tname: team.name,\n\t\t\t\tid: team.id,\n\t\t\t\tabbreviation: team.abbreviation,\n\t\t\t};\n\t\t}\n\t);\n\tconst sortedTeams = mappedTeams.sort(\n\t\t(a: { name: string }, b: { name: string }) => {\n\t\t\tif (a.name < b.name) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a.name > b.name) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t);\n\tif (page === 1) {\n\t\tsetList(sortedTeams);\n\t} else {\n\t\tsetList((prevList) => [...prevList, ...sortedTeams]);\n\t}\n\tsetPageNumber((prevPageNumber) => prevPageNumber + 1);\n}", "CodeBleu_score": 37.51140414748226}, {"code": "async function loadListInPageNumber(page: number){\n\t\ttry {\n\t\tconst response = await fetch(\n\t\t\t'https://api.github.com/orgs/github/teams?per_page=100&page=' + page,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/vnd.github.v3+json',\n\t\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst teams = await response.json();\n\n\t\tif (page === 1) {\n\t\t\tsetList(\n\t\t\t\tteams\n\t\t\t\t\t.map(team => ({\n\t\t\t\t\t\tid: team.id,\n\t\t\t\t\t\tname: team.name,\n\t\t\t\t\t\tdisplayName: team.name,\n\t\t\t\t\t\tdescription: team.description,\n\t\t\t\t\t\tmembers: team.members_count,\n\t\t\t\t\t\trepos: team.repos_count,\n\t\t\t\t\t\tprivacy: team.privacy\n\t\t\t\t\t}))\n\t\t\t\t\t.sort((a, b) => a.displayName.localeCompare(b.displayName))\n\t\t\t);\n\t\t} else {\n\t\t\tsetList(prevState => [\n\t\t\t\t...prevState,\n\t\t\t\t...teams\n\t\t\t\t\t.map(team => ({\n\t\t\t\t\t\tid: team.id,\n\t\t\t\t\t\tname: team.name,\n\t\t\t\t\t\tdisplayName: team.name,\n\t\t\t\t\t\tdescription: team.description,\n\t\t\t\t\t\tmembers: team.members_count,\n\t\t\t\t\t\trepos: team.repos_count,\n\t\t\t\t\t\tprivacy: team.privacy\n\t\t\t\t\t}))\n\t\t\t\t\t.sort((a, b) => a.displayName.localeCompare(b.displayName))\n\t\t\t]);\n\t\t}\n\n\t\tsetPageNumber(page + 1);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n}", "CodeBleu_score": 29.238579011972288}]}
{"instance_id": "2de31ed13207", "generation_result": [{"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t\ttry {\n\t\tconst { data } = await searchTeams({\n\t\t\tterm,\n\t\t\tpage: 1,\n\t\t\tper_page: 20,\n\t\t});\n\t\tconst options = data.map((team: Team) => ({\n\t\t\tlabel: `${team.name} (${team.id})`,\n\t\t\tvalue: team.id,\n\t\t}));\n\t\tcallBack(options);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\tcallBack([]);\n\t}\n}", "CodeBleu_score": 44.42058954903617}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t\ttry {\n\t\tconst response = await searchTeams(term, {\n\t\t\tlimit: 100,\n\t\t\toffset: 0,\n\t\t});\n\t\tconst teams = response.data.teams;\n\t\tconst options = teams.map((team: Team) => {\n\t\t\treturn {\n\t\t\t\tlabel: team.name,\n\t\t\t\tvalue: team.id,\n\t\t\t};\n\t\t});\n\t\tcallBack(options);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\tcallBack([]);\n\t}\n}", "CodeBleu_score": 46.35102846277663}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t\tconst options: OptionsType<{label: string; value: string}> = [];\n\ttry {\n\t\tconst response = await searchTeams({term, limit: 100});\n\t\tconst {teams} = response.data;\n\t\tif (teams) {\n\t\t\tteams.forEach((team) => {\n\t\t\t\toptions.push({label: team.name, value: team.id});\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t} finally {\n\t\tcallBack(options);\n\t}\n}", "CodeBleu_score": 32.10108423551403}]}
{"instance_id": "845d63ff0f74", "generation_result": [{"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t\tconst {\n\t\tcurrentRoles,\n\t\tgroupChannels,\n\t\tgroupTeams,\n\t\tsetGroupChannels,\n\t\tsetGroupTeams,\n\t\tsetGroupInfo,\n\t} = this.state;\n\n\tconst newRoles = currentRoles.map((role: any) => {\n\t\tif (role.id === id) {\n\t\t\treturn {\n\t\t\t\t...role,\n\t\t\t\tscheme_admin: schemeAdmin,\n\t\t\t};\n\t\t}\n\t\treturn role;\n\t});\n\n\tlet newChannels = groupChannels.map((channel: any) => {\n\t\tif (channel.id === id) {\n\t\t\treturn {\n\t\t\t\t...channel,\n\t\t\t\tscheme_admin: schemeAdmin,\n\t\t\t};\n\t\t}\n\t\treturn channel;\n\t});\n\n\tlet newTeams = groupTeams.map((team: any) => {\n\t\tif (team.id === id) {\n\t\t\treturn {\n\t\t\t\t...team,\n\t\t\t\tscheme_admin: schemeAdmin,\n\t\t\t};\n\t\t}\n\t\treturn team;\n\t});\n\n\tif (type === 'team') {\n\t\tsetGroupTeams(newTeams);\n\t} else {\n\t\tsetGroupChannels(newChannels);\n\t}\n\n\tsetGroupInfo({\n\t\t...this.state.groupInfo,\n\t\troles: newRoles,\n\t});\n\n\tthis.setState({\n\t\tcurrentRoles: newRoles,\n\t\tgroupChannels: newChannels,\n\t\tgroupTeams: newTeams,\n\t\tisDirty: true,\n\t});\n}", "CodeBleu_score": 31.726104561127578}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t\tconst currentRoles = state.roles[id]\n\tconst currentTeams = state.teams[id]\n\tconst currentChannels = state.channels[id]\n\n\tconst rolesToChange = currentRoles.filter((role) => role.scheme_admin !== schemeAdmin)\n\n\tlet teamsToChange = []\n\tlet channelsToChange = []\n\n\tif (type === 'team') {\n\t\tteamsToChange = currentTeams.map((team) => {\n\t\t\treturn {\n\t\t\t\t...team,\n\t\t\t\tscheme_admin: schemeAdmin\n\t\t\t}\n\t\t})\n\t} else {\n\t\tchannelsToChange = currentChannels.map((channel) => {\n\t\t\treturn {\n\t\t\t\t...channel,\n\t\t\t\tscheme_admin: schemeAdmin\n\t\t\t}\n\t\t})\n\t}\n\n\tconst newRoles = currentRoles.map((role) => {\n\t\tif (role.scheme_admin !== schemeAdmin) {\n\t\t\treturn {\n\t\t\t\t...role,\n\t\t\t\tscheme_admin: schemeAdmin\n\t\t\t}\n\t\t}\n\t\treturn role\n\t})\n\n\tconst newState = {\n\t\t...state,\n\t\troles: {\n\t\t\t...state.roles,\n\t\t\t[id]: newRoles\n\t\t},\n\t\tteams: {\n\t\t\t...state.teams,\n\t\t\t[id]: teamsToChange\n\t\t},\n\t\tchannels: {\n\t\t\t...state.channels,\n\t\t\t[id]: channelsToChange\n\t\t}\n\t}\n\n\tdispatch(setRoles(newState.roles))\n\tdispatch(setTeams(newState.teams))\n\tdispatch(setChannels(newState.channels))\n\tdispatch(setNavigationBlocked(true))\n\tdispatch(setNavigationBlockedAction(NavigationBlockedActions.SAVE))\n}", "CodeBleu_score": 27.317817959732594}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t\tconst {\n\t\tgroups,\n\t\tteams,\n\t\tchannels,\n\t\troles,\n\t\tgroupChannels,\n\t\tgroupTeams,\n\t\tgroupRoles,\n\t\tgroupMembers,\n\t\tgroupSchemeAdmins,\n\t\tgroupSchemeAdminsPending,\n\t\tgroupMembersPending,\n\t\tgroupChannelsPending,\n\t\tgroupTeamsPending,\n\t\tgroupRolesPending,\n\t\tgroupMembersError,\n\t\tgroupChannelsError,\n\t\tgroupTeamsError,\n\t\tgroupRolesError,\n\t\tgroupSchemeAdminsError,\n\t\tgroupSchemeAdminsPendingError,\n\t\tgroupMembersPendingError,\n\t\tgroupChannelsPendingError,\n\t\tgroupTeamsPendingError,\n\t\tgroupRolesPendingError,\n\t\tgroupMembersSuccess,\n\t\tgroupChannelsSuccess,\n\t\tgroupTeamsSuccess,\n\t\tgroupRolesSuccess,\n\t\tgroupSchemeAdminsSuccess,\n\t\tgroupSchemeAdminsPendingSuccess,\n\t\tgroupMembersPendingSuccess,\n\t\tgroupChannelsPendingSuccess,\n\t\tgroupTeamsPendingSuccess,\n\t\tgroupRolesPendingSuccess,\n\t\tgroupMembersFailure,\n\t\tgroupChannelsFailure,\n\t\tgroupTeamsFailure,\n\t\tgroupRolesFailure,\n\t\tgroupSchemeAdminsFailure,\n\t\tgroupSchemeAdminsPendingFailure,\n\t\tgroupMembersPendingFailure,\n\t\tgroupChannelsPendingFailure,\n\t\tgroupTeamsPendingFailure,\n\t\tgroupRolesPendingFailure,\n\t\tgroupMembersTotalCount,\n\t\tgroupChannelsTotalCount,\n\t\tgroupTeamsTotalCount,\n\t\tgroupRolesTotalCount,\n\t\tgroupSchemeAdminsTotalCount,\n\t\tgroupSchemeAdminsPendingTotalCount,\n\t\tgroupMembersPendingTotalCount,\n\t\tgroupChannelsPendingTotalCount,\n\t\tgroupTeamsPendingTotalCount,\n\t\tgroupRolesPendingTotalCount,\n\t\tgroupMembersOffset,\n\t\tgroupChannelsOffset,\n\t\tgroupTeamsOffset,\n\t\tgroupRolesOffset,\n\t\tgroupSchemeAdminsOffset,\n\t\tgroupSchemeAdminsPendingOffset,\n\t\tgroupMembersPendingOffset,\n\t\tgroupChannelsPendingOffset,\n\t\tgroupTeamsPendingOffset,\n\t\tgroupRolesPendingOffset,\n\t\tgroupMembersLimit,\n\t\tgroupChannelsLimit,\n\t\tgroupTeamsLimit,\n\t\tgroupRolesLimit,\n\t\tgroupSchemeAdminsLimit,\n\t\tgroupSchemeAdminsPendingLimit,\n\t\tgroupMembersPendingLimit,\n\t\tgroupChannelsPendingLimit,\n\t\tgroupTeamsPendingLimit,\n\t\tgroupRolesPendingLimit,\n\t\tgroupMembersSortField,\n\t\tgroup", "CodeBleu_score": 7.75956111697686}]}
{"instance_id": "02b54f0774f3", "generation_result": [{"code": "handleRolesToUpdate = async () =>{\n\t\tconst { rolesToUpdate, rolesToUpdateError } = this.state;\n\tconst { roles, rolesError } = this.props;\n\n\tif (rolesToUpdateError || rolesError) {\n\t\treturn false;\n\t}\n\n\tconst rolesToUpdateList = [];\n\tfor (const role in rolesToUpdate) {\n\t\tconst roleObject = rolesToUpdate[role];\n\t\tconst roleSyncableType = roleObject.syncableType;\n\t\tconst roleSyncableId = roleObject.syncableId;\n\n\t\tif (!roleSyncableType || !roleSyncableId) {\n\t\t\treturn false;\n\t\t}\n\n\t\trolesToUpdateList.push(\n\t\t\tupdateRole(roleSyncableType, roleSyncableId, roleObject.role)\n\t\t);\n\t}\n\n\tconst rolesToUpdateResults = await Promise.all(rolesToUpdateList);\n\tconst rolesToUpdateErrors = rolesToUpdateResults.filter(\n\t\t(result) => result.error !== null\n\t);\n\tconst rolesToUpdateSuccesses = rolesToUpdateResults.filter(\n\t\t(result) => result.error === null\n\t);\n\n\tif (rolesToUpdateErrors.length > 0) {\n\t\tthis.setState({\n\t\t\trolesToUpdateError: rolesToUpdateErrors[0].error,\n\t\t\trolesToUpdate: {},\n\t\t});\n\t\treturn false;\n\t}\n\n\tthis.setState({\n\t\trolesToUpdate: {},\n\t});\n\n\treturn true;\n}", "CodeBleu_score": 31.430018485908402}, {"code": "handleRolesToUpdate = async () =>{\n\t\tlet rolesToUpdate = [...state.rolesToUpdate];\n\tlet rolesToUpdateWithErrors = [];\n\tlet rolesToUpdateWithoutErrors = [];\n\tlet rolesToUpdateWithErrorsCount = 0;\n\tlet rolesToUpdateWithoutErrorsCount = 0;\n\tlet error = false;\n\tlet errorMsg = \"\";\n\n\tif (rolesToUpdate.length > 0) {\n\t\tfor (let i = 0; i < rolesToUpdate.length; i++) {\n\t\t\tlet roleToUpdate = rolesToUpdate[i];\n\t\t\tlet roleToUpdateWithErrors = {};\n\t\t\tlet roleToUpdateWithoutErrors = {};\n\t\t\tlet roleType = roleToUpdate.type;\n\t\t\tlet roleSyncableId = roleToUpdate.syncableId;\n\t\t\tlet roleSyncableType = roleToUpdate.syncableType;\n\n\t\t\ttry {\n\t\t\t\t// Get the role's syncable\n\t\t\t\tlet roleSyncable = await getSyncable(roleSyncableType, roleSyncableId);\n\n\t\t\t\t// Update the role\n\t\t\t\tlet updatedRole = await updateRole(roleType, roleSyncable, roleToUpdate.roleId, roleToUpdate.roleName);\n\n\t\t\t\t// Add the updated role to the list of roles to update without errors\n\t\t\t\troleToUpdateWithoutErrors.roleId = updatedRole.id;\n\t\t\t\troleToUpdateWithoutErrors.roleName = updatedRole.name;\n\t\t\t\trolesToUpdateWithoutErrors.push(roleToUpdateWithoutErrors);\n\t\t\t\trolesToUpdateWithoutErrorsCount++;\n\t\t\t} catch (err) {\n\t\t\t\t// If an error occurs, add the role to the list of roles to update with errors\n\t\t\t\troleToUpdateWithErrors.roleId = roleToUpdate.roleId;\n\t\t\t\troleToUpdateWithErrors.roleName = roleToUpdate.roleName;\n\t\t\t\troleToUpdateWithErrors.error = err;\n\t\t\t\trolesToUpdateWithErrors.push(roleToUpdateWithErrors);\n\t\t\t\trolesToUpdateWithErrorsCount++;\n\t\t\t}\n\t\t}\n\n\t\t// If there are roles to update without errors, update the component's state\n\t\tif (rolesToUpdateWithoutErrorsCount > 0) {\n\t\t\t// Update the component's state\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\trolesToUpdate: rolesToUpdateWithoutErrors,\n\t\t\t});\n\t\t}\n\n\t\t// If there are roles to update with errors, update the component's state\n\t\tif (rolesToUpdateWithErrorsCount > 0) {\n\t\t\t// Update the component's state\n\t\t\t", "CodeBleu_score": 20.89828266526559}, {"code": "handleRolesToUpdate = async () =>{\n\t\tlet rolesToUpdate = state.get(state.names.ROLES_TO_UPDATE);\n\tlet rolesToUpdateResult = [];\n\tlet rolesToUpdateError = false;\n\tif (rolesToUpdate) {\n\t\tfor (let role of rolesToUpdate) {\n\t\t\tlet roleId = role.roleId;\n\t\t\tlet roleType = role.roleType;\n\t\t\tlet roleSyncableIds = role.syncableIds;\n\t\t\tlet roleSyncableType = role.syncableType;\n\t\t\tlet roleResult = await updateRole(roleId, roleType, roleSyncableIds, roleSyncableType);\n\t\t\trolesToUpdateResult.push(roleResult);\n\t\t\tif (roleResult.error) {\n\t\t\t\trolesToUpdateError = true;\n\t\t\t}\n\t\t}\n\t\tif (rolesToUpdateError) {\n\t\t\tstate.set(state.names.ROLES_TO_UPDATE_ERROR, \"One or more roles failed to update. Please try again.\");\n\t\t} else {\n\t\t\tstate.set(state.names.ROLES_TO_UPDATE, null);\n\t\t\tstate.set(state.names.ROLES_TO_UPDATE_ERROR, null);\n\t\t}\n\t}\n\treturn !rolesToUpdateError;\n}", "CodeBleu_score": 18.418452123009708}]}
{"instance_id": "30463a7bcb15", "generation_result": [{"code": "nextPage = async () =>{\n\t\tlet { members, totalMembers, page } = this.state;\n\tlet newMembers = [];\n\tlet newPage = page + 1;\n\n\tif (newPage * 20 > totalMembers) {\n\t\tnewMembers = members.slice(0, totalMembers - (newPage - 1) * 20);\n\t} else {\n\t\tnewMembers = members.slice(0, newPage * 20);\n\t}\n\n\tthis.setState({\n\t\tmembers: newMembers,\n\t\tpage: newPage,\n\t\tloading: false\n\t});\n}", "CodeBleu_score": 17.837362118481092}, {"code": "nextPage = async () =>{\n\tconst { members, page, totalMembers } = this.state\nif (page * 10 >= totalMembers) {\nreturn\n}\nthis.setState({\nloading: true,\n})\nconst response = await fetch(\n`https://randomuser.me/api/?results=10&page=${page + 1}`,\n)\nconst data = await response.json()\nthis.setState({\nmembers: [...members, ...data.results],\npage: page + 1,\nloading: false,\n})\n}", "CodeBleu_score": 20.197793761099337}, {"code": "nextPage = async () =>{\n\t\tconst { members, totalMembers, loading, page } = this.state\n\tconst nextPage = page + 1\n\tif (nextPage * 10 <= totalMembers && !loading) {\n\t\tthis.setState({ loading: true })\n\t\tconst { data } = await getMembers(nextPage)\n\t\tthis.setState({\n\t\t\tmembers: [...members, ...data.members],\n\t\t\tloading: false,\n\t\t\tpage: nextPage\n\t\t})\n\t}\n}", "CodeBleu_score": 18.836935860263893}]}
{"instance_id": "d6aba286f65f", "generation_result": [{"code": "public handleGroupSearchKeyUp(e: any){\n\t\tif (e.keyCode === 13) {\n\t\tthis.setState({\n\t\t\tpage: 0,\n\t\t\tsearchString: \"\"\n\t\t});\n\t\tthis.props.handleSearch(this.state.searchString, 0);\n\t\tthis.setState(this.createState(this.state.searchString, 0));\n\t}\n\telse {\n\t\tconst searchString = e.target.value;\n\t\tthis.setState({\n\t\t\tsearchString\n\t\t});\n\t\tthis.setState(this.createState(searchString, this.state.page));\n\t}\n}", "CodeBleu_score": 16.847871954768678}, {"code": "public handleGroupSearchKeyUp(e: any){\n\t\tif (e.keyCode === 13) {\n\t\tthis.props.resetPage();\n\t\tthis.props.searchGroups(this.state.groupSearch);\n\t\tthis.setState(this.state);\n\t} else {\n\t\tlet newState = this.state;\n\t\tnewState.groupSearch = e.target.value;\n\t\tthis.setState(newState);\n\t}\n}", "CodeBleu_score": 17.308288175591084}, {"code": "public handleGroupSearchKeyUp(e: any){\n\t\tconst value = e.target.value;\n\tif (e.key === 'Enter') {\n\t\tthis.props.history.push('/groups');\n\t\tthis.props.updatePageState(0);\n\t\tthis.props.searchGroups(value);\n\t\tconst newState = this.state;\n\t\tnewState.groupSearchString = value;\n\t\tthis.setState(newState);\n\t}\n\telse if (value === '') {\n\t\tthis.props.history.push('/groups');\n\t\tthis.props.updatePageState(0);\n\t\tthis.props.searchGroups('');\n\t\tconst newState = this.state;\n\t\tnewState.groupSearchString = '';\n\t\tthis.setState(newState);\n\t}\n\telse {\n\t\tconst newState = this.state;\n\t\tnewState.groupSearchString = value;\n\t\tthis.setState(newState);\n\t}\n}", "CodeBleu_score": 24.817779646227816}]}
{"instance_id": "f0ab31c8ac4b", "generation_result": [{"code": "reloadPercentage = async () => {\n\t\tif (this.state.upgradePercentage > 0 && !this.state.interval) {\n\t\tthis.setState({\n\t\t\tinterval: setInterval(this.reloadPercentage, 2000)\n\t\t})\n\t}\n\n\tconst {\n\t\tupgradePercentage,\n\t\tupgradeError\n\t} = await this.props.actions.getUpgradeStatus()\n\n\tif (upgradePercentage >= 100) {\n\t\tclearInterval(this.state.interval)\n\t\tthis.setState({\n\t\t\tinterval: null,\n\t\t\tupgradePercentage: 100,\n\t\t\tupgradeError: null\n\t\t})\n\t\tthis.props.actions.upgradeToE0Status()\n\t} else if (upgradePercentage > 0) {\n\t\tthis.setState({\n\t\t\tupgradePercentage,\n\t\t\tupgradeError\n\t\t})\n\t}\n}", "CodeBleu_score": 39.02101032424132}, {"code": "reloadPercentage = async () => {\n\t\ttry {\n\t\tconst response = await fetch('/api/v1/upgrade/status');\n\t\tconst data = await response.json();\n\t\tconst { percentage, error } = data;\n\t\tthis.setState({ percentage, error });\n\n\t\tif (percentage === 100) {\n\t\t\tclearInterval(this.interval);\n\t\t\tthis.props.actions.upgradeToE0Status();\n\t\t} else if (percentage > 0 && !this.interval) {\n\t\t\tthis.interval = setInterval(this.reloadPercentage, 2000);\n\t\t}\n\t} catch (error) {\n\t\tthis.props.actions.upgradeToE0Status();\n\t}\n}", "CodeBleu_score": 42.85891469846333}, {"code": "reloadPercentage = async () => {\n\t\tconst { upgradePercentage, upgradeError } = this.props.upgradeStatus;\n\tconst { upgradeToE0Status } = this.props.actions;\n\tconst { intervalId } = this.state;\n\n\t// If the upgrade is complete, clear the interval and log the event\n\tif (upgradePercentage >= 100) {\n\t\tclearInterval(intervalId);\n\t\tupgradeToE0Status(upgradePercentage, upgradeError);\n\t\treturn;\n\t}\n\n\t// If the upgrade is not complete, retrieve the current upgrade percentage and error, and update the component state\n\tconst { percentage, error } = await this.props.upgradeStatus.getUpgradeStatus();\n\tthis.setState({ upgradePercentage: percentage, upgradeError: error });\n\n\t// If the percentage is greater than 0 and no interval is set, set an interval to recheck the status every 2 seconds\n\tif (percentage > 0 && !intervalId) {\n\t\tconst intervalId = setInterval(this.reloadPercentage, 2000);\n\t\tthis.setState({ intervalId });\n\t}\n}", "CodeBleu_score": 31.96556628356974}]}
{"instance_id": "f91ab43e6fe1", "generation_result": [{"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\te.preventDefault()\nif (fileObj) {\nsetIsUploading(true)\ntry {\nawait dispatch(uploadLicense(fileObj))\n} catch (error) {\nsetFileObj(undefined)\nsetServerError(error.message)\nsetIsUploading(false)\n}\n}\nif (isUploadSuccessful) {\nsetFileObj(undefined)\nsetServerError(undefined)\nsetIsUploading(false)\n}\n}", "CodeBleu_score": 36.716011200426095}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\te.preventDefault()\n\nif (fileObj) {\nsetIsUploading(true)\ntry {\nawait dispatch(uploadLicense(fileObj))\n} catch (err) {\nsetFileObj(undefined)\nsetServerError(err.message)\nsetIsUploading(false)\n}\n}\n\nif (uploadSuccessful) {\nsetUploadSuccessful(false)\nsetFileObj(undefined)\nsetServerError(undefined)\nsetIsUploading(false)\n}\n\ntry {\nawait dispatch(getLicenseConfig())\n} catch (err) {\nsetServerError(err.message)\n}\n}", "CodeBleu_score": 43.693838779136776}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\te.preventDefault()\nif (fileObj) {\nsetIsUploading(true)\ndispatch(uploadLicense(fileObj))\n.then(() => {\ndispatch(getLicenseConfig())\n.then(() => {\nsetFileObj(null)\nsetServerError('')\nsetIsUploading(false)\nsetUploadSuccessful(true)\n})\n.catch((err) => {\nsetServerError(err.message)\nsetIsUploading(false)\nsetUploadSuccessful(false)\n})\n})\n.catch((err) => {\nsetServerError(err.message)\nsetIsUploading(false)\nsetUploadSuccessful(false)\nsetFileObj(null)\n})\n}\n}", "CodeBleu_score": 48.24945505417057}]}
{"instance_id": "840d965d4dcc", "generation_result": [{"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\te.preventDefault()\n\nif (this.state.confirmationNeeded) {\nthis.setState({ confirmationNeeded: true })\nreturn\n}\n\nthis.setState({\nsaving: true,\nserverError: undefined,\n})\n\ntry {\nif (this.state.saveNeeded === 'permissions') {\nconst roleBindings = this.state.roleBindings.map(roleBinding => {\nconst roleBindingCopy = { ...roleBinding }\nroleBindingCopy.subjects = roleBindingCopy.subjects.map(subject => {\nconst subjectCopy = { ...subject }\nsubjectCopy.namespace = subjectCopy.namespace || this.props.namespace\nreturn subjectCopy\n})\nreturn roleBindingCopy\n})\n\nconst roles = this.state.roles.map(role => {\nconst roleCopy = { ...role }\nroleCopy.rules = roleCopy.rules.map(rule => {\nconst ruleCopy = { ...rule }\nruleCopy.resources = ruleCopy.resources.map(resource => {\nconst resourceCopy = { ...resource }\nresourceCopy.namespace = resourceCopy.namespace || this.props.namespace\nreturn resourceCopy\n})\nreturn ruleCopy\n})\nreturn roleCopy\n})\n\nconst newRoleBindings = roleBindings.filter(roleBinding => roleBinding.name !== this.props.editRoleBinding.name)\nconst newRoles = roles.filter(role => role.name !== this.props.editRole.name)\n\nconst updatedRoleBindings = [...newRoleBindings, this.props.editRoleBinding]\nconst updatedRoles = [...newRoles, this.props.editRole]\n\nawait this.props.updateRoleBindings(updatedRoleBindings)\nawait this.props.updateRoles(updatedRoles)\n} else {\nawait this.props.updateConfigMap(this.state.configMap)\n}\n\nthis.setState({\nsaving: false,\nsaveNeeded: undefined,\n})\n\nthis.props.history.push(this.props.match.url)\n} catch (err) {\nthis.setState({\nsaving: false,\nserverError: err.message,\n})\n}\n}", "CodeBleu_score": 43.07779758429083}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\t\te.preventDefault()\n\tif (this.state.confirm) {\n\t\tthis.setState({ confirm: false })\n\t\treturn\n\t}\n\tthis.setState({ saving: true, serverError: '' })\n\ttry {\n\t\tconst { editRole } = this.props\n\t\tif (editRole) {\n\t\t\tconst { permissions } = this.state\n\t\t\tconst { roleBindings } = await api.getRoleBindings()\n\t\t\tconst roleBinding = roleBindings.find((roleBinding) => roleBinding.role === editRole)\n\t\t\tif (roleBinding) {\n\t\t\t\tconst roleBindingPermissions = roleBinding.permissions.map((permission) => permission.name)\n\t\t\t\tconst newRoleBindingPermissions = permissions.map((permission) => permission.name)\n\t\t\t\tconst permissionsToCreate = newRoleBindingPermissions.filter(\n\t\t\t\t\t(permission) => !roleBindingPermissions.includes(permission)\n\t\t\t\t)\n\t\t\t\tconst permissionsToDelete = roleBindingPermissions.filter(\n\t\t\t\t\t(permission) => !newRoleBindingPermissions.includes(permission)\n\t\t\t\t)\n\t\t\t\tfor (const permission of permissionsToCreate) {\n\t\t\t\t\tawait api.addPermissionToRoleBinding(permission, editRole)\n\t\t\t\t}\n\t\t\t\tfor (const permission of permissionsToDelete) {\n\t\t\t\t\tawait api.removePermissionFromRoleBinding(permission, editRole)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst { name, permissions } = this.state\n\t\t\tawait api.createRoleBinding(name, permissions)\n\t\t}\n\t\tthis.setState({ saving: false, saveNeeded: false })\n\t\tif (this.props.onSubmit) {\n\t\t\tthis.props.onSubmit()\n\t\t}\n\t} catch (error) {\n\t\tthis.setState({ saving: false, serverError: error.message })\n\t}\n}", "CodeBleu_score": 35.50527209039396}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\t\te.preventDefault()\n\tthis.setState({ confirmation: false })\n\tthis.setState({ saving: true })\n\tthis.setState({ serverError: \"\" })\n\tconst { editRole } = this.props\n\tconst {\n\t\tname,\n\t\tdescription,\n\t\tpermissionLevel,\n\t\tpermissionLevelName,\n\t\tpermissionLevelDescription,\n\t\tpermissionLevelConfig,\n\t\tpermissionLevelConfigName,\n\t\tpermissionLevelConfigDescription,\n\t} = this.state\n\tif (this.state.saveNeeded) {\n\t\ttry {\n\t\t\tconst roleBindings = await this.getRoleBindings()\n\t\t\tconst roleBinding = roleBindings.find((roleBinding) => roleBinding.name === editRole)\n\t\t\tif (roleBinding) {\n\t\t\t\tawait this.updateRoleBinding(roleBinding, permissionLevel)\n\t\t\t}\n\t\t\tif (permissionLevel === 0) {\n\t\t\t\tawait this.updateRole(editRole, name, description)\n\t\t\t}\n\t\t\tif (permissionLevel === 1) {\n\t\t\t\tawait this.updateRole(editRole, name, description)\n\t\t\t\tawait this.updateRoleBinding(roleBinding, permissionLevel)\n\t\t\t}\n\t\t\tif (permissionLevel === 2) {\n\t\t\t\tawait this.updateRole(editRole, name, description)\n\t\t\t\tawait this.updateRoleBinding(roleBinding, permissionLevel)\n\t\t\t}\n\t\t\tif (permissionLevel === 3) {\n\t\t\t\tawait this.updateRole(editRole, name, description)\n\t\t\t\tawait this.updateRoleBinding(roleBinding, permissionLevel)\n\t\t\t}\n\t\t\tif (permissionLevel === 4) {\n\t\t\t\tawait this.updateRole(editRole, name, description)\n\t\t\t\tawait this.updateRoleBinding(roleBinding, permissionLevel)\n\t\t\t}\n\t\t\tif (permissionLevel === 5) {\n\t\t\t\tawait this.updateRole(editRole, name, description)\n\t\t\t\tawait this.updateRoleBinding(roleBinding, permissionLevel)\n\t\t\t}\n\t\t\tif (permissionLevel === 6) {\n\t\t\t\tawait this.updateRole(editRole, name, description)\n\t\t\t\tawait this.updateRoleBinding(roleBinding, permissionLevel)\n\t\t\t}\n\t\t\tif (permissionLevel === 7) {\n\t\t\t\tawait this.updateRole(editRole, name, description)\n\t\t\t\tawait this.updateRoleBinding(roleBinding,", "CodeBleu_score": 23.40787397833612}]}
{"instance_id": "86453b2860e5", "generation_result": [{"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\tconst { className, text } = props\nconst [openSalesContact, setOpenSalesContact] = React.useState(false)\nconst handleClick = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\ne.preventDefault()\ntrackEvent()\nsetOpenSalesContact(true)\n}\nreturn (\n<a\nhref=\"https://www.figma.com/proto/rJ50e6l8hK3c6e44q6141H/Website?node-id=147%3A10&scaling=scale-down\"\ntarget=\"_blank\"\nrel=\"noopener noreferrer\"\nclassName={className}\nonClick={handleClick}\n>\n{text}\n</a>\n)\n}", "CodeBleu_score": 31.776782679712845}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\tconst { text, className } = props\nconst [open, setOpen] = React.useState(false)\nconst handleClick = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\ne.preventDefault()\ntrackEvent()\nsetOpen(true)\n}\nreturn (\n<a\nhref=\"https://www.figma.com/proto/h6Q1u29m685I9V5b177O5m/Contact-Us?node-id=1%3A2&scaling=scale-down\"\ntarget=\"_blank\"\nrel=\"noopener noreferrer\"\nclassName={className}\nonClick={handleClick}\n>\n{text}\n</a>\n)\n}", "CodeBleu_score": 30.55630708080661}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\tconst { className, text } = props\nconst { openContactSales } = useContactSales()\nconst handleClick = (e: React.SyntheticEvent) => {\ne.preventDefault()\ntrackEvent()\nopenContactSales()\n}\nreturn (\n<button className={className} onClick={handleClick}>\n{text}\n</button>\n)\n}", "CodeBleu_score": 20.676021734333805}]}
{"instance_id": "49713e95ae2e", "generation_result": [{"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\tconst { openContactSales, disabled } = props\nconst { formatMessage } = useIntl()\nconst handleClick = (e: React.MouseEvent) => {\ne.preventDefault()\nopenContactSales()\n}\nreturn (\n<Button\nvariant=\"secondary\"\nonClick={handleClick}\ndisabled={disabled}\n>\n{formatMessage(messages.renewalLink)}\n</Button>\n)\n}", "CodeBleu_score": 27.068397381215366}, {"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\tconst { openContactSales, disabled } = props\n\nconst handleClick = (e: React.MouseEvent) => {\nopenContactSales()\ne.preventDefault()\n}\n\nreturn (\n<button\ntype=\"button\"\nclassName=\"btn btn-link\"\ndisabled={disabled}\nonClick={handleClick}\n>\n{formatMessage(messages.renewalLink)}\n</button>\n)\n}", "CodeBleu_score": 28.093644694377563}, {"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\tconst { openContactSales, disabled } = props;\nconst contactSalesLink = openContactSales(props.productCode);\nconst buttonText = formatMessage(messages.renewalLink, { productCode: props.productCode });\nreturn (\n<a href={contactSalesLink} onClick={e => e.preventDefault()} className={disabled ? 'disabled' : ''}>\n{buttonText}\n</a>\n);\n}", "CodeBleu_score": 24.940709179747746}]}
{"instance_id": "23618eba67aa", "generation_result": [{"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t\nconst { intl } = this.props\nconst { errors } = this.state\n\nconst errorKeys = Object.keys(errors)\n\n// If there are no field errors, we don't need to do anything\nif (fieldErrors) {\n\n// If the field errors match the elements, we can convert them to Markdown components\nif (checkIfErrorsMatchElements(elements, fieldErrors)) {\n\n// If there are any errors, we can update the state and return true\nif (Object.keys(fieldErrors).length) {\n\n// If there is a form error, we can add it to the field errors\nif (formError) {\nfieldErrors = { ...fieldErrors, formError }\n}\n\n// Format the field errors and update the state\nconst formattedFieldErrors = formatFieldErrors(elements, fieldErrors, intl)\nthis.setState({ errors: { ...formattedFieldErrors, ...errors } })\nreturn true\n}\n\n// If there are no errors, we can clear the state and return false\nelse {\nthis.setState({ errors: {} })\nreturn false\n}\n}\n\n// If the field errors don't match the elements, we can just add them to the state and return true\nelse {\n\n// If there is a form error, we can add it to the field errors\nif (formError) {\nfieldErrors = { ...fieldErrors, formError }\n}\n\n// Format the field errors and update the state\nconst formattedFieldErrors = formatFieldErrors(elements, fieldErrors, intl)\nthis.setState({ errors: { ...formattedFieldErrors, ...errors } })\nreturn true\n}\n}\n\n// If there are no errors, we can clear the state and return false\nelse {\nthis.setState({ errors: {} })\nreturn false\n}\n}", "CodeBleu_score": 30.912211424898327}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t\tconst { intl } = this.props\n\tconst { errors } = this.state\n\tlet errorFound = false\n\tif (formError) {\n\t\terrors.formError = formError\n\t\terrorFound = true\n\t}\n\tif (fieldErrors) {\n\t\terrors.fieldErrors = fieldErrors\n\t\tfor (const element of elements) {\n\t\t\tconst fieldName = element.name\n\t\t\tif (fieldName in fieldErrors) {\n\t\t\t\tconst error = fieldErrors[fieldName]\n\t\t\t\tif (element.type === 'markdown') {\n\t\t\t\t\terrors.elements[fieldName] = formatMarkdown(intl, error)\n\t\t\t\t} else {\n\t\t\t\t\terrors.elements[fieldName] = formatMessage(error)\n\t\t\t\t}\n\t\t\t\terrorFound = true\n\t\t\t}\n\t\t}\n\t}\n\tif (errorFound) {\n\t\tthis.setState({ errors })\n\t}\n\treturn errorFound\n}", "CodeBleu_score": 28.9562446905023}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t\tlet hasErrors = false;\n\tconst errors = [];\n\tif (formError) {\n\t\terrors.push(formError);\n\t\thasErrors = true;\n\t}\n\tif (fieldErrors) {\n\t\tObject.entries(fieldErrors).forEach(([key, value]) => {\n\t\t\tconst element = elements.find((element) => element.key === key);\n\t\t\tif (element) {\n\t\t\t\tif (element.type === 'markdown') {\n\t\t\t\t\terrors.push(value);\n\t\t\t\t} else {\n\t\t\t\t\terrors.push(\n\t\t\t\t\t\t<span key={key}>\n\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\thasErrors = true;\n\t\t\t} else {\n\t\t\t\terrors.push(\n\t\t\t\t\t<span key={key}>\n\t\t\t\t\t\t{formatMessage(messages.unknownFieldErrorMessage)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t\thasErrors = true;\n\t\t\t}\n\t\t});\n\t}\n\tif (hasErrors) {\n\t\tthis.setState({ errors });\n\t}\n\treturn hasErrors;\n}", "CodeBleu_score": 39.041469120921725}]}
{"instance_id": "10be7e79f7e0", "generation_result": [{"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t\tconst channelOptions = await getChannelOptions(userInput.toLowerCase());\n\treturn channelOptions.map((channel) => ({\n\t\tlabel: channel.displayName,\n\t\tvalue: channel.id,\n\t}));\n}", "CodeBleu_score": 30.044363172354714}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t\tconst response = await fetch(\n\t\t`https://slack.com/api/conversations.list?types=public_channel,private_channel,mpim,im&exclude_archived=true&limit=1000&token=${token}`\n\t);\n\tconst json = await response.json();\n\tconst channels = json.channels;\n\tconst options = channels.map((channel) => {\n\t\treturn {\n\t\t\tlabel: `#${channel.name}`,\n\t\t\tvalue: channel.id,\n\t\t};\n\t});\n\treturn options;\n}", "CodeBleu_score": 34.071360739021074}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t\tconst lowercasedInput = userInput.toLowerCase();\n\tconst searchResults = await autocompleteChannels(lowercasedInput);\n\tconst options = searchResults.map((channel) => {\n\t\treturn {\n\t\t\tlabel: channel.displayName,\n\t\t\tvalue: channel.id,\n\t\t};\n\t});\n\treturn options;\n}", "CodeBleu_score": 37.77932913914699}]}
{"instance_id": "b44d060ba306", "generation_result": [{"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\tconst {actions, currentUserId, teamId, teamName} = this.props\nif (this.isMemberOfChannel(channel)) {\nreturn\n}\nlet channelURL\ntry {\nchannelURL = await this.getRelativeChannelURL(channel)\n} catch (error) {\nthis.setState({serverError: error.message})\nreturn\n}\ntry {\nawait actions.joinChannel(channel.id)\n} catch (error) {\nthis.setState({serverError: error.message})\nreturn\n}\nthis.props.actions.getChannelsMemberCount(teamId)\nthis.props.history.push(channelURL)\nthis.closeEditRHS()\nif (done) {\ndone()\n}\n}", "CodeBleu_score": 55.081193960696474}, {"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\tconst {actions, currentUserId, teamId, teamName} = this.props;\nif (this.isMemberOfChannel(channel)) {\nreturn;\n}\n\nlet result;\ntry {\nresult = await actions.joinChannel(channel.id);\n} catch (error) {\nthis.setState({serverError: error.message});\nreturn;\n}\n\nif (result.error) {\nthis.setState({serverError: result.error.message});\nreturn;\n}\n\nthis.props.actions.getChannelsMemberCount(teamId);\n\nif (this.props.currentUserId === result.user_id) {\nthis.props.history.push(`/${teamName}/channels/${channel.name}`);\nthis.closeEditRHS();\n}\n\nif (done) {\ndone();\n}\n}", "CodeBleu_score": 63.76985067639861}, {"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\tconst {actions, currentUserId, teamId, teamName} = this.props\n\nif (this.isMemberOfChannel(channel.id)) {\ndone()\nreturn\n}\n\ntry {\nawait actions.joinChannel(channel.id)\n} catch (error) {\nthis.setState({serverError: error.message})\n}\n\nconst {channelMemberCount} = await this.props.actions.getChannelsMemberCount(teamId, [channel.id])\nthis.setState({channelMemberCount})\n\nconst channelURL = this.getRelativeChannelURL(teamName, channel.name)\nbrowserHistory.push(channelURL)\nthis.closeEditRHS()\n\nif (done) {\ndone()\n}\n}", "CodeBleu_score": 57.22341165945247}]}
{"instance_id": "c6636f0c9c0b", "generation_result": [{"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t\tconst [expanded, setExpanded] = React.useState(props.expanded);\n\tconst toggle = () => setExpanded(!expanded);\n\n\tconst className = `card-header ${expanded ? \"expanded\" : \"collapsed\"}`;\n\n\treturn (\n\t\t<div className={className} onClick={toggle}>\n\t\t\t{props.children}\n\t\t\t{expanded && <hr className=\"card-header-hr\" />}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 39.6658028758135}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t\tconst {\n\t\tchildren,\n\t\tclassName,\n\t\tisExpanded,\n\t\tonClick,\n\t\t...rest\n\t} = props;\n\n\tconst [isHovered, setIsHovered] = React.useState<boolean>(false);\n\tconst [isFocused, setIsFocused] = React.useState<boolean>(false);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tonClick && onClick(event);\n\t};\n\n\tconst handleMouseEnter = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tsetIsHovered(true);\n\t};\n\n\tconst handleMouseLeave = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tsetIsHovered(false);\n\t};\n\n\tconst handleFocus = (event: React.FocusEvent<HTMLDivElement>) => {\n\t\tsetIsFocused(true);\n\t};\n\n\tconst handleBlur = (event: React.FocusEvent<HTMLDivElement>) => {\n\t\tsetIsFocused(false);\n\t};\n\n\tconst classes = classNames(\n\t\t\"card-header\",\n\t\t{\n\t\t\t\"is-expanded\": isExpanded,\n\t\t\t\"is-hovered\": isHovered,\n\t\t\t\"is-focused\": isFocused\n\t\t},\n\t\tclassName\n\t);\n\n\treturn (\n\t\t<div\n\t\t\t{...rest}\n\t\t\tclassName={classes}\n\t\t\tonClick={handleClick}\n\t\t\tonMouseEnter={handleMouseEnter}\n\t\t\tonMouseLeave={handleMouseLeave}\n\t\t\tonFocus={handleFocus}\n\t\t\tonBlur={handleBlur}\n\t\t>\n\t\t\t{children}\n\t\t\t{isExpanded && <hr className=\"card-header-divider\" />}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 32.843390939082575}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t\tconst { children, onClick, expanded } = props;\n\tconst [isExpanded, setIsExpanded] = React.useState(expanded);\n\n\tconst toggle = (): void => {\n\t\tsetIsExpanded(!isExpanded);\n\t\tif (onClick) {\n\t\t\tonClick();\n\t\t}\n\t};\n\n\tconst headerClassName = `card-header ${isExpanded ? \"expanded\" : \"\"}`;\n\n\treturn (\n\t\t<div className={headerClassName} onClick={toggle}>\n\t\t\t{children}\n\t\t\t{isExpanded && <hr className=\"card-header-rule\" />}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 37.138936615587106}]}
{"instance_id": "230cb3cd6dd5", "generation_result": [{"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t\tconst { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n\treturn (\n\t\t<div className=\"card-header\">\n\t\t\t<h4 className=\"card-title\">{title}</h4>\n\t\t\t{subtitle && <h6 className=\"card-subtitle\">{subtitle}</h6>}\n\t\t\t{buttonText && (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 16.70054797454887}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t\tconst { title, subtitle, buttonText, onClick, isDisabled } = props;\n\treturn (\n\t\t<div className=\"card-header\">\n\t\t\t<h3 className=\"card-title\">\n\t\t\t\t{title}\n\t\t\t</h3>\n\t\t\t<h4 className=\"card-subtitle\">\n\t\t\t\t{subtitle}\n\t\t\t</h4>\n\t\t\t{buttonText && onClick &&\n\t\t\t\t<button className=\"btn btn-primary btn-sm\" onClick={onClick} disabled={isDisabled}>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</button>\n\t\t\t}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 29.69562755098678}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t\tconst { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n\treturn (\n\t\t<div className=\"title-and-button-card-header\">\n\t\t\t<div className=\"title-and-button-card-header-title\">{title}</div>\n\t\t\t{subtitle && <div className=\"title-and-button-card-header-subtitle\">{subtitle}</div>}\n\t\t\t{buttonText && (\n\t\t\t\t<div className=\"title-and-button-card-header-button\">\n\t\t\t\t\t<Button onClick={onClick} disabled={isDisabled}>\n\t\t\t\t\t\t{buttonText}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 17.24343579788562}]}
{"instance_id": "eb5c7946fd59", "generation_result": [{"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t\tconst { notifications } = services;\n\tif (!notifications) {\n\t\tthrow new Error('Notifications service is not available');\n\t}\n\n\tconst show = (\n\t\ttitle: string,\n\t\t{\n\t\t\tbody,\n\t\t\tcolor,\n\t\t\ticon,\n\t\t\tisAutoDismiss,\n\t\t\tonAction,\n\t\t\tonCancel,\n\t\t\tonDismiss,\n\t\t\tonMount,\n\t\t\tonUpdate,\n\t\t}: {\n\t\t\tbody?: string;\n\t\t\tcolor?: string;\n\t\t\ticon?: string;\n\t\t\tisAutoDismiss?: boolean;\n\t\t\tonAction?: () => void;\n\t\t\tonCancel?: () => void;\n\t\t\tonDismiss?: () => void;\n\t\t\tonMount?: () => void;\n\t\t\tonUpdate?: () => void;\n\t\t}\n\t) => {\n\t\tnotifications.toasts.add({\n\t\t\ttitle,\n\t\t\tcolor,\n\t\t\ticon,\n\t\t\tbody,\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Dismiss',\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tonClick: onDismiss,\n\t\t\t\t},\n\t\t\t],\n\t\t\tisAutoDismiss,\n\t\t\tonAction,\n\t\t\tonCancel,\n\t\t\tonDismiss,\n\t\t\tonMount,\n\t\t\tonUpdate,\n\t\t});\n\t};\n\n\treturn {\n\t\tshow,\n\t\tsuccess: (\n\t\t\ttitle: string,\n\t\t\t{\n\t\t\t\tbody,\n\t\t\t\tisAutoDismiss,\n\t\t\t\tonAction,\n\t\t\t\tonCancel,\n\t\t\t\tonDismiss,\n\t\t\t\tonMount,\n\t\t\t\tonUpdate,\n\t\t\t}: {\n\t\t\t\tbody?: string;\n\t\t\t\tisAutoDismiss?: boolean;\n\t\t\t\tonAction?: () => void;\n\t\t\t\tonCancel?: () => void;\n\t\t\t\tonDismiss?: () => void;\n\t\t\t\tonMount?: () => void;\n\t\t\t\tonUpdate?: () => void;\n\t\t\t} = {}\n\t\t) => {\n\t\t\tshow(title, {\n\t\t\t\tbody,\n\t\t\t\tcolor: 'success',\n\t\t\t\ticon: 'check',\n\t\t\t\tisAutoDismiss,\n\t\t\t\tonAction,\n\t\t\t\tonCancel,\n\t\t\t\tonDismiss,\n\t\t\t\tonMount,\n\t\t\t\tonUpdate,\n\t\t\t});\n\t\t},\n\t\twarning: (\n\t\t\ttitle: string,\n\t\t\t{\n\t\t\t\tbody,\n\t\t\t\tisAutoDismiss,\n\t\t\t\tonAction,\n\t\t\t\tonCancel,\n\t\t\t\tonDismiss,\n\t\t\t\tonMount,\n\t\t\t\tonUpdate,\n\t\t\t}:", "CodeBleu_score": 22.552630150536913}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t\nconst {\n  notifications: { toasts },\n  http,\n} = services;\n", "CodeBleu_score": 1.041594363574208}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t\nconst {\n  notifications,\n} = services;\n\nif (!notifications) {\n  throw new Error('Notifications service is not available');\n}\n\nconst show = (\n  title: string,\n  body: string | React.ReactNode,\n  color: KibanaNotificationColor = 'default',\n  iconType: KibanaNotificationIconType = 'logoApp',\n  lifetime: number = 0,\n  onClose?: () => void\n) => {\n  const id = `alert-${uuid.v4()}`;\n\n  notifications.toasts.add({\n    id,\n    title,\n    color,\n    iconType,\n    text: body,\n    actions: [{\n      text: 'Close',\n      type: 'button',\n      onClick: () => {\n        notifications.toasts.remove(id);\n        if (onClose) {\n          onClose();\n        }\n      },\n    }],\n    'data-test-subj': 'alert',\n    toastLifeTimeMs: lifetime,\n  });\n};\n\nreturn {\n  show,\n  success: (\n    title: string,\n    body: string | React.ReactNode,\n    lifetime: number = 0,\n    onClose?: () => void\n  ) => show(title, body, 'success', 'check', lifetime, onClose),\n  warning: (\n    title: string,\n    body: string | React.ReactNode,\n    lifetime: number = 0,\n    onClose?: () => void\n  ) => show(title, body, 'warning', 'alert', lifetime, onClose),\n  danger: (\n    title: string,\n    body: string | React.ReactNode,\n    lifetime: number = 0,\n    onClose?: () => void\n  ) => show(title, body, 'danger', 'alert', lifetime, onClose),\n};\n\n}", "CodeBleu_score": 30.657229775635265}]}
{"instance_id": "e8c4d43e5232", "generation_result": [{"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t\tconst { core } = useKibana();\n\tconst { overlays } = core.services;\n\tconst { mountPoint, ...overlayOptions } = options || {};\n\tconst mountPointNode = getMountPointNode(node, mountPoint);\n\treturn overlays.openFlyout(mountPointNode, overlayOptions);\n}", "CodeBleu_score": 33.8227868565277}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t\tconst mountPoint = convertNodeToMountPoint(node, options?.theme);\n\treturn services.overlays!.openFlyout(mountPoint, options);\n}", "CodeBleu_score": 38.73182733869385}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t\tcheckCoreService();\n\n\tconst mountPoint = convertToMountPoint(node, options?.theme);\n\treturn services.overlays!.openFlyout(mountPoint, options);\n}", "CodeBleu_score": 46.38118244468999}]}
{"instance_id": "89d99efaa3c9", "generation_result": [{"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\t\n// If the user specified an onClick callback, execute it.\n    if (onClickCallback) {\n      onClickCallback(event)\n    }\n\n// If the event's default action was prevented, do nothing else.\n    if (event.defaultPrevented) {\n      return\n    }\n\n// If the event target has a 'target' attribute, do nothing else.\n    if (event.target && (event.target as unknown as { getAttribute: (a: string) => unknown })?.getAttribute) {\n      return\n    }\n\n// If the event is not a left-click, do nothing else.\n    if (!isLeftClickEvent(event)) {\n      return\n    }\n\n// If the event is a modified click, do nothing else.\n    if (isModifiedEvent(event)) {\n      return\n    }\n\n// Prevent the default page reload and navigate to the specified location using the provided history object.\n    event.preventDefault()\n    history.push(to)\n  }", "CodeBleu_score": 67.57872498461846}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\tisLeftClickEvent(event) && !isModifiedEvent(event) && onClickCallback && onClickCallback(event)\nevent.defaultPrevented ||\nevent.preventDefault()\nevent.target.getAttribute &&\nevent.target.getAttribute('target') &&\nevent.target.removeAttribute('target')\nhistory.push(toLocationObject(to))\n}", "CodeBleu_score": 39.254005816263025}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\t\n// Execute the callback, if one was provided\nif (onClickCallback) {\n  onClickCallback(event);\n}\n\n// Check if the default action was prevented\nif (event.defaultPrevented) {\n  return;\n}\n\n// Check if the event target has a 'target' attribute\nif ((event.target as unknown as { getAttribute: (a: string) => unknown })?.getAttribute) {\n  return;\n}\n\n// Check if the event is a left-click and not modified\nif (isLeftClickEvent(event) && !isModifiedEvent(event)) {\n  event.preventDefault();\n  history.push(toLocationObject(to));\n}\n  }", "CodeBleu_score": 70.94136823322621}]}
{"instance_id": "8d8e28c04bbd", "generation_result": [{"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\t\tconst [value, setValue] = useGlobalState(key, defaultValue);\n\tconst [settings, setSettings] = useGlobalState('kibana.settings', {});\n\tconst [error, setError] = useGlobalState('kibana.uiSettings.error', null);\n\n\tconst updateValue = (newValue: T) => {\n\t\tif (settings) {\n\t\t\tconst newSettings = { ...settings };\n\t\t\tnewSettings[key] = newValue;\n\t\t\tsetSettings(newSettings);\n\t\t}\n\t};\n\n\tconst updateError = (newError: Error) => {\n\t\tif (settings) {\n\t\t\tconst newSettings = { ...settings };\n\t\t\tnewSettings.error = newError;\n\t\t\tsetSettings(newSettings);\n\t\t}\n\t};\n\n\tconst update = (newValue: T) => {\n\t\tif (settings) {\n\t\t\tconst newSettings = { ...settings };\n\t\t\tnewSettings[key] = newValue;\n\t\t\tsetSettings(newSettings);\n\t\t}\n\t};\n\n\tconst set = (newValue: T) => {\n\t\tsetValue(newValue);\n\t\tupdate(newValue);\n\t};\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn [value, set];\n}", "CodeBleu_score": 30.52129235342722}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\t\tconst [value, setValue] = useGlobalState(key, defaultValue);\n\tconst set = useKibana().services.uiSettings.set;\n\n\treturn [value, (newValue) => {\n\t\tsetValue(newValue);\n\t\tset(key, newValue);\n\t}];\n}", "CodeBleu_score": 18.799663324947723}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\tconst [value, setValue] = useGlobalState(key, defaultValue);\nconst set = (value: T) => {\nreturn kibana.services.uiSettings!.globalClient.set(key, value);\n};\nreturn [value, set];\n}", "CodeBleu_score": 18.958963461584073}]}
{"instance_id": "7da631faf620", "generation_result": [{"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t\tconst panel = panels[id];\n\tif (!panel) {\n\t\treturn;\n\t}\n\tconst { items } = panel;\n\tconst visibleItems = items.slice(0, 10);\n\tconst submenuItems = items.slice(10);\n\tif (submenuItems.length > 0) {\n\t\tconst moreItem: MenuItemDescriptor = {\n\t\t\tcommand: 'workbench.action.showCommands',\n\t\t\twhen: 'inQuickOpen'\n\t\t};\n\t\tpanel.items = [...visibleItems, moreItem];\n\t\tpanels[id] = {\n\t\t\t...panel,\n\t\t\titems: [...visibleItems, moreItem]\n\t\t};\n\t\tpanels[id + '-more'] = {\n\t\t\tid: id + '-more',\n\t\t\ttitle: localize('moreCommands', \"More\"),\n\t\t\tsubmenu: submenuItems\n\t\t};\n\t}\n}", "CodeBleu_score": 37.3237158030049}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t\tconst panel = panels[id];\n\tif (!panel) {\n\t\treturn;\n\t}\n\tconst visibleItems = [];\n\tconst submenuItems = [];\n\tfor (const item of panel.items) {\n\t\tif (item.visible) {\n\t\t\tvisibleItems.push(item);\n\t\t} else {\n\t\t\tsubmenuItems.push(item);\n\t\t}\n\t}\n\tif (visibleItems.length <= 10) {\n\t\treturn;\n\t}\n\tconst moreItem: MenuItemDescriptor = {\n\t\tcommand: 'workbench.action.showCommands',\n\t\twhen: `view == ${id}`\n\t};\n\tpanel.items = visibleItems.slice(0, 10).concat([moreItem]).concat(submenuItems);\n\tconst submenu: MenuDescriptor = {\n\t\tid: `${id}.submenu`,\n\t\ttitle: localize('moreCommands', \"More Commands\"),\n\t\tsubmenu: submenuItems\n\t};\n\tmenus.menus.push(submenu);\n}", "CodeBleu_score": 40.500541966560455}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t\tconst panel = panels[id];\n\tif (panel && panel.items.length > 30) {\n\t\tconst visibleItems = panel.items.slice(0, 30);\n\t\tconst submenuItems = panel.items.slice(30);\n\t\tpanel.items = [\n\t\t\t...visibleItems,\n\t\t\t{\n\t\t\t\tid: 'more',\n\t\t\t\ttitle: 'More',\n\t\t\t\tsubmenu: submenuItems,\n\t\t\t},\n\t\t];\n\t\tpanels[id] = panel;\n\t}\n}", "CodeBleu_score": 25.4374152413812}]}
{"instance_id": "7a1a98211380", "generation_result": [{"code": "private scheduleFlush(){\n\t\tif (this.pendingTasks.length > 0) {\n\t\tthis.flushTimeout = setTimeout(this.flush, 100);\n\t} else if (this.batchingQueue.length > 0) {\n\t\tthis.flushTimeout = setTimeout(this.flush, 100);\n\t}\n}", "CodeBleu_score": 7.507349484957826}, {"code": "private scheduleFlush(){\n\t\tif (this.timeout) {\n\t\tclearTimeout(this.timeout);\n\t}\n\n\tif (this.batchingQueue.length > 0) {\n\t\tthis.timeout = setTimeout(this.flush.bind(this), this.flushInterval);\n\t}\n}", "CodeBleu_score": 5.869025357885309}, {"code": "private scheduleFlush(){\n\t\tif (this.pendingTasks.length == 0) {\n\t\tthis.pendingTasks = this.batchingQueue.slice(0);\n\t\tthis.batchingQueue = [];\n\t\tif (this.pendingTasks.length == 1) {\n\t\t\tthis.executeTask(this.pendingTasks[0]);\n\t\t} else if (this.pendingTasks.length > 1) {\n\t\t\tlet popup = this.createPopup();\n\t\t\tif (popup) {\n\t\t\t\tthis.displayPopup(popup);\n\t\t\t}\n\t\t}\n\t}\n\tif (this.pendingTasks.length > 0) {\n\t\tsetTimeout(() => this.scheduleFlush(), this.flushTimeout);\n\t}\n}", "CodeBleu_score": 23.25062724786346}]}
{"instance_id": "702779fd9f4a", "generation_result": [{"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t\tconst trigger = context.trigger;\n\tconst actions = this.getCompatibleActions(trigger);\n\tif (actions.length === 0) {\n\t\treturn;\n\t}\n\tconst promises = actions.map(async action => {\n\t\tconst actionExecution = this.executionService.execute(action, context, trigger, alwaysShowPopup);\n\t\tactionExecution.onSuccess(() => this.onActionExecuted(action));\n\t\tactionExecution.onError(err => this.onActionExecuted(action, err));\n\t});\n\tawait Promise.all(promises);\n}", "CodeBleu_score": 40.272221996635196}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t\tconst actions = this.getCompatibleActions(context);\n\tif (actions.length === 0) {\n\t\treturn;\n\t}\n\n\tconst promises = actions.map(action => this.executeAction(action, context, true, alwaysShowPopup));\n\tawait Promise.all(promises);\n}", "CodeBleu_score": 37.8428847290476}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t\tconst actions: Action[] = this.getCompatibleActions(context);\n\tif (actions.length === 0) return;\n\n\tconst promises = actions.map(action => this.executeAction(action, context, this.trigger, alwaysShowPopup));\n\treturn Promise.all(promises);\n}", "CodeBleu_score": 36.419733373458016}]}
{"instance_id": "16fd1e46a9be", "generation_result": [{"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t\tconst images: Uint8Array[] = [];\n\tconst subChunks = chunk.subChunks;\n\tlet imageChunk: Chunk;\n\tlet imageData: Uint8Array;\n\tfor (let i = 0; i < frameCount; i++) {\n\t\timageChunk = subChunks[i];\n\t\tif (imageChunk.type !== 'icon') {\n\t\t\tthrow new Error('Invalid chunk type. Expected \"icon\", got \"' + imageChunk.type + '\"');\n\t\t}\n\t\timageData = imageChunk.data.slice(16);\n\t\timages.push(imageData);\n\t}\n\treturn images;\n}", "CodeBleu_score": 39.086250199245896}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t\tlet images: Uint8Array[] = [];\n\tlet index: number = 0;\n\tlet data: Uint8Array = chunk.data;\n\tlet length: number = data.length;\n\twhile (index < length) {\n\t\tlet subChunk: Chunk = new Chunk(data.slice(index));\n\t\tif (subChunk.type !== 'icon') {\n\t\t\tthrow new Error('Invalid sub-chunk type: ' + subChunk.type);\n\t\t}\n\t\tindex += subChunk.header.size + subChunk.data.length;\n\t\tif (images.length >= frameCount) {\n\t\t\tbreak;\n\t\t}\n\t\timages.push(subChunk.data);\n\t}\n\treturn images;\n}", "CodeBleu_score": 37.56726863224193}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t\tconst images: Uint8Array[] = [];\n\tconst subChunks = chunk.subChunks;\n\tfor (let i = 0; i < frameCount; i++) {\n\t\tconst frameChunk = subChunks[i];\n\t\tif (frameChunk.type !== 'icon') {\n\t\t\tthrow new Error('Invalid chunk type');\n\t\t}\n\t\timages.push(frameChunk.data.slice());\n\t}\n\treturn images;\n}", "CodeBleu_score": 41.05221513326715}]}
{"instance_id": "6b6f91239073", "generation_result": [{"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t\tconst cursor = new AniCursorImage()\n\tconst dv = new DataView(contents.buffer)\n\tcursor.totalDuration = dv.getUint32(0, true)\n\tconst frameCount = dv.getUint32(4, true)\n\tcursor.frames = []\n\tfor (let i = 0; i < frameCount; i++) {\n\t\tconst frame = new Frame()\n\t\tframe.url = cursor.url + '/' + i + '.png'\n\t\tframe.percents = []\n\t\tcursor.frames.push(frame)\n\t}\n\tlet displayRate = dv.getUint32(8, true)\n\tcursor.frames[0].percents.push(0)\n\tfor (let i = 1; i < frameCount; i++) {\n\t\tconst prevFrame = cursor.frames[i - 1]\n\t\tconst currFrame = cursor.frames[i]\n\t\tconst prevPercent = prevFrame.percents[prevFrame.percents.length - 1]\n\t\tconst currPercent = prevPercent + displayRate\n\t\tcurrFrame.percents.push(currPercent)\n\t}\n\treturn cursor\n}", "CodeBleu_score": 26.156260576587577}, {"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t\tconst cursor: AniCursorImage = {\n\t\tduration: 0,\n\t\tframes: [],\n\t}\n\n\tconst view = new DataView(contents.buffer)\n\n\t// Parse the contents of the file.\n\tconst magic = view.getUint32(0, true)\n\tconst version = view.getUint32(4, true)\n\tconst frameCount = view.getUint32(8, true)\n\tconst xHotspot = view.getUint32(12, true)\n\tconst yHotspot = view.getUint32(16, true)\n\tconst cursorWidth = view.getUint32(20, true)\n\tconst cursorHeight = view.getUint32(24, true)\n\tconst hotspotX = view.getUint32(28, true)\n\tconst hotspotY = view.getUint32(32, true)\n\tconst displayRate = view.getUint32(36, true)\n\n\t// Check the magic number.\n\tif (magic !== 0x52494350) {\n\t\tthrow new Error('Invalid magic number.')\n\t}\n\n\t// Check the version number.\n\tif (version !== 1) {\n\t\tthrow new Error('Invalid version number.')\n\t}\n\n\t// Calculate the total duration in milliseconds.\n\tcursor.duration = frameCount / displayRate * 1000\n\n\t// Map each frame to an object with a URL and an empty percentage array.\n\tfor (let frameIdx = 0; frameIdx < frameCount; frameIdx++) {\n\t\tcursor.frames.push({\n\t\t\turl: '',\n\t\t\tpercents: [],\n\t\t})\n\t}\n\n\t// Calculate and assign the elapsed display percentage for each frame.\n\tlet currentPercent = 0\n\tfor (let frameIdx = 0; frameIdx < frameCount; frameIdx++) {\n\t\tcursor.frames[frameIdx].percents.push(currentPercent)\n\t\tcurrentPercent += 100 / frameCount / displayRate\n\t}\n\n\t// Assign the cursor properties.\n\tcursor.xHotspot = xHotspot\n\tcursor.yHotspot = yHotspot\n\tcursor.width = cursorWidth\n\tcursor.height = cursor", "CodeBleu_score": 26.297626233078475}, {"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t\t// parse the contents\n\tconst data = new DataView(contents.buffer);\n\tconst magic = data.getUint32(0, true);\n\tif (magic !== MAGIC) throw new Error('Invalid magic number');\n\tconst version = data.getUint32(4, true);\n\tif (version !== VERSION) throw new Error('Invalid version number');\n\tconst width = data.getUint32(8, true);\n\tconst height = data.getUint32(12, true);\n\tconst frameCount = data.getUint32(16, true);\n\tconst displayRate = data.getUint32(20, true);\n\tconst totalDuration = frameCount / displayRate * 1000;\n\tconst frames = new Array<Frame>(frameCount);\n\tfor (let i = 0; i < frameCount; i++) {\n\t\tconst offset = 24 + i * 20;\n\t\tconst frame = new Frame();\n\t\tframe.offset = data.getUint32(offset, true);\n\t\tframe.percents = new Array<number>();\n\t\tframes[i] = frame;\n\t}\n\t// calculate the elapsed display percentage for each frame\n\tlet elapsed = 0;\n\tfor (let i = 0; i < frameCount; i++) {\n\t\tconst frame = frames[i];\n\t\tconst nextFrame = frames[i + 1] || frames[0];\n\t\tconst frameDuration = (nextFrame.offset - frame.offset) / displayRate * 1000;\n\t\tframe.percents.push(elapsed);\n\t\telapsed += frameDuration;\n\t}\n\t// map images to frames\n\tfor (let i = 0; i < frameCount; i++) {\n\t\tconst frame = frames[i];\n\t\tconst offset = 24 + i * 20;\n\t\tconst nextFrame = frames[i + 1] || frames[0];\n\t\tconst frameDuration = (nextFrame.offset - frame.offset) / displayRate * 1000;\n\t\tconst image = new Image();\n\t\timage.src = URL.createObjectURL(new Blob([contents.slice(frame.offset, nextFrame.offset)], { type: 'image/png'", "CodeBleu_score": 29.914103267374415}]}
{"instance_id": "f059427111a8", "generation_result": [{"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t\tconst db = await getDb();\n\tconst items = await db.collection(\"items\").find({\n\t\t\"metadata.json\": {\n\t\t\t$exists: true,\n\t\t\t$ne: null\n\t\t}\n\t}).sort({\n\t\t\"identifier\": 1\n\t}).toArray();\n\tconst tooManyFiles = [];\n\tconst tooFewFiles = [];\n\tconst missingSkinFile = [];\n\tconst tooManyFilesCount = 0;\n\tconst tooFewFilesCount = 0;\n\tconst missingSkinFileCount = 0;\n\tfor (const item of items) {\n\t\tconst metadata = item.metadata;\n\t\tconst files = metadata.files;\n\t\tconst skinFiles = files.filter((file) => file.name.includes(\"skin\"));\n\t\tif (skinFiles.length > 1) {\n\t\t\ttooManyFiles.push(item);\n\t\t\ttooManyFilesCount++;\n\t\t} else if (skinFiles.length < 1) {\n\t\t\ttooFewFiles.push(item);\n\t\t\ttooFewFilesCount++;\n\t\t} else if (skinFiles.length === 1) {\n\t\t\tif (!skinFiles[0].name.includes(\"skin.png\")) {\n\t\t\t\tmissingSkinFile.push(item);\n\t\t\t\tmissingSkinFileCount++;\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(\"===========================\");\n\tconsole.log(\"Too Many Files\");\n\tconsole.log(\"===========================\");\n\tconsole.table(tooManyFiles);\n\tconsole.log(\"===========================\");\n\tconsole.log(\"Too Few Files\");\n\tconsole.log(\"===========================\");\n\tconsole.table(tooFewFiles);\n\tconsole.log(\"===========================\");\n\tconsole.log(\"Missing Skin File\");\n\tconsole.log(\"===========================\");\n\tconsole.table(missingSkinFile);\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\tconsole.log(\"===========================\");\n\t", "CodeBleu_score": 28.486620194944855}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t\tconst db = await getDb();\n\tconst items = await db.collection(\"items\").find({\n\t\t\"files\": {\n\t\t\t\"$exists\": true,\n\t\t\t\"$not\": {\n\t\t\t\t\"$size\": 0\n\t\t\t}\n\t\t}\n\t}).toArray();\n\tconst tooManyFiles: string[] = [];\n\tconst tooFewFiles: string[] = [];\n\tconst missingSkinFile: string[] = [];\n\tfor (const item of items) {\n\t\tconst itemFiles = item.files;\n\t\tconst skinFile = itemFiles.find((file: any) => file.name.endsWith(\"skin.png\"));\n\t\tif (skinFile === undefined) {\n\t\t\tmissingSkinFile.push(item.identifier);\n\t\t}\n\t\tif (itemFiles.length > 10) {\n\t\t\ttooManyFiles.push(item.identifier);\n\t\t}\n\t\tif (itemFiles.length < 10) {\n\t\t\ttooFewFiles.push(item.identifier);\n\t\t}\n\t}\n\tconst table = new Table({\n\t\thead: [\"Category\", \"Number of Items\"],\n\t\tcolWidths: [20, 20]\n\t});\n\ttable.push([\"Too Many Files\", tooManyFiles.length]);\n\ttable.push([\"Too Few Files\", tooFewFiles.length]);\n\ttable.push([\"Missing Skin File\", missingSkinFile.length]);\n\tconsole.log(table.toString());\n}", "CodeBleu_score": 32.70625319192673}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t\tconst metadata = await getInternetArchiveMetadata();\n\tconst metadataFiles = metadata.files;\n\tconst metadataFilesCount = metadataFiles.length;\n\tconst metadataFilesCountLog = metadataFilesCount.toLocaleString();\n\tconst metadataFilesCountLogWithCommas = metadataFilesCountLog.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\tconst metadataFilesCountLogWithCommasAndDots = metadataFilesCountLogWithCommas.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n\tconst metadataFilesCountLogWithCommasAndDotsAndSpace = metadataFilesCountLogWithCommasAndDots.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1 \");\n\tconst metadataFilesCountLogWithCommasAndDotsAndSpaceAndDot = metadataFilesCountLogWithCommasAndDotsAndSpace.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n\tconst metadataFilesCountLogWithCommasAndDotsAndSpaceAndDotAndSpace = metadataFilesCountLogWithCommasAndDotsAndSpaceAndDot.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1 \");\n\tconst metadataFilesCountLogWithCommasAndDotsAndSpaceAndDotAndSpaceAndDot = metadataFilesCountLogWithCommasAndDotsAndSpaceAndDotAndSpace.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n\n\tconst metadataFilesCountLogWithCommasAndDotsAndSpaceAndDotAndSpaceAndDotAndSpace = metadataFilesCountLogWithCommasAndDotsAndSpaceAndDotAndSpaceAndDot.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1 \");\n\tconst metadataFilesCountLogWithCommasAndDotsAndSpaceAndDotAndSpaceAndDotAndSpaceAndDot = metadataFilesCountLogWithCommasAndDotsAndSpaceAndDotAndSpaceAndDotAndSpace.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n\n\tconst metadataFilesCountLogWithCommasAndDotsAndSpaceAndDotAndSpaceAndDotAndSpaceAndDotAndSpace = metadataFilesCount", "CodeBleu_score": 18.86829360550654}]}
{"instance_id": "9d9b04763521", "generation_result": [{"code": "function useSkinKeyboardControls(){\n\t\tconst dispatch = useDispatch();\n\tconst skins = useSkins();\n\tconst selectedSkinId = useSelectedSkinId();\n\tconst selectNextSkin = useSelectNextSkin();\n\tconst selectPreviousSkin = useSelectPreviousSkin();\n\tconst selectSkin = useSelectSkin();\n\tconst [keyDownListener, setKeyDownListener] = React.useState(null);\n\tconst [keyUpListener, setKeyUpListener] = React.useState(null);\n\n\tconst keyDownHandler = (event) => {\n\t\tif (event.code === \"ArrowRight\") {\n\t\t\tselectNextSkin();\n\t\t} else if (event.code === \"ArrowLeft\") {\n\t\t\tselectPreviousSkin();\n\t\t}\n\t};\n\n\tconst keyUpHandler = (event) => {\n\t\tif (event.code === \"ArrowRight\") {\n\t\t\tselectNextSkin();\n\t\t} else if (event.code === \"ArrowLeft\") {\n\t\t\tselectPreviousSkin();\n\t\t}\n\t};\n\n\tconst setListeners = () => {\n\t\tsetKeyDownListener(\n\t\t\tdocument.addEventListener(\"keydown\", keyDownHandler)\n\t\t);\n\t\tsetKeyUpListener(\n\t\t\tdocument.addEventListener(\"keyup\", keyUpHandler)\n\t\t);\n\t};\n\n\tconst removeListeners = () => {\n\t\tif (keyDownListener) {\n\t\t\tdocument.removeEventListener(\"keydown\", keyDownListener);\n\t\t}\n\t\tif (keyUpListener) {\n\t\t\tdocument.removeEventListener(\"keyup\", keyUpListener);\n\t\t}\n\t};\n\n\tReact.useEffect(setListeners, []);\n\tReact.useEffect(removeListeners, [keyDownListener, keyUpListener]);\n\n\tconst selectedSkin = skins.find(skin => skin.id === selectedSkinId);\n\tconst selectSkinAction = (skinId) => {\n\t\tdispatch(selectSkin(skinId));\n\t};\n\n\treturn {\n\t\tselectedSkin,\n\t\tselectSkinAction,\n\t};\n}", "CodeBleu_score": 25.82204410383187}, {"code": "function useSkinKeyboardControls(){\n\t\tconst [skinIndex, setSkinIndex] = React.useState(0);\n\n\tReact.useEffect(() => {\n\t\tconst handleKeyDown = (event) => {\n\t\t\tif (event.key === 'ArrowRight') {\n\t\t\t\tsetSkinIndex(Math.min(skinIndex + 1, skins.length - 1));\n\t\t\t} else if (event.key === 'ArrowLeft') {\n\t\t\t\tsetSkinIndex(Math.max(skinIndex - 1, 0));\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener('keydown', handleKeyDown);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', handleKeyDown);\n\t\t};\n\t}, [skinIndex]);\n\n\treturn skins[skinIndex];\n}", "CodeBleu_score": 36.51213060127538}, {"code": "function useSkinKeyboardControls(){\n\t\tconst [skinIndex, setSkinIndex] = React.useState(0);\n\tconst [skinArray, setSkinArray] = React.useState([]);\n\tconst [isSubscribed, setIsSubscribed] = React.useState(false);\n\tconst [isListening, setIsListening] = React.useState(false);\n\n\t// Subscribe to keyboard events when the component is mounted\n\tReact.useEffect(() => {\n\t\tif (!isSubscribed) {\n\t\t\tsetIsSubscribed(true);\n\t\t\tsubscribe();\n\t\t}\n\t}, [isSubscribed]);\n\n\t// Unsubscribe from keyboard events when the component is unmounted\n\tReact.useEffect(() => {\n\t\treturn () => {\n\t\t\tif (isSubscribed) {\n\t\t\t\tunsubscribe();\n\t\t\t\tsetIsSubscribed(false);\n\t\t\t}\n\t\t};\n\t}, [isSubscribed]);\n\n\t// Subscribe to keyboard events\n\tfunction subscribe() {\n\t\tif (!isListening) {\n\t\t\tdocument.addEventListener(\"keydown\", handleKeyDown);\n\t\t\tsetIsListening(true);\n\t\t}\n\t}\n\n\t// Unsubscribe from keyboard events\n\tfunction unsubscribe() {\n\t\tif (isListening) {\n\t\t\tdocument.removeEventListener(\"keydown\", handleKeyDown);\n\t\t\tsetIsListening(false);\n\t\t}\n\t}\n\n\t// Handle keyboard events\n\tfunction handleKeyDown(event) {\n\t\tif (event.key === \"ArrowRight\") {\n\t\t\tsetSkinIndex((skinIndex + 1) % skinArray.length);\n\t\t} else if (event.key === \"ArrowLeft\") {\n\t\t\tsetSkinIndex((skinIndex + skinArray.length - 1) % skinArray.length);\n\t\t}\n\t}\n\n\treturn [skinIndex, setSkinIndex, skinArray, setSkinArray];\n}", "CodeBleu_score": 28.920559319432158}]}
{"instance_id": "c49e878d86ad", "generation_result": [{"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t\treturn (dispatch, getState) => {\n\t\tconst state = getState()\n\t\tconst fileReferences = promptForFileReferences(accept)\n\n\t\tdispatch({\n\t\t\ttype: \"SET_FILE_REFERENCES\",\n\t\t\tpayload: {\n\t\t\t\tfileReferences,\n\t\t\t},\n\t\t})\n\n\t\tdispatch({\n\t\t\ttype: \"SET_SELECTED_FILES\",\n\t\t\tpayload: {\n\t\t\t\tselectedFiles: fileReferences.length,\n\t\t\t},\n\t\t})\n\n\t\tdispatch({\n\t\t\ttype: \"SET_FIRST_FILE\",\n\t\t\tpayload: {\n\t\t\t\tfirstFile: fileReferences[0].name,\n\t\t\t},\n\t\t})\n\n\t\tif (fileReferences.length > 0) {\n\t\t\tdispatch({\n\t\t\t\ttype: \"LOAD_FILES_FROM_REFERENCES\",\n\t\t\t\tpayload: {\n\t\t\t\t\tfileReferences,\n\t\t\t\t\texpectedType,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n}", "CodeBleu_score": 44.53202678901923}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t\treturn (dispatch: Dispatch, getState: GetState) => {\n\t\tconst {\n\t\t\tmedia: {\n\t\t\t\tfiles: { fileList },\n\t\t\t},\n\t\t} = getState();\n\n\t\t// Prompt the user to select files\n\t\tconst fileNames: string[] = remote.dialog.showOpenDialog({\n\t\t\ttitle: \"Open files\",\n\t\t\tproperties: [\"openFile\", \"multiSelections\"],\n\t\t\tfilters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Sound skin files\",\n\t\t\t\t\textensions: [\"skins\"],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Media files\",\n\t\t\t\t\textensions: [\"mp3\", \"wav\", \"ogg\", \"flac\", \"aac\", \"m4a\"],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Equalizer files\",\n\t\t\t\t\textensions: [\"eq\"],\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\t// If the user didn't select any files, don't do anything\n\t\tif (!fileNames || fileNames.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Dispatch the action to load the files\n\t\tdispatch(\n\t\t\tloadFilesFromReferences(\n\t\t\t\tfileNames.map((fileName) => ({\n\t\t\t\t\tfileName,\n\t\t\t\t\ttype: expectedType,\n\t\t\t\t}))\n\t\t\t)\n\t\t);\n\t};\n}", "CodeBleu_score": 35.13641868636937}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t\treturn (dispatch: Dispatch, getState: GetState) => {\n\t\tconst state = getState();\n\t\tconst fileNames = remote.dialog.showOpenDialog(\n\t\t\tremote.getCurrentWindow(),\n\t\t\t{\n\t\t\t\ttitle: \"Select Files\",\n\t\t\t\tproperties: [\"openFile\", \"multiSelections\"],\n\t\t\t\tfilters: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Skin Files\",\n\t\t\t\t\t\textensions: [\"xml\", \"skn\"],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Media Files\",\n\t\t\t\t\t\textensions: [\"mp3\", \"wav\", \"ogg\", \"flac\"],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Equalizer Files\",\n\t\t\t\t\t\textensions: [\"eqf\"],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t);\n\t\tif (fileNames !== undefined && fileNames.length > 0) {\n\t\t\tdispatch(\n\t\t\t\topenFiles(fileNames, expectedType, fileNames[0].split(\"\\\\\").pop())\n\t\t\t);\n\t\t\tdispatch(loadFilesFromReferences(fileNames));\n\t\t}\n\t};\n}", "CodeBleu_score": 40.64360392978942}]}
{"instance_id": "afa715d20f88", "generation_result": [{"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\tconst files = extractFiles(e)\nconst dispatchLoadFiles = handleTrackDropEvent\n  ? () => dispatch(loadFiles(files, loadStyle, atIndex))\n  : () => dispatch(loadFilesFromReferences(files, loadStyle, atIndex))\nreturn dispatchLoadFiles\n}", "CodeBleu_score": 36.78900693233947}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\t\nconst files = extractFiles(e);\nconst dispatch = useDispatch();\n\nif (files.length > 0) {\n  if (handleTrackDropEvent) {\n    const mediaFiles = loadFilesFromReferences(files);\n    handleTrackDropEvent(e, mediaFiles, loadStyle, atIndex);\n  } else {\n    dispatch(loadFiles(files, loadStyle, atIndex));\n  }\n} else {\n  dispatch(loadFilesFromReferences(files));\n}\n}", "CodeBleu_score": 47.33326808076086}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\tconst files = Array.from(e.dataTransfer.files)\n\nif (files.length === 0) {\nreturn () => {}\n}\n\nif (handleTrackDropEvent) {\nreturn handleTrackDropEvent(e, files, loadStyle, atIndex)\n}\n\nreturn loadFilesFromReferences(files, loadStyle, atIndex)\n}", "CodeBleu_score": 33.57767967212648}]}
{"instance_id": "0faea0aa350c", "generation_result": [{"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t+    dispatch({ type: 'FETCH_MEDIA_TAGS_STARTED', id });\n    const tags = await requireMusicMetadata(file);\n-    dispatch({\n-      type: 'SET_MEDIA_TAGS',\n-      id,\n-      tags: {\n-        artist: tags.artist,\n-        title: tags.title,\n-        album: tags.album,\n-        artwork: tags.artwork,\n-      },\n-    });\n+    dispatch({ type: 'SET_MEDIA_TAGS', id, tags });\n  }", "CodeBleu_score": 14.10196279412801}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t+   dispatch(fetchMediaTagsRequest(id));\n+   try {\n+     const tags = await requireMusicMetadata(file);\n+     const { artist, title, album, artwork } = tags;\n+     dispatch(\n+       setMediaTags(id, {\n+         artist,\n+         title,\n+         album,\n+         artwork,\n+       }),\n+     );\n+   } catch (error) {\n+     dispatch(fetchMediaTagsFailure(id, error));\n+   }\n  }", "CodeBleu_score": 14.643981552153004}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t\tdispatch({ type: 'FETCH_MEDIA_TAGS_STARTED', payload: { id } });\n\ttry {\n\t\tconst tags = await requireMusicMetadata(file);\n\t\tdispatch({ type: 'FETCH_MEDIA_TAGS_SUCCESS', payload: { id, tags } });\n\t} catch (error) {\n\t\tdispatch({ type: 'FETCH_MEDIA_TAGS_FAILURE', payload: { id, error } });\n\t}\n  }", "CodeBleu_score": 10.94824989117236}]}
{"instance_id": "02174213852f", "generation_result": [{"code": "export function playTrack(id: number): Thunk {{\n\treturn (dispatch, getState) => {\nconst mediaStatus = getMediaStatus(getState());\nif (mediaStatus.status === 'STOPPED') {\ndispatch(bufferTrack(id));\n} else {\ndispatch(playTrack(id));\n}\n}\n}", "CodeBleu_score": 32.81242972998842}, {"code": "export function playTrack(id: number): Thunk {{\n\t\treturn (dispatch: Dispatch, getState: GetState) => {\n\t\tconst state = getState();\n\n\t\tif (state.media.status === MediaStatus.STOPPED) {\n\t\t\tdispatch(bufferTrack(id));\n\t\t} else {\n\t\t\tdispatch(playTrack(id));\n\t\t}\n\t};\n}", "CodeBleu_score": 33.067681705099695}, {"code": "export function playTrack(id: number): Thunk {{\n\treturn (dispatch: Dispatch, getState: GetState) => {\nconst state = getState();\nconst mediaStatus = selectors.getMediaStatus(state);\nif (mediaStatus === \"stopped\") {\ndispatch(bufferTrack(id));\n} else {\ndispatch(playTrack(id));\n}\n};\n}", "CodeBleu_score": 43.324256053389256}]}
{"instance_id": "643b829015d2", "generation_result": [{"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t\te.preventDefault()\n\treturn (dispatch, getState) => {\n\t\tconst volume = getState().volume\n\t\tconst newVolume = volume + e.deltaY / 100\n\t\tdispatch(setVolume(newVolume))\n\t}\n}", "CodeBleu_score": 56.77077882706949}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t\te.preventDefault();\n\treturn (dispatch, getState) => {\n\t\tconst volume = getState().volume;\n\t\tdispatch(setVolume(volume + e.deltaY / 100));\n\t};\n}", "CodeBleu_score": 60.37559633368764}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t\te.preventDefault();\n\tconst currentVolume = getState().volume;\n\tdispatch({ type: 'SET_VOLUME', payload: { volume: currentVolume + e.deltaY / 100 } });\n}", "CodeBleu_score": 41.72372145019394}]}
{"instance_id": "d97c127090ce", "generation_result": [{"code": "function FullScreen(props: Props){\n\t\tconst { children, enabled, onEnterFullScreen, onLeaveFullScreen } = props;\n\n\tconst target = React.useRef(null);\n\tconst [isFullScreen, setIsFullScreen] = React.useState(false);\n\n\tconst handleFullScreenChange = React.useCallback(\n\t\t(e: Event) => {\n\t\t\tconst isFullscreen = document.fullscreenElement === target.current;\n\t\t\tsetIsFullScreen(isFullscreen);\n\n\t\t\tif (isFullscreen) {\n\t\t\t\tif (onEnterFullScreen) {\n\t\t\t\t\tonEnterFullScreen(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (onLeaveFullScreen) {\n\t\t\t\t\tonLeaveFullScreen(e);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[onEnterFullScreen, onLeaveFullScreen],\n\t);\n\n\tReact.useEffect(() => {\n\t\tdocument.addEventListener('fullscreenchange', handleFullScreenChange);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('fullscreenchange', handleFullScreenChange);\n\t\t};\n\t}, [handleFullScreenChange]);\n\n\tReact.useEffect(() => {\n\t\tif (enabled) {\n\t\t\tif (target.current) {\n\t\t\t\ttarget.current.requestFullscreen();\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitFullscreen();\n\t\t}\n\t}, [enabled]);\n\n\treturn (\n\t\t<div ref={target} className={styles.root}>\n\t\t\t{children}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 38.319465035212936}, {"code": "function FullScreen(props: Props){\n\t\tconst { enabled, children } = props;\n\tconst [isFullscreen, setIsFullscreen] = React.useState(false);\n\tconst target = React.useRef<Element | null>(null);\n\tconst handleFullscreenChange = React.useCallback(() => {\n\t\tsetIsFullscreen(document.fullscreenElement === target.current);\n\t}, [setIsFullscreen]);\n\tReact.useEffect(() => {\n\t\tconst element = target.current;\n\t\tif (element) {\n\t\t\telement.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\t\t}\n\t\treturn () => {\n\t\t\tif (element) {\n\t\t\t\telement.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n\t\t\t}\n\t\t};\n\t}, [handleFullscreenChange]);\n\tconst handleFullscreen = React.useCallback(() => {\n\t\tif (target.current) {\n\t\t\tif (isFullscreen) {\n\t\t\t\tdocument.exitFullscreen();\n\t\t\t} else {\n\t\t\t\ttarget.current.requestFullscreen();\n\t\t\t}\n\t\t}\n\t}, [isFullscreen]);\n\tReact.useEffect(() => {\n\t\tif (enabled) {\n\t\t\thandleFullscreen();\n\t\t}\n\t}, [enabled, handleFullscreen]);\n\tconst style = React.useMemo(\n\t\t() => (enabled ? { width: \"100%\", height: \"100%\" } : undefined),\n\t\t[enabled]\n\t);\n\treturn (\n\t\t<div ref={target} style={style}>\n\t\t\t{children}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 41.83678628591698}, {"code": "function FullScreen(props: Props){\n\t\tconst { children, enabled, ...otherProps } = props;\n\tconst ref = React.useRef<HTMLDivElement | null>(null);\n\tconst [isFullscreen, setIsFullscreen] = React.useState(false);\n\n\tReact.useEffect(() => {\n\t\tconst handleFullscreenChange = () => {\n\t\t\tconst isFullscreenNow = document.fullscreenElement !== null;\n\t\t\tif (isFullscreenNow !== isFullscreen) {\n\t\t\t\tsetIsFullscreen(isFullscreenNow);\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener('fullscreenchange', handleFullscreenChange);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('fullscreenchange', handleFullscreenChange);\n\t\t};\n\t}, [isFullscreen]);\n\n\tReact.useLayoutEffect(() => {\n\t\tconst element = ref.current;\n\t\tif (enabled && element !== null) {\n\t\t\tif (isFullscreen) {\n\t\t\t\telement.requestFullscreen();\n\t\t\t} else {\n\t\t\t\tdocument.exitFullscreen();\n\t\t\t}\n\t\t}\n\t}, [enabled, isFullscreen]);\n\n\treturn (\n\t\t<div\n\t\t\t{...otherProps}\n\t\t\tref={ref}\n\t\t\tstyle={{\n\t\t\t\t...(enabled && isFullscreen\n\t\t\t\t\t? {\n\t\t\t\t\t\t\twidth: '100vw',\n\t\t\t\t\t\t\theight: '100vh',\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t  }\n\t\t\t\t\t: {}),\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 41.08919758573016}]}
{"instance_id": "d333738337a8", "generation_result": [{"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t\tconst clipPaths = {};\n\tskinRegion.forEach((region) => {\n\t\tif (region.polygons.length > 0) {\n\t\t\tclipPaths[region.name] = region.id;\n\t\t}\n\t});\n\treturn clipPaths;\n}", "CodeBleu_score": 14.196549251676426}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t\tconst clipPaths = {}\n\tif (skinRegion) {\n\t\tconst { regions } = skinRegion\n\t\tif (regions) {\n\t\t\tfor (const region of regions) {\n\t\t\t\tconst { name, polygons } = region\n\t\t\t\tif (polygons) {\n\t\t\t\t\tclipPaths[name] = region\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn clipPaths\n}", "CodeBleu_score": 24.940865943112417}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t\tconst clipPaths = {}\n\tif (skinRegion) {\n\t\tskinRegion.forEach((region) => {\n\t\t\tconst { name, polygon } = region\n\t\t\tif (polygon) {\n\t\t\t\tclipPaths[name] = polygon\n\t\t\t}\n\t\t})\n\t}\n\treturn clipPaths\n}", "CodeBleu_score": 20.382264770124987}]}
{"instance_id": "6d30b280ffbe", "generation_result": [{"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t\tconst octaveBuckets: number[] = [];\n\tconst minHz = 27.5;\n\tconst maxHz = 22050;\n\tconst octaves = 10;\n\tconst octaveStep = Math.pow(2, 1 / octaves);\n\tconst hzPerIndex = (maxHz - minHz) / bufferLength;\n\tlet hz = minHz;\n\tlet i = 0;\n\twhile (hz < maxHz) {\n\t\toctaveBuckets[i++] = Math.floor(hz / hzPerIndex);\n\t\thz *= octaveStep;\n\t}\n\treturn octaveBuckets;\n}", "CodeBleu_score": 28.88824611500701}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t\tconst octaveBuckets: number[] = []\n\tconst octaves: number = Math.log2(bufferLength)\n\tconst step: number = Math.pow(2, 1 / octaves)\n\tlet current: number = 0\n\twhile (current < bufferLength) {\n\t\toctaveBuckets.push(current)\n\t\tcurrent += step\n\t}\n\treturn octaveBuckets\n}", "CodeBleu_score": 14.059456103850346}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t\tconst octaveBuckets: number[] = []\n\tconst octaveStep = Math.pow(2, 1 / NUM_OCTAVES)\n\tconst minHz = MIN_HZ\n\tconst maxHz = MAX_HZ\n\tconst hzPerIndex = (maxHz - minHz) / (bufferLength - 1)\n\tlet hz = minHz\n\tfor (let i = 0; i < bufferLength; i++) {\n\t\tlet bucketIndex = Math.floor(hz / hzPerIndex)\n\t\tif (bucketIndex < 0) {\n\t\t\tbucketIndex = 0\n\t\t} else if (bucketIndex >= NUM_OCTAVES) {\n\t\t\tbucketIndex = NUM_OCTAVES - 1\n\t\t}\n\t\toctaveBuckets[i] = bucketIndex\n\t\thz *= octaveStep\n\t}\n\treturn octaveBuckets\n}", "CodeBleu_score": 33.38502955509818}]}
{"instance_id": "e7c399fb0db4", "generation_result": [{"code": "function EqGraph(){\n\t\tconst canvas = document.getElementById('eq-graph');\n\tconst ctx = canvas.getContext('2d');\n\tconst eqLine = document.getElementById('eq-line');\n\tconst eqLineCtx = eqLine.getContext('2d');\n\tconst eqLineImage = document.getElementById('eq-line-image');\n\tconst eqLinePattern = ctx.createPattern(eqLineImage, 'repeat');\n\tconst eqLineGradient = ctx.createLinearGradient(0, 0, 100, 0);\n\tconst eqLineGradientStops = eqLineGradient.addColorStop;\n\tconst eqLineGradientStops(0, 'rgba(255, 255, 255, 0)');\n\teqLineGradientStops(0.5, 'rgba(255, 255, 255, 0.3)');\n\teqLineGradientStops(1, 'rgba(255, 255, 255, 0)');\n\tconst eqLineGradientColorStops = [0, 0.5, 1];\n\tconst eqLineGradientColorStop = eqLineGradient.addColorStop;\n\tconst eqLineGradientColorStop(0, 'rgba(255, 255, 255, 0)');\n\teqLineGradientColorStop(0.5, 'rgba(255, 255, 255, 0.3)');\n\teqLineGradientColorStop(1, 'rgba(255, 255, 255, 0)');\n\tconst eqLineGradientColorStops = [0, 0.5, 1];\n\tconst eqLineGradientColorStop = eqLineGradient.addColorStop;\n\tconst eqLineGradientColorStop(0, 'rgba(255, 255, 255, 0)');\n\teqLineGradientColorStop(0.5, 'rgba(255, 255, 255, 0.3)');\n\teqLineGradientColorStop(1, 'rgba(255, 255, 255, 0)');\n\tconst eqLineGradientColorStops = [0, 0.5, 1];\n\tconst eqLine", "CodeBleu_score": 19.674522781038114}, {"code": "function EqGraph(){\n\t\tconst {\n\t\teqValues,\n\t\teqImage,\n\t\teqImageSelector,\n\t\teqCanvasSelector,\n\t\teqCanvasCtxSelector,\n\t\teqCanvasWidth,\n\t\teqCanvasHeight,\n\t\teqLineColor,\n\t\teqLineThickness,\n\t} = useStore(state => state.eq);\n\n\tconst eqNode = document.querySelector(eqCanvasSelector);\n\tconst eqCtx = eqNode.getContext(\"2d\");\n\n\tconst eqImageObj = document.querySelector(eqImageSelector);\n\tconst eqImageObjSrc = eqImageObj.src;\n\n\tconst eqImageObjWidth = eqImageObj.width;\n\tconst eqImageObjHeight = eqImageObj.height;\n\n\tconst eqLineColorHex = eqLineColor;\n\tconst eqLineColorRgb = hexToRgb(eqLineColorHex);\n\n\tconst eqLineThicknessPx = eqLineThickness;\n\n\tconst eqCanvasWidthPx = eqCanvasWidth;\n\tconst eqCanvasHeightPx = eqCanvasHeight;\n\n\tconst eqCanvasWidthScaled = eqCanvasWidthPx * 2;\n\tconst eqCanvasHeightScaled = eqCanvasHeightPx * 2;\n\n\tconst eqCanvasWidthScaledHalf = eqCanvasWidthScaled / 2;\n\tconst eqCanvasHeightScaledHalf = eqCanvasHeightScaled / 2;\n\n\tconst eqCanvasWidthScaledHalfPx = eqCanvasWidthScaledHalf;\n\tconst eqCanvasHeightScaledHalfPx = eqCanvasHeightScaledHalf;\n\n\tconst eqCanvasWidthScaledHalfPxMinusThicknessPx = eqCanvasWidthScaledHalfPx - eqLineThicknessPx;\n\tconst eqCanvasHeightScaledHalfPxMinusThicknessPx = eqCanvasHeightScaledHalfPx - eqLineThicknessPx;\n\n\tconst eqCanvasWidthScaledHalfPxPlusThicknessPx = eqCanvasWidthScaledHalfPx + eqLineThicknessPx;\n\tconst eqCanvasHeightScaledHalfPxPlusThicknessPx = eqCanvasHeightScaledHalfPx + eqLineThicknessPx;\n\n\tconst eqCanvasWidthScaledHalfPxPlusThicknessPxHalf = eqCanvasWidthScaledHalfPxPlusThicknessPx / 2;\n\tconst eqCanvasHeightScaledHalfPxPlusThicknessPxHalf = eqCanvasHeightScaledHalfPxPlusThicknessPx / 2;\n\n\tconst eqCanvasWidthScaledHalfPxMinusThicknessPxHalf = eqCanvasWidthScaledHalfPxMinusThicknessPx / 2;\n\tconst eqCanvasHeightScaledHalfPxMinusThicknessPxHalf =", "CodeBleu_score": 21.160353815211593}, {"code": "function EqGraph(){\n\t\tconst canvas = document.querySelector(\"#eq-graph\");\n\tconst ctx = canvas.getContext(\"2d\");\n\tconst image = document.querySelector(\"#eq-graph-img\");\n\tconst width = canvas.width;\n\tconst height = canvas.height;\n\n\tconst colorPattern = [\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#000000\",\n\t\t\"#00000", "CodeBleu_score": 12.955395363858186}]}
{"instance_id": "b858f410c3f3", "generation_result": [{"code": "const ClutterBar = memo(() =>{\n\t\tconst [doubled, setDoubled] = useTypedSelector(state => state.clutter.doubled)\n\tconst dispatch = useDispatch()\n\tconst doubledClass = doubled ? 'doubled' : ''\n\n\tconst handleDoubledClick = () => {\n\t\tsetDoubled(!doubled)\n\t\tdispatch(toggleDoubled())\n\t}\n\n\tconst handleFocus = () => {\n\t\tdispatch(setFocus())\n\t}\n\n\tconst handleMouseUp = () => {\n\t\tdispatch(setMouseUp())\n\t}\n\n\tconst handleContextMenu = () => {\n\t\tdispatch(setContextMenu())\n\t}\n\n\treturn (\n\t\t<div className=\"clutter-bar\">\n\t\t\t<button\n\t\t\t\tclassName={doubledClass}\n\t\t\t\tonMouseUp={handleMouseUp}\n\t\t\t\tonFocus={handleFocus}\n\t\t\t\tonClick={handleDoubledClick}\n\t\t\t>\n\t\t\t\tDoubled\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonMouseUp={handleMouseUp}\n\t\t\t\tonFocus={handleFocus}\n\t\t\t\tonClick={handleContextMenu}\n\t\t\t>\n\t\t\t\tContext Menu\n\t\t\t</button>\n\t\t</div>\n\t)\n}", "CodeBleu_score": 24.82368749802129}, {"code": "const ClutterBar = memo(() =>{\n\t\tconst [doubled, setDoubled] = useTypedSelector(state => state.doubled)\n\tconst dispatch = useDispatch()\n\tconst setFocus = useActionCreator(actions.setFocus)\n\tconst setMouseUp = useActionCreator(actions.setMouseUp)\n\tconst toggleDoubled = () => {\n\t\tsetDoubled(doubled => !doubled)\n\t}\n\tconst toggleFocus = () => {\n\t\tsetFocus(doubled)\n\t}\n\tconst toggleMouseUp = () => {\n\t\tsetMouseUp(doubled)\n\t}\n\treturn (\n\t\t<div className=\"clutter-bar\">\n\t\t\t<button onClick={toggleFocus} className=\"clutter-button\">\n\t\t\t\tFocus\n\t\t\t</button>\n\t\t\t<button onClick={toggleMouseUp} className=\"clutter-button\">\n\t\t\t\tMouse Up\n\t\t\t</button>\n\t\t\t<button onClick={toggleDoubled} className=\"clutter-button\">\n\t\t\t\tDoubled\n\t\t\t</button>\n\t\t\t<ContextMenu />\n\t\t</div>\n\t)\n}", "CodeBleu_score": 26.50266302258884}, {"code": "const ClutterBar = memo(() =>{\n\t\tconst doubled = useTypedSelector(state => state.doubled);\n\tconst dispatch = useDispatch();\n\n\tconst handleDoubleClick = () => {\n\t\tdispatch(toggleDoubledActionCreator());\n\t};\n\n\treturn (\n\t\t<div className=\"clutter-bar\">\n\t\t\t<button\n\t\t\t\tclassName={doubled ? 'doubled' : ''}\n\t\t\t\tonMouseDown={useActionCreator(setFocusActionCreator, 'left')}\n\t\t\t\tonMouseUp={useActionCreator(setMouseUpActionCreator, 'left')}\n\t\t\t\tonDoubleClick={handleDoubleClick}\n\t\t\t>\n\t\t\t\tLeft\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={doubled ? 'doubled' : ''}\n\t\t\t\tonMouseDown={useActionCreator(setFocusActionCreator, 'right')}\n\t\t\t\tonMouseUp={useActionCreator(setMouseUpActionCreator, 'right')}\n\t\t\t\tonDoubleClick={handleDoubleClick}\n\t\t\t>\n\t\t\t\tRight\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={doubled ? 'doubled' : ''}\n\t\t\t\tonMouseDown={useActionCreator(setFocusActionCreator, 'up')}\n\t\t\t\tonMouseUp={useActionCreator(setMouseUpActionCreator, 'up')}\n\t\t\t\tonDoubleClick={handleDoubleClick}\n\t\t\t>\n\t\t\t\tUp\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={doubled ? 'doubled' : ''}\n\t\t\t\tonMouseDown={useActionCreator(setFocusActionCreator, 'down')}\n\t\t\t\tonMouseUp={useActionCreator(setMouseUpActionCreator, 'down')}\n\t\t\t\tonDoubleClick={handleDoubleClick}\n\t\t\t>\n\t\t\t\tDown\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={doubled ? 'doubled' : ''}\n\t\t\t\tonMouseDown={useActionCreator(setFocusActionCreator, 'center')}\n\t\t\t\tonMouseUp={useActionCreator(setMouseUpActionCreator, 'center')}\n\t\t\t\tonDoubleClick={handleDoubleClick}\n\t\t\t>\n\t\t\t\tCenter\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={doubled ? 'doubled' : ''}\n\t\t\t\tonMouseDown={useActionCreator(setFocusActionCreator, 'double')}\n\t\t\t\tonMouseUp={useActionCreator(setMouseUpActionCreator, 'double')}\n\t\t\t\tonDoubleClick={handleDoubleClick}\n\t\t\t>\n\t\t\t\tDouble\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={doubled ? 'double", "CodeBleu_score": 16.60068436027555}]}
{"instance_id": "5946b13d68ba", "generation_result": [{"code": "const PlaylistToggleButton = memo(() =>{\n\t\tconst isOpen = useTypedSelector(Selectors.getWindowOpen)\n\tconst togglePlaylist = useActionCreator(ActionCreators.togglePlaylist)\n\n\tconst className = isOpen ? 'playlist-toggle-button open' : 'playlist-toggle-button'\n\n\treturn (\n\t\t<button id='playlist-toggle-button' className={className} title='Toggle Playlist' onClick={togglePlaylist}>\n\t\t\t<i className='material-icons'>playlist_play</i>\n\t\t</button>\n\t)\n}", "CodeBleu_score": 25.14468205893918}, {"code": "const PlaylistToggleButton = memo(() =>{\n\tconst isPlaylistOpen = useTypedSelector(Selectors.getWindowOpen)\nconst togglePlaylist = useActionCreator(Actions.togglePlaylist)\n\nreturn (\n<button\nid=\"playlist-toggle-button\"\nclassName={classnames(\"playlist-toggle-button\", {\n\"playlist-toggle-button--open\": isPlaylistOpen,\n})}\nonClick={togglePlaylist}\ntitle=\"Toggle Playlist Editor\"\n>\n<i className=\"material-icons\">playlist_play</i>\n</button>\n)\n}", "CodeBleu_score": 30.312083216334617}, {"code": "const PlaylistToggleButton = memo(() =>{\n\t\tconst isOpen = useTypedSelector(Selectors.getWindowOpen)\n\tconst dispatch = useTypedDispatch()\n\n\tconst togglePlaylistEditor = () => {\n\t\tdispatch(Actions.toggleWindowOpen())\n\t}\n\n\treturn (\n\t\t<button\n\t\t\tid=\"playlist-toggle-button\"\n\t\t\tclassName={isOpen ? \"playlist-toggle-button-selected\" : \"playlist-toggle-button\"}\n\t\t\tonClick={togglePlaylistEditor}\n\t\t\ttitle=\"Toggle Playlist Editor\"\n\t\t>\n\t\t\t<FontAwesomeIcon icon={faList} />\n\t\t</button>\n\t)\n}", "CodeBleu_score": 28.55306163380844}]}
{"instance_id": "39ecf0db7a99", "generation_result": [{"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t\tconst [portalNode, setPortalNode] = React.useState<HTMLDivElement | null>(null);\n\n\tReact.useEffect(() => {\n\t\tconst portalNode = document.createElement(\"div\");\n\t\tportalNode.className = \"webamp-desktop\";\n\t\tdocument.body.appendChild(portalNode);\n\t\tsetPortalNode(portalNode);\n\n\t\treturn () => {\n\t\t\tdocument.body.removeChild(portalNode);\n\t\t};\n\t}, []);\n\n\tif (portalNode === null) {\n\t\treturn null;\n\t}\n\n\treturn ReactDOM.createPortal(children, portalNode);\n}", "CodeBleu_score": 39.34713669523467}, {"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t\tconst [element, setElement] = React.useState<HTMLDivElement | null>(null);\n\n\tReact.useEffect(() => {\n\t\tconst element = document.createElement(\"div\");\n\t\telement.className = \"webamp-desktop\";\n\t\tdocument.body.appendChild(element);\n\t\tsetElement(element);\n\t\treturn () => {\n\t\t\tdocument.body.removeChild(element);\n\t\t};\n\t}, []);\n\n\tif (!element) {\n\t\treturn null;\n\t}\n\n\treturn ReactDOM.createPortal(children, element);\n}", "CodeBleu_score": 39.05293408732772}, {"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t\tconst [divRef, setDivRef] = React.useState<HTMLDivElement | null>(null);\n\n\tReact.useEffect(() => {\n\t\tif (divRef) {\n\t\t\tdocument.body.appendChild(divRef);\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (divRef) {\n\t\t\t\tdocument.body.removeChild(divRef);\n\t\t\t}\n\t\t};\n\t}, [divRef]);\n\n\treturn (\n\t\t<div\n\t\t\tref={setDivRef}\n\t\t\tclassName=\"webamp-desktop\"\n\t\t\tstyle={{\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tbackgroundColor: \"var(--background-color)\",\n\t\t\t}}\n\t\t>\n\t\t\t{divRef && createPortal(children, divRef)}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 30.772232968058933}]}
{"instance_id": "41be320578a4", "generation_result": [{"code": "export default function PlaylistScrollBar(){\n\t\tconst playlistHeight = usePlaylistHeight();\n\tconst scrollPosition = usePlaylistScrollPosition();\n\tconst visibleTracks = useVisibleTracks();\n\tconst dispatch = useDispatch();\n\n\tconst handleScroll = (e, value) => {\n\t\tdispatch(setPlaylistScrollPosition(value));\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\theight: playlistHeight,\n\t\t\t\tdisplay: visibleTracks.length === 0 ? 'none' : 'flex',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t}}\n\t\t>\n\t\t\t<VerticalSlider\n\t\t\t\tvalue={scrollPosition}\n\t\t\t\tmin={0}\n\t\t\t\tmax={playlistHeight - 200}\n\t\t\t\tonChange={handleScroll}\n\t\t\t\tdisabled={visibleTracks.length === 0}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: 10,\n\t\t\t\t\tmarginTop: 10,\n\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t}}\n\t\t\t\ttrackStyle={{\n\t\t\t\t\theight: 5,\n\t\t\t\t\tbackgroundColor: 'rgba(100, 100, 100, 0.5)',\n\t\t\t\t}}\n\t\t\t\thandleStyle={{\n\t\t\t\t\twidth: 20,\n\t\t\t\t\theight: 20,\n\t\t\t\t\tborderRadius: 10,\n\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\tborder: '1px solid black',\n\t\t\t\t}}\n\t\t\t\trailStyle={{\n\t\t\t\t\theight: 5,\n\t\t\t\t\tbackgroundColor: 'rgba(100, 100, 100, 0.5)',\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}", "CodeBleu_score": 31.691500063678603}, {"code": "export default function PlaylistScrollBar(){\n\t\tconst [scrollPosition, setScrollPosition] = usePlaylistScrollPosition();\n\tconst playlistHeight = usePlaylistHeight();\n\tconst playlistVisible = usePlaylistVisible();\n\tconst dispatch = useDispatch();\n\n\tconst handleScroll = (e) => {\n\t\tconst { scrollTop } = e.target;\n\t\tconst { scrollHeight, clientHeight } = e.target.parentElement;\n\t\tconst newScrollPosition = Math.floor(scrollTop / (scrollHeight - clientHeight) * scrollHeight);\n\t\tdispatch(setScrollPosition(newScrollPosition));\n\t};\n\n\treturn (\n\t\t<div className=\"playlist-scrollbar-container\">\n\t\t\t<div\n\t\t\t\tclassName=\"playlist-scrollbar-track\"\n\t\t\t\tonScroll={handleScroll}\n\t\t\t\tstyle={{ height: playlistHeight }}\n\t\t\t>\n\t\t\t\t<VerticalSlider\n\t\t\t\t\tvalue={scrollPosition}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={playlistHeight}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tonChange={setScrollPosition}\n\t\t\t\t\tdisabled={!playlistVisible}\n\t\t\t\t>\n\t\t\t\t\t<VerticalSlider.Handle\n\t\t\t\t\t\tclassName=\"playlist-scrollbar-handle\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttop: scrollPosition,\n\t\t\t\t\t\t\theight: playlistHeight,\n\t\t\t\t\t\t\tbackgroundColor: 'var(--scrollbar-background-color)',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</VerticalSlider>\n\t\t\t</div>\n\t\t</div>\n\t);\n}", "CodeBleu_score": 28.75429088690123}, {"code": "export default function PlaylistScrollBar(){\n\t\tconst [playlistHeight, setPlaylistHeight] = React.useState(0);\n\tconst [scrollPosition, setScrollPosition] = React.useState(0);\n\tconst [isPlaylistVisible, setIsPlaylistVisible] = React.useState(false);\n\n\tconst playlistRef = React.useRef(null);\n\n\tconst playlistHeightRef = React.useRef(0);\n\tconst scrollPositionRef = React.useRef(0);\n\tconst isPlaylistVisibleRef = React.useRef(false);\n\n\tconst updatePlaylistHeight = () => {\n\t\tconst height = playlistRef.current.clientHeight;\n\n\t\tif (height !== playlistHeightRef.current) {\n\t\t\tsetPlaylistHeight(height);\n\t\t\tplaylistHeightRef.current = height;\n\t\t}\n\t};\n\n\tconst updateScrollPosition = () => {\n\t\tconst position = playlistRef.current.scrollTop;\n\n\t\tif (position !== scrollPositionRef.current) {\n\t\t\tsetScrollPosition(position);\n\t\t\tscrollPositionRef.current = position;\n\t\t}\n\t};\n\n\tconst updatePlaylistVisibility = () => {\n\t\tconst isVisible = playlistRef.current.clientHeight < playlistRef.current.scrollHeight;\n\n\t\tif (isVisible !== isPlaylistVisibleRef.current) {\n\t\t\tsetIsPlaylistVisible(isVisible);\n\t\t\tisPlaylistVisibleRef.current = isVisible;\n\t\t}\n\t};\n\n\tReact.useEffect(() => {\n\t\tconst resizeObserver = new ResizeObserver(updatePlaylistHeight);\n\t\tresizeObserver.observe(playlistRef.current);\n\n\t\treturn () => resizeObserver.disconnect();\n\t}, []);\n\n\tReact.useEffect(() => {\n\t\tconst scrollObserver = new IntersectionObserver((entries) => {\n\t\t\tif (entries[0].isIntersecting) {\n\t\t\t\tupdateScrollPosition();\n\t\t\t}\n\t\t}, {});\n\t\tscrollObserver.observe(playlistRef.current);\n\n\t\treturn () => scrollObserver.disconnect();\n\t}, []);\n\n\tReact.useEffect(() => {\n\t\tconst intersectionObserver = new IntersectionObserver((entries) => {\n\t\t\tif (entries[0].isIntersecting) {\n\t\t\t\tupdatePlaylistVisibility();\n\t\t\t}\n\t\t}, {});\n\t\tintersectionObserver.observe(playlistRef.current);\n\n\t\treturn () => intersectionObserver.disconnect();\n\t}, []);\n\n\tconst handleScroll = (event) => {\n\t\tevent.", "CodeBleu_score": 21.605632762453606}]}
{"instance_id": "fccf51432007", "generation_result": [{"code": "export function genMediaDuration(url: string): Promise<number>{\n\t\treturn new Promise((resolve, reject) => {\n\t\tconst audioElement = document.createElement(\"audio\");\n\t\taudioElement.crossOrigin = \"anonymous\";\n\t\taudioElement.src = url;\n\t\taudioElement.addEventListener(\"loadedmetadata\", () => {\n\t\t\tresolve(audioElement.duration);\n\t\t});\n\t\taudioElement.addEventListener(\"error\", () => {\n\t\t\treject(audioElement.error);\n\t\t});\n\t});\n}", "CodeBleu_score": 32.670782117927544}, {"code": "export function genMediaDuration(url: string): Promise<number>{\n\t\treturn new Promise((resolve, reject) => {\n\t\tconst audio = new Audio(url);\n\t\taudio.crossOrigin = 'anonymous';\n\n\t\taudio.addEventListener('durationchange', () => {\n\t\t\tresolve(audio.duration);\n\t\t\taudio.removeEventListener('durationchange', null);\n\t\t});\n\n\t\taudio.addEventListener('error', (err) => {\n\t\t\treject(err);\n\t\t\taudio.removeEventListener('error', null);\n\t\t});\n\t});\n}", "CodeBleu_score": 31.349285028131057}, {"code": "export function genMediaDuration(url: string): Promise<number>{\n\t\treturn new Promise((resolve, reject) => {\n\t\tconst audio = new Audio();\n\t\taudio.crossOrigin = \"anonymous\";\n\t\taudio.preload = \"metadata\";\n\t\taudio.src = url;\n\t\taudio.addEventListener(\"durationchange\", () => {\n\t\t\tresolve(audio.duration);\n\t\t\taudio.removeEventListener(\"durationchange\", () => {});\n\t\t});\n\t\taudio.addEventListener(\"error\", (err) => {\n\t\t\treject(err);\n\t\t\taudio.removeEventListener(\"error\", () => {});\n\t\t});\n\t});\n}", "CodeBleu_score": 35.860454856561574}]}
{"instance_id": "8055da9c9425", "generation_result": [{"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t\tif (!fileReference) {\n\t\treturn Promise.reject(new Error(\"File reference is null\"));\n\t}\n\treturn new Promise((resolve, reject) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = (event: any) => {\n\t\t\tresolve(event.target.result);\n\t\t};\n\t\tfileReader.onerror = (event: any) => {\n\t\t\treject(event.target.error);\n\t\t};\n\t\tfileReader.readAsArrayBuffer(fileReference);\n\t});\n}", "CodeBleu_score": 49.20692263334527}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t\tif (!fileReference) {\n\t\treturn Promise.reject(new Error(\"File reference is null\"));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\n\t\treader.onload = (event: any) => {\n\t\t\tresolve(event.target.result);\n\t\t};\n\n\t\treader.onerror = (event: any) => {\n\t\t\treject(event.target.error);\n\t\t};\n\n\t\treader.readAsArrayBuffer(fileReference);\n\t});\n}", "CodeBleu_score": 54.07579529584861}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t\tif (!fileReference) {\n\t\treturn Promise.reject(new Error(\"File reference is null\"));\n\t}\n\tconst fileReader = new FileReader();\n\treturn new Promise((resolve, reject) => {\n\t\tfileReader.onload = () => {\n\t\t\tresolve(fileReader.result);\n\t\t};\n\t\tfileReader.onerror = (error) => {\n\t\t\treject(error);\n\t\t};\n\t\tfileReader.readAsArrayBuffer(fileReference);\n\t});\n}", "CodeBleu_score": 46.59212939933302}]}
{"instance_id": "b3dc12d7d309", "generation_result": [{"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t\tconst [value, setValue] = React.useState<T | null>(null);\n\tconst [disposed, setDisposed] = React.useState(false);\n\n\tReact.useEffect(() => {\n\t\tconst dispose = (): void => {\n\t\t\tsetDisposed(true);\n\t\t};\n\n\t\tif (disposed) {\n\t\t\treturn dispose;\n\t\t}\n\n\t\tlet isMounted = true;\n\n\t\tconst resolve = (value: T): void => {\n\t\t\tif (isMounted) {\n\t\t\t\tsetValue(value);\n\t\t\t}\n\t\t};\n\n\t\tpropValue.then(resolve, dispose);\n\n\t\treturn (): void => {\n\t\t\tisMounted = false;\n\t\t\tdispose();\n\t\t};\n\t}, [propValue, disposed]);\n\n\treturn value;\n}", "CodeBleu_score": 39.00221168581927}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t\tconst [value, setValue] = React.useState<T | null>(null);\n\tconst [disposed, setDisposed] = React.useState<boolean>(false);\n\n\tReact.useEffect(() => {\n\t\tconst dispose = (): void => {\n\t\t\tsetDisposed(true);\n\t\t};\n\t\tpropValue.then((resolvedValue: T): void => {\n\t\t\tif (!disposed) {\n\t\t\t\tsetValue(resolvedValue);\n\t\t\t}\n\t\t}, dispose);\n\t\treturn dispose;\n\t}, [propValue, disposed]);\n\n\treturn value;\n}", "CodeBleu_score": 40.196442675206114}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t\tconst [value, setValue] = React.useState<T | null>(null);\n\tconst [disposed, setDisposed] = React.useState(false);\n\n\tReact.useEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await propValue;\n\t\t\t\tif (!disposed) {\n\t\t\t\t\tsetValue(data);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tif (!disposed) {\n\t\t\t\t\tsetValue(null);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, [propValue, disposed]);\n\n\treturn value;\n}", "CodeBleu_score": 37.46916577633677}]}
{"instance_id": "7fc14a50df16", "generation_result": [{"code": "export default function regionParser(regionStr: string): RegionData{\n\t\tconst regionData: RegionData = {};\n\tconst sections = regionStr.split(\"[\");\n\tfor (let i = 1; i < sections.length; i++) {\n\t\tconst section = sections[i];\n\t\tconst lines = section.split(\"\n\");\n\t\tconst sectionName = lines[0].trim();\n\t\tconst polygons = [];\n\t\tfor (let j = 1; j < lines.length; j++) {\n\t\t\tconst line = lines[j];\n\t\t\tconst coords = line.split(\",\");\n\t\t\tif (coords.length === 2) {\n\t\t\t\tconst polygon = { x: parseFloat(coords[0]), y: parseFloat(coords[1]) };\n\t\t\t\tpolygons.push(polygon);\n\t\t\t}\n\t\t}\n\t\tregionData[sectionName] = polygons;\n\t}\n\treturn regionData;\n}", "CodeBleu_score": 20.506868424654876}, {"code": "export default function regionParser(regionStr: string): RegionData{\n\t\tconst regionData: RegionData = {};\n\tconst lines = regionStr.split('\n');\n\tlet currentSection: string = '';\n\tlet currentPolygon: number[] = [];\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst line = lines[i];\n\n\t\t// Skip empty lines and comments\n\t\tif (line === '' || line.startsWith(';')) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check for new section\n\t\tif (line.startsWith('[') && line.endsWith(']')) {\n\t\t\tcurrentSection = line.slice(1, -1);\n\t\t\tregionData[currentSection] = [];\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check for new polygon\n\t\tif (line.startsWith('(')) {\n\t\t\tcurrentPolygon = [];\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check for end of polygon\n\t\tif (line.endsWith(')')) {\n\t\t\tif (currentPolygon.length > 2) {\n\t\t\t\tregionData[currentSection].push(currentPolygon);\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parse coordinates\n\t\tconst coords = line.split(',');\n\t\tif (coords.length === 2) {\n\t\t\tconst x = parseFloat(coords[0]);\n\t\t\tconst y = parseFloat(coords[1]);\n\t\t\tif (!isNaN(x) && !isNaN(y)) {\n\t\t\t\tcurrentPolygon.push([x, y]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn regionData;\n}", "CodeBleu_score": 20.665928443755675}, {"code": "export default function regionParser(regionStr: string): RegionData{\n\t\tconst regionData: RegionData = {};\n\tconst lines = regionStr.split('", "CodeBleu_score": 4.132576360162309}]}
{"instance_id": "6e97ec2706cf", "generation_result": [{"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t\tisMediaPlaying: isMediaPlaying,\n\tcurrentTrack: getCurrentTrack,\n\tmediaTags: getMediaTags,\n}", "CodeBleu_score": 4.884709918326884}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t\tisMediaPlaying: ( state ) => state.media.isPlaying,\n\tcurrentTrack: ( state ) => state.tracks.currentTrack,\n\tisMediaElementInitialized: ( state ) => state.media.isMediaElementInitialized,\n}", "CodeBleu_score": 12.713011903409921}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t\tisMediaPlaying: ( state ) => state.media.isPlaying,\n\tcurrentTrackId: ( state ) => state.media.currentTrackId,\n\ttracks: ( state ) => state.tracks,\n}", "CodeBleu_score": 11.493579855887642}]}
{"instance_id": "5dbbdd07f829", "generation_result": [{"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t\tconst { dispatch, getState } = this._store;\n\tconst { skin, instanceId } = getState();\n\n\t// If the instance is already mounted, we don't want to remount it.\n\tif (this._root.mounted) {\n\t\treturn;\n\t}\n\n\t// If the instance is already unmounted, we don't want to remount it.\n\tif (this._root.unmounted) {\n\t\treturn;\n\t}\n\n\t// If the instance is not ready, we don't want to remount it.\n\tif (!this._root.ready) {\n\t\treturn;\n\t}\n\n\t// If the instance is already rendering, we don't want to remount it.\n\tif (this._root.rendering) {\n\t\treturn;\n\t}\n\n\t// If the instance is not mounted, we want to mount it.\n\tif (!this._root.mounted) {\n\t\tthis._root.rendering = true;\n\n\t\t// Dispatch an action to center the window.\n\t\tdispatch(centerWindow());\n\n\t\t// Wait for the skin to load.\n\t\tawait this.waitForSkinLoad();\n\n\t\t// If the instance is not ready, we don't want to remount it.\n\t\tif (!this._root.ready) {\n\t\t\tthis._root.rendering = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// If the instance is already unmounted, we don't want to remount it.\n\t\tif (this._root.unmounted) {\n\t\t\tthis._root.rendering = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// If the instance is already rendering, we don't want to remount it.\n\t\tif (this._root.rendering) {\n\t\t\tthis._root.rendering = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// If the instance is not mounted, we want to mount it.\n\t\tif (!this._root.mounted) {\n\t\t\tthis._root.rendering = true;\n\n\t\t\t// Create a React root.\n\t\t\tthis._root.root = React.createRoot(node);\n\n\t\t\t// Set up cleanup to unmount the React root.\n\t\t\tthis._root.unmount = () => {\n\t\t\t\tthis._root.unmounted = true;\n\t\t\t\tthis._root.root!.unmount();\n\t\t\t};\n\n\t\t\t// Render the application within a Redux Provider.", "CodeBleu_score": 33.149743638056655}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t// \tconsole.log('renderWhenReady')\n\t// Center the window\n\tthis._dispatch(centerWindow())\n\t// Wait for the skin to load\n\tawait this._waitForSkin()\n\t// Ensure the instance is not already rendered\n\tif (this._root) {\n\t\treturn\n\t}\n\t// Create a React root\n\tthis._root = createRoot(node)\n\t// Unmount the React root on disposal\n\tthis._disposables.add(this._root.unmount)\n\t// Render the application within a Redux Provider\n\tthis._root.render(\n\t<Provider store={this._store}>\n\t\t<App />\n\t</Provider>,\n\t)\n}", "CodeBleu_score": 17.72433952162592}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t-  if (this._root) {", "CodeBleu_score": 4.525869190419659}]}
{"instance_id": "2598a3bbc50d", "generation_result": [{"code": "handleContextMenu(e: any){\n\t\tconst activeElem = document.activeElement as HTMLElement;\n\tconst isTextarea = activeElem.tagName === 'TEXTAREA';\n\tconst isInput = activeElem.tagName === 'INPUT';\n\tconst isInputText = isInput && activeElem.type === 'text';\n\tconst isInputField = isTextarea || isInputText;\n\tconst isSelected = window.getSelection().toString() !== '';\n\tconst options = isInputField && isSelected ? ['cut'] : [];\n\tthis.contextEditMenu(e, options);\n}", "CodeBleu_score": 28.734951447644097}, {"code": "handleContextMenu(e: any){\n\t// Check if the active element is a non-terminal input field (textarea or input type text)\nconst isNonTerminalInput = activeElem.nodeName === 'TEXTAREA' || activeElem.nodeName === 'INPUT' && activeElem.type === 'text';\n// Check if there is any selected text\nconst hasSelection = sel.toString().length > 0;\n// Invoke the contextEditMenu method with the event and options\nif (isNonTerminalInput || hasSelection) {\nGlobalModel.contextEditMenu(e, {\ncut: true,\ncopy: true,\npaste: true,\n});\n}\n}", "CodeBleu_score": 22.051821467228823}, {"code": "handleContextMenu(e: any){\n\tconst activeElem = document.activeElement;\nconst isInputField = activeElem.tagName === 'TEXTAREA' || activeElem.tagName === 'INPUT' && activeElem.type === 'text';\nconst isSelected = window.getSelection().toString();\nconst options = isInputField ? { cut: false, copy: true, paste: false } : { cut: isSelected, copy: isSelected, paste: isSelected };\nthis.contextEditMenu(e, options);\n}", "CodeBleu_score": 25.607757626532518}]}
{"instance_id": "9a7475588195", "generation_result": [{"code": "handleChangeFontSize(fontSize: string): void{\n\t\tconst newFontSize = Number(fontSize);\n\tif (newFontSize !== this.termFontSize) {\n\t\tthis.termFontSize = newFontSize;\n\t\tthis.term.setOption('fontSize', newFontSize);\n\t\tthis.commandRtnHandler(this.term.getOption('fontSize'));\n\t}\n}", "CodeBleu_score": 38.98037380019046}, {"code": "handleChangeFontSize(fontSize: string): void{\n\t\tlet newFontSize: number = Number(fontSize);\n\tif (newFontSize === this.termFontSize) {\n\t\treturn;\n\t}\n\tif (isNaN(newFontSize) || newFontSize < 1 || newFontSize > 100) {\n\t\tthis.commandRtnHandler(false, \"Invalid font size. Please enter a number between 1 and 100.\");\n\t}\n\telse {\n\t\tthis.termFontSize = newFontSize;\n\t\tthis.commandRtnHandler(true, \"\");\n\t\tthis.commandHandler.setTermFontSize(newFontSize);\n\t}\n}", "CodeBleu_score": 33.98434299993392}, {"code": "handleChangeFontSize(fontSize: string): void{\n\t\tconst newFontSize = Number(fontSize);\n\tif (newFontSize !== this.getTermFontSize()) {\n\t\tthis.setTermFontSize(newFontSize);\n\t\tconst commandRtn = this.commandRtnHandler(this.commandRunner.runCommand(\"set_font_size\", fontSize));\n\t\tif (commandRtn.error) {\n\t\t\tthis.displayError(commandRtn.error);\n\t\t}\n\t}\n}", "CodeBleu_score": 53.290359135338505}]}
{"instance_id": "d4d74a9c8035", "generation_result": [{"code": "handleChangeTermTheme(theme: string): void{\n\t\tconst currentTheme = this.getTermThemeSettings();\n\tif (theme === currentTheme) {\n\t\treturn;\n\t}\n\tconst cmd = `set -g theme-name ${theme}`;\n\tconst rtn = this.cmdHandler(cmd);\n\tif (rtn.rtnCode !== 0) {\n\t\tthis.cmdHandler(`set -g theme-name ${currentTheme}`);\n\t\tthrow new Error(\n\t\t\t`Error changing terminal theme to ${theme}.\n\n${rtn.stdout}\n${rtn.stderr}`\n\t\t);\n\t}\n}", "CodeBleu_score": 44.613088000419566}, {"code": "handleChangeTermTheme(theme: string): void{\n\t\tconst currentTheme = this.getTermThemeSettings();\n\tif (currentTheme === theme) {\n\t\treturn;\n\t}\n\tconst rtn = this.setRootTermTheme(theme);\n\tthis.commandRtnHandler(rtn, 'theme', theme);\n}", "CodeBleu_score": 43.185300844039034}, {"code": "handleChangeTermTheme(theme: string): void{\n\t\tconst currentTheme = this.getTermThemeSettings();\n\tif (currentTheme === theme) {\n\t\treturn;\n\t}\n\n\tthis.setTermTheme(theme);\n\tthis.commandRtnHandler(this.runCommand('echo $TERM'));\n}", "CodeBleu_score": 34.79081523932392}]}
{"instance_id": "329444949255", "generation_result": [{"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t\tconst [show, setShow] = React.useState(true);\n\n\tconst handleClose = (event: React.SyntheticEvent, reason: string) => {\n\t\tif (onClose) {\n\t\t\tonClose(event, reason);\n\t\t}\n\t\tsetShow(false);\n\t};\n\n\treturn (\n\t\t<div className=\"modal-header\">\n\t\t\t<div className=\"modal-header-title\">{title}</div>\n\t\t\t{onClose && <button className=\"modal-header-close\" onClick={handleClose}><FontAwesomeIcon icon={faTimes} size=\"sm\" /></button>}\n\t\t\t{keybindings && <ModalKeybindings keybindings={keybindings} show={show} onHide={handleClose} />}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 37.370502528837186}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t\tconst { t } = useTranslation();\n\tconst { isModalOpen } = useModal();\n\n\tconst handleClose = () => {\n\t\tif (onClose) {\n\t\t\tonClose();\n\t\t}\n\t};\n\n\tconst handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n\t\tif (keybindings && event.key === keybindings.close) {\n\t\t\thandleClose();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='modal-header'>\n\t\t\t<div className='modal-title'>{title}</div>\n\t\t\t{keybindings && onClose && (\n\t\t\t\t<ModalKeybindings keybindings={keybindings} />\n\t\t\t)}\n\t\t\t{onClose && (\n\t\t\t\t<button\n\t\t\t\t\tclassName='modal-close'\n\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\ttitle={t('Close')}\n\t\t\t\t>\n\t\t\t\t\t<Icon name='cross' />\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 28.923497652912154}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t\tconst { isModalOpen, setIsModalOpen } = useModalState();\n\tconst handleClose = () => {\n\t\tsetIsModalOpen(false);\n\t\tif (onClose) onClose();\n\t}\n\n\treturn (\n\t\t<div className=\"modal-header\">\n\t\t\t<div className=\"modal-header-title\">{title}</div>\n\t\t\t{keybindings && <ModalKeybindings keybindings={keybindings} onClose={handleClose} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />}\n\t\t\t{onClose && <button className=\"modal-header-close\" onClick={handleClose}><Icon icon=\"close\" /></button>}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 39.7605260841176}]}
{"instance_id": "1da69d707d33", "generation_result": [{"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t\tif (rptr == null || rptr.remoteid == null || rptr.remoteid == \"\") {\n\t\treturn \"\";\n\t}\n\tlet name = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n\tif (rptr.name != null && rptr.name != \"\") {\n\t\tname += \": \" + rptr.name;\n\t}\n\treturn \"[\" + name + \"]\";\n}", "CodeBleu_score": 51.91655545321318}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t\tif (!rptr || !rptr.remoteid) {\n\t\treturn '';\n\t}\n\tlet remoteName = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n\tif (rptr.name) {\n\t\tremoteName += ':' + rptr.name;\n\t}\n\treturn '[' + remoteName + ']';\n}", "CodeBleu_score": 40.877183167992435}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t\tif (rptr === null || rptr.remoteid === \"\") {\n\t\treturn \"\";\n\t}\n\tlet remoteName = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n\tif (rptr.name) {\n\t\tremoteName += \":\" + rptr.name;\n\t}\n\treturn \"[\" + remoteName + \"]\";\n}", "CodeBleu_score": 49.40870805834579}]}
{"instance_id": "757ee5b9626f", "generation_result": [{"code": "adjustTextAreaHeight(){\n\t\tconst min = 1;\n\tconst max = 1000;\n\tconst maxLines = 10;\n\n\tconst textarea = document.querySelector(\"textarea\");\n\tconst scrollHeight = textarea.scrollHeight;\n\tconst lineHeight = parseInt(window.getComputedStyle(textarea).lineHeight);\n\tconst lines = Math.floor(scrollHeight / lineHeight);\n\tconst newHeight = Math.min(Math.max(lines, min), max);\n\n\ttextarea.style.height = `${newHeight * lineHeight}px`;\n}", "CodeBleu_score": 33.64474060065804}, {"code": "adjustTextAreaHeight(){\n\t\tlet ta = this;\n\tlet minRows = ta.getAttribute('min-rows') || 1;\n\tlet maxRows = ta.getAttribute('max-rows') || 10;\n\tlet lineHeight = parseInt(getComputedStyle(ta).lineHeight);\n\tlet lines = ta.value.split('\n').length;\n\tlet newRows = Math.min(Math.max(lines, minRows), maxRows);\n\tta.style.height = (newRows * lineHeight) + 'px';\n}", "CodeBleu_score": 27.993115238196793}, {"code": "adjustTextAreaHeight(){\n\t\tconst minRows = 1;\n\tconst maxRows = 10;\n\tconst ta = this.textarea;\n\tconst style = window.getComputedStyle(ta, null);\n\tconst lineHeight = parseInt(style.lineHeight);\n\tconst paddingTop = parseInt(style.paddingTop);\n\tconst paddingBottom = parseInt(style.paddingBottom);\n\tconst borderTop = parseInt(style.borderTopWidth);\n\tconst borderBottom = parseInt(style.borderBottomWidth);\n\tconst minHeight = lineHeight * minRows + paddingTop + paddingBottom + borderTop + borderBottom;\n\tconst maxHeight = lineHeight * maxRows + paddingTop + paddingBottom + borderTop + borderBottom;\n\tta.rows = minRows;\n\tconst scrollHeight = ta.scrollHeight;\n\tlet height = scrollHeight < minHeight ? minHeight : scrollHeight;\n\theight = height > maxHeight ? maxHeight : height;\n\tta.rows = Math.ceil((height - paddingTop - paddingBottom - borderTop - borderBottom) / lineHeight);\n}", "CodeBleu_score": 29.829862372477805}]}
{"instance_id": "c0fa6e5d0067", "generation_result": [{"code": "onEnterKeyPressed(){\n\t\tif (this.selectedCodeBlockIndex != -1) {\n\t\tthis.onSetCmdInputValue()\n\t} else {\n\t\tlet message = this.value.get()\n\t\tthis.submitChatMessage(message)\n\t\tthis.value.set(\"\")\n\t\tthis.resetCmdAndOutput()\n\t}\n\treturn true\n}", "CodeBleu_score": 37.92394973299395}, {"code": "onEnterKeyPressed(){\n\tif (GlobalModel.sidebarchatModel.getSelectedCodeBlockIndex() != -1) {\nthis.onSetCmdInputValue()\n} else {\nlet msg = this.value.get()\nif (msg.length > 0) {\nthis.submitChatMessage()\nthis.value.set(\"\")\nGlobalModel.sidebarchatModel.resetCmdAndOutput()\n}\n}\nreturn true\n}", "CodeBleu_score": 44.71512820447191}, {"code": "onEnterKeyPressed(){\n\t\tif (GlobalModel.sidebarchatModel.getSelectedCodeBlockIndex() != -1) {\n\t\tthis.onSetCmdInputValue()\n\t} else {\n\t\tthis.submitChatMessage()\n\t\tthis.value.set(\"\")\n\t\tGlobalModel.sidebarchatModel.resetCmdAndOutput()\n\t}\n\treturn true\n}", "CodeBleu_score": 28.78730285848392}]}
{"instance_id": "a022487e54ff", "generation_result": [{"code": "function readAuthKey(): string{\n\t\tconst homeDir = os.homedir();\n\tconst keyPath = path.join(homeDir, '.config/museeks/key');\n\n\t// Generate new key\n\tif (!fs.existsSync(keyPath)) {\n\t\tconst key = uuidv4();\n\t\tfs.writeFileSync(keyPath, key);\n\t\tfs.chmodSync(keyPath, 0o600);\n\t\treturn key;\n\t}\n\n\t// Read existing key\n\tconst key = fs.readFileSync(keyPath, 'utf-8');\n\n\t// Key is invalid\n\tif (!uuidRegex.test(key)) {\n\t\tthrow new Error('Invalid authorization key');\n\t}\n\n\treturn key;\n}", "CodeBleu_score": 22.63565648030867}, {"code": "function readAuthKey(): string{\n\t\tconst homeDir = app.getPath('home');\n\tconst authKeyPath = path.join(homeDir, 'authKey.txt');\n\n\tif (!fs.existsSync(authKeyPath)) {\n\t\tconst newAuthKey = uuid.v4();\n\t\tfs.writeFileSync(authKeyPath, newAuthKey, {mode: 0o600});\n\t\treturn newAuthKey;\n\t}\n\n\tconst authKey = fs.readFileSync(authKeyPath, 'utf8');\n\n\tif (!uuid.validate(authKey)) {\n\t\tthrow new Error('Invalid authorization key!');\n\t}\n\n\treturn authKey;\n}", "CodeBleu_score": 26.07048890208753}, {"code": "function readAuthKey(): string{\n\t\tconst home = os.homedir();\n\tconst authKeyPath = path.join(home, '.museeks', 'key');\n\n\t// Create ~/.museeks directory if it doesn't exist\n\tif (!fs.existsSync(path.join(home, '.museeks'))) {\n\t\tfs.mkdirSync(path.join(home, '.museeks'));\n\t}\n\n\t// Create auth key file if it doesn't exist\n\tif (!fs.existsSync(authKeyPath)) {\n\t\tconst newKey = uuidv4();\n\t\tfs.writeFileSync(authKeyPath, newKey, { mode: 0o600 });\n\t\treturn newKey;\n\t}\n\n\t// Read auth key file\n\tconst authKey = fs.readFileSync(authKeyPath, 'utf-8').trim();\n\n\t// Validate auth key\n\tif (!uuidValidate(authKey)) {\n\t\tthrow new Error('Invalid authorization key');\n\t}\n\n\t// Set reloadAcceleratorKey based on platform\n\tif (process.platform === 'darwin') {\n\t\treloadAcceleratorKey = 'CmdOrCtrl+R';\n\t} else {\n\t\treloadAcceleratorKey = 'F5';\n\t}\n\n\t// Set cmdOrAlt variable based on platform\n\tif (process.platform === 'darwin') {\n\t\tcmdOrAlt = 'Cmd';\n\t} else {\n\t\tcmdOrAlt = 'Ctrl';\n\t}\n\n\t// Populate viewSubMenu\n\tviewSubMenu.push({\n\t\tlabel: 'Reload',\n\t\taccelerator: reloadAcceleratorKey,\n\t\trole: 'reload'\n\t});\n\tviewSubMenu.push({\n\t\tlabel: 'Toggle Developer Tools',\n\t\taccelerator: `${cmdOrAlt}+Shift+I`,\n\t\trole: 'toggleDevTools'\n\t});\n\tif (process.env.NODE_ENV === 'development') {\n\t\tviewSubMenu.push({\n\t\t\tlabel: 'Toggle Developer UI',\n\t\t\taccelerator: `${cmdOrAlt}+Shift+U`,\n\t\t\tclick: () => {\n\t\t\t\tconst win = BrowserWindow.getFocusedWindow();\n\t\t\t\twin.webContents.send('toggleDevUI');\n\t\t\t}\n\t\t});\n\t}\n\n\treturn authKey;\n}", "CodeBleu_score": 41.2983439197711}]}
{"instance_id": "9c3e2f93e1c1", "generation_result": [{"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t\tif (!this.isRunning) return;\n\tlet chunkSize: number = this.chunkSize;\n\tlet chunk: string = '';\n\tfor (let i: number = 0; i < data.length; i += chunkSize) {\n\t\tchunk = data.slice(i, i + chunkSize);\n\t\tthis.handleInputChunk(chunk, renderer);\n\t}\n}", "CodeBleu_score": 36.73229929968759}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t\tif (!this.isRunning) return;\n\tlet chunkSize = this.chunkSize;\n\tlet i = 0;\n\twhile (i < data.length) {\n\t\tlet chunk = data.slice(i, i + chunkSize);\n\t\tthis.handleInputChunk(chunk, renderer);\n\t\ti += chunkSize;\n\t}\n}", "CodeBleu_score": 37.28081651615529}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t\tif (!this.isRunning) {\n\t\treturn;\n\t}\n\tconst chunkSize = 100;\n\tfor (let i = 0; i < data.length; i += chunkSize) {\n\t\tconst chunk = data.slice(i, i + chunkSize);\n\t\tthis.handleInputChunk(chunk, renderer);\n\t}\n}", "CodeBleu_score": 47.75606428661449}]}
{"instance_id": "37ad09d7b939", "generation_result": [{"code": "function checkValidServiceWorker(swUrl) {\n\t\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(function(response) {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(function(registration) {\n\t\t\t\t\tregistration.unregister().then(function() {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(function(err) {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}", "CodeBleu_score": 58.82136600672629}, {"code": "function checkValidServiceWorker(swUrl) {\n\tfetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      // No internet connection found.\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}", "CodeBleu_score": 95.35783876446685}, {"code": "function checkValidServiceWorker(swUrl) {\n\tconsole.log('checkValidServiceWorker', swUrl)\nfetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      // No internet connection found.\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}", "CodeBleu_score": 92.63062603813846}]}
{"instance_id": "27dabe0c40aa", "generation_result": [{"code": "function areAllRequiredElementsHighlighted{\n\t\tvar requiredElements = document.getElementsByClassName(\"required-highlight\");\n\tvar highlightedElements = document.getElementsByClassName(\"highlighted\");\n\tvar highlightedElementCount = highlightedElements.length;\n\tvar requiredElementCount = requiredElements.length;\n\tvar i;\n\tvar allHighlighted = true;\n\tfor (i = 0; i < requiredElementCount; i++) {\n\t\tif (requiredElements[i].id.substring(0, 11) != \"required-row\") {\n\t\t\tallHighlighted = false;\n\t\t}\n\t}\n\tif (allHighlighted) {\n\t\treturn CHECKED;\n\t} else if (highlightedElementCount == 0) {\n\t\treturn UNCHECKED;\n\t} else {\n\t\treturn INDETERMINATE;\n\t}\n}", "CodeBleu_score": 27.9995340763344}, {"code": "function areAllRequiredElementsHighlighted{\n\t\tvar highlightedElements = document.getElementsByClassName(\"highlighted\");\n\tvar requiredElements = document.getElementsByClassName(\"required\");\n\tvar numHighlighted = highlightedElements.length;\n\tvar numRequired = requiredElements.length;\n\tif (numHighlighted == 0) {\n\t\treturn CheckboxState.Unchecked;\n\t} else if (numHighlighted == numRequired) {\n\t\treturn CheckboxState.Checked;\n\t} else {\n\t\treturn CheckboxState.Indeterminate;\n\t}\n}", "CodeBleu_score": 27.925358914863935}, {"code": "function areAllRequiredElementsHighlighted{\n\t\tvar highlightedElements = document.getElementsByClassName(\"highlight\");\n\tvar requiredElements = document.getElementsByClassName(\"required\");\n\tvar numHighlighted = 0;\n\tfor (var i = 0; i < highlightedElements.length; i++) {\n\t\tif (requiredElements.includes(highlightedElements[i])) {\n\t\t\tnumHighlighted++;\n\t\t}\n\t}\n\tif (numHighlighted == 0) {\n\t\treturn \"unchecked\";\n\t}\n\telse if (numHighlighted == requiredElements.length) {\n\t\treturn \"checked\";\n\t}\n\telse {\n\t\treturn \"indeterminate\";\n\t}\n}", "CodeBleu_score": 23.67298410123751}]}
{"instance_id": "c60e532809af", "generation_result": [{"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t\tconst actions = actionsFn(...handles)\n\treturn Object.entries(actions).map(([key, action]) => {\n\t\tconst [eventName, selector] = key.split(':', 2)\n\t\treturn {\n\t\t\teventName,\n\t\t\thandler: event => {\n\t\t\t\tif (selector && !matchesSelector(event.target, selector)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\taction(event)\n\t\t\t}\n\t\t}\n\t})\n}", "CodeBleu_score": 45.408179209759766}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t\tconst actions = actionsFn(...handles);\n\tconst handlers = [];\n\tfor (const key in actions) {\n\t\tconst [eventName, selector] = key.split(' ');\n\t\tconst action = actions[key];\n\t\thandlers.push({\n\t\t\teventName,\n\t\t\thandler: (event) => {\n\t\t\t\tif (selector && !matchesSelector(event.target, selector)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\taction(event);\n\t\t\t}\n\t\t});\n\t}\n\treturn handlers;\n}", "CodeBleu_score": 41.27464760970136}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t\tconst actions = actionsFn(...handles);\n\tconst handlers = [];\n\tfor (const [key, value] of Object.entries(actions)) {\n\t\tconst [eventName, selector] = key.split(' ');\n\t\tconst handler = createHandler(value, selector);\n\t\thandlers.push({ eventName, handler });\n\t}\n\treturn handlers;\n}", "CodeBleu_score": 35.14547671067224}]}
{"instance_id": "8c81ca953249", "generation_result": [{"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t\tconst root = document.getElementById('storybook-root')\n\n\tif (!root) {\n\t\treturn\n\t}\n\n\tconst handler = actionsFn(...handles)\n\n\tconst attach = () => {\n\t\troot.addEventListener('keydown', handler)\n\t}\n\n\tconst detach = () => {\n\t\troot.removeEventListener('keydown', handler)\n\t}\n\n\tuseEffect(attach, [root, handler])\n\tuseEffect(detach, [])\n}", "CodeBleu_score": 33.43530691680837}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t\tconst storybookRoot = document.getElementById('storybook-root')\n\n\tconst handlers = [\n\t\t...handles,\n\t\t...actionsFn({\n\t\t\temit: (event: any, ...args: any[]) => {\n\t\t\t\tconst handler = storybookRoot?.querySelector(`[data-handler-id=\"${event}\"]`)\n\t\t\t\tif (handler) handler.dispatchEvent(new CustomEvent(event, { detail: args }))\n\t\t\t},\n\t\t}),\n\t]\n\n\tconst attach = () => {\n\t\tfor (const handler of handlers) {\n\t\t\tconst handlerId = handler.id\n\t\t\tconst handlerElement = storybookRoot?.querySelector(`[data-handler-id=\"${handlerId}\"]`)\n\t\t\tif (handlerElement) {\n\t\t\t\thandlerElement.addEventListener('click', handler)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst detach = () => {\n\t\tfor (const handler of handlers) {\n\t\t\tconst handlerId = handler.id\n\t\t\tconst handlerElement = storybookRoot?.querySelector(`[data-handler-id=\"${handlerId}\"]`)\n\t\t\tif (handlerElement) {\n\t\t\t\thandlerElement.removeEventListener('click', handler)\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tattach()\n\t\treturn () => {\n\t\t\tdetach()\n\t\t}\n\t}, [storybookRoot])\n}", "CodeBleu_score": 31.821799186830336}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t\tconst root = document.getElementById('storybook-root')\n\tconst eventHandlers = actionsFn(...handles)\n\n\tuseEffect(() => {\n\t\tfor (const [eventName, handler] of Object.entries(eventHandlers)) {\n\t\t\troot.addEventListener(eventName, handler)\n\t\t}\n\n\t\treturn () => {\n\t\t\tfor (const [eventName, handler] of Object.entries(eventHandlers)) {\n\t\t\t\troot.removeEventListener(eventName, handler)\n\t\t\t}\n\t\t}\n\t}, [root, eventHandlers])\n}", "CodeBleu_score": 40.631460708373936}]}
{"instance_id": "3b9dc9070ef1", "generation_result": [{"code": "addAction = (action: ActionDisplay) =>{\n\t\tconst { actions } = this.state;\n\tconst lastAction = actions[actions.length - 1];\n\tif (lastAction && lastAction.data === action.data) {\n\t\tlastAction.count++;\n\t} else {\n\t\taction.count = 1;\n\t\tactions.push(action);\n\t}\n\tthis.setState({ actions }, this.limitActions);\n}", "CodeBleu_score": 37.67587893378756}, {"code": "addAction = (action: ActionDisplay) =>{\n\t\tconst { actions } = this.state;\n\tconst lastAction = actions[actions.length - 1];\n\tif (lastAction && lastAction.data === action.data) {\n\t\tlastAction.count += 1;\n\t} else {\n\t\tactions.push({ ...action, count: 1 });\n\t}\n\tthis.setState({ actions });\n}", "CodeBleu_score": 27.80638235180122}, {"code": "addAction = (action: ActionDisplay) =>{\n\t\tconst state = getState();\n\tconst actions = state.actions;\n\n\tif (actions.length > 0 && actions[actions.length - 1].data === action.data) {\n\t\tactions[actions.length - 1].count++;\n\t} else {\n\t\taction.count = 1;\n\t\tactions.push(action);\n\t}\n\n\tsetState({\n\t\t...state,\n\t\tactions: actions.slice(-options.limit)\n\t});\n}", "CodeBleu_score": 35.580461133457966}]}
{"instance_id": "c58b95bdb84e", "generation_result": [{"code": "export const addGridStyle = (selector: string, css: string) => {\n\t\tconst style = document.getElementById(selector);\n\tif (style) {\n\t\tif (style.textContent !== css) {\n\t\t\tstyle.textContent = css;\n\t\t}\n\t} else {\n\t\tconst style = document.createElement('style');\n\t\tstyle.id = selector;\n\t\tstyle.textContent = css;\n\t\tdocument.head.appendChild(style);\n\t}\n}", "CodeBleu_score": 51.756757723546976}, {"code": "export const addGridStyle = (selector: string, css: string) => {\n\t\tconst existingStyle = document.getElementById(selector);\n\tif (existingStyle) {\n\t\tif (existingStyle.innerHTML !== css) {\n\t\t\texistingStyle.innerHTML = css;\n\t\t}\n\t} else {\n\t\tconst style = document.createElement('style');\n\t\tstyle.id = selector;\n\t\tstyle.innerHTML = css;\n\t\tdocument.head.appendChild(style);\n\t}\n}", "CodeBleu_score": 65.36805744385879}, {"code": "export const addGridStyle = (selector: string, css: string) => {\n\t\tconst id = selector.replace(/[.#\\[\\]]/g, '_');\n\tconst styleElement = document.getElementById(id);\n\tif (styleElement) {\n\t\tif (styleElement.innerHTML !== css) {\n\t\t\tstyleElement.innerHTML = css;\n\t\t}\n\t\treturn;\n\t}\n\tconst style = document.createElement('style');\n\tstyle.id = id;\n\tstyle.innerHTML = css;\n\tdocument.head.appendChild(style);\n}", "CodeBleu_score": 51.292080441397644}]}
{"instance_id": "882d870a20b2", "generation_result": [{"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t\tconst existingStyle = document.getElementById(selector)\n\tconst existingGridStyle = document.getElementById(storyId)\n\tif (existingStyle) {\n\t\tif (existingStyle.innerHTML !== css) {\n\t\t\texistingStyle.innerHTML = css\n\t\t}\n\t} else {\n\t\tconst newStyle = document.createElement('style')\n\t\tnewStyle.id = selector\n\t\tnewStyle.innerHTML = css\n\t\tdocument.head.appendChild(newStyle)\n\t}\n\tif (existingGridStyle) {\n\t\texistingGridStyle.parentElement?.insertBefore(newStyle, existingGridStyle)\n\t} else {\n\t\tdocument.head.appendChild(newStyle)\n\t}\n}", "CodeBleu_score": 50.459764179857835}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t\tconst existingStyle = document.getElementById(selector)\n\tif (existingStyle) {\n\t\tconst existingStyleContent = existingStyle.innerHTML\n\t\tif (existingStyleContent !== css) {\n\t\t\texistingStyle.innerHTML = css\n\t\t}\n\t} else {\n\t\tconst newStyle = document.createElement('style')\n\t\tnewStyle.id = selector\n\t\tnewStyle.innerHTML = css\n\t\tdocument.head.appendChild(newStyle)\n\t}\n\n\tconst existingGridStyle = document.getElementById(storyId)\n\tif (existingGridStyle) {\n\t\texistingGridStyle.parentElement?.insertBefore(newStyle, existingGridStyle)\n\t} else {\n\t\tdocument.head.appendChild(newStyle)\n\t}\n}", "CodeBleu_score": 47.974478617250064}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t\tconst existingStyle = document.getElementById(selector)\n\tif (existingStyle) {\n\t\tif (existingStyle.innerHTML !== css) {\n\t\t\texistingStyle.innerHTML = css\n\t\t}\n\t} else {\n\t\tconst newStyle = createElement('style')\n\t\tnewStyle.id = selector\n\t\tnewStyle.innerHTML = css\n\t\tdocument.head.appendChild(newStyle)\n\t}\n\tconst existingGridStyle = document.getElementById(storyId)\n\tif (existingGridStyle) {\n\t\texistingGridStyle.parentElement?.insertBefore(document.getElementById(selector), existingGridStyle)\n\t} else {\n\t\tdocument.head.appendChild(document.getElementById(selector))\n\t}\n}", "CodeBleu_score": 50.43341450471003}]}
{"instance_id": "c17e647327b5", "generation_result": [{"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\tevent.preventDefault()\nif (!isCreating && !isSaving) {\nsetErrorMessage('')\nsetSaving(true)\ntry {\nconst sanitizedStoryName = storyName.replace(/^[^a-z]/i, '').replaceAll(' ', '-')\nawait createStory(sanitizedStoryName)\nsetCreating(false)\nsetSaving(false)\n} catch (error) {\nsetErrorMessage(error.message)\nsetSaving(false)\n}\n}\n}", "CodeBleu_score": 50.3987833590553}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\tevent.preventDefault()\n\nif (isSaving) return\n\nsetErrorMessage('')\nsetSaving(true)\ntry {\nconst story = await createStory(storyName.replace(/^[^a-z]/i, '').replaceAll(' ', '-'))\nsetCreating(false)\nsetSaving(false)\n} catch (error) {\nsetErrorMessage(error.message)\nsetSaving(false)\n}\n}", "CodeBleu_score": 51.64731147432422}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\tevent.preventDefault()\nif (!creating && !saving) {\nsetErrorMessage('')\nsetSaving(true)\ntry {\nawait createStory(storyName.replace(/^[^a-z]/i, '').replaceAll(' ', '-'))\nsetCreating(false)\nsetSaving(false)\n} catch (error) {\nsetErrorMessage(error.message)\nsetSaving(false)\n}\n}\n}", "CodeBleu_score": 52.277592749941526}]}
{"instance_id": "2d58c69eda27", "generation_result": [{"code": "function Title(){\n\t\tconst { useArgTypes } = useArgs();\n\tconst controlsCount = useArgTypes().filter(argType => argType.control && !argType.disabled).length;\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Controls</h3>\n\t\t\t{controlsCount > 0 && <Badge color=\"green\" text={controlsCount} />}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 20.429747032078854}, {"code": "function Title(){\n\t\tconst { useArgTypes } = useArgTypes();\n\tconst argTypes = useArgTypes();\n\tconst argCount = argTypes.filter(argType => argType.control && !argType.disabled).length;\n\treturn (\n\t\t<div>\n\t\t\t<h1>Controls</h1>\n\t\t\t{argCount > 0 && <span className=\"suffix\">{argCount}</span>}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 21.584954641620236}, {"code": "function Title(){\n\t\tconst { useArgTypes } = useArgs();\n\tconst argTypes = useArgTypes();\n\tconst argCount = argTypes.filter(arg => arg.control && !arg.disabled).length;\n\tconst suffix = argCount ? ` (${argCount})` : '';\n\n\treturn (\n\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\n\t\t\t<div style={{ marginRight: '1rem' }}>Controls</div>\n\t\t\t<div style={{\n\t\t\t\tmarginLeft: '0.25rem',\n\t\t\t\tmarginRight: '0.25rem',\n\t\t\t\tpadding: '0.25rem 0.5rem',\n\t\t\t\tborderRadius: '4px',\n\t\t\t\tcolor: argCount ? '#fff' : '#999',\n\t\t\t\tbackgroundColor: argCount ? '#2185d0' : '#fff',\n\t\t\t}}>\n\t\t\t\t{suffix}\n\t\t\t</div>\n\t\t</div>\n\t);\n}", "CodeBleu_score": 25.493855199425386}]}
{"instance_id": "b8fba20204d6", "generation_result": [{"code": "const highlight = (infos: HighlightInfo) =>{\n\t\tconst elements = [...new Set(infos.elements)];\n\tconst style = document.createElement(\"style\");\n\tstyle.id = \"highlight-styles\";\n\tstyle.innerHTML = \"\";\n\tfor (const element of elements) {\n\t\tconst { color, background, outline } = infos.highlights[element];\n\t\tconst selector = `${element} {\n\t\t\toutline: ${outline};\n\t\t\toutline-color: ${color};\n\t\t\toutline-offset: 2px;\n\t\t\toutline-style: solid;\n\t\t\toutline-width: 3px;\n\t\t\tbackground: ${background};\n\t\t}`;\n\t\tstyle.innerHTML += selector;\n\t}\n\tdocument.head.appendChild(style);\n}", "CodeBleu_score": 39.96000095561302}, {"code": "const highlight = (infos: HighlightInfo) =>{\n\t\tif (infos.length === 0) {\n\t\treturn\n\t}\n\n\t// Remove any existing highlights\n\tdocument.querySelectorAll('style.highlight').forEach((el) => el.remove())\n\n\t// Remove any duplicate selectors\n\tconst selectors = new Set()\n\tinfos.forEach((info) => {\n\t\tif (selectors.has(info.selector)) {\n\t\t\treturn\n\t\t}\n\t\tselectors.add(info.selector)\n\t})\n\n\t// Create a new style element\n\tconst styleEl = document.createElement('style')\n\tstyleEl.classList.add('highlight')\n\tstyleEl.id = 'highlight-styles'\n\tdocument.head.appendChild(styleEl)\n\n\t// Define CSS rules\n\tconst css = infos.map(\n\t\t(info) =>\n\t\t\t`\n${info.selector} {\n\tbackground-color: ${info.backgroundColor};\n\tborder-radius: ${info.borderRadius};\n\tbox-shadow: ${info.boxShadow};\n\tcolor: ${info.textColor};\n\tfont-weight: ${info.fontWeight};\n\tpadding: ${info.padding};\n\ttext-decoration: ${info.textDecoration};\n\ttext-shadow: ${info.textShadow};\n\twidth: ${info.width};\n}\n${info.selector}::after {\n\tbackground-color: ${info.backgroundColor};\n\tborder-radius: ${info.borderRadius};\n\tbox-shadow: ${info.boxShadow};\n\tcontent: \"${info.content}\";\n\tpadding: ${info.padding};\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\tz-index: 1;\n}\n${info.selector}::before {\n\tbackground-color: ${info.backgroundColor};\n\tborder-radius: ${info.borderRadius};\n\tbox-shadow: ${info.boxShadow};\n\tcontent: \"${info.content}\";\n\tpadding: ${info.padding};\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tz-index: 1;\n}\n`\n\t).join('\n')\n\n\t// Append CSS to style element\n\tstyleEl.innerHTML = css\n}", "CodeBleu_score": 35.973047348754605}, {"code": "const highlight = (infos: HighlightInfo) =>{\n\t\tconst elements = [...new Set(infos.elements)];\n\tconst highlightStyle = document.getElementById('highlight-style');\n\tif (highlightStyle) highlightStyle.remove();\n\tconst style = document.createElement('style');\n\tstyle.id = 'highlight-style';\n\tconst rules = elements.map(\n\t\t(element) =>\n\t\t\t`[data-highlight-id=\"${element}\"] {${\n\t\t\t\tinfos.color ? `background-color: ${infos.color};` : ''\n\t\t\t}${infos.border ? `border: 2px solid ${infos.border};` : ''}${\n\t\t\t\tinfos.opacity ? `opacity: ${infos.opacity};` : ''\n\t\t\t}}`\n\t);\n\tstyle.innerHTML = rules.join('\n');\n\tdocument.head.appendChild(style);\n}", "CodeBleu_score": 42.08582479331271}]}
{"instance_id": "08a3fb827e48", "generation_result": [{"code": "const resetHighlight = () =>{\n\t.\n    const style = document.getElementById('highlight')\n    if (style) {\n        style.parentNode.removeChild(style)\n    }\n}", "CodeBleu_score": 28.206726178780322}, {"code": "const resetHighlight = () =>{\n\t.\n    const sheet = document.getElementById('highlight')\n    if (sheet) {\n        sheet.parentNode.removeChild(sheet)\n    }\n}", "CodeBleu_score": 31.806930129690958}, {"code": "const resetHighlight = () =>{\n\t(document.getElementById('highlight')) ? document.getElementById('highlight').remove() : null}", "CodeBleu_score": 17.815316815706545}]}
{"instance_id": "1287df4e99b3", "generation_result": [{"code": "function parseQuery(queryString: string){\n\t\n}", "CodeBleu_score": 2.6608467230780675}, {"code": "function parseQuery(queryString: string){\n\t// Initialize an empty object to hold the query parameters\nconst queryObject = {};\n\n// If the query string is empty, return the empty object\nif (queryString === '') {\nreturn queryObject;\n}\n\n// If the query string does not begin with a '?' character, return the empty object\nif (queryString[0] !== '?') {\nreturn queryObject;\n}\n\n// Remove the leading '?' character\nqueryString = queryString.substring(1);\n\n// Split the query string into key-value pairs\nconst pairs = queryString.split('&');\n\n// Loop through the pairs\nfor (let i = 0; i < pairs.length; i++) {\n// Split each key-value pair into an array\nconst pair = pairs[i].split('=');\n\n// Add the key-value pair to the query object\nqueryObject[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n}\n\n// Return the query object\nreturn queryObject;\n}", "CodeBleu_score": 51.53179198342104}, {"code": "function parseQuery(queryString: string){\n\tconst queryObject = {};\n\nif (queryString[0] === '?') {\nqueryString = queryString.substring(1);\n}\n\nconst pairs = queryString.split('&');\n\nfor (let i = 0; i < pairs.length; i++) {\nconst pair = pairs[i].split('=');\nqueryObject[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n}\n\nreturn queryObject;\n}", "CodeBleu_score": 57.62914884505454}]}
{"instance_id": "83c4f520b99a", "generation_result": [{"code": "const linksListener = (e: Event) =>{\n\t\tif (!(e.target instanceof HTMLAnchorElement)) {\n\t\treturn\n\t}\n\n\tconst { sbKind, sbStory } = e.target.dataset\n\tif (sbKind && sbStory) {\n\t\te.preventDefault()\n\t\tnavigate(sbKind, sbStory)\n\t}\n}", "CodeBleu_score": 29.313220867756772}, {"code": "const linksListener = (e: Event) =>{\n\t\tif (e.target instanceof HTMLAnchorElement) {\n\t\tconst { sbKind, sbStory } = e.target.dataset;\n\t\tif (sbKind && sbStory) {\n\t\t\te.preventDefault();\n\t\t\tnavigate(sbKind, sbStory);\n\t\t}\n\t}\n}", "CodeBleu_score": 27.651236875040208}, {"code": "const linksListener = (e: Event) =>{\n\t\tif (e.target instanceof Element) {\n\t\tconst sbKind = e.target.dataset.sbKind;\n\t\tconst sbStory = e.target.dataset.sbStory;\n\t\tif (sbKind && sbStory) {\n\t\t\te.preventDefault();\n\t\t\tnavigate(sbKind, sbStory);\n\t\t}\n\t}\n}", "CodeBleu_score": 29.551503123599314}]}
{"instance_id": "8b8e277eb593", "generation_result": [{"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t\tif (node.shadowRoot) {\n\t\tconst element = (node.shadowRoot as any).elementFromPoint(x, y)\n\t\tif (element.isEqualNode(node)) {\n\t\t\treturn node\n\t\t} else if (element.shadowRoot) {\n\t\t\treturn crawlShadows(element as HTMLElement)\n\t\t} else {\n\t\t\treturn element\n\t\t}\n\t} else {\n\t\treturn node\n\t}\n}", "CodeBleu_score": 49.58240326535949}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t\tconst shadowRoot = node.shadowRoot;\n\tif (shadowRoot) {\n\t\tconst nestedElement = (shadowRoot as any).elementFromPoint(x, y);\n\t\tif (nestedElement === node) {\n\t\t\treturn node;\n\t\t} else {\n\t\t\treturn crawlShadows(nestedElement);\n\t\t}\n\t} else {\n\t\treturn node;\n\t}\n}", "CodeBleu_score": 47.991537411616314}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t\tif (node.shadowRoot) {\n\t\tconst elementFromPoint = (node.shadowRoot as any).elementFromPoint\n\t\tconst nestedElement = elementFromPoint(node.clientWidth / 2, node.clientHeight / 2)\n\t\tif (nestedElement === node) {\n\t\t\treturn node\n\t\t}\n\t\treturn crawlShadows(nestedElement as HTMLElement)\n\t}\n\treturn node\n}", "CodeBleu_score": 41.36328644631851}]}
{"instance_id": "2fa298c35659", "generation_result": [{"code": "function createCanvas(): CanvasState{\n\t\tconst canvas = document.createElement('canvas');\n\tconst context = canvas.getContext('2d');\n\tif (context === null) {\n\t\tthrow new Error('Canvas context is null!');\n\t}\n\tsetCanvasWidthAndHeight(canvas);\n\tcanvas.id = 'canvas';\n\tcanvas.style.position = 'absolute';\n\tcanvas.style.zIndex = '999999';\n\tcanvas.style.pointerEvents = 'none';\n\tdocument.body.appendChild(canvas);\n\treturn {\n\t\tcanvas,\n\t\tcontext,\n\t\twidth: document.body.clientWidth,\n\t\theight: document.body.clientHeight,\n\t};\n}", "CodeBleu_score": 46.892866085255356}, {"code": "function createCanvas(): CanvasState{\n\t\tconst canvas = document.createElement(\"canvas\");\n\tcanvas.id = \"canvas\";\n\tconst context = canvas.getContext(\"2d\");\n\tif (context === null) {\n\t\tthrow new Error(\"Canvas 2D context is null\");\n\t}\n\tconst documentWidth = getDocumentWidthAndHeight().width;\n\tconst documentHeight = getDocumentWidthAndHeight().height;\n\tsetCanvasWidthAndHeight(canvas, context, documentWidth, documentHeight);\n\tcanvas.style.position = \"absolute\";\n\tcanvas.style.top = \"0\";\n\tcanvas.style.left = \"0\";\n\tcanvas.style.zIndex = \"99999\";\n\tcanvas.style.pointerEvents = \"none\";\n\tdocument.body.appendChild(canvas);\n\treturn {\n\t\tcanvas,\n\t\tcontext,\n\t\twidth: documentWidth,\n\t\theight: documentHeight,\n\t};\n}", "CodeBleu_score": 48.50380405185408}, {"code": "function createCanvas(): CanvasState{\n\t\tconst canvas = document.createElement(\"canvas\")\n\tconst context = canvas.getContext(\"2d\")\n\tif (context === null) {\n\t\tthrow new Error(\"Canvas 2D context is null\")\n\t}\n\tsetCanvasWidthAndHeight(canvas)\n\tcanvas.id = \"canvas\"\n\tcanvas.style.position = \"absolute\"\n\tcanvas.style.zIndex = \"9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999", "CodeBleu_score": 32.04102515229286}]}
{"instance_id": "0484eaeba359", "generation_result": [{"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t\tconst {\n\t\tchannelOptions,\n\t\tconfig,\n\t\tparameterName,\n\t\tparameterValue,\n\t\tpreviewUrl,\n\t\turl,\n\t\tversion,\n\t} = options;\n\n\tconst {\n\t\tdisable,\n\t\tenable,\n\t\tsendError,\n\t\tsendPerformance,\n\t\tsendRelease,\n\t\tsendStorybookStarted,\n\t\tsendUserEvent,\n\t} = channelOptions;\n\n\tif (disable) {\n\t\treturn channel;\n\t}\n\n\tconst onboardingChannel = await onboarding_channel(channel, options);\n\n\tconst {\n\t\tonboardingIsEnabled,\n\t\tonboardingIsSupported,\n\t\tonboardingVersion,\n\t} = onboardingChannel;\n\n\tconst hasOnboarding = onboardingIsEnabled && onboardingIsSupported;\n\n\tconst isEnabled =\n\t\tenable === true ||\n\t\t(enable && enable.some((item) => item === parameterValue));\n\n\tif (hasOnboarding) {\n\t\tsendRelease('server', version);\n\t}\n\n\tif (isEnabled) {\n\t\tsendRelease('server', version);\n\n\t\tif (hasOnboarding) {\n\t\t\tsendRelease('onboarding', onboardingVersion);\n\t\t}\n\n\t\tif (sendStorybookStarted) {\n\t\t\tsendStorybookStarted({\n\t\t\t\tversion,\n\t\t\t\tbuildId: config.buildId,\n\t\t\t\tpreviewUrl,\n\t\t\t\turl,\n\t\t\t\taddons: config.addons,\n\t\t\t});\n\t\t}\n\n\t\tif (sendUserEvent) {\n\t\t\tconst userEvent = async (data: UserEvent) => {\n\t\t\t\tconst { name, properties } = data;\n\t\t\t\tsendUserEvent({\n\t\t\t\t\tname,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\t...properties,\n\t\t\t\t\t\tparameterName,\n\t\t\t\t\t\tparameterValue,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tchannel.on('userEvent', userEvent);\n\t\t}\n\n\t\tif (sendPerformance) {\n\t\t\tconst sendPerformanceEvent = async (data: PerformanceEvent) => {\n\t\t\t\tconst {\n\t\t\t\t\tduration,\n\t\t\t\t\tfps,\n\t\t\t\t\tframes,\n\t\t\t\t\ttype,\n\t\t\t\t\tstories,\n\t\t\t\t\tv8MemoryUsage,\n\t\t\t\t} = data;\n\t\t\t\tsendPerformance({\n\t\t\t\t\tduration,\n\t\t\t\t\tfps,\n\t\t\t\t\tframes,\n\t\t\t\t\ttype,\n\t\t\t\t\tstories,\n\t\t\t\t\tv8MemoryUsage,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tchannel.on('performance', sendPerformanceEvent);\n\t", "CodeBleu_score": 22.583684144708393}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t\tconst { channel: channelOptions, storyStore, provider, clientApi, config } = options;\n\tconst { transport, asyncTransport } = channelOptions;\n\tconst { on, emit } = channel;\n\tconst { onStory, onLegacyStory } = storyStore;\n\tconst { setAddon, getAddon } = clientApi;\n\tconst { setChannel, setClientApi, setConfig } = config;\n\n\tsetAddon(ADDON_ID, {\n\t\tgetAddonState: () => ({\n\t\t\tversion: getVersion(),\n\t\t}),\n\t\tgetElements: () => [],\n\t});\n\tsetChannel(channel);\n\tsetClientApi(clientApi);\n\tsetConfig(config);\n\n\tif (!provider) {\n\t\treturn channel;\n\t}\n\n\tconst { getChannel } = provider;\n\tconst channelFromProvider = getChannel();\n\n\tif (channelFromProvider) {\n\t\treturn channelFromProvider;\n\t}\n\n\tif (transport) {\n\t\tchannel.on(EVENTS.SET_STORIES, transport.setStories);\n\t\tchannel.on(EVENTS.SET_CURRENT_STORY, transport.setCurrentStory);\n\t\tchannel.on(EVENTS.UPDATE_STORY_ARGS, transport.updateStoryArgs);\n\t\tchannel.on(EVENTS.FORCE_RE_RENDER, transport.forceReRender);\n\t\tchannel.on(EVENTS.STORY_ARGS_UPDATED, transport.storyArgsUpdated);\n\t\tchannel.on(EVENTS.REGISTER_SUBSCRIPTION, transport.registerSubscription);\n\t\tchannel.on(EVENTS.STORY_THREW_EXCEPTION, transport.storyThrewException);\n\t\tchannel.on(EVENTS.STORY_ERROR, transport.storyErrored);\n\t\tchannel.on(EVENTS.STORY_MISSING, transport.storyMissing);\n\t\tchannel.on(EVENTS.STORY_UNMOUNTED, transport.storyUnmounted);\n\t\tchannel.on(EVENTS.STORY_RENDERED, transport.storyRendered);\n\t\tchannel.on(EVENTS.FORCE_RE_RENDER_CURRENT_STORY, transport.forceReRenderCurrentStory);\n\t\tchannel.on(EVENTS.UPDATE_GLOBALS, transport.updateGlobals);\n\t\tchannel.on(EVENTS.UPDATE_OPTIONS, transport.updateOptions);\n\t\tchannel.on(EVENTS.UPDATE_QUERY_PARAMS, transport", "CodeBleu_score": 12.613469716865591}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t\tconst { channelOptions, transportOptions } = options;\n\tconst { on, emit, setAddon } = channel;\n\n\tconst {\n\t\tserverChannel: { onStorybookEvent },\n\t} = channelOptions;\n\n\tif (onStorybookEvent) {\n\t\ton(EVENTS.STORYBOOK_EVENT, (event: StorybookEvent) => {\n\t\t\tonStorybookEvent(event);\n\t\t});\n\t}\n\n\tconst {\n\t\tserverChannel: { onAddonEvent },\n\t} = channelOptions;\n\n\tif (onAddonEvent) {\n\t\ton(EVENTS.ADDON_EVENT, (event: AddonEvent) => {\n\t\t\tonAddonEvent(event);\n\t\t});\n\t}\n\n\tconst {\n\t\tserverChannel: { onGetAddonPanel },\n\t} = channelOptions;\n\n\tif (onGetAddonPanel) {\n\t\ton(EVENTS.GET_ADDON_PANEL, (event: GetAddonPanelEvent) => {\n\t\t\tonGetAddonPanel(event);\n\t\t});\n\t}\n\n\tconst {\n\t\tserverChannel: { onGetAddonTabs },\n\t} = channelOptions;\n\n\tif (onGetAddonTabs) {\n\t\ton(EVENTS.GET_ADDON_TABS, (event: GetAddonTabsEvent) => {\n\t\t\tonGetAddonTabs(event);\n\t\t});\n\t}\n\n\tconst {\n\t\tserverChannel: { onDidRender },\n\t} = channelOptions;\n\n\tif (onDidRender) {\n\t\ton(EVENTS.DID_RENDER, (event: DidRenderEvent) => {\n\t\t\tonDidRender(event);\n\t\t});\n\t}\n\n\tconst {\n\t\tserverChannel: { onWillRender },\n\t} = channelOptions;\n\n\tif (onWillRender) {\n\t\ton(EVENTS.WILL_RENDER, (event: WillRenderEvent) => {\n\t\t\tonWillRender(event);\n\t\t});\n\t}\n\n\tconst {\n\t\tserverChannel: { onStorybookInitialized },\n\t} = channelOptions;\n\n\tif (onStorybookInitialized) {\n\t\ton(EVENTS.STORYBOOK_INITIALIZED, (event: StorybookInitializedEvent) => {\n\t\t\tonStorybookInitialized(event);\n\t\t});\n\t}\n\n\tconst {\n\t\tserverChannel: { onStorybookErrored },", "CodeBleu_score": 9.71876263533961}]}
{"instance_id": "8552de1f8368", "generation_result": [{"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t\tconst style = document.getElementById(selector)\n\tif (style) {\n\t\tif (style.textContent !== css) {\n\t\t\tstyle.textContent = css\n\t\t}\n\t} else {\n\t\tconst style = document.createElement('style')\n\t\tstyle.id = selector\n\t\tstyle.textContent = css\n\t\tdocument.head.appendChild(style)\n\t}\n}", "CodeBleu_score": 44.88828351621042}, {"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t\tconst style = document.getElementById(selector) as HTMLStyleElement;\n\tif (style) {\n\t\tif (style.innerText !== css) {\n\t\t\tstyle.innerText = css;\n\t\t}\n\t} else {\n\t\tconst style = document.createElement('style');\n\t\tstyle.id = selector;\n\t\tstyle.innerText = css;\n\t\tdocument.head.appendChild(style);\n\t}\n}", "CodeBleu_score": 51.00493789759499}, {"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t\tconst id = selector.replace(/[^a-zA-Z0-9]/g, '_');\n\tconst existingStyle = document.getElementById(id);\n\tif (existingStyle) {\n\t\tif (existingStyle.textContent !== css) {\n\t\t\texistingStyle.textContent = css;\n\t\t}\n\t} else {\n\t\tconst style = document.createElement('style');\n\t\tstyle.id = id;\n\t\tstyle.textContent = css;\n\t\tdocument.head.appendChild(style);\n\t}\n}", "CodeBleu_score": 56.695070714280035}]}
{"instance_id": "2472b6d48b9a", "generation_result": [{"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\tconst {\n  locales,\n  defaultLocale,\n  sourceLocale,\n  translation,\n} = i18n;\nconst activeLocales = locales.filter(\n  l => l.inline !== false && l.locale !== sourceLocale,\n);\nconst loaders: Promise<void>[] = [];\n\nfor (const locale of activeLocales) {\n  const translationFile = translation(locale.locale);\n  if (!translationFile) {\n    continue;\n  }\n\n  const translationLoader = createTranslationLoader(context, translationFile);\n  loaders.push(\n    loadTranslations(\n      locale.locale,\n      translationLoader,\n      i18n.missingTranslation,\n      context.logger,\n    ),\n  );\n}\n\nreturn Promise.all(loaders);\n}", "CodeBleu_score": 32.08005789622691}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\t\n-  const locales = i18n.locales || [];", "CodeBleu_score": 11.05118442775348}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\tconst { logger } = context;", "CodeBleu_score": 8.925038934959227}]}
{"instance_id": "24579c798101", "generation_result": [{"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t\"\"\"\n\nbuild_application_async_generator_function_end = \"\"\"\n}", "CodeBleu_score": 17.244762480051495}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t\"\"\"\n)\n\nprint(\n    \"\"\"\n  return buildApplicationInternal(options, context, pluginsOrExtensions)\n}", "CodeBleu_score": 28.755581101756768}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t\"\"\"\n\nBUILD_APPLICATION_CLOSE = \"\"\"\n  }", "CodeBleu_score": 17.219237968054824}]}
{"instance_id": "126e9e9e4010", "generation_result": [{"code": "const diagnostics = checkDuplicateMessages{\n\t\tcheckFileSystem: any,\n\tmessages: any,\n\tseverity: any,\n\tbasePath: any,\n}", "CodeBleu_score": 11.877675127625436}, {"code": "const diagnostics = checkDuplicateMessages{\n\t\tcheckFileSystem: any;\n\tmessages: any;\n\tseverity: any;\n\tbasePath: any;\n}", "CodeBleu_score": 10.351510952871234}, {"code": "const diagnostics = checkDuplicateMessages{\n\t\tcheckFileSystem: any,\n\tmessages: any,\n\tseverity: any,\n\tbasePath: any\n}", "CodeBleu_score": 11.741972254448948}]}
{"instance_id": "349518a072df", "generation_result": [{"code": "function isTslibHelperName(name: string): boolean{\n\t\tconst parts = name.split('$');\n\tif (parts.length !== 2) {\n\t\treturn false;\n\t}\n\tconst originalName = parts[0];\n\tconst numberPart = parts[1];\n\tif (!isNaN(Number(numberPart))) {\n\t\treturn tslibHelpers.has(originalName);\n\t}\n\treturn false;\n}", "CodeBleu_score": 61.62355961290067}, {"code": "function isTslibHelperName(name: string): boolean{\n\t\tconst parts = name.split('$');\n\tif (parts.length !== 2) {\n\t\treturn false;\n\t}\n\tconst originalName = parts[0];\n\tconst numberPart = parts[1];\n\tif (!numberPart.match(/^\\d+$/)) {\n\t\treturn false;\n\t}\n\treturn tslibHelpers.has(originalName);\n}", "CodeBleu_score": 64.26396748276039}, {"code": "function isTslibHelperName(name: string): boolean{\n\t\tconst splitName = name.split('$');\n\tif (splitName.length !== 2) {\n\t\treturn false;\n\t}\n\tconst originalName = splitName[0];\n\tconst index = parseInt(splitName[1], 10);\n\tif (isNaN(index) || index < 0) {\n\t\treturn false;\n\t}\n\treturn tslibHelpers.has(originalName);\n}", "CodeBleu_score": 62.190589828904194}]}
{"instance_id": "0a9b3093b5bc", "generation_result": [{"code": "async bundle(): Promise<BundleContextResult>{\n\t\tif (this.#bundle) {\n\t\treturn this.#bundle;\n\t}\n\n\tthis.#bundle = await this.#performBundle();\n\treturn this.#bundle;\n}", "CodeBleu_score": 27.242949837696983}, {"code": "async bundle(): Promise<BundleContextResult>{\n\t\tif (this.#bundle) {\n\t\treturn this.#bundle\n\t}\n\n\tthis.#bundle = await this.#performBundle()\n\treturn this.#bundle\n}", "CodeBleu_score": 25.892927838442926}, {"code": "async bundle(): Promise<BundleContextResult>{\n\t\tconst cachedResult = this.#bundleCache.get(this.#bundlePath);\n\tif (cachedResult !== undefined) {\n\t\treturn cachedResult;\n\t}\n\n\tconst result = await this.#performBundle();\n\tthis.#bundleCache.set(this.#bundlePath, result);\n\treturn result;\n}", "CodeBleu_score": 50.761256992772864}]}
{"instance_id": "f4fe3e6ac648", "generation_result": [{"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t\tconst changedFiles = new Set<string>();\n\tfor (const outputFileName of Object.keys(this.outputFiles)) {\n\t\tconst outputFilePath = this.outputFiles[outputFileName].path;\n\t\tconst currentHash = this.outputFiles[outputFileName].hash;\n\t\tconst previousHash = previousOutputHashes.get(outputFilePath);\n\t\tif (previousHash === undefined || currentHash !== previousHash) {\n\t\t\tchangedFiles.add(outputFilePath);\n\t\t}\n\t}\n\treturn changedFiles;\n}", "CodeBleu_score": 57.367331866340955}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t\tconst changedFiles: Set<string> = new Set();\n\tfor (const [fileName, previousHash] of previousOutputHashes) {\n\t\tconst currentHash = hashFile(fileName);\n\t\tif (currentHash === undefined || currentHash !== previousHash) {\n\t\t\tchangedFiles.add(fileName);\n\t\t}\n\t}\n\treturn changedFiles;\n}", "CodeBleu_score": 49.852504797419726}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t\tconst changedFiles: Set<string> = new Set();\n\tfor (const outputFileName of this.outputFiles) {\n\t\tconst previousHash = previousOutputHashes.get(outputFileName);\n\t\tconst currentHash = hashFile(outputFileName);\n\t\tif (previousHash !== currentHash) {\n\t\t\tchangedFiles.add(outputFileName);\n\t\t}\n\t}\n\treturn changedFiles;\n}", "CodeBleu_score": 49.68650520605936}]}
{"instance_id": "8969b8ce5198", "generation_result": [{"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t\tif (localizeTools === undefined) {\n\t\tlocalizeTools = await import('@angular/localize/tools');\n\t}\n\treturn localizeTools;\n}", "CodeBleu_score": 31.509060963204423}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t\tif (localizeToolsModule) {\n\t\treturn localizeToolsModule;\n\t}\n\tlocalizeToolsModule = await loadEsmModule('@angular/localize/tools');\n\treturn localizeToolsModule;\n}", "CodeBleu_score": 36.298918612497175}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t\tif (localizeTools) {\n\t\treturn localizeTools;\n\t}\n\tlocalizeTools = await loadEsmModule('@angular/localize/tools');\n\treturn localizeTools;\n}", "CodeBleu_score": 32.87531683662876}]}
{"instance_id": "d7c4df80e1ac", "generation_result": [{"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t\n\tconst diagnostics: Diagnostic[] = [];\n\tconst plugins: Plugin[] = [];\n\n\tconst {\n\t\tdiagnostics: translationDiagnostics,\n\t\tplugin: translationPlugin,\n\t} = createTranslationPlugin(locale, translation);\n\tdiagnostics.push(...translationDiagnostics);\n\tplugins.push(translationPlugin);\n\n\tconst { diagnostics: diagnosticPlugins, plugin: diagnosticPlugin } = createDiagnosticsPlugin();\n\tdiagnostics.push(...diagnosticPlugins);\n\tplugins.push(diagnosticPlugin);\n\n\tconst { diagnostics: localePluginDiagnostics, plugin: localePlugin } = createLocalePlugin(locale);\n\tdiagnostics.push(...localePluginDiagnostics);\n\tplugins.push(localePlugin);\n\n\treturn { diagnostics, plugins };\n}", "CodeBleu_score": 36.97420034403219}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t(0, _assert().default)(typeof locale === 'string', 'Locale must be a string');\n  const diagnostics = new Map();\n  const diagnosticsPlugin = diagnosticsPluginFactory(diagnostics);\n  const translationPlugin = translationPluginFactory(locale, translation);\n  const localePlugin = localePluginFactory(locale);\n  return {\n    diagnostics,\n    plugins: [diagnosticsPlugin, translationPlugin, localePlugin]\n  };\n}", "CodeBleu_score": 29.879377795388457}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t:\n", "CodeBleu_score": 6.915955792798393}]}
{"instance_id": "9486259c4631", "generation_result": [{"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t\tconst relativePath = filePath.replace(new RegExp(`^${path.sep}`), '');\n\tconst file = browserOutputFiles.find((file) => file.path === relativePath);\n\tif (file) {\n\t\treturn file.content;\n\t}\n\tthrow new Error(`Could not find file: ${filePath}`);\n}", "CodeBleu_score": 61.629983613378016}, {"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t\tfilePath = filePath.replace(new RegExp(`^${directorySeparator}`), \"\");\n\tconst file = browserOutputFiles.find((file) => file.path === filePath);\n\tif (!file) {\n\t\tthrow new Error(`File \"${filePath}\" does not exist`);\n\t}\n\treturn file.text;\n}", "CodeBleu_score": 58.19530396004618}, {"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t\tconst path = filePath.replace(new RegExp(`^${browserOutputDir}/?`), \"\");\n\tconst file = browserOutputFiles.find(f => f.path === path);\n\tif (file) {\n\t\treturn file.text;\n\t} else {\n\t\tthrow new Error(`File not found: ${filePath}`);\n\t}\n}", "CodeBleu_score": 51.616173126692445}]}
{"instance_id": "2206ca03c7ec", "generation_result": [{"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t\n/**\n * This async function, put, stores the result of a load operation for a given path and updates file dependencies.", "CodeBleu_score": 15.105686409157288}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t\n/**\n * This async function, put, stores the result of a load operation for a given path and updates file dependencies.", "CodeBleu_score": 15.105686409157288}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t\n/**\n * This async function, put, stores the result of a load operation for a given path and updates file dependencies.", "CodeBleu_score": 15.105686409157288}]}
{"instance_id": "a261d85630d0", "generation_result": [{"code": "invalidate(path: string): boolean{\n\t\tconst paths = this.#fileDependencies.get(path);\n\tlet deleted = false;\n\tif (paths) {\n\t\tfor (const p of paths) {\n\t\t\tif (this.#loadResults.delete(p)) {\n\t\t\t\tdeleted = true;\n\t\t\t}\n\t\t}\n\t}\n\tthis.#fileDependencies.delete(path);\n\treturn deleted;\n}", "CodeBleu_score": 67.21746855223363}, {"code": "invalidate(path: string): boolean{\n\t\tconst fileDependencies = this.#fileDependencies.get(path);\n\tif (!fileDependencies) {\n\t\treturn false;\n\t}\n\tconst loadResults = this.#loadResults;\n\tlet didInvalidate = false;\n\tfor (const dependency of fileDependencies) {\n\t\tif (loadResults.delete(dependency)) {\n\t\t\tdidInvalidate = true;\n\t\t}\n\t}\n\tthis.#fileDependencies.delete(path);\n\treturn didInvalidate;\n}", "CodeBleu_score": 53.2404860069032}, {"code": "invalidate(path: string): boolean{\n\t\tconst affectedPaths = this.#fileDependencies.get(path);\n\tif (affectedPaths === undefined) {\n\t\treturn false;\n\t}\n\tlet deleted = false;\n\tfor (const affectedPath of affectedPaths) {\n\t\tif (this.#loadResults.delete(affectedPath)) {\n\t\t\tdeleted = true;\n\t\t}\n\t}\n\tthis.#fileDependencies.delete(path);\n\treturn deleted;\n}", "CodeBleu_score": 73.30474856222145}]}
{"instance_id": "8fa6dee0ba79", "generation_result": [{"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t\tconst duration = Number(process.hrtime.bigint() - startTime) / 1000000000;\n\tif (cumulative) {\n\t\tcumulativeDurations.set(name, cumulativeDurations.get(name) + duration);\n\t} else {\n\t\tconsole.log(name + \": \" + duration.toFixed(9) + \"s\");\n\t}\n}", "CodeBleu_score": 40.47309077023658}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t\tconst duration: number = Number((process.hrtime.bigint() - startTime) / 1000000n);\n\tif (cumulative) {\n\t\tcumulativeDurations.set(name, cumulativeDurations.get(name) + duration);\n\t} else {\n\t\tconsole.log(`Duration of ${name}: ${duration.toFixed(9)}s`);\n\t}\n}", "CodeBleu_score": 40.79720155740223}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t\tconst duration = Number(process.hrtime.bigint() - startTime) / 1000000000;\n\tif (cumulative) {\n\t\tcumulativeDurations.set(name, (cumulativeDurations.get(name) || 0) + duration);\n\t} else {\n\t\tconsole.log(name + \": \" + duration.toFixed(9) + \"s\");\n\t}\n}", "CodeBleu_score": 40.58398846619405}]}
{"instance_id": "0c530cbeb386", "generation_result": [{"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\t\tconst oldGetSourceFiles = program.getSourceFiles;\n\tprogram.getSourceFiles = function getSourceFiles() {\n\t\tconst files = oldGetSourceFiles();\n\t\tconst newFiles = files.map(file => {\n\t\t\tif (file.version === undefined) {\n\t\t\t\tconst hash = createHash('sha256');\n\t\t\t\thash.update(file.text);\n\t\t\t\treturn {\n\t\t\t\t\t...file,\n\t\t\t\t\tversion: hash.digest('hex'),\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn file;\n\t\t});\n\t\treturn newFiles;\n\t};\n}", "CodeBleu_score": 49.12744478391087}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\t\n}", "CodeBleu_score": 3.988773370960826}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\tprogram.getSourceFiles", "CodeBleu_score": 6.143949420581259}]}
{"instance_id": "3faf480d56ae", "generation_result": [{"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t\tif (resolvedModule === undefined) {\n\t\treturn resolvedModule;\n\t}\n\n\tconst resolvedFileName = resolvedModule.resolvedFileName;\n\tconst isExternalLibraryImport = resolvedModule.isExternalLibraryImport;\n\n\tif (isExternalLibraryImport === true) {\n\t\treturn resolvedModule;\n\t}\n\n\tconst replacement = replacements[resolvedFileName];\n\n\tif (replacement !== undefined) {\n\t\treturn {\n\t\t\tresolvedFileName: replacement,\n\t\t\tisExternalLibraryImport: false,\n\t\t};\n\t}\n\n\treturn resolvedModule;\n}", "CodeBleu_score": 42.86333778801543}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t\tif (resolvedModule) {\n\t\tconst resolvedFileName = resolvedModule.resolvedFileName;\n\t\tconst isExternalLibraryImport = resolvedFileName.startsWith('node_modules');\n\t\tconst replacement = replacements.get(resolvedFileName);\n\t\tif (replacement) {\n\t\t\treturn {\n\t\t\t\tresolvedFileName: replacement,\n\t\t\t\tisExternalLibraryImport,\n\t\t\t};\n\t\t}\n\t}\n\treturn resolvedModule;\n}", "CodeBleu_score": 48.27612643736271}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t\tif (resolvedModule === undefined) {\n\t\treturn resolvedModule\n\t}\n\tconst resolvedFileName = resolvedModule.resolvedFileName\n\tif (resolvedFileName === undefined) {\n\t\treturn resolvedModule\n\t}\n\tconst normalizedResolvedFileName = normalizePath(resolvedFileName)\n\tconst isExternalLibraryImport = isExternalLibraryImportPath(normalizedResolvedFileName)\n\tconst replacementFileName = replacements[normalizedResolvedFileName]\n\tif (replacementFileName === undefined) {\n\t\treturn resolvedModule\n\t}\n\treturn {\n\t\tresolvedFileName: replacementFileName,\n\t\tisExternalLibraryImport,\n\t}\n}", "CodeBleu_score": 33.27267355424954}]}
{"instance_id": "382672b61228", "generation_result": [{"code": "get waitUntilReady(): Promise<boolean>{\n\t\tif (this._compilationReadyPromise === undefined) {\n\t\tthis._compilationReadyPromise = new Promise<boolean>((resolve, reject) => {\n\t\t\tif (this.compilationResult !== undefined) {\n\t\t\t\tresolve(this.compilationResult.success);\n\t\t\t} else {\n\t\t\t\tthis._compilationReadyResolveReject = { resolve, reject };\n\t\t\t}\n\t\t});\n\t}\n\treturn this._compilationReadyPromise;\n}", "CodeBleu_score": 20.69246016172444}, {"code": "get waitUntilReady(): Promise<boolean>{\n\t\treturn this._compilationReadyPromise;\n}", "CodeBleu_score": 4.59892500129051}, {"code": "get waitUntilReady(): Promise<boolean>{\n\t\tif (this._pendingCompilation !== undefined) {\n\t\tif (this._compilationReadyPromise === undefined) {\n\t\t\tthis._compilationReadyPromise = new Promise(resolve => {\n\t\t\t\tthis._compilationReadyResolver = resolve;\n\t\t\t});\n\t\t}\n\t\treturn this._compilationReadyPromise;\n\t}\n\treturn Promise.resolve(this.error === null);\n}", "CodeBleu_score": 20.372207032457034}]}
{"instance_id": "27f631043b39", "generation_result": [{"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t\tconst root = this.workspaceRoot;\n\tconst incremental = this.incremental;\n\tconst context = new BundlerContext(root, {\n\t\tincremental\n\t});\n\tconst stylesheetBundleOptions = {\n\t\tinject: true,\n\t\tinjectCss: true,\n\t\tinjectGlobalCss: true,\n\t\tnamespace: 'angular:styles/component',\n\t\tresolveDir: root,\n\t\tresolve: (url, context) => {\n\t\t\tif (url.startsWith('~')) {\n\t\t\t\turl = path.join(root, 'node_modules', url.substr(1));\n\t\t\t}\n\t\t\treturn url;\n\t\t},\n\t\ttransform: (url, context) => {\n\t\t\tif (url.startsWith('~')) {\n\t\t\t\turl = path.join(root, 'node_modules', url.substr(1));\n\t\t\t}\n\t\t\treturn {\n\t\t\t\turl,\n\t\t\t\tload: () => {\n\t\t\t\t\tconst content = fs.readFileSync(url, 'utf-8');\n\t\t\t\t\tconst loader = url.endsWith('.css') ? 'css' : 'text';\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tloader\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\tcontext.entry = entry;\n\tcontext.addPlugin(new StylesheetPlugin(stylesheetBundleOptions));\n\treturn context;\n}", "CodeBleu_score": 29.011459631411164}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t\tconst workspaceRoot = this.workspaceRoot;\n\tconst incremental = this.incremental;\n\tconst bundler = new BundlerContext(workspaceRoot, { incremental });\n\tconst stylesheetBundleOptions = {\n\t\tinject: false,\n\t\tminify: false,\n\t\tscopeHoist: true,\n\t\thmr: false,\n\t\ttarget: ['es2015'],\n\t\tplugins: [\n\t\t\t{\n\t\t\t\tname: 'angular:component-stylesheet',\n\t\t\t\tresolveId: (id) => {\n\t\t\t\t\tif (id.startsWith('angular:styles/component')) {\n\t\t\t\t\t\treturn id;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tload: (id) => {\n\t\t\t\t\tif (id.startsWith('angular:styles/component')) {\n\t\t\t\t\t\tconst componentPath = id.split(':').slice(2).join(':');\n\t\t\t\t\t\tconst componentDir = path.dirname(componentPath);\n\t\t\t\t\t\tconst componentStyles = this.loadStyles(componentPath);\n\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\texport default {\n\t\t\t\t\t\t\t\tcode: ${JSON.stringify(componentStyles.code)},\n\t\t\t\t\t\t\t\tmap: ${JSON.stringify(componentStyles.map)},\n\t\t\t\t\t\t\t\tresolveDir: ${JSON.stringify(componentDir)},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t`;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n\tbundler.addEntry(entry, {\n\t\ttarget: ['es2015'],\n\t\tplugins: [\n\t\t\t{\n\t\t\t\tname: 'angular:component-stylesheet',\n\t\t\t\tresolveId: (id) => {\n\t\t\t\t\tif (id.startsWith('angular:styles/component')) {\n\t\t\t\t\t\treturn id;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tload: (id) => {\n\t\t\t\t\tif (id.startsWith('angular:styles/component')) {\n\t\t\t\t\t\tconst componentPath = id.split(':').slice(2).join(':');\n\t\t\t\t\t\tconst componentDir = path.dirname(componentPath);\n\t\t\t\t\t\tconst componentStyles = this.loadStyles(componentPath);\n\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\texport default {\n\t\t\t\t\t\t\t\tcode: ${JSON.stringify(componentStyles.code)},\n\t\t\t\t\t\t\t\tmap: ${JSON.stringify(componentStyles.map)},\n\t\t\t\t\t\t\t\tresolveDir: ${JSON.stringify(componentDir)},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t`;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t});\n\treturn bundler;\n}", "CodeBleu_score": 28.9524929663394}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t\tconst root = workspaceRoot(entry.data.workspace);\n\tconst incremental = entry.data.incremental;\n\tconst context = new BundlerContext(root, { incremental });\n\tconst styleOptions = {\n\t\tnamespace: 'angular:styles/component',\n\t\tresolveDir: root,\n\t\tload: loadComponentStylesheet,\n\t\tresolve: resolveComponentStylesheet,\n\t};\n\tcontext.addPlugin(plugin(styleOptions));\n\tcontext.entry = entry.data.entry;\n\treturn context;\n}", "CodeBleu_score": 14.240401386063418}]}
{"instance_id": "b89b44b794a7", "generation_result": [{"code": "invalidate(files: Iterable<string>) {\n\t\tconst normalizedFiles = Array.from(files).map(normalizePath);\n\tthis.#fileContexts.values().forEach(context => context.invalidate(normalizedFiles));\n\tthis.#inlineContexts.values().forEach(context => context.invalidate(normalizedFiles));\n}", "CodeBleu_score": 51.944231844934016}, {"code": "invalidate(files: Iterable<string>) {\n\t\tconst normalizedFiles = Array.from(files).map(normalizePath);\n\tthis.#fileContexts.invalidate(normalizedFiles);\n\tthis.#inlineContexts.invalidate(normalizedFiles);\n}", "CodeBleu_score": 39.89602709382426}, {"code": "invalidate(files: Iterable<string>) {\n\t\tconst normalizedFiles = Array.from(files).map(normalizeFilePath);\n\tthis.#fileContexts.invalidate(normalizedFiles);\n\tthis.#inlineContexts.invalidate(normalizedFiles);\n}", "CodeBleu_score": 40.12777982137632}]}
{"instance_id": "aa3aa0817adf", "generation_result": [{"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t\tconst { code, file, start } = diagnostic;\n\tconst message = convertTypeScriptDiagnosticInfo(typescript, diagnostic.messageText);\n\tconst relatedInformation = diagnostic.relatedInformation;\n\n\tconst codePrefix = getCodePrefix(diagnostic);\n\tconst codeWithoutPrefix = getCodeWithoutPrefix(diagnostic);\n\n\tconst messageText = message.text;\n\n\tconst notes: Note[] = [];\n\tif (relatedInformation) {\n\t\tfor (const related of relatedInformation) {\n\t\t\tconst relatedMessage = convertTypeScriptDiagnosticInfo(typescript, related.messageText);\n\t\t\tconst relatedFile = related.file;\n\t\t\tconst relatedStart = related.start;\n\n\t\t\tif (relatedFile && relatedStart) {\n\t\t\t\tconst relatedLocation = convertTypeScriptLocation(typescript, relatedFile, relatedStart);\n\t\t\t\tnotes.push({\n\t\t\t\t\tlocation: relatedLocation,\n\t\t\t\t\ttext: relatedMessage.text,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnotes.push({\n\t\t\t\t\ttext: relatedMessage.text,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tconst location = convertTypeScriptLocation(typescript, file, start);\n\n\treturn {\n\t\tlocation,\n\t\ttext: messageText,\n\t\tcode: {\n\t\t\tprefix: codePrefix,\n\t\t\ttext: codeWithoutPrefix,\n\t\t},\n\t\tnotes,\n\t};\n}", "CodeBleu_score": 28.098634072235708}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t\tconst { file, start, length } = diagnostic;\n\tconst message = convertTypeScriptDiagnosticInfo(typescript, diagnostic.messageText);\n\tconst code = convertTypeScriptDiagnosticCode(diagnostic.code);\n\tconst related = diagnostic.relatedInformation;\n\tconst relatedMessages = related ? related.map(convertTypeScriptDiagnosticInfo) : undefined;\n\n\treturn {\n\t\t...message,\n\t\tcode,\n\t\trelatedMessages,\n\t\tlocation: {\n\t\t\tfile: file ? file.fileName : undefined,\n\t\t\tstart: start ? convertTypeScriptPosition(typescript, start) : undefined,\n\t\t\tlength,\n\t\t},\n\t};\n}", "CodeBleu_score": 34.66312644643149}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t\tconst message = convertTypeScriptDiagnosticInfo(typescript, diagnostic.file, diagnostic.start, diagnostic.messageText)\n\tconst relatedInformation = diagnostic.relatedInformation\n\tif (relatedInformation) {\n\t\tmessage.notes = relatedInformation.map(info => convertTypeScriptDiagnosticInfo(typescript, info.file, info.start, info.messageText))\n\t}\n\treturn message\n}", "CodeBleu_score": 34.40992158372591}]}
{"instance_id": "0cd0285018f1", "generation_result": [{"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t\tif (containingFile === referencedFile) {\n\t\treturn;\n\t}\n\tconst normalizedContainingFile = normalize(containingFile);\n\tconst normalizedReferencedFiles = new Set(\n\t\t(referencedFiles as Iterable<string>).map(normalize),\n\t);\n\tlet referencingFiles = this.#referencingFiles.get(normalizedContainingFile);\n\tif (referencingFiles === undefined) {\n\t\tthis.#referencingFiles.set(normalizedContainingFile, referencingFiles = new Set());\n\t}\n\treferencingFiles.add(normalizedReferencedFiles);\n}", "CodeBleu_score": 53.58805032059066}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t\tconst normalizedContainingFile = normalize(containingFile);\n\tconst normalizedReferencedFiles = new Set(\n\t\t(function* () {\n\t\t\tfor (const referencedFile of referencedFiles) {\n\t\t\t\tconst normalizedReferencedFile = normalize(referencedFile);\n\t\t\t\tif (normalizedContainingFile !== normalizedReferencedFile) {\n\t\t\t\t\tyield normalizedReferencedFile;\n\t\t\t\t}\n\t\t\t}\n\t\t})(),\n\t);\n\tif (this.#referencingFiles.has(normalizedContainingFile)) {\n\t\tthis.#referencingFiles.get(normalizedContainingFile).union(normalizedReferencedFiles);\n\t} else {\n\t\tthis.#referencingFiles.set(normalizedContainingFile, normalizedReferencedFiles);\n\t}\n}", "CodeBleu_score": 56.11142835953655}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t\tif (containingFile === referencedFile) {\n\t\treturn;\n\t}\n\n\tconst normalizedContainingFile = normalize(containingFile);\n\tconst normalizedReferencedFiles = new Set(\n\t\tmap(normalize, referencedFiles)\n\t);\n\n\tif (this.#referencingFiles.has(normalizedContainingFile)) {\n\t\tthis.#referencingFiles.get(normalizedContainingFile)!.add(...normalizedReferencedFiles);\n\t} else {\n\t\tthis.#referencingFiles.set(normalizedContainingFile, normalizedReferencedFiles);\n\t}\n}", "CodeBleu_score": 46.643460196125275}]}
{"instance_id": "e22be1916b33", "generation_result": [{"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t\tif (ng) {\n\t\treturn ng\n\t} else {\n\t\treturn await import('@angular/compiler-cli')\n\t}\n}", "CodeBleu_score": 22.201970197936976}, {"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t\treturn (ng ??= await import('@angular/compiler-cli')).ng\n}", "CodeBleu_score": 26.171383406785438}, {"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t\tif (ng === undefined) {\n\t\ttry {\n\t\t\tng = await import('@angular/compiler-cli');\n\t\t} catch (err) {\n\t\t\tthrow new Error(\n\t\t\t\t'The Angular compiler CLI module could not be loaded. Make sure it is installed as a dependency of the project.'\n\t\t\t);\n\t\t}\n\t}\n\treturn ng;\n}", "CodeBleu_score": 25.96566758974338}]}
{"instance_id": "64e42342101f", "generation_result": [{"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t\tif (jit) {\n\t\tconst { JitCompilation } = await import('@angular/compiler-cli/src/ngtsc/main');\n\t\treturn new JitCompilation();\n\t}\n\n\tconst { AotPlugin, AngularCompilerPlugin } = await import('@ngtools/webpack');\n\tconst { ParallelPlugin } = await import('webpack');\n\n\tconst plugin = new AotPlugin({\n\t\ttsConfigPath: join(process.cwd(), 'tsconfig.json'),\n\t\tmainPath: join(process.cwd(), 'src/main.ts'),\n\t\tskipCodeGeneration: true,\n\t});\n\n\tif (useParallelTs) {\n\t\tconst { ParallelCompilation } = await import('@angular/compiler-cli/src/ngtsc/main');\n\t\treturn new ParallelCompilation([plugin], new ParallelPlugin({\n\t\t\tworkersNumber: os.cpus().length - 1,\n\t\t}));\n\t}\n\n\treturn new AngularCompilerPlugin({\n\t\ttsConfigPath: join(process.cwd(), 'tsconfig.json'),\n\t\tmainPath: join(process.cwd(), 'src/main.ts'),\n\t});\n}", "CodeBleu_score": 56.475463992759735}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t\tif (jit) {\n\t\tconst { JitCompilation } = await import('./jit-compilation');\n\t\treturn new JitCompilation();\n\t} else if (process.env.USE_PARALLEL_TS === 'true') {\n\t\tconst { ParallelCompilation } = await import('./parallel-compilation');\n\t\treturn new ParallelCompilation();\n\t} else {\n\t\tconst { AotCompilation } = await import('./aot-compilation');\n\t\treturn new AotCompilation();\n\t}\n}", "CodeBleu_score": 74.87765684932536}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t\tif (jit) {\n\t\treturn new JitCompilation();\n\t}\n\tif (useParallelTs) {\n\t\treturn new ParallelCompilation();\n\t}\n\treturn new AotCompilation();\n}", "CodeBleu_score": 15.68066543486625}]}
{"instance_id": "37804d74eb2d", "generation_result": [{"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t\t// Update the source map's sources to be relative to the root.\n\tsourceMap.sources = sourceMap.sources.map(sourceURLToPath(root))\n\n\t// Serialize the source map to a base64-encoded JSON string.\n\tconst sourceMapJSON = JSON.stringify(sourceMap)\n\tconst sourceMapBase64 = Buffer.from(sourceMapJSON).toString('base64')\n\n\t// Return a source map URL comment containing the base64-encoded source map.\n\treturn `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${sourceMapBase64}`\n}", "CodeBleu_score": 56.467085070944556}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t\n}", "CodeBleu_score": 13.993599339758173}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t\n}", "CodeBleu_score": 13.993599339758173}]}
{"instance_id": "bccb5eeb4c4d", "generation_result": [{"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t\tconst lines = stack.split('\n');\n\tfor (const line of lines) {\n\t\tconst match = line.match(FILE_PATH_REGEX);\n\t\tif (match) {\n\t\t\tconst cwd = process.cwd();\n\t\t\tconst filePath = match[1].replace(cwd, '');\n\t\t\tyield filePath;\n\t\t}\n\t}\n}", "CodeBleu_score": 35.612630895274556}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t\tconst lines = stack.split(\"\n\");\n\tfor (const line of lines) {\n\t\tconst file = extractFileFromLine(line);\n\t\tif (file !== undefined) {\n\t\t\tyield file;\n\t\t}\n\t}\n}", "CodeBleu_score": 24.418664354648666}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t\tconst lines = stack.split('\n');\n\tfor (const line of lines) {\n\t\tconst match = line.match(FILE_PATH_REGEX);\n\t\tif (match) {\n\t\t\tconst file = match[1];\n\t\t\tconst cwd = process.cwd();\n\t\t\tyield path.relative(cwd, file);\n\t\t}\n\t}\n}", "CodeBleu_score": 34.382042692899425}]}
{"instance_id": "e73986d88a00", "generation_result": [{"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t\tif (typeof contents === 'string') {\n\t\treturn contents.includes(tailwindStart) || contents.includes(tailwindEnd);\n\t} else {\n\t\tconst contentsBuffer = Buffer.from(contents);\n\t\treturn contentsBuffer.includes(tailwindStartBuffer) || contentsBuffer.includes(tailwindEndBuffer);\n\t}\n}", "CodeBleu_score": 44.73653787135843}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t\tconst contentsString = typeof contents === \"string\" ? contents : contents.toString();\n\treturn contentsString.includes(tailwindKeyword);\n}", "CodeBleu_score": 30.39417929908929}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t\tif (typeof contents === \"string\") {\n\t\treturn contents.includes(tailwindCssKeywords)\n\t} else {\n\t\treturn Buffer.from(contents).includes(tailwindCssKeywords)\n\t}\n}", "CodeBleu_score": 28.313466648018306}]}
{"instance_id": "ff27dc4f1deb", "generation_result": [{"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t\tconst headers = server.config.server.headers;\n\tif (headers) {\n\t\tfor (const [key, value] of Object.entries(headers)) {\n\t\t\tif (value !== undefined) {\n\t\t\t\tres.setHeader(key, value);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 76.60200018544077}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t\tconst headers = server.config.server.headers;\n\tif (headers) {\n\t\tfor (const key in headers) {\n\t\t\tconst value = headers[key];\n\t\t\tif (value !== undefined) {\n\t\t\t\tres.setHeader(key, value);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 66.73185017384152}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t\tconst headers = server.config.server.headers;\n\tif (headers) {\n\t\tfor (const [key, value] of Object.entries(headers)) {\n\t\t\tif (value) {\n\t\t\t\tres.setHeader(key, value);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 67.3139646551726}]}
{"instance_id": "1d547de72724", "generation_result": [{"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t\tconst parsers = await importParsers();\n\tconst unusedParsers = new Map(parsers);\n\tconst parserDiagnostics = new Map<string, Diagnostic[]>();\n\tconst diagnostics = new Map<string, Diagnostic[]>();\n\n\treturn async function loadTranslation(filePath: string, locale: string): Promise<Translation> {\n\t\tconst content = fs.readFileSync(filePath, 'utf8');\n\t\tconst messages: string[] = [];\n\t\tconst analysis = {\n\t\t\tdiagnostics: [],\n\t\t\tmessages: []\n\t\t};\n\t\tconst hash = createHash('sha256').update(content).digest('hex');\n\n\t\tfor (const [parserName, parser] of unusedParsers.entries()) {\n\t\t\ttry {\n\t\t\t\tparser.analyze(content, locale);\n\t\t\t\tparser.parse(content, locale);\n\t\t\t\tunusedParsers.delete(parserName);\n\t\t\t\tanalysis.diagnostics.push(...parser.analyze(content, locale));\n\t\t\t\tanalysis.messages.push(...parser.parse(content, locale));\n\t\t\t\tbreak;\n\t\t\t} catch (error) {\n\t\t\t\tparserDiagnostics.set(parserName, parser.analyze(content, locale));\n\t\t\t}\n\t\t}\n\n\t\tif (unusedParsers.size === 0) {\n\t\t\tthrow new Error(\n\t\t\t\t`No parser found for file: ${filePath}\nDiagnostics:\n${messages.join('\n')}`\n\t\t\t);\n\t\t}\n\n\t\tfor (const [parserName, parserDiagnostics] of parserDiagnostics.entries()) {\n\t\t\tdiagnostics.set(parserName, parserDiagnostics);\n\t\t}\n\n\t\treturn {\n\t\t\tformat: parser.name,\n\t\t\tlocale,\n\t\t\ttranslations: analysis.messages,\n\t\t\tdiagnostics: analysis.diagnostics,\n\t\t\thash\n\t\t};\n\t};\n}", "CodeBleu_score": 45.9139974152792}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t\tconst parsers = await importParsers();\n\tconst diagnostics = await importDiagnostics();\n\n\tconst unusedParsers = new Map<string, Parser>();\n\n\tfor (const [parserName, parser] of parsers.entries()) {\n\t\tunusedParsers.set(parserName, parser);\n\t}\n\n\treturn async (filePath: string): Promise<Translation> => {\n\t\tconst content = fs.readFileSync(filePath, 'utf-8');\n\t\tconst messages: string[] = [];\n\t\tconst analysis: Analysis = {\n\t\t\tdiagnostics: diagnostics.createDiagnostics(),\n\t\t\tlocale: '',\n\t\t\ttranslations: [],\n\t\t};\n\n\t\tfor (const [parserName, parser] of unusedParsers.entries()) {\n\t\t\ttry {\n\t\t\t\tconst hash = createHash('sha256').update(content).digest('hex');\n\t\t\t\tconst parsed = parser.parse(content);\n\n\t\t\t\tanalysis.diagnostics.merge(parser.analyze(parsed));\n\n\t\t\t\tif (analysis.diagnostics.length === 0) {\n\t\t\t\t\tanalysis.locale = parser.locale;\n\t\t\t\t\tanalysis.translations = parsed;\n\t\t\t\t\tanalysis.hash = hash;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconst message = error instanceof Error ? error.message : error;\n\n\t\t\t\tanalysis.diagnostics.push(diagnostics.createDiagnostic(\n\t\t\t\t\tdiagnostics.DiagnosticSeverity.Error,\n\t\t\t\t\t`Error parsing file with ${parserName} parser: ${message}`,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\n\t\tif (analysis.diagnostics.length > 0) {\n\t\t\tthrow new Error(analysis.diagnostics.formatDiagnostics());\n\t\t}\n\n\t\treturn {\n\t\t\tformat: analysis.locale,\n\t\t\tlocale: analysis.locale,\n\t\t\ttranslations: analysis.translations,\n\t\t\tdiagnostics: analysis.diagnostics,\n\t\t\thash: analysis.hash,\n\t\t};\n\t};\n}", "CodeBleu_score": 43.979840268026784}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t\tconst parsers = await importParsers();\n\tconst unusedParsers = new Map(parsers);\n\tconst diagnostics = await importDiagnostics();\n\n\treturn async (path: string) => {\n\t\tconst content = fs.readFileSync(path, 'utf-8');\n\t\tconst messages = [];\n\t\tconst analysis = {\n\t\t\tdiagnostics: [],\n\t\t\tlocale: undefined,\n\t\t\ttranslations: undefined,\n\t\t};\n\n\t\tfor (const [parserName, parser] of parsers.entries()) {\n\t\t\tconst parserDiagnostics = [];\n\t\t\tconst parserAnalysis = parser.analyze(content, parserDiagnostics);\n\n\t\t\tif (parserAnalysis) {\n\t\t\t\tunusedParsers.delete(parserName);\n\t\t\t\tmessages.push(...parserAnalysis.messages);\n\t\t\t\tanalysis.diagnostics.push(...parserDiagnostics);\n\t\t\t\tanalysis.locale = parserAnalysis.locale;\n\t\t\t\tanalysis.translations = parserAnalysis.translations;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (unusedParsers.size > 0) {\n\t\t\tconst unusedParserNames = Array.from(unusedParsers.keys());\n\t\t\tconst unusedParserNamesString = unusedParserNames.join(', ');\n\t\t\tconst error = new Error(\n\t\t\t\t`No parser could handle the file. The following parsers were tried, but none could handle the file: ${unusedParserNamesString}`\n\t\t\t);\n\t\t\terror.diagnostics = diagnostics.formatDiagnostics(analysis.diagnostics);\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn {\n\t\t\tcontent,\n\t\t\tmessages: messages.join(''),\n\t\t\thash: createHash('sha256').update(content).digest('hex'),\n\t\t\t...analysis,\n\t\t};\n\t};\n}", "CodeBleu_score": 43.25405341115979}]}
{"instance_id": "0c0d3dcf983c", "generation_result": [{"code": "toggleSidebar(): boolean{\n\tthis.sidebarService.toggle(this.sidebar.id, this.sidebar.collapsed);\nthis.layoutService.changeLayoutSize();\nreturn false;\n}", "CodeBleu_score": 44.92031340472848}, {"code": "toggleSidebar(): boolean{\n\t\tthis.sidebarService.toggle(this.sidebarId, this.sidebarState);\n\tthis.layoutService.changeLayoutSize();\n\treturn false;\n}", "CodeBleu_score": 45.35246098043808}, {"code": "toggleSidebar(): boolean{\n\tthis.sidebarService.toggle(true, 'menu-sidebar');\nthis.layoutService.changeLayoutSize();\nreturn false;\n}", "CodeBleu_score": 72.44258642203714}]}
{"instance_id": "c5ebbdd1dadf", "generation_result": [{"code": "loadNext(cardData){\n\t\tif (!this.loading) {\n\t\tthis.loading = true;\n\t\tthis.news = [\n\t\t\t{\n\t\t\t\ttitle: 'Loading...',\n\t\t\t\tdescription: 'Loading...',\n\t\t\t\tlink: 'Loading...',\n\t\t\t\timageUrl: 'https://www.nasa.gov/sites/default/files/thumbnails/image/nhq201800150007.jpg'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Loading...',\n\t\t\t\tdescription: 'Loading...',\n\t\t\t\tlink: 'Loading...',\n\t\t\t\timageUrl: 'https://www.nasa.gov/sites/default/files/thumbnails/image/nhq201800150007.jpg'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Loading...',\n\t\t\t\tdescription: 'Loading...',\n\t\t\t\tlink: 'Loading...',\n\t\t\t\timageUrl: 'https://www.nasa.gov/sites/default/files/thumbnails/image/nhq201800150007.jpg'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Loading...',\n\t\t\t\tdescription: 'Loading...',\n\t\t\t\tlink: 'Loading...',\n\t\t\t\timageUrl: 'https://www.nasa.gov/sites/default/files/thumbnails/image/nhq201800150007.jpg'\n\t\t\t}\n\t\t];\n\t\tthis.newsService.getNews(this.page).subscribe(news => {\n\t\t\tthis.news.splice(0, this.news.length);\n\t\t\tthis.news.push(...news.articles);\n\t\t\tthis.loading = false;\n\t\t\tthis.page++;\n\t\t});\n\t}\n}", "CodeBleu_score": 13.392896512405079}, {"code": "loadNext(cardData){\n\t\tif (!this.loading) {\n\t\tthis.loading = true;\n\t\tthis.news = [];\n\t\tthis.news.push(new NewsPlaceholder());\n\t\tthis.news.push(new NewsPlaceholder());\n\t\tthis.newsService.getNews(this.pageNumber).subscribe(news => {\n\t\t\tthis.news.pop();\n\t\t\tthis.news.pop();\n\t\t\tthis.news = this.news.concat(news);\n\t\t\tthis.loading = false;\n\t\t\tthis.pageNumber++;\n\t\t});\n\t}\n}", "CodeBleu_score": 30.552126202088246}, {"code": "loadNext(cardData){\n\t\tif (!cardData.news.loading) {\n\t\tcardData.news.loading = true;\n\t\tcardData.news.placeholders = Array.from({length: 10}, (_, i) => i);\n\t\tthis.newsService.loadNext(cardData.news.page).subscribe(news => {\n\t\t\tcardData.news.placeholders.length = 0;\n\t\t\tcardData.news.push(...news);\n\t\t\tcardData.news.loading = false;\n\t\t\tcardData.news.page++;\n\t\t});\n\t}\n}", "CodeBleu_score": 38.41934240869236}]}
{"instance_id": "1bd87ab8efa2", "generation_result": [{"code": "backToTop(){\n\t\tif (this.scrolling === false) {\n\t\tthis.scrolling = true;\n\t\tlet currentScroll = window.pageYOffset;\n\t\tlet targetScroll = 0;\n\t\tlet scrollInterval = setInterval(() => {\n\t\t\tcurrentScroll += (targetScroll - currentScroll) / 2;\n\t\t\twindow.scrollTo(0, currentScroll);\n\t\t\tif (currentScroll === targetScroll) {\n\t\t\t\tclearInterval(scrollInterval);\n\t\t\t\tthis.scrolling = false;\n\t\t\t}\n\t\t}, 16.7);\n\t}\n}", "CodeBleu_score": 38.91043019073926}, {"code": "backToTop(){\n\t\tif (this.scrolling == false) {\n\t\tthis.scrolling = true;\n\t\tlet y = window.pageYOffset;\n\t\tlet t = setInterval(() => {\n\t\t\tif (y <= 0) {\n\t\t\t\tclearInterval(t);\n\t\t\t\tthis.scrolling = false;\n\t\t\t} else {\n\t\t\t\ty -= Math.ceil(y * this.easeInOutQuad(1 - y / 100));\n\t\t\t\twindow.scrollTo(0, y);\n\t\t\t}\n\t\t}, 16.7);\n\t}\n}", "CodeBleu_score": 37.03318753727836}, {"code": "backToTop(){\n\t\tif (this.scrolling) {\n\t\treturn;\n\t}\n\tthis.scrolling = true;\n\tlet start = window.pageYOffset;\n\tlet change = start - 0;\n\tlet currentTime = 0;\n\tlet increment = 20;\n\tlet duration = 500;\n\tlet easeInOutQuad = function (t, b, c, d) {\n\t\tt /= d / 2;\n\t\tif (t < 1) {\n\t\t\treturn c / 2 * t * t + b;\n\t\t}\n\t\tt--;\n\t\treturn -c / 2 * (t * (t - 2) - 1) + b;\n\t};\n\tlet animateScroll = function () {\n\t\tcurrentTime += increment;\n\t\tlet val = easeInOutQuad(currentTime, start, change, duration);\n\t\twindow.scrollTo(0, val);\n\t\tif (currentTime < duration) {\n\t\t\tsetTimeout(animateScroll, increment);\n\t\t} else {\n\t\t\twindow.scrollTo(0, 0);\n\t\t\tthis.scrolling = false;\n\t\t}\n\t};\n\tanimateScroll();\n}", "CodeBleu_score": 33.09054240457106}]}
{"instance_id": "0ef728b56235", "generation_result": [{"code": "getBreadcrumb(){\n\tconst matched = this.$route.matched\nconst isDashboard = matched[0].path === '/dashboard'\nconst filter = matched.filter(route => route.meta && route.meta.title)\nif (!isDashboard) {\nfilter.unshift({ path: '/dashboard', meta: { title: 'Dashboard' } })\n}\nconst levelList = filter.filter(route => route.meta && !route.meta.hideInBreadcrumb)\nreturn levelList\n}", "CodeBleu_score": 48.222817355131625}, {"code": "getBreadcrumb(){\n\tconst matched = this.$route.matched.filter(route => route.meta && route.meta.title);\nif (!this.isDashboard && matched.length > 0) {\nmatched.unshift({ path: '/dashboard', meta: { title: 'Dashboard' } });\n}\nthis.levelList = matched.filter(route => route.meta.title && !route.meta.excludeFromBreadcrumb);\n}", "CodeBleu_score": 48.343372951464524}, {"code": "getBreadcrumb(){\n\tconst matched = this.$route.matched.filter(route => route.meta && route.meta.title)\nif (!this.isDashboard && matched.length > 0 && matched[0].path !== '/dashboard') {\nmatched.unshift({ path: '/dashboard', meta: { title: 'Dashboard' } })\n}\nthis.levelList = matched.filter(route => route.meta && route.meta.title && !route.meta.excludeFromBreadcrumb)\n}", "CodeBleu_score": 49.84609269709247}]}
{"instance_id": "4431fde0a559", "generation_result": [{"code": "destroyListener(){\n\t\tif (this.$_sidebarElm) {\n\t\tthis.$_sidebarElm.removeEventListener('transitionend', this.$_transitionEndHandler);\n\t}\n\twindow.removeEventListener('resize', this.$_resizeHandler);\n\tthis.$_resizeHandler = null;\n}", "CodeBleu_score": 41.10763566401199}, {"code": "destroyListener(){\n\t\tif (this.$_sidebarElm) {\n\t\tthis.$_sidebarElm.removeEventListener(this.transitionend, this.sidebarTransitionEnd);\n\t}\n\twindow.removeEventListener('resize', this.resizeHandler);\n\tthis.resizeHandler = null;\n}", "CodeBleu_score": 37.99350463900265}, {"code": "destroyListener(){\n\t\twindow.removeEventListener('resize', this.onResize);\n\tthis.$_sidebarElm.removeEventListener('transitionend', this.onTransitionEnd);\n\tthis.onResize = null;\n\tthis.onTransitionEnd = null;\n}", "CodeBleu_score": 36.61682112861531}]}
{"instance_id": "7215170e04cd", "generation_result": [{"code": "deleteEle(ele){\n\t. . . . }", "CodeBleu_score": 4.12804086822042}, {"code": "deleteEle(ele){\n\t. . . . }", "CodeBleu_score": 4.12804086822042}, {"code": "deleteEle(ele){\n\t. . . . }", "CodeBleu_score": 4.12804086822042}]}
{"instance_id": "b2acc5757074", "generation_result": [{"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\tconst result = []\nfor (const route of routes) {\nif (route.hidden) {\ncontinue\n}\nconst meta = route.meta || {}\nconst path = route.path || '/'\nconst name = route.name || ''\nconst title = (meta.title) ? meta.title : name\nconst data = {\npath: resolve(basePath, path),\ntitle: prefixTitle.concat(title)\n}\nif (meta.noRedirect) {\nresult.push(data)\n} else {\nresult.push(data)\n}\nif (route.children) {\nresult.push(...this.generateRoutes(route.children, data.path, data.title))\n}\n}\nreturn result\n}", "CodeBleu_score": 47.123745594012064}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\tconst result = []\nroutes.forEach(route => {\nconst metaTitle = route.meta && route.meta.title\nif (route.name && !route.meta.hidden) {\nconst data = {\npath: resolve(basePath, route.path),\ntitle: prefixTitle.concat(metaTitle || route.name).join(' | ')\n}\nif (route.children) {\nresult.push(...this.generateRoutes(route.children, data.path, data.title))\n}\nif (metaTitle && !route.meta.noRedirect) {\nresult.push(data)\n}\n}\n})\nreturn result\n}", "CodeBleu_score": 43.46634880554744}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\tconst result = []\nfor (const route of routes) {\nif (route.hidden) {\ncontinue\n}\nconst data = {\npath: route.path || '',\ntitle: route.meta && route.meta.title ? route.meta.title : '',\n}\nconst fullPath = path.resolve(basePath, data.path)\nconst resolvedPath = fullPath.replace(/\\/\\//g, '/')\ndata.path = resolvedPath\nif (route.children) {\ndata.children = this.generateRoutes(route.children, fullPath, prefixTitle.concat(data.title))\n}\nif (data.title && !route.meta.noRedirect) {\nresult.push(data)\n}\n}\nreturn result\n}", "CodeBleu_score": 49.208085688108184}]}
{"instance_id": "c4e47c376d30", "generation_result": [{"code": "closeSidebar(evt){\n\tif (!evt.target.closest('.rightPanel')) {\nthis.show = false;\nthis.sidebar.removeEventListener('click', this.closeSidebar);\n}\n}", "CodeBleu_score": 32.57109867266055}, {"code": "closeSidebar(evt){\n\t\tif (!evt.target.closest('.rightPanel')) {\n\t\tthis.show = false;\n\t\tthis.window.removeEventListener('click', this.closeSidebar);\n\t}\n}", "CodeBleu_score": 33.428755975891605}, {"code": "closeSidebar(evt){\n\t\tif (evt.target.closest('.rightPanel') === null) {\n\t\tthis.show = false;\n\t\tthis.shadowRoot.getElementById('rightPanel').removeEventListener('click', this.closeSidebar);\n\t}\n}", "CodeBleu_score": 31.770300442085535}]}
{"instance_id": "ab91e02736a1", "generation_result": [{"code": "click(){\n\t\tif (screenfull.enabled) {\n\t\tscreenfull.toggle();\n\t\tthis.$message = 'Fullscreen mode: ' + (screenfull.isFullscreen ? 'on' : 'off');\n\t} else {\n\t\tthis.$message = 'Your browser does not support fullscreen mode';\n\t}\n}", "CodeBleu_score": 21.63900926006664}, {"code": "click(){\n\t\tif (screenfull.enabled) {\n\t\tscreenfull.toggle()\n\t} else {\n\t\tthis.$message.error('your browser cannot work')\n\t}\n}", "CodeBleu_score": 22.773856668471154}, {"code": "click(){\n\tif (screenfull.enabled) {\nscreenfull.toggle();\nthis.$message = 'Fullscreen mode: ' + (screenfull.isFullscreen ? 'ON' : 'OFF');\n} else {\nthis.$message = 'Your browser does not support fullscreen mode';\n}\n}", "CodeBleu_score": 22.07376995318954}]}
{"instance_id": "3f27cb09d8c2", "generation_result": [{"code": "function checkPermission(el, binding) {\n\t\tconst permissionRoles = binding.value;\n\tconst userRoles = store.getters.roles;\n\tif (permissionRoles.some(role => userRoles.includes(role))) {\n\t\tel.parentNode.removeChild(el);\n\t} else {\n\t\tel.parentNode.removeChild(el);\n\t}\n}", "CodeBleu_score": 19.729409726413046}, {"code": "function checkPermission(el, binding) {\n\t\tconst roles = store.getters.roles;\n\tconst permissionRoles = binding.value;\n\tif (roles.some(role => permissionRoles.includes(role))) {\n\t\treturn;\n\t}\n\tel.parentNode.removeChild(el);\n}", "CodeBleu_score": 15.505891481937848}, {"code": "function checkPermission(el, binding) {\n\t\t// Get the roles from the store\n\tconst roles = store.getters.roles;\n\t// If the roles are not valid, throw an error\n\tif (!roles || !Array.isArray(roles)) {\n\t\tthrow new Error('Roles must be an array');\n\t}\n\t// If the binding value is not an array, throw an error\n\tif (!Array.isArray(binding.value)) {\n\t\tthrow new Error('Binding value must be an array');\n\t}\n\t// If the user does not have the required roles, remove the element from the DOM\n\tif (!roles.some(role => binding.value.includes(role))) {\n\t\tel.parentNode.removeChild(el);\n\t}\n}", "CodeBleu_score": 20.2653582336588}]}
{"instance_id": "04e47e771281", "generation_result": [{"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\tconst { email, password } = adminUser;\nconst invitee = await this.adminService.inviteUserToSignInViaEmail(\nemail,\npassword,\ninviteeEmail,\n);\nif (invitee.isLeft()) {\nthrowErr(invitee.value);\n}\nreturn invitee.value;\n}", "CodeBleu_score": 54.374169785202255}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\tconst invitee: InvitedUser = {\nemail: inviteeEmail,\n};\nconst inviteeResult = await this.adminService.inviteUserToSignInViaEmail(\nadminUser,\ninvitee,\n);\nif (inviteeResult.isLeft()) {\nthrowErr(inviteeResult.value);\n}\nreturn inviteeResult.value;\n}", "CodeBleu_score": 54.17872911019042}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\tconst { isLeft } = E.either.tryCatch(\n() => this.adminService.inviteUserToSignInViaEmail(adminUser, inviteeEmail),\nthrowErr,\n);\nif (isLeft(err)) {\nthrow new Error(err.value.message);\n}\nreturn err.value;\n}", "CodeBleu_score": 52.2224203380588}]}
{"instance_id": "3f25736bfbcd", "generation_result": [{"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\tconst redirectUri = req.query.redirectUri;\nconst code = req.query.code;\n\nif (!redirectUri) {\nthrow new BadRequestException('redirectUri is missing');\n}\n\nif (!code) {\nthrow new BadRequestException('code is missing');\n}\n\nconst authTokensOrError = await this.authService.generateAuthTokens(code, redirectUri);\n\nif (authTokensOrError.isLeft()) {\nconst error = authTokensOrError.value;\n\nif (error.errorType === AuthErrors.BAD_REQUEST_ERROR) {\nthrow new BadRequestException(error.errorValue.message);\n}\n\nif (error.errorType === AuthErrors.SERVER_ERROR) {\nthrow new InternalServerErrorException(error.errorValue.message);\n}\n\nthrow new UnprocessableEntityException(error.errorValue.message);\n}\n\nconst authTokens = authTokensOrError.value;\n\nconst redirectUriWithAccessToken = `${redirectUri}?accessToken=${authTokens.accessToken}`;\n\nres.cookie(AuthCookieNames.ACCESS_TOKEN, authTokens.accessToken, {\nhttpOnly: true,\nsecure: this.configService.isProduction(),\nmaxAge: AuthCookieMaxAge.ACCESS_TOKEN,\n});\n\nres.cookie(AuthCookieNames.REFRESH_TOKEN, authTokens.refreshToken, {\nhttpOnly: true,\nsecure: this.configService.isProduction(),\nmaxAge: AuthCookieMaxAge.REFRESH_TOKEN,\n});\n\nres.redirect(redirectUriWithAccessToken);\n}", "CodeBleu_score": 40.10388956870023}, {"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\tconst { code } = req.query;\nconst { redirectUri } = req.body;\n\nconst authResponse = await this.authService.googleAuthRedirect(code, redirectUri);\n\nif (authResponse.isLeft()) {\nreturn this.throwHTTPErr(res, authResponse.value);\n}\n\nconst { accessToken, refreshToken } = authResponse.value;\n\nconst setCookieOptions = {\nhttpOnly: true,\nsecure: process.env.NODE_ENV === 'production',\n};\n\nres.cookie('access_token', accessToken, setCookieOptions);\nres.cookie('refresh_token', refreshToken, setCookieOptions);\n\nres.redirect(redirectUri);\n}", "CodeBleu_score": 38.979277495326535}, {"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\tconst redirectURI = req.query.redirectURI;\nconst state = req.query.state;\nconst code = req.query.code;\nconst error = req.query.error;\nconst errorDesc = req.query.error_description;\n\nconst authTokens = await this.authService.generateAuthTokens(code, redirectURI, state);\n\nif (E.isLeft(authTokens)) {\nconst error = authTokens.value;\nreturn this.errorHandler.handle(error, res);\n}\n\nconst { accessToken, refreshToken } = authTokens.value;\n\nres.cookie('accessToken', accessToken, {\nhttpOnly: true,\nsecure: true,\nmaxAge: 1000 * 60 * 60 * 24 * 30,\n});\n\nres.cookie('refreshToken', refreshToken, {\nhttpOnly: true,\nsecure: true,\nmaxAge: 1000 * 60 * 60 * 24 * 30,\n});\n\nreturn res.redirect(redirectURI);\n}", "CodeBleu_score": 43.50132618325877}]}
{"instance_id": "52aa108e3521", "generation_result": [{"code": "const mousewheel = function(element, callback){\n\t\tif (element.addEventListener) {\n\t\telement.addEventListener('DOMMouseScroll', function(e) {\n\t\t\tcallback(e, normalizeWheel(e));\n\t\t});\n\t\telement.addEventListener('mousewheel', function(e) {\n\t\t\tcallback(e, normalizeWheel(e));\n\t\t});\n\t} else {\n\t\telement.attachEvent('onmousewheel', function(e) {\n\t\t\tcallback(e, normalizeWheel(e));\n\t\t});\n\t}\n}", "CodeBleu_score": 36.09157436258274}, {"code": "const mousewheel = function(element, callback){\n\t\tif (element.addEventListener) {\n\t\tif (element.addEventListener === undefined) {\n\t\t\telement.addEventListener = function(event, callback) {\n\t\t\t\telement.onmousewheel = callback;\n\t\t\t}\n\t\t}\n\t\telement.addEventListener('DOMMouseScroll', function(event) {\n\t\t\tconst normalizedEvent = normalizeWheel(event);\n\t\t\tcallback(normalizedEvent);\n\t\t});\n\t} else {\n\t\telement.attachEvent('onmousewheel', function(event) {\n\t\t\tconst normalizedEvent = normalizeWheel(event);\n\t\t\tcallback(normalizedEvent);\n\t\t});\n\t}\n}", "CodeBleu_score": 40.02978193945933}, {"code": "const mousewheel = function(element, callback){\n\t\tif (element.addEventListener) {\n\t\telement.addEventListener('DOMMouseScroll', function(e) {\n\t\t\tcallback(e, normalizeWheel(e));\n\t\t});\n\t\telement.addEventListener('mousewheel', function(e) {\n\t\t\tcallback(e, normalizeWheel(e));\n\t\t});\n\t} else {\n\t\telement.attachEvent('onmousewheel', function(e) {\n\t\t\tcallback(e, normalizeWheel(e));\n\t\t});\n\t}\n}", "CodeBleu_score": 36.09157436258274}]}
{"instance_id": "bb9e14122636", "generation_result": [{"code": "let i18nHandler = function(){\n\t\tif (typeof Vue.prototype.$t === 'function' && typeof Vue.locale === 'function') {\n\t\tif (!merged) {\n\t\t\tlet lang = Vue.locale.get(locale);\n\t\t\tmerge(lang, langData);\n\t\t\tVue.locale(locale, lang);\n\t\t\tmerged = true;\n\t\t}\n\t\treturn Vue.prototype.$t.apply(this, arguments);\n\t}\n}", "CodeBleu_score": 37.35434553501054}, {"code": "let i18nHandler = function(){\n\t\tif (typeof Vue.prototype.$t !== 'function') {\n\t\treturn;\n\t}\n\tif (!Vue.locale) {\n\t\treturn;\n\t}\n\tif (i18nHandler.merged) {\n\t\treturn Vue.prototype.$t.apply(this, arguments);\n\t}\n\tlet locale = Vue.locale();\n\tif (!locale) {\n\t\treturn;\n\t}\n\tlet messages = locale.messages;\n\tif (!messages) {\n\t\treturn;\n\t}\n\tlet language = locale.language;\n\tif (!language) {\n\t\treturn;\n\t}\n\tlet merged = deepmerge(messages[language], messages['en'], { arrayMerge: overwriteMerge });\n\tVue.locale(language, merged);\n\ti18nHandler.merged = true;\n\treturn Vue.prototype.$t.apply(this, arguments);\n}", "CodeBleu_score": 34.1119303506645}, {"code": "let i18nHandler = function(){\n\t\tif (typeof Vue.prototype.$t === 'function' && typeof Vue.locale === 'function') {\n\t\tif (this.merged === false) {\n\t\t\tthis.merged = true;\n\t\t\tthis.localeData = deepmerge(this.localeData, Vue.locale(this.locale));\n\t\t}\n\t\treturn Vue.prototype.$t.apply(this, arguments);\n\t}\n\treturn '';\n}", "CodeBleu_score": 31.630226646829318}]}
{"instance_id": "b0608b85127a", "generation_result": [{"code": "function broadcast(componentName, eventName, params){\n\t_c('broadcast', componentName, eventName, params)}", "CodeBleu_score": 9.412652986953399}, {"code": "function broadcast(componentName, eventName, params){\n\t_c('broadcast', componentName, eventName, params);\n  this.$children.forEach(function (child) {\n    var name = child.$options.name;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat(params));\n    }\n  });\n}", "CodeBleu_score": 69.56783910095092}, {"code": "function broadcast(componentName, eventName, params){\n\t_vm.$children.forEach(function (child) {if (child.$options.componentName === componentName) {child.$emit.apply(child, [eventName].concat(params));} else {broadcast.apply(null, [componentName, eventName].concat([params]));}});\n}", "CodeBleu_score": 36.81743410162836}]}
{"instance_id": "da57b9dc5023", "generation_result": [{"code": "aria.Utils.focusFirstDescendant = function(element){\n\t\tvar descendant = element.firstChild;\n\twhile (descendant) {\n\t\tif (aria.Utils.attemptFocus(descendant)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (aria.Utils.focusFirstDescendant(descendant)) {\n\t\t\treturn true;\n\t\t}\n\t\tdescendant = descendant.nextSibling;\n\t}\n\treturn false;\n}", "CodeBleu_score": 31.993188640195093}, {"code": "aria.Utils.focusFirstDescendant = function(element){\n\t\tvar focusableElements = ['A', 'AREA', 'BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'IFRAME'];\n\tfor (var i = 0, len = element.childNodes.length; i < len; i++) {\n\t\tvar child = element.childNodes[i];\n\t\tif (aria.Utils.isHTMLElement(child) && child.nodeType == 1 && focusableElements.indexOf(child.tagName.toUpperCase()) != -1) {\n\t\t\tif (aria.Utils.attemptFocus(child)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (aria.Utils.isHTMLElement(child) && aria.Utils.focusFirstDescendant(child)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}", "CodeBleu_score": 53.355889360674304}, {"code": "aria.Utils.focusFirstDescendant = function(element){\n\t\tvar descendants = element.getElementsByTagName('*');\n\tfor (var i = 0, len = descendants.length; i < len; i++) {\n\t\tif (aria.Utils.attemptFocus(descendants[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}", "CodeBleu_score": 44.83779660890775}]}
{"instance_id": "a029702e104d", "generation_result": [{"code": "highlight(index){\n\tif (this.suggestionsVisible && !this.loading) {\nconst suggestions = this.$refs.suggestions\nconst suggestionEls = suggestions.querySelectorAll(\".autocomplete__suggestion\")\nconst suggestionEl = suggestionEls[index]\nif (suggestionEl) {\nconst scrollTop = suggestions.scrollTop\nconst scrollBottom = scrollTop + suggestions.offsetHeight\nconst elTop = suggestionEl.offsetTop\nconst elBottom = elTop + suggestionEl.offsetHeight\nif (elTop < scrollTop) {\nsuggestions.scrollTop = elTop\n} else if (elBottom > scrollBottom) {\nsuggestions.scrollTop = elBottom - suggestions.offsetHeight\n}\n}\n}\nthis.highlightedIndex = index\nthis.$el.setAttribute(\"aria-activedescendant\", this.highlightedIndex)\n}", "CodeBleu_score": 34.88651945324332}, {"code": "highlight(index){\n\t// If there are no suggestions, do nothing.\nif (this.suggestions.length === 0) {\nreturn\n}\n\n// If the suggestions are not visible, do nothing.\nif (!this.suggestionsVisible) {\nreturn\n}\n\n// If the suggestions are loading, do nothing.\nif (this.loading) {\nreturn\n}\n\n// If the index is out of bounds, reset it to the first or last item.\nif (index < 0) {\nindex = 0\n} else if (index >= this.suggestions.length) {\nindex = this.suggestions.length - 1\n}\n\n// Adjust the scroll position to ensure the highlighted item is visible.\nconst suggestion = this.suggestions[index]\nconst container = this.$refs.suggestions.$el\nconst containerHeight = container.offsetHeight\nconst containerScrollTop = container.scrollTop\nconst containerScrollBottom = containerScrollTop + containerHeight\nconst suggestionTop = suggestion.offsetTop\nconst suggestionBottom = suggestionTop + suggestion.offsetHeight\n\nif (suggestionTop < containerScrollTop) {\n// Scroll up.\ncontainer.scrollTop = suggestionTop\n} else if (suggestionBottom > containerScrollBottom) {\n// Scroll down.\ncontainerScrollBottom = suggestionBottom\n}\n\n// Set the highlighted index.\nthis.highlightedIndex = index\n\n// Update the aria-activedescendant attribute.\nthis.updateAriaActiveDescendant()\n}", "CodeBleu_score": 44.39917231422829}, {"code": "highlight(index){\n\tif (!this.suggestionsVisible || this.loading) {\nreturn\n}\nconst suggestions = this.suggestions\nconst suggestionEls = suggestions.querySelectorAll('[data-index]')\nconst highlightedIndex = index\nconst highlightedSuggestionEl = suggestionEls[highlightedIndex]\nif (!highlightedSuggestionEl) {\nreturn\n}\nconst highlightedSuggestionIndex = parseInt(highlightedSuggestionEl.getAttribute('data-index'), 10)\nif (highlightedIndex !== this.highlightedIndex) {\nthis.highlightedIndex = highlightedIndex\nthis.highlightedSuggestion = suggestions.children[highlightedSuggestionIndex]\n}\nconst scrollTop = suggestions.scrollTop\nconst scrollBottom = scrollTop + suggestions.offsetHeight\nconst highlightedSuggestionTop = highlightedSuggestionEl.offsetTop\nconst highlightedSuggestionBottom = highlightedSuggestionTop + highlightedSuggestionEl.offsetHeight\nif (highlightedSuggestionTop < scrollTop) {\nsuggestions.scrollTop = highlightedSuggestionTop\n} else if (highlightedSuggestionBottom > scrollBottom) {\nsuggestions.scrollTop = highlightedSuggestionBottom - suggestions.offsetHeight\n}\nthis.suggestions.setAttribute('aria-activedescendant', highlightedSuggestionEl.id)\n}", "CodeBleu_score": 39.78890916353846}]}
{"instance_id": "2db32f7ad18f", "generation_result": [{"code": "translateItem(index, activeIndex, oldIndex){\n\tconst {", "CodeBleu_score": 2.4166115320573027}, {"code": "translateItem(index, activeIndex, oldIndex){\n\tconst {", "CodeBleu_score": 2.4166115320573027}, {"code": "translateItem(index, activeIndex, oldIndex){\n\tconst {", "CodeBleu_score": 2.4166115320573027}]}
{"instance_id": "49b9aa91f62e", "generation_result": [{"code": "handleButtonEnter(arrow){\n\t\tif (this.direction == 'vertical') {\n\t\treturn;\n\t}\n\tthis.items.forEach(item => {\n\t\tif (item.result == this.itemInStage) {\n\t\t\titem.hover = true;\n\t\t} else {\n\t\t\titem.hover = false;\n\t\t}\n\t});\n}", "CodeBleu_score": 55.30798747626733}, {"code": "handleButtonEnter(arrow){\n\tif (this.direction === 'vertical') {\nreturn;\n}\nthis.items.forEach(item => {\nif (item.itemInStage === arrow) {\nitem.hover = true;\n}\n});\n}", "CodeBleu_score": 59.46783155404039}, {"code": "handleButtonEnter(arrow){\n\t\tif (this.direction == 'vertical') return;\n\tthis.items.forEach(item => {\n\t\tif (item.itemInStage == arrow) item.hover = true;\n\t\telse item.hover = false;\n\t});\n}", "CodeBleu_score": 51.26939042548471}]}
{"instance_id": "85cdf6991b1f", "generation_result": [{"code": "scrollIntoView(){\n\t\tif (typeof window === 'undefined') return;\n\n\tconst menus = document.querySelectorAll(`.${this.menuClassName}`);\n\n\tmenus.forEach(menuElement => {\n\t\tconst scrollableElement = menuElement.querySelector(`.${this.scrollableClassName}`);\n\t\tconst activeItem = menuElement.querySelector(`.${this.activePathClassName}`);\n\n\t\tif (scrollableElement && activeItem) {\n\t\t\tscrollableElement.scrollIntoView(false);\n\t\t\tactiveItem.scrollIntoView(false);\n\t\t}\n\t});\n}", "CodeBleu_score": 39.37240251149481}, {"code": "scrollIntoView(){\n\tif (typeof window === 'undefined') {\nreturn;\n}\n\nconst menus = document.querySelectorAll('.menu-list');\n\nmenus.forEach((menuElement) => {\nconst scrollableElement = menuElement.querySelector('.menu-list__scrollable');\nconst activePath = menuElement.querySelector('.menu-list__item--active');\n\nif (activePath && scrollableElement) {\nscrollableElement.scrollIntoView(true);\n}\n});\n}", "CodeBleu_score": 33.18444475652215}, {"code": "scrollIntoView(){\n\tif (typeof window === 'undefined') return;\nconst menus = document.querySelectorAll('.ant-menu');\nmenus.forEach(menuElement => {\nconst activeItem = menuElement.querySelector('.ant-menu-item-active, .ant-menu-item-selected');\nif (activeItem) {\nconst activeItemPath = activeItem.parentElement.querySelectorAll('.ant-menu-item-active, .ant-menu-item-selected');\nconst firstActiveItem = activeItemPath[activeItemPath.length - 1];\nconst menu = menuElement.querySelector('.ant-menu-inner');\nconst activeMenu = menuElement.querySelector('.ant-menu-item-active, .ant-menu-item-selected');\nconst menuItems = menu.querySelectorAll('.ant-menu-item');\nconst activeMenuIndex = Array.prototype.indexOf.call(menuItems, activeMenu);\nconst lastMenuItem = menuItems[menuItems.length - 1];\nconst lastMenuItemIndex = Array.prototype.indexOf.call(menuItems, lastMenuItem);\nif (activeMenuIndex !== -1 && activeMenuIndex !== lastMenuItemIndex) {\nconst scrollableElement = menuElement.querySelector('.ant-menu-item-group-list');\nif (scrollableElement) {\nscrollableElement.scrollTop = activeMenu.offsetTop - scrollableElement.offsetTop;\n}\n} else {\nmenu.scrollTop = activeMenu.offsetTop - menu.offsetTop;\n}\n}\n});\n}", "CodeBleu_score": 33.5115042615473}]}
{"instance_id": "fc6784c79aa5", "generation_result": [{"code": "const rgb2hsv = function(r, g, b){\n\t\t// Normalize the RGB values to a range of 0 to 1\n\tr = r / 255;\n\tg = g / 255;\n\tb = b / 255;\n\n\t// Determine the maximum and minimum values\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\n\t// Calculate the value\n\tconst v = max;\n\n\t// Calculate the saturation\n\tconst s = max === 0 ? 0 : (max - min) / max;\n\n\t// Calculate the hue\n\tlet h = 0;\n\n\tif (max === min) {\n\t\th = 0; // achromatic\n\t} else {\n\t\tswitch (max) {\n\t\t\tcase r:\n\t\t\t\th = (g - b) / (max - min);\n\t\t\t\tbreak;\n\t\t\tcase g:\n\t\t\t\th = 2 + (b - r) / (max - min);\n\t\t\t\tbreak;\n\t\t\tcase b:\n\t\t\t\th = 4 + (r - g) / (max - min);\n\t\t\t\tbreak;\n\t\t}\n\t\th = h * 60;\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\t}\n\n\t// Multiply the hue by 360 and the saturation and value by 100\n\th = h * 360;\n\ts = s * 100;\n\tv = v * 100;\n\n\treturn {\n\t\th: h,\n\t\ts: s,\n\t\tv: v\n\t};\n}", "CodeBleu_score": 47.83992198781868}, {"code": "const rgb2hsv = function(r, g, b){\n\t\t// normalize the RGB values to a range of 0 to 1\n\tr = r / 255;\n\tg = g / 255;\n\tb = b / 255;\n\n\t// get the maximum and minimum values\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\n\t// get the value\n\tconst v = max;\n\n\t// get the saturation\n\tconst s = max - min;\n\n\t// get the hue\n\tlet h;\n\tif (s === 0) {\n\t\th = 0;\n\t} else {\n\t\tconst rIsMax = (max === r);\n\t\tconst gIsMax = (max === g);\n\t\tconst bIsMax = (max === b);\n\n\t\tif (rIsMax) {\n\t\t\th = (g - b) / s;\n\t\t} else if (gIsMax) {\n\t\t\th = 2 + (b - r) / s;\n\t\t} else if (bIsMax) {\n\t\t\th = 4 + (r - g) / s;\n\t\t}\n\n\t\th = h * 60;\n\n\t\tif (h < 0) {\n\t\t\th = h + 360;\n\t\t}\n\t}\n\n\t// return the HSV values\n\treturn [h * 360, s * 100, v * 100];\n}", "CodeBleu_score": 39.808228133713975}, {"code": "const rgb2hsv = function(r, g, b){\n\t\tr = r / 255;\n\tg = g / 255;\n\tb = b / 255;\n\tlet max = Math.max(r, g, b);\n\tlet min = Math.min(r, g, b);\n\tlet h, s, v = max;\n\tlet d = max - min;\n\ts = max == 0 ? 0 : d / max;\n\tif (max == min) {\n\t\th = 0; // achromatic\n\t} else {\n\t\tswitch (max) {\n\t\t\tcase r:\n\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\n\t\t\t\tbreak;\n\t\t\tcase g:\n\t\t\t\th = (b - r) / d + 2;\n\t\t\t\tbreak;\n\t\t\tcase b:\n\t\t\t\th = (r - g) / d + 4;\n\t\t\t\tbreak;\n\t\t}\n\t\th /= 6;\n\t}\n\treturn [h * 360, s * 100, v * 100];\n}", "CodeBleu_score": 57.7326634020605}]}
{"instance_id": "37b868b6a5cc", "generation_result": [{"code": "handleDrag(event){\n\t\tconst { top, left, width, height } = this.rect\n\tconst { clientX, clientY } = event\n\tconst x = clientX - left\n\tconst y = clientY - top\n\tconst max = Math.max(width, height)\n\tconst min = Math.min(width, height)\n\tconst alpha = Math.round(100 * (Math.max(0, Math.min(1, x / max)) - Math.max(0, Math.min(1, y / max))))\n\tthis.color.set('alpha', alpha)\n\tthis.update()\n}", "CodeBleu_score": 26.299896096057306}, {"code": "handleDrag(event){\n\tconst rect = this.el.getBoundingClientRect()\nconst pos = (this.vertical ? event.clientY : event.clientX) - rect.top\nconst norm = pos / rect.height\nconst alpha = Math.round(norm * 100)\nthis.color.set('alpha', alpha)\n}", "CodeBleu_score": 23.40415882081927}, {"code": "handleDrag(event){\n\tconst { clientX, clientY } = event\nconst { top, left, width, height } = this.rect\nconst { alpha } = this.color\nconst x = (clientX - left) / width\nconst y = (clientY - top) / height\nconst value = Math.round(Math.max(0, Math.min(1, alpha + (x - y) * 2)))\nthis.color.set('alpha', value)\nthis.emit('change', this.color.alpha)\n}", "CodeBleu_score": 21.923131758155456}]}
{"instance_id": "a3b2c61b5a1e", "generation_result": [{"code": "displayValue(){\n\t\tconst {\n\t\tformat,\n\t\ttype,\n\t\tparsedInput,\n\t\trangeSeparator,\n\t\tformattedValue,\n\t} = this.props;\n\tconst {\n\t\tvalue,\n\t\tvalues,\n\t} = parsedInput;\n\tif (Array.isArray(value)) {\n\t\treturn values || formattedValue.join(rangeSeparator);\n\t} else if (value !== null) {\n\t\treturn value;\n\t} else if (formattedValue) {\n\t\tif (type === 'date' || type === 'datetime-local') {\n\t\t\treturn formattedValue.join(rangeSeparator);\n\t\t} else {\n\t\t\treturn formattedValue;\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n}", "CodeBleu_score": 33.18687385191539}, {"code": "displayValue(){\n\t\tconst {\n\t\tformat,\n\t\ttype,\n\t\tvalue,\n\t\trangeSeparator,\n\t\tparsedInput,\n\t} = this.props;\n\tconst {\n\t\tdateFormat,\n\t\tdateFormatString,\n\t\tdatePickerType,\n\t\tdatePickerFormat,\n\t\tdatePickerOptions,\n\t\ttimeFormat,\n\t\ttimeFormatString,\n\t\ttimePickerType,\n\t\ttimePickerFormat,\n\t\ttimePickerOptions,\n\t\trangeStart,\n\t\trangeEnd,\n\t\trangeStartValue,\n\t\trangeEndValue,\n\t\trangeStartDisplayValue,\n\t\trangeEndDisplayValue,\n\t} = this.state;\n\n\t// if the user input is an array, return the user input values or formatted values\n\tif (Array.isArray(value)) {\n\t\tconst values = value.map((val) => {\n\t\t\tif (type === 'date' && val) {\n\t\t\t\treturn this.formatDate(val, dateFormatString, dateFormat);\n\t\t\t}\n\t\t\tif (type === 'time' && val) {\n\t\t\t\treturn this.formatTime(val, timeFormatString, timeFormat);\n\t\t\t}\n\t\t\tif (type === 'datetime' && val) {\n\t\t\t\treturn this.formatDateTime(\n\t\t\t\t\tval,\n\t\t\t\t\tdateFormatString,\n\t\t\t\t\tdateFormat,\n\t\t\t\t\ttimeFormatString,\n\t\t\t\t\ttimeFormat,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn val;\n\t\t});\n\t\treturn values.join(rangeSeparator);\n\t}\n\n\t// if the user input is not null, return the user input\n\tif (value) {\n\t\treturn value;\n\t}\n\n\t// if there is a formatted value, return it as a joined string for certain types or as is\n\tif (\n\t\trangeStartDisplayValue &&\n\t\trangeEndDisplayValue &&\n\t\trangeStartDisplayValue !== rangeEndDisplayValue\n\t) {\n\t\treturn rangeStartDisplayValue + rangeSeparator + rangeEndDisplayValue;\n\t}\n\tif (rangeStartDisplayValue) {\n\t\treturn rangeStartDisplayValue;\n\t}\n\tif (rangeEndDisplayValue) {\n\t\treturn rangeEndDisplayValue;\n\t}\n\n\t// if none of these conditions are met, return an empty string\n\treturn '';\n}", "CodeBleu_score": 24.622677553025923}, {"code": "displayValue(){\n\t\tconst { format, type, rangeSeparator } = this.props;\n\tconst { parsedInput, formattedValue } = this.state;\n\n\tif (Array.isArray(parsedInput)) {\n\t\tif (format && type) {\n\t\t\treturn parsedInput.map((value) => format(value, format, type, rangeSeparator));\n\t\t}\n\t\treturn parsedInput;\n\t}\n\n\tif (parsedInput !== null) {\n\t\treturn parsedInput;\n\t}\n\n\tif (formattedValue) {\n\t\tif (Array.isArray(formattedValue)) {\n\t\t\treturn formattedValue.join(rangeSeparator);\n\t\t}\n\t\treturn formattedValue;\n\t}\n\n\treturn '';\n}", "CodeBleu_score": 30.684514310372474}]}
{"instance_id": "305dba2399e1", "generation_result": [{"code": "handleStartChange(event){\n\t\tconst newValue = this.parseString(event.target.value);\n\tif (newValue === null) {\n\t\treturn;\n\t}\n\tconst [startValue, endValue] = this.userInput;\n\tthis.userInput = [newValue, endValue];\n\tthis.picker.value = [newValue, endValue];\n\tif (this.isValidValue(newValue)) {\n\t\tthis.emitInput(newValue);\n\t\tthis.userInput = null;\n\t}\n}", "CodeBleu_score": 45.20875609068761}, {"code": "handleStartChange(event){\n\t\tconst parsedValue = this.parseString(event.target.value);\n\tif (parsedValue) {\n\t\tthis.userInput[0] = this.formatToString(parsedValue);\n\t\tthis.userInput[1] = this.endDisplay;\n\t\tthis.picker.value = this.getValueFromInput(this.userInput);\n\t\tif (this.isValidValue(this.picker.value)) {\n\t\t\tthis.emitInput(this.picker.value);\n\t\t\tthis.userInput = null;\n\t\t}\n\t}\n}", "CodeBleu_score": 40.22449355744241}, {"code": "handleStartChange(event){\n\t\tconst newValue = this.parseString(event.target.value);\n\tconst [start, end] = this.userInput;\n\tthis.userInput = [newValue, end];\n\tthis.picker.setValue([newValue, end]);\n\tif (this.isValidValue([newValue, end])) {\n\t\tthis.emitInput([newValue, end]);\n\t\tthis.userInput = null;\n\t}\n}", "CodeBleu_score": 34.786740896404886}]}
{"instance_id": "0f76d5fb83b3", "generation_result": [{"code": "bindScrollEvent(){\n\t\tconst elements = [this.hours, this.minutes, this.seconds];\n\tconst bindFunction = (element) => {\n\t\telement.wrap.onscroll = () => this.handleScroll(element.type, element.wrap.scrollTop);\n\t};\n\telements.forEach(bindFunction);\n}", "CodeBleu_score": 36.34705507916885}, {"code": "bindScrollEvent(){\n\t\tlet bindFunction = function(type) {\n\t\tthis.wrap.onscroll = function(e) {\n\t\t\tthis.handleScroll(type, e)\n\t\t}.bind(this)\n\t}.bind(this)\n\n\tbindFunction('hours')\n\tbindFunction('minutes')\n\tbindFunction('seconds')\n}", "CodeBleu_score": 49.43152562353896}, {"code": "bindScrollEvent(){\n\t\tconst elements = [this.hours, this.minutes, this.seconds];\n\tconst bindFunction = (element, type) => {\n\t\telement.wrap.addEventListener(type, (event) => {\n\t\t\tthis.handleScroll(type, event);\n\t\t});\n\t};\n\telements.forEach((element) => {\n\t\tbindFunction(element, \"wheel\");\n\t\tbindFunction(element, \"touchmove\");\n\t});\n}", "CodeBleu_score": 42.92918739272258}]}
{"instance_id": "fe8ad366d911", "generation_result": [{"code": "scrollDown(step){\n\t\tif (this.activeScrollbar === 'hours') {\n\t\tlet i = this.hours.indexOf(this.hoursSelected)\n\t\twhile (true) {\n\t\t\ti = (i + step) % this.hours.length\n\t\t\tif (this.hours[i] !== undefined) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tthis.hoursSelected = this.hours[i]\n\t} else if (this.activeScrollbar === 'minutes') {\n\t\tlet i = this.minutes.indexOf(this.minutesSelected)\n\t\twhile (true) {\n\t\t\ti = (i + step) % this.minutes.length\n\t\t\tif (this.minutes[i] !== undefined) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tthis.minutesSelected = this.minutes[i]\n\t} else {\n\t\tlet i = this.hours.indexOf(this.hoursSelected)\n\t\tlet j = this.minutes.indexOf(this.minutesSelected)\n\t\tlet h = this.hours[i]\n\t\tlet m = this.minutes[j]\n\t\tif (this.activeScrollbar === 'hours') {\n\t\t\th = (h + step) % 24\n\t\t\tm = 0\n\t\t} else {\n\t\t\tm = (m + step) % 60\n\t\t}\n\t\tif (h !== undefined) {\n\t\t\tthis.hoursSelected = h\n\t\t}\n\t\tif (m !== undefined) {\n\t\t\tthis.minutesSelected = m\n\t\t}\n\t}\n\tthis.modifyDateField()\n\tthis.adjustSpinner()\n\tthis.emitSelectRange()\n}", "CodeBleu_score": 25.183613537041428}, {"code": "scrollDown(step){\n\tif (this.activeScrollbar === 'hours') {\nlet i = this.hours.indexOf(this.currentHour)\ndo {\ni += step\nif (i >= this.hours.length) {\ni = 0\n}\nif (i < 0) {\ni = this.hours.length - 1\n}\nthis.currentHour = this.hours[i]\n} while (this.hours[i] === -1)\n} else if (this.activeScrollbar === 'minutes') {\nthis.currentMinute += step\nif (this.currentMinute >= 60) {\nthis.currentMinute = 0\n}\nif (this.currentMinute < 0) {\nthis.currentMinute = 59\n}\n} else if (this.activeScrollbar === 'seconds') {\nthis.currentSecond += step\nif (this.currentSecond >= 60) {\nthis.currentSecond = 0\n}\nif (this.currentSecond < 0) {\nthis.currentSecond = 59\n}\n} else {\nreturn\n}\nthis.emitSelectRange()\nthis.modifyDateField()\nthis.adjustSpinner()\n}", "CodeBleu_score": 24.42837864271801}, {"code": "scrollDown(step){\n\t\tif (this.activeScrollbar === 'hours') {\n\t\tlet i = this.hours.indexOf(this.date.getHours());\n\t\tlet newIndex = i + step;\n\t\tif (newIndex < 0) {\n\t\t\tnewIndex = 0;\n\t\t} else if (newIndex >= this.hours.length) {\n\t\t\tnewIndex = this.hours.length - 1;\n\t\t}\n\t\tthis.date.setHours(this.hours[newIndex]);\n\t} else {\n\t\tlet i = this.minutes.indexOf(this.date.getMinutes());\n\t\tlet newIndex = i + step;\n\t\tif (newIndex < 0) {\n\t\t\tnewIndex = 0;\n\t\t} else if (newIndex >= this.minutes.length) {\n\t\t\tnewIndex = this.minutes.length - 1;\n\t\t}\n\t\tthis.date.setMinutes(this.minutes[newIndex]);\n\t}\n\tthis.updateDateField();\n\tthis.adjustSpinner();\n\tthis.emitSelectRange();\n}", "CodeBleu_score": 24.772940921390507}]}
{"instance_id": "9b22163fdfde", "generation_result": [{"code": "imgStyle(){\n\t\tconst {scale, rotation, offsetX, offsetY, mode} = this.props;\n\tconst style = {\n\t\ttransform: `scale(${scale}) rotate(${rotation}deg)`,\n\t\ttransition: this.props.transition ? `transform ${this.props.transition}ms ease` : null,\n\t};\n\n\tif (mode === 'CONTAIN') {\n\t\tstyle.maxWidth = '100%';\n\t\tstyle.maxHeight = '100%';\n\t}\n\n\tif (offsetX !== 0 || offsetY !== 0) {\n\t\tstyle.transform += ` translate(${offsetX}px, ${offsetY}px)`;\n\t}\n\n\treturn style;\n}", "CodeBleu_score": 53.592544421817955}, {"code": "imgStyle(){\n\t\tvar style = {};\n\tif (this.props.scale !== 1) {\n\t\tstyle.transform = 'scale(' + this.props.scale + ')';\n\t}\n\tif (this.props.rotation !== 0) {\n\t\tstyle.transform += ' rotate(' + this.props.rotation + 'deg)';\n\t}\n\tif (this.props.offsetX !== 0 || this.props.offsetY !== 0) {\n\t\tstyle.transform += ' translate(' + this.props.offsetX + 'px, ' + this.props.offsetY + 'px)';\n\t}\n\tif (this.props.mode === 'CONTAIN') {\n\t\tstyle.maxWidth = '100%';\n\t\tstyle.maxHeight = '100%';\n\t}\n\tif (this.props.transition) {\n\t\tstyle.transition = 'transform ' + this.props.transitionTime + 's';\n\t}\n\treturn style;\n}", "CodeBleu_score": 24.309078113959067}, {"code": "imgStyle(){\n\t\tvar style = {};\n\tvar transform = \"translate(\" + this.offsetX + \"px, \" + this.offsetY + \"px) rotate(\" + this.rotation + \"deg) scale(\" + this.scale + \")\";\n\tif (this.transition) {\n\t\tstyle[\"transition\"] = \"transform \" + this.transition + \"ms\";\n\t}\n\tstyle[\"transform\"] = transform;\n\tif (this.mode == \"CONTAIN\") {\n\t\tstyle[\"maxWidth\"] = \"100%\";\n\t\tstyle[\"maxHeight\"] = \"100%\";\n\t}\n\treturn style;\n}", "CodeBleu_score": 22.26547066958143}]}
{"instance_id": "3bf2230ab870", "generation_result": [{"code": "addLazyLoadListener(){\n\t\tif (typeof window === 'undefined') {\n\t\treturn;\n\t}\n\tconst scrollContainer = this.getScrollContainer();\n\tif (scrollContainer) {\n\t\tconst handler = this.throttle(this.handleLazyLoad, 50);\n\t\tscrollContainer.addEventListener('scroll', handler);\n\t\thandler();\n\t}\n}", "CodeBleu_score": 19.520137264221034}, {"code": "addLazyLoadListener(){\n\tif (typeof window === 'undefined') {\nreturn;\n}\nconst scrollContainer = this.getScrollContainer();\nif (scrollContainer) {\nconst throttledLazyLoadHandler = throttle(this.handleLazyLoad, 50);\nscrollContainer.addEventListener('scroll', throttledLazyLoadHandler);\nthrottledLazyLoadHandler();\n}\n}", "CodeBleu_score": 21.02424509491042}, {"code": "addLazyLoadListener(){\n\tif (typeof window === 'undefined') {\nreturn;\n}\nconst scrollContainer = this.getScrollContainer();\nif (!scrollContainer) {\nreturn;\n}\nconst handler = this.throttle(this.handleLazyLoad, 200);\nscrollContainer.addEventListener('scroll', handler);\nhandler();\n}", "CodeBleu_score": 19.091489184401293}]}
{"instance_id": "7180fba29076", "generation_result": [{"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\tconst error = result.error;\nif (isTRPCClientError(error)) {\nconst newError = new TRPCClientError(error.message, error.data, error.code);\nreturn {\n...result,\nerror: newError,\n};\n}\nreturn result;\n}", "CodeBleu_score": 34.97816717013138}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\tconst error = result.error;\nif (error && isTRPCClientError(error)) {\nreturn {\n...result,\nerror: new TRPCError(error.message, error.data),\n};\n}\nreturn result;\n}", "CodeBleu_score": 24.21185458364793}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\tconst error = result.error;\nif (error && isTRPCClientError(error)) {\nreturn {\n...result,\nerror: new TRPCError(error.message, error.data, error.code),\n};\n}\nreturn result;\n}", "CodeBleu_score": 25.62311383330461}]}
{"instance_id": "b0ff12e8aa0d", "generation_result": [{"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t\tconst { ctx, Component } = appOrPageCtx;\n\tconst props = Component.getInitialProps ? await Component.getInitialProps(appOrPageCtx) : {};\n\tconst trpcClient = createTRPCClient(ctx.req.headers);\n\tconst trpcContext = createTRPCClientContext({ ctx });\n\tconst trpcQuery = trpcClient.query(ctx.req.url.pathname, ctx.req.query, trpcContext);\n\tconst trpcResponse = await trpcQuery;\n\tconst pageProps = {\n\t\t...props,\n\t\ttrpcState: trpcResponse.state,\n\t\ttrpcQuery: trpcResponse.query,\n\t};\n\treturn pageProps;\n}", "CodeBleu_score": 27.729006470010596}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t\tconst { ctx, Component } = appOrPageCtx;\n\tconst trpcCtx = await getTRPCContext(ctx);\n\n\t// get props from the wrapped component\n\tlet props = {};\n\tif (Component.getInitialProps) {\n\t\tprops = await Component.getInitialProps(appOrPageCtx);\n\t}\n\n\t// merge trpc context with props\n\treturn {\n\t\t...props,\n\t\ttrpcCtx,\n\t};\n}", "CodeBleu_score": 13.946929342968184}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t\tconst { ctx, Component } = appOrPageCtx;\n\tconst props = Component.getInitialProps ? await Component.getInitialProps(appOrPageCtx) : {};\n\tconst trpcCtx = createTRPCClient(ctx.req.headers.host);\n\treturn { ...props, trpcCtx };\n}", "CodeBleu_score": 17.6677526310684}]}
{"instance_id": "b46c87572278", "generation_result": [{"code": "export function formDataToObject(formData: FormData){\n\t\tconst result: Record<string, any> = {};\n\tfor (const [key, value] of formData.entries()) {\n\t\tlet current = result;\n\t\tconst parts = key.split(/[\\.\\[\\]]/).filter(Boolean);\n\t\tfor (const part of parts) {\n\t\t\tif (part.endsWith('[]')) {\n\t\t\t\tpart = part.slice(0, -2);\n\t\t\t\tif (!Array.isArray(current[part])) {\n\t\t\t\t\tcurrent[part] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (part in current) {\n\t\t\t\tif (typeof current[part] === 'object') {\n\t\t\t\t\tcurrent = current[part];\n\t\t\t\t} else {\n\t\t\t\t\tcurrent[part] = {\n\t\t\t\t\t\t[part]: current[part],\n\t\t\t\t\t};\n\t\t\t\t\tcurrent = current[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrent[part] = {};\n\t\t\t\tcurrent = current[part];\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(current[parts[parts.length - 1]])) {\n\t\t\tcurrent[parts[parts.length - 1]].push(value);\n\t\t} else if (current[parts[parts.length - 1]] !== undefined) {\n\t\t\tcurrent[parts[parts.length - 1]] = [\n\t\t\t\tcurrent[parts[parts.length - 1]],\n\t\t\t\tvalue,\n\t\t\t];\n\t\t} else {\n\t\t\tcurrent[parts[parts.length - 1]] = value;\n\t\t}\n\t}\n\treturn result;\n}", "CodeBleu_score": 54.3048931121076}, {"code": "export function formDataToObject(formData: FormData){\n\t\tconst result: Record<string, unknown> = {};\n\tformData.forEach((value, key) => {\n\t\tconst parts = key.split(/[\\.\\[\\]]/).filter(Boolean);\n\t\tconst lastPart = parts.pop()!;\n\t\tlet current: Record<string, unknown> = result;\n\t\tfor (const part of parts) {\n\t\t\tif (!current[part]) {\n\t\t\t\tcurrent[part] = {};\n\t\t\t}\n\t\t\tcurrent = current[part] as Record<string, unknown>;\n\t\t}\n\t\tcurrent[lastPart] = value;\n\t});\n\treturn result;\n}", "CodeBleu_score": 56.92606576517666}, {"code": "export function formDataToObject(formData: FormData){\n\t\tconst result = {};\n\n\tfor (const [key, value] of formData.entries()) {\n\t\tconst keyParts = key.split(/[\\.\\[\\]]/).filter((part) => part !== \"\");\n\n\t\tlet current = result;\n\t\tfor (let i = 0; i < keyParts.length - 1; i++) {\n\t\t\tconst part = keyParts[i];\n\t\t\tif (!current[part]) {\n\t\t\t\tcurrent[part] = {};\n\t\t\t}\n\t\t\tcurrent = current[part];\n\t\t}\n\t\tcurrent[keyParts[keyParts.length - 1]] = value;\n\t}\n\n\treturn result;\n}", "CodeBleu_score": 49.19703369129223}]}
{"instance_id": "b63467546c58", "generation_result": [{"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t\tconst cacheTag = req.json?.cacheTag\n\tif (typeof cacheTag !== 'string') {\n\t\treturn {\n\t\t\tbody: JSON.stringify({\n\t\t\t\terror: 'Invalid cache tag',\n\t\t\t}),\n\t\t\tstatus: 400,\n\t\t}\n\t}\n\trevalidateTag(cacheTag)\n\treturn {\n\t\tbody: JSON.stringify({\n\t\t\tsuccess: 'Tag revalidated',\n\t\t\ttimestamp: Date.now(),\n\t\t}),\n\t\tstatus: 200,\n\t}\n}", "CodeBleu_score": 37.35083559737192}, {"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t\ttry {\n\t\tconst cacheTag = req.json.cacheTag\n\t\tif (typeof cacheTag !== \"string\") {\n\t\t\treturn {\n\t\t\t\tstatus: 400,\n\t\t\t\tbody: {\n\t\t\t\t\tmessage: \"cacheTag must be a string\",\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t\tconst timestamp = Date.now()\n\t\tconst result = await revalidateTag(cacheTag)\n\t\treturn {\n\t\t\tstatus: 200,\n\t\t\tbody: {\n\t\t\t\tmessage: \"success\",\n\t\t\t\ttimestamp,\n\t\t\t\tresult,\n\t\t\t},\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\treturn {\n\t\t\tstatus: 500,\n\t\t\tbody: {\n\t\t\t\tmessage: \"internal server error\",\n\t\t\t},\n\t\t}\n\t}\n}", "CodeBleu_score": 33.64713471030758}, {"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t\tconst body = await req.json()\n\tconst { cacheTag } = body\n\n\tif (typeof cacheTag !== 'string') {\n\t\treturn {\n\t\t\tbody: JSON.stringify({\n\t\t\t\tsuccess: false,\n\t\t\t\tmessage: 'Invalid cacheTag',\n\t\t\t}),\n\t\t\tstatus: 400,\n\t\t}\n\t}\n\n\tconst revalidateResult = await revalidateTag(cacheTag)\n\n\treturn {\n\t\tbody: JSON.stringify({\n\t\t\tsuccess: true,\n\t\t\tmessage: 'Cache tag revalidated',\n\t\t\ttimestamp: Date.now(),\n\t\t\trevalidateResult,\n\t\t}),\n\t\tstatus: 200,\n\t}\n}", "CodeBleu_score": 47.09703573180792}]}
{"instance_id": "4cc5d9754d1f", "generation_result": [{"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t\treturn <TProcedure extends ProcedureRecord<TRouter>>(\n\t\tclient: TRPCClient<TRouter>,\n\t\topts: UseProxyOptions<TRouter, TProcedure>,\n\t) => {\n\t\treturn createRecursiveProxy(\n\t\t\topts.path,\n\t\t\topts.procedure,\n\t\t\t(path, args) => client.query(path, args),\n\t\t)\n\t}\n}", "CodeBleu_score": 34.16772197506248}, {"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t\treturn function useProxy<TQuery extends AnyRouter, TPath extends AnyRouter>(\n\t\tclient: TRPCClient<TRouter>,\n\t\toptions: UseProxyOptions<TQuery, TPath>,\n\t) {\n\t\tconst { path, query, ...restOptions } = options;\n\t\tconst queryProxy = createRecursiveProxy(\n\t\t\tclient.query,\n\t\t\t{\n\t\t\t\t...restOptions,\n\t\t\t\tpath: [...path, query],\n\t\t\t},\n\t\t);\n\t\treturn queryProxy;\n\t};\n}", "CodeBleu_score": 28.444857983834744}, {"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t\treturn <TProcedure extends ProcedureRecord>(\n\t\tclient: TRouter,\n\t\topts: UseProxyOptions<TRouter, TProcedure>,\n\t): UseProxyResult<TRouter, TProcedure> => {\n\t\tconst { path, procedure } = opts\n\t\tconst pathString = opts.path.join('/')\n\t\tconst pathWithProcedure = [pathString, procedure]\n\n\t\treturn createRecursiveProxy(\n\t\t\tclient,\n\t\t\t{\n\t\t\t\tpath: pathWithProcedure,\n\t\t\t\tprocedure,\n\t\t\t},\n\t\t\topts.path,\n\t\t)\n\t}\n}", "CodeBleu_score": 34.251115804387275}]}
{"instance_id": "ec07b15792dd", "generation_result": [{"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t\tconst [isOpen, setIsOpen] = React.useState(false);\n\n\tconst handleClick = () => setIsOpen((prev) => !prev);\n\n\treturn (\n\t\t<AccordionPrimitive.Root\n\t\t\t{...getRootProps({\n\t\t\t\t'aria-label': name,\n\t\t\t\t'aria-expanded': isOpen,\n\t\t\t\t'aria-controls': name,\n\t\t\t})}\n\t\t\toverrides={{\n\t\t\t\tRoot: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tContent: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t<AccordionPrimitive.Trigger asChild>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"minimal\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tendIcon={\n\t\t\t\t\t\tisOpen ? <ChevronUpIcon /> : <ChevronDownIcon />\n\t\t\t\t\t}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t>\n\t\t\t\t\t{name}\n\t\t\t\t</Button>\n\t\t\t</AccordionPrimitive.Trigger>\n\t\t\t<AccordionPrimitive.Content\n\t\t\t\t{...getContentProps({\n\t\t\t\t\t'aria-label': name,\n\t\t\t\t\t'aria-hidden': !isOpen,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{child}\n\t\t\t</AccordionPrimitive.Content>\n\t\t</AccordionPrimitive.Root>\n\t);\n}", "CodeBleu_score": 29.50203683085451}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t\tconst [open, setOpen] = React.useState(false);\n\n\tconst toggleOpen = () => setOpen((prev) => !prev);\n\n\treturn (\n\t\t<AccordionPrimitive.Root\n\t\t\tuuid={name}\n\t\t\t{...{ open }}\n\t\t\t{...{ onToggle: toggleOpen }}\n\t\t\t{...{\n\t\t\t\t// The `Content` component wraps the `AccordionPanel`\n\t\t\t\t// and is used to apply the `content` styles.\n\t\t\t\tcontent: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborderTop: '1px solid #dadde9',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t// The `Trigger` component wraps the `AccordionButton`\n\t\t\t\t// and is used to apply the `trigger` styles.\n\t\t\t\ttrigger: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborderBottom: '1px solid #dadde9',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t{{\n\t\t\t\ttrigger: (\n\t\t\t\t\t<AccordionPrimitive.Trigger as={Button} variant=\"subtle\">\n\t\t\t\t\t\t{name}\n\t\t\t\t\t\t<AccordionPrimitive.Icon />\n\t\t\t\t\t</AccordionPrimitive.Trigger>\n\t\t\t\t),\n\t\t\t\tcontent: (\n\t\t\t\t\t<AccordionPrimitive.Content>\n\t\t\t\t\t\t<div>{child}</div>\n\t\t\t\t\t</AccordionPrimitive.Content>\n\t\t\t\t),\n\t\t\t}}\n\t\t</AccordionPrimitive.Root>\n\t);\n}", "CodeBleu_score": 38.630979596154724}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t\tconst [open, setOpen] = React.useState(false);\n\tconst accordionPrimitive = React.useRef(null);\n\n\tconst handleClick = () => {\n\t\tsetOpen(!open);\n\t\taccordionPrimitive.current.focus();\n\t};\n\n\treturn (\n\t\t<AccordionPrimitive.Root\n\t\t\t{...getRootProps({ refKey: 'ref' })}\n\t\t\tclassName=\"accordion\"\n\t\t\torientation=\"vertical\"\n\t\t\tonAction={handleClick}\n\t\t\toverrides={{\n\t\t\t\tRoot: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\tborder: '1px solid #e6e6e6',\n\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tContent: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tpadding: '0 1rem',\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tTrigger: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tpadding: '1rem',\n\t\t\t\t\t\tborderBottom: '1px solid #e6e6e6',\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\tbackgroundColor: '#f5f5f5',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tPanel: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tpadding: '0',\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t<AccordionPrimitive.Trigger className=\"accordion__trigger\">\n\t\t\t\t<div className=\"accordion__trigger__name\">{name}</div>\n\t\t\t\t<div className=\"accordion__trigger__icon\">\n\t\t\t\t\t<ChevronDownIcon />\n\t\t\t\t</div>\n\t\t\t</AccordionPrimitive.Trigger>\n\t\t\t<AccordionPrimitive.Content className=\"accordion__content\">\n\t\t\t\t<div className=\"accordion__content__inner\">{child}</div>\n\t\t\t</AccordionPrimitive.Content>\n\t\t</AccordionPrimitive.Root>\n\t);\n}", "CodeBleu_score": 26.974061344612522}]}
{"instance_id": "728fa96ca3cf", "generation_result": [{"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t\tconst [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n\treturn (\n\t\t<MenuPrimitive.Root\n\t\t\tonOpenChange={(open) => setIsMenuOpen(open)}\n\t\t\ttrigger={\n\t\t\t\t<MenuButton\n\t\t\t\t\ticon={icon}\n\t\t\t\t\tname={name}\n\t\t\t\t\tchevron={chevron}\n\t\t\t\t\tbuttonPosition={buttonPosition}\n\t\t\t\t/>\n\t\t\t}\n\t\t\topen={isMenuOpen}\n\t\t\tplacement=\"bottom-start\"\n\t\t>\n\t\t\t<MenuPrimitive.Content>\n\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t<MenuPrimitive.Item\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\tto={item.to}\n\t\t\t\t\t\tonClick={item.onClick}\n\t\t\t\t\t\ticon={item.icon}\n\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t>\n\t\t\t\t\t\t{item.children}\n\t\t\t\t\t</MenuPrimitive.Item>\n\t\t\t\t))}\n\t\t\t</MenuPrimitive.Content>\n\t\t</MenuPrimitive.Root>\n\t);\n}", "CodeBleu_score": 20.845102970443037}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t\tconst [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\tconst menuButton = (\n\t\t<MenuButton\n\t\t\ticon={icon}\n\t\t\tname={name}\n\t\t\tonClick={() => setIsMenuOpen(true)}\n\t\t\tbuttonPosition={buttonPosition}\n\t\t/>\n\t);\n\tconst menuItems = <MenuPrimitive.Items>{items}</MenuPrimitive.Items>;\n\tconst menu = (\n\t\t<MenuPrimitive.Root\n\t\t\tonDismiss={() => setIsMenuOpen(false)}\n\t\t\t{...menuProps}\n\t\t\t{...menuButton}\n\t\t\t{...menuItems}\n\t\t/>\n\t);\n\treturn isMenuOpen ? menu : menuButton;\n}", "CodeBleu_score": 21.43009985275282}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t\tconst [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\tconst menuButtonRef = React.useRef<HTMLButtonElement>(null);\n\tconst menuItemsRef = React.useRef<HTMLDivElement>(null);\n\tconst menuButtonId = useId(\"menu-button\");\n\tconst menuItemsId = useId(\"menu-items\");\n\tconst menuButtonLabel = `${name} menu`;\n\tconst menuItemsLabel = `${name} menu items`;\n\tconst menuButtonAriaLabel = `${name} menu button`;\n\tconst menuItemsAriaLabel = `${name} menu items`;\n\tconst menuButtonAriaControls = menuItemsId;\n\tconst menuItemsAriaOwns = menuButtonId;\n\tconst menuButtonAriaExpanded = isMenuOpen;\n\tconst menuItemsAriaHidden = !isMenuOpen;\n\tconst menuButtonType = \"button\";\n\tconst menuButtonTabIndex = 0;\n\tconst menuButtonRole = \"menu\";\n\tconst menuButtonAriahaspopup = true;\n\tconst menuButtonOnKeyDown = (event: React.KeyboardEvent<HTMLButtonElement>) => {\n\t\tif (event.key === \"Enter\" || event.key === \" \") {\n\t\t\tevent.preventDefault();\n\t\t\tsetIsMenuOpen(true);\n\t\t}\n\t};\n\tconst menuButtonOnKeyUp = (event: React.KeyboardEvent<HTMLButtonElement>) => {\n\t\tif (event.key === \"Enter\" || event.key === \" \") {\n\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\tconst menuButtonOnBlur = (event: React.FocusEvent<HTMLButtonElement>) => {\n\t\tif (isMenuOpen) {\n\t\t\tsetIsMenuOpen(false);\n\t\t}\n\t};\n\tconst menuButtonOnFocus = (event: React.FocusEvent<HTMLButtonElement>) => {\n\t\tif (!isMenuOpen) {\n\t\t\tsetIsMenuOpen(true);\n\t\t}\n\t};\n\tconst menuButtonOnClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tevent.preventDefault();\n\t\tsetIsMenuOpen(true);\n\t};\n\tconst menuButtonOnMouseEnter = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tif (!isMenuOpen) {\n\t\t\tsetIsMenuOpen(true);", "CodeBleu_score": 13.014715967661544}]}
{"instance_id": "a2733fb19224", "generation_result": [{"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t\tconst scrollTop = event.currentTarget.scrollTop;\n\tconst scrollHeight = event.currentTarget.scrollHeight;\n\tconst clientHeight = event.currentTarget.clientHeight;\n\n\tif (scrollTop + clientHeight >= scrollHeight - 10) {\n\t\tsetHasUserScrolled(true);\n\t} else {\n\t\tsetHasUserScrolled(false);\n\t}\n}", "CodeBleu_score": 32.98625282175088}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t\tconst element = event.currentTarget;\n\tconst hasUserScrolled = hasUserScrolledUp(element);\n\tsetUserScrolled(hasUserScrolled);\n}", "CodeBleu_score": 39.05150690056185}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t\tconst scrollTop = event.currentTarget.scrollTop\n\tconst scrollHeight = event.currentTarget.scrollHeight\n\tconst clientHeight = event.currentTarget.clientHeight\n\n\tif (scrollTop + clientHeight >= scrollHeight - 10) {\n\t\tsetHasUserScrolled(true)\n\t}\n}", "CodeBleu_score": 36.17589473603471}]}
{"instance_id": "128baf9be3e8", "generation_result": [{"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t\tif (scrollRef && scrollRef.current) {\n\t\tscrollToBottom({\n\t\t\tscrollRef: scrollRef.current,\n\t\t\tscrollContainer: scrollContainer.current,\n\t\t\tbehavior: behaviour,\n\t\t})\n\t}\n}", "CodeBleu_score": 40.11822780003}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t\tif (scrollRef.current && scrollRef.current.scrollTo) {\n\t\tscrollToBottom(scrollRef.current, behaviour)\n\t}\n}", "CodeBleu_score": 36.10629845717056}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t\tif (scrollRef.current && scrollRef.current.current) {\n\t\tscrollTo(scrollRef.current.current, {\n\t\t\ttop: scrollRef.current.current.scrollHeight,\n\t\t\tbehavior: behaviour,\n\t\t})\n\t}\n}", "CodeBleu_score": 45.14337062675781}]}
{"instance_id": "070c4b1ac0b5", "generation_result": [{"code": "const saveElementAsImage = (elementId: string) =>{\n\t\tconst element = document.getElementById(elementId);\n\tif (!element) {\n\t\talert(\"Couldn't find the element with id: \" + elementId);\n\t} else {\n\t\tconst image = htmlToImage.toJpeg(element, { quality: 0.95 });\n\t\tconst anchor = document.createElement(\"a\");\n\t\tanchor.href = image;\n\t\tanchor.download = \"agent-gpt-output.png\";\n\t\tanchor.click();\n\t}\n}", "CodeBleu_score": 37.67590894157596}, {"code": "const saveElementAsImage = (elementId: string) =>{\n\t\tconst el = document.getElementById(elementId);\n\tif (el) {\n\t\tconst originalWidth = el.clientWidth;\n\t\tconst originalHeight = el.clientHeight;\n\t\tconst originalStyle = el.getAttribute('style');\n\t\tel.setAttribute('style', 'border: 1px solid black;');\n\t\tconst ctx = el.getContext('2d');\n\t\tconst data = ctx.getImageData(0, 0, originalWidth, originalHeight);\n\t\tel.setAttribute('style', originalStyle);\n\t\tconst img = document.createElement('img');\n\t\tconst blob = new Blob([data.data], {type: 'image/png'});\n\t\tconst url = URL.createObjectURL(blob);\n\t\timg.onload = () => {\n\t\t\tURL.revokeObjectURL(img.src);\n\t\t};\n\t\timg.src = url;\n\t\timg.width = originalWidth;\n\t\timg.height = originalHeight;\n\t\timg.download = 'agent-gpt-output.png';\n\t\tdocument.body.appendChild(img);\n\t\talert('The image has been saved successfully.');\n\t} else {\n\t\talert('The specified HTML element could not be found.');\n\t}\n}", "CodeBleu_score": 36.66100021924427}, {"code": "const saveElementAsImage = (elementId: string) =>{\n\t\tconst element = document.getElementById(elementId);\n\tif (!element) {\n\t\talert('Could not find HTML element with id: ' + elementId);\n\t\treturn;\n\t}\n\tconst getCanvas = (htmlElement: HTMLElement) => {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = htmlElement.offsetWidth;\n\t\tcanvas.height = htmlElement.offsetHeight;\n\t\tcanvas.style.width = getComputedStyle(htmlElement).getPropertyValue('width');\n\t\tcanvas.style.height = getComputedStyle(htmlElement).getPropertyValue('height');\n\n\t\tconst context = canvas.getContext('2d');\n\t\tif (!context) {\n\t\t\talert('Failed to initiate canvas context');\n\t\t\treturn;\n\t\t}\n\t\tcontext.scale(2, 2);\n\t\tcontext.translate(-htmlElement.scrollLeft, -htmlElement.scrollTop);\n\t\tcontext.drawImage(htmlElement, 0, 0);\n\t\treturn canvas;\n\t};\n\tconst img = new Image();\n\tconst canvas = getCanvas(element);\n\tif (!canvas) {\n\t\talert('Failed to initiate canvas');\n\t\treturn;\n\t}\n\timg.src = canvas.toDataURL('image/jpeg', 0.9);\n\timg.onload = () => {\n\t\tconst a = document.createElement('a');\n\t\ta.href = img.src;\n\t\ta.download = 'agent-gpt-output.png';\n\t\ta.click();\n\t};\n}", "CodeBleu_score": 40.8742258458593}]}
{"instance_id": "346ea48343da", "generation_result": [{"code": "const copyElementText = (elementId: string) =>{\n\t\tconst textArea = document.createElement('textarea');\n\tconst element = document.getElementById(elementId);\n\tif (!element) {\n\t\treturn;\n\t}\n\tconst text = element.innerText;\n\tif (!navigator.clipboard) {\n\t\ttextArea.value = text;\n\t\tdocument.body.appendChild(textArea);\n\t\ttextArea.focus();\n\t\ttextArea.select();\n\t\ttry {\n\t\t\tconst successful = document.execCommand('copy');\n\t\t\tconst msg = successful ? 'successful' : 'unsuccessful';\n\t\t\tconsole.log('Copying text command was ' + msg);\n\t\t} catch (err) {\n\t\t\tconsole.error('Oops, unable to copy');\n\t\t}\n\t\tdocument.body.removeChild(textArea);\n\t} else {\n\t\tnavigator.clipboard.writeText(text).then(\n\t\t\tfunction () {\n\t\t\t\tconsole.log('Async: Copying to clipboard was successful!');\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tconsole.error('Async: Could not copy text: ', err);\n\t\t\t}\n\t\t);\n\t}\n}", "CodeBleu_score": 64.02392979219293}, {"code": "const copyElementText = (elementId: string) =>{\n\t\tconst element = document.getElementById(elementId);\n\tconst text = element.innerText;\n\tif (navigator.clipboard) {\n\t\tnavigator.clipboard.writeText(text);\n\t} else {\n\t\tconst textArea = document.createElement(\"textarea\");\n\t\ttextArea.value = text;\n\t\tdocument.body.appendChild(textArea);\n\t\ttextArea.focus();\n\t\ttextArea.select();\n\t\ttry {\n\t\t\tconst successful = document.execCommand('copy');\n\t\t\tconst msg = successful ? 'successful' : 'unsuccessful';\n\t\t\tconsole.log('Copying text command was ' + msg);\n\t\t} catch (err) {\n\t\t\tconsole.error('Oops, unable to copy');\n\t\t}\n\t\tdocument.body.removeChild(textArea);\n\t}\n}", "CodeBleu_score": 66.0738768503223}, {"code": "const copyElementText = (elementId: string) =>{\n\t\tconst element = document.getElementById(elementId);\n\tif (element) {\n\t\tconst text = element.innerText;\n\t\tif (navigator.clipboard) {\n\t\t\tnavigator.clipboard.writeText(text);\n\t\t} else {\n\t\t\tconst textArea = document.createElement('textarea');\n\t\t\ttextArea.value = text;\n\t\t\ttextArea.style.position = 'fixed';\n\t\t\ttextArea.style.top = '0';\n\t\t\ttextArea.style.left = '0';\n\t\t\ttextArea.style.width = '2em';\n\t\t\ttextArea.style.height = '2em';\n\t\t\ttextArea.style.padding = '0';\n\t\t\ttextArea.style.border = 'none';\n\t\t\ttextArea.style.outline = 'none';\n\t\t\ttextArea.style.boxShadow = 'none';\n\t\t\ttextArea.style.background = 'transparent';\n\t\t\tdocument.body.appendChild(textArea);\n\t\t\ttextArea.focus();\n\t\t\ttextArea.select();\n\t\t\ttry {\n\t\t\t\tconst successful = document.execCommand('copy');\n\t\t\t\tconst msg = successful ? 'successful' : 'unsuccessful';\n\t\t\t\tconsole.log('Copying text command was ' + msg);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Oops, unable to copy', err);\n\t\t\t}\n\t\t\tdocument.body.removeChild(textArea);\n\t\t}\n\t}\n}", "CodeBleu_score": 57.719119563152596}]}
{"instance_id": "25f193a0eddf", "generation_result": [{"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t\tconst match = className?.match(languageRegex);\n\tconst language = inline ? 'inline' : (match ? match[1] : '');\n\treturn (\n\t\t<CodeBlock className={className} language={language} inline={inline}>\n\t\t\t{children}\n\t\t</CodeBlock>\n\t);\n}", "CodeBleu_score": 35.95366987246853}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t\tconst language = className ? className.replace(/language-/, '') : 'javascript';\n\tconst shouldHighlight = language !== 'nohighlight';\n\treturn (\n\t\t<div className={inline ? styles.inlineCode : styles.codeBlock}>\n\t\t\t{inline ? (\n\t\t\t\t<code className={className}>{children}</code>\n\t\t\t) : (\n\t\t\t\t<Highlight language={language} children={children} shouldHighlight={shouldHighlight} />\n\t\t\t)}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 29.020530116665523}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t\tconst language = className ? className.replace('language-', '') : '';\n\treturn !inline && language ? (\n\t\t<Highlight className={language}>{children}</Highlight>\n\t) : (\n\t\t<code className={className}>{children}</code>\n\t);\n}", "CodeBleu_score": 44.289679702644655}]}
{"instance_id": "7ba7dfdc0ab6", "generation_result": [{"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\tif (typeof node === 'string') {\nreturn node;\n} else if (Array.isArray(node)) {\nreturn node.map(extractTextFromNode).join('');\n} else if (React.isValidElement(node)) {\nreturn extractTextFromNode(node.props.children);\n} else {\nreturn '';\n}\n}", "CodeBleu_score": 74.23185190207882}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\t\tif (typeof node === 'string') {\n\t\treturn node;\n\t} else if (Array.isArray(node)) {\n\t\treturn node.map(extractTextFromNode).join('');\n\t} else if (React.isValidElement(node)) {\n\t\treturn extractTextFromNode(node.props.children);\n\t} else {\n\t\treturn '';\n\t}\n}", "CodeBleu_score": 74.06625647380444}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\t\tif (typeof node === 'string') {\n\t\treturn node\n\t} else if (Array.isArray(node)) {\n\t\treturn node.map(extractTextFromNode).join('')\n\t} else if (React.isValidElement(node)) {\n\t\treturn extractTextFromNode(node.props.children)\n\t} else {\n\t\treturn ''\n\t}\n}", "CodeBleu_score": 67.55846913729758}]}
{"instance_id": "a67cb8d31dde", "generation_result": [{"code": "const Summarize = () =>{\n\tconst { agent, lifecycle, summary, tasks } = useAgent()", "CodeBleu_score": 2.5153057873799214}, {"code": "const Summarize = () =>{\n\t\tconst [summarized, setSummarized] = useState(false);\n\tconst agent = useAgent();\n\tconst {\n\t\tconversationId,\n\t\tconversationStatus,\n\t\tcompletedTasks,\n\t\tsummary,\n\t} = useConversation();\n\n\tconst summarize = () => {\n\t\tsetSummarized(true);\n\t\tagent.summarize();\n\t};\n\n\tif (\n\t\t!agent ||\n\t\tconversationStatus !== \"stopped\" ||\n\t\tcompletedTasks.length === 0 ||\n\t\tsummary !== null ||\n\t\tsummarized\n\t) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"prompt\">\n\t\t\t\t<p>\n\t\t\t\t\tWould you like to summarize your conversation?\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"button-container\">\n\t\t\t\t<button className=\"button\" onClick={summarize}>\n\t\t\t\t\tSummarize\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}", "CodeBleu_score": 29.471330675420226}, {"code": "const Summarize = () =>{\n\t\tconst { agent, lifecycle, summary } = useAgent()\n\tconst { completedTasks, inProgressTasks } = useTaskManager()\n\tconst [showSummarize, setShowSummarize] = React.useState(false)\n\tconst [summarizing, setSummarizing] = React.useState(false)\n\n\tconst summarize = () => {\n\t\tsetSummarizing(true)\n\t\tagent.summarize().then(() => {\n\t\t\tsetSummarizing(false)\n\t\t\tsetShowSummarize(false)\n\t\t\tsummary.setSummarized()\n\t\t})\n\t}\n\n\tconst showSummarizeButton =\n\t\tagent &&\n\t\tlifecycle === 'stopped' &&\n\t\tcompletedTasks.length > 0 &&\n\t\tinProgressTasks.length === 0 &&\n\t\t!summary.summarized\n\n\treturn (\n\t\t<div>\n\t\t\t{showSummarizeButton && (\n\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled={summarizing}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetShowSummarize(true)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tSummarize\n\t\t\t\t\t</button>\n\t\t\t\t\t{showSummarize && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAre you sure you want to summarize the conversation?\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<button disabled={summarizing} onClick={summarize}>\n\t\t\t\t\t\t\t\tSummarize\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}", "CodeBleu_score": 31.678635631583607}]}
{"instance_id": "983031b20224", "generation_result": [{"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t\treturn (\n\t\t<ClerkProvider\n\t\t\tfrontendApi={process.env.NEXT_PUBLIC_CLERK_FRONTEND_API}\n\t\t\tsession={session}\n\t\t\ttheme={{\n\t\t\t\tcolors: {\n\t\t\t\t\tprimary: '#000000',\n\t\t\t\t},\n\t\t\t\ttypography: {\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\tbutton: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\th1: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\th2: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\th3: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\th4: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\th5: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\th6: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t\tp: {\n\t\t\t\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t<TRPCReactProvider\n\t\t\t\tcreateClient={(opts) => createTRPCClient({ ...opts, headers })}\n\t\t\t\tonError={(err) => {\n\t\t\t\t\tconsole.error(err)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"flex flex-col h-screen\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<main className=\"flex flex-1 flex-col overflow-y-auto\">\n\t\t\t\t\t\t<div className=\"flex-1\">{children}</div>\n\t\t\t\t\t</main>\n\t\t\t\t\t<Footer />\n\t\t\t\t</div>\n\t\t\t</TRPCReactProvider>\n\t\t</ClerkProvider>\n\t)\n}", "CodeBleu_score": 42.81927273683937}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t\treturn (\n\t\t<ClerkProvider\n\t\t\tfeatures={{\n\t\t\t\torganizations: {\n\t\t\t\t\tcreate: false,\n\t\t\t\t\tupdate: false,\n\t\t\t\t\tdelete: false,\n\t\t\t\t\tlist: {\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tusers: {\n\t\t\t\t\tcreate: false,\n\t\t\t\t\tupdate: false,\n\t\t\t\t\tdelete: false,\n\t\t\t\t\tlist: {\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tuser_impersonation: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\temail_password_authentication: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tsms_password_authentication: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tmagic_links: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tsessions: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tuser_management: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\troles: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_invitations: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_members: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_roles: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_applications: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_saml: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_oauth: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_passwordless: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_recovery_codes: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_recovery_codes_regenerate: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_recovery_codes_regenerate_all: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_recovery_codes_regenerate_all_for_org_mfa: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_recovery_codes_regenerate_for_org_mfa: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_recovery_codes_regenerate_for_user_mfa: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_recovery_codes_regenerate_for_user: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\torganizations_recovery_codes_regenerate_for_user_mfa", "CodeBleu_score": 7.040989414506804}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t\treturn (\n\t\t<ClerkProvider\n\t\t\ttheme={clerkDarkTheme}\n\t\t\tcolors={clerkColors}\n\t\t\tstyles={clerkStyles}\n\t\t\toptions={{\n\t\t\t\tsignInUrl: '/login',\n\t\t\t\tsignInLabel: 'Log in',\n\t\t\t\tsignUpUrl: '/signup',\n\t\t\t\tsignUpLabel: 'Sign up',\n\t\t\t\tcreateProfileUrl: '/create-profile',\n\t\t\t\tcreateProfileLabel: 'Create profile',\n\t\t\t}}\n\t\t>\n\t\t\t<TRPCReactProvider\n\t\t\t\tcreateClient={createTRPCClient}\n\t\t\t\tonError={console.error}\n\t\t\t\tqueryMiddleware={queryMiddleware}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</TRPCReactProvider>\n\t\t</ClerkProvider>\n\t);\n}", "CodeBleu_score": 42.44152927825301}]}
{"instance_id": "0ba912ee94c7", "generation_result": [{"code": "export function ActiveButton({ href, label, icon }: Props){\n\t\tconst pathname = usePathname()\n\tconst active = pathname === href\n\treturn (\n\t\t<a\n\t\t\thref={href}\n\t\t\tclassName={classnames(\n\t\t\t\t'button',\n\t\t\t\t'button--ghost',\n\t\t\t\t'button--small',\n\t\t\t\t'button--icon',\n\t\t\t\tactive ? 'button--active' : '',\n\t\t\t)}\n\t\t>\n\t\t\t<span className=\"button__icon\">\n\t\t\t\t<Icon icon={icon} />\n\t\t\t</span>\n\t\t\t<span className=\"button__label\">{label}</span>\n\t\t</a>\n\t)\n}", "CodeBleu_score": 44.91577228662479}, {"code": "export function ActiveButton({ href, label, icon }: Props){\n\t\tconst pathname = usePathname();\n\tconst active = pathname === href;\n\n\treturn (\n\t\t<Link href={href}>\n\t\t\t<a className={classnames('button', active && 'active')}>\n\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t<Icon icon={icon} />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"label\">{label}</span>\n\t\t\t</a>\n\t\t</Link>\n\t);\n}", "CodeBleu_score": 50.4251084556537}, {"code": "export function ActiveButton({ href, label, icon }: Props){\n\t\tconst pathname = usePathname()\n\n\tconst classes = classNames(\n\t\t'btn',\n\t\t'btn-ghost',\n\t\t'btn-sm',\n\t\t'btn-block',\n\t\t'py-2',\n\t\t'px-4',\n\t\t'rounded-full',\n\t\t{\n\t\t\t'bg-blue-500': pathname === href,\n\t\t\t'bg-blue-400': pathname !== href,\n\t\t},\n\t)\n\n\treturn (\n\t\t<a href={href} className={classes} title={label}>\n\t\t\t<span className=\"flex items-center\">\n\t\t\t\t{icon}\n\t\t\t\t<span className=\"ml-2\">{truncate(label, 18)}</span>\n\t\t\t</span>\n\t\t</a>\n\t)\n}", "CodeBleu_score": 43.690533895500614}]}
{"instance_id": "1fd5b7fdcc9b", "generation_result": [{"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t\treturn (\n\t\t<Html lang=\"en\">\n\t\t\t<Head>\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t\t\t<link rel=\"icon\" href=\"/favicon.ico\" />\n\t\t\t\t<meta name=\"theme-color\" content=\"#000000\" />\n\t\t\t\t<meta name=\"description\" content=\"Web site created using create-react-app\" />\n\t\t\t\t<link rel=\"apple-touch-icon\" href=\"/logo192.png\" />\n\t\t\t\t<link rel=\"manifest\" href=\"/manifest.json\" />\n\t\t\t\t<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\t\t\t\t<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\t\t\t\t<script src=\"https://kit.fontawesome.com/9493115553.js\" crossOrigin=\"anonymous\"></script>\n\t\t\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\t\t\t</Head>\n\t\t\t<body>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<Toaster />\n\t\t\t\t\t<Analytics />\n\t\t\t\t\t<SpeedInsights />\n\t\t\t\t\t<ComponentWithChildren>{children}</ComponentWithChildren>\n\t\t\t\t</ThemeProvider>\n\t\t\t</body>\n\t\t</Html>\n\t);\n}", "CodeBleu_score": 22.677731239341043}, {"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t\treturn (\n\t\t<Html lang=\"en\">\n\t\t\t<Head>\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t\t\t<link rel=\"manifest\" href=\"/manifest.json\" />\n\t\t\t\t<link rel=\"icon\" href=\"/favicon.ico\" />\n\t\t\t\t<meta name=\"theme-color\" content=\"#000000\" />\n\t\t\t\t<meta name=\"description\" content=\"A social media platform for sharing photos and videos\" />\n\t\t\t\t<meta name=\"keywords\" content=\"social media, photos, videos, upload, share, social\" />\n\t\t\t\t<meta name=\"author\" content=\"Apollo GraphQL\" />\n\t\t\t\t<meta name=\"copyright\" content=\"Copyright (c) 2021 Apollo GraphQL\" />\n\t\t\t\t<meta name=\"application-name\" content=\"Apollo GraphQL\" />\n\t\t\t\t<meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n\t\t\t\t<meta name=\"msapplication-TileImage\" content=\"/favicon.ico\" />\n\t\t\t\t<meta name=\"msapplication-config\" content=\"/browserconfig.xml\" />\n\t\t\t\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n\t\t\t\t<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"#000000\" />\n\t\t\t\t<meta name=\"apple-mobile-web-app-title\" content=\"Apollo GraphQL\" />\n\t\t\t\t<meta name=\"format-detection\" content=\"telephone=no\" />\n\t\t\t\t<meta name=\"mobile-web-app-capable\" content=\"yes\" />\n\t\t\t\t<link rel=\"apple-touch-icon\" href=\"/apple-touch-icon.png\" />\n\t\t\t\t<link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#000000\" />\n\t\t\t\t<link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n\t\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\n\t\t\t\t<meta name=\"twitter:site\" content=\"@ApolloGraphQL\" />\n\t\t\t\t<meta name=\"twitter:creator\" content=\"@ApolloGraphQL\" />\n\t\t\t\t<meta property=\"og:url\" content=\"https://apollo-", "CodeBleu_score": 8.337783984677326}, {"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t\t\t<title>My App</title>\n\t\t\t\t<link rel=\"icon\" href=\"/favicon.ico\" />\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t{children}\n\t\t\t\t</ThemeProvider>\n\t\t\t</body>\n\t\t</html>\n\t)\n}", "CodeBleu_score": 22.28914516290193}]}
{"instance_id": "390ef9405b57", "generation_result": [{"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t\tconst classes = twMerge(\n\t\t\"inline-flex items-center justify-center w-full px-6 py-3 text-base font-medium leading-6 text-white transition duration-150 ease-in-out bg-blue-600 border border-transparent rounded-md hover:bg-blue-500 focus:outline-none focus:border-blue-700 focus:shadow-outline-blue active:bg-blue-700 disabled:opacity-50\",\n\t\tintent && tw`border-${intent}-500 bg-${intent}-600 hover:bg-${intent}-500 focus:border-${intent}-700 active:bg-${intent}-700`,\n\t\tsize === \"sm\" && tw`text-sm leading-5 px-3 py-2`,\n\t\tsize === \"lg\" && tw`text-lg leading-6 px-4 py-2`,\n\t\tunderline && tw`border-b-2 border-blue-700`,\n\t\tclassName,\n\t);\n\n\treturn <a className={classes} {...props} />;\n}", "CodeBleu_score": 9.256968255049374}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t\tconst classes = twMerge(\n\t\t\"button\",\n\t\tintent && `button-${intent}`,\n\t\tsize && `button-${size}`,\n\t\tunderline && \"button-underline\",\n\t\tclassName\n\t);\n\n\treturn (\n\t\t<a className={classes} {...props}>\n\t\t\t{props.children}\n\t\t</a>\n\t);\n}", "CodeBleu_score": 22.39025920471259}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t\tconst classes = twMerge(\n\t\t'button',\n\t\tintent && `button-${intent}`,\n\t\tsize && `button-${size}`,\n\t\tunderline && 'button-underline',\n\t\tclassName\n\t);\n\n\treturn <a className={classes} {...props} />;\n}", "CodeBleu_score": 15.546431972929703}]}
{"instance_id": "aa655671cb7e", "generation_result": [{"code": "export function middleware(request: NextRequest){\n\t\tconst host = request.headers?.get(\"host\")\n\tif (host?.includes(\"next-enterprise.vercel.app\")) {\n\t\treturn NextResponse.redirect(\"https://blazity.com/open-source/nextjs-enterprise-boilerplate\", 301)\n\t}\n\treturn NextResponse.next()\n}", "CodeBleu_score": 33.91547493536813}, {"code": "export function middleware(request: NextRequest){\n\t\tif (request.headers?.get(\"host\")?.includes(\"next-enterprise.vercel.app\")) {\n\t\treturn NextResponse.redirect(\"https://blazity.com/open-source/nextjs-enterprise-boilerplate\", 301)\n\t}\n\treturn NextResponse.next()\n}", "CodeBleu_score": 47.42563907935279}, {"code": "export function middleware(request: NextRequest){\n\t\tif (request.headers?.get(\"host\")?.includes(\"next-enterprise.vercel.app\")) {\n\t\treturn NextResponse.redirect(\"https://blazity.com/open-source/nextjs-enterprise-boilerplate\", 301)\n\t}\n\n\treturn NextResponse.next()\n}", "CodeBleu_score": 47.42563907935279}]}
{"instance_id": "b33fa69187fb", "generation_result": [{"code": "app.lazyrouter = function lazyrouter(){\n\tif (!this._router) {\nthis._router = new Router({\ncaseSensitive: this.enabled('case sensitive routing'),\nstrict: this.enabled('strict routing')\n})\nthis._router.use(query())\nthis._router.use(init(this))\n}\nreturn this._router\n}", "CodeBleu_score": 50.514825772081664}, {"code": "app.lazyrouter = function lazyrouter(){\n\tif (this._router) return this._router;\nvar router = (0, _express.Router)();\n// enable case sensitivity and strict routing\nrouter.caseSensitive = this.enabled('case sensitive routing');\nrouter.strict = this.enabled('strict routing');\n// expose the router on the app instance\nthis._router = router;\n// middleware\nrouter.use(query(this.get('query parser fn')));\nrouter.use(init(this));\nreturn router;\n}", "CodeBleu_score": 29.828078427800076}, {"code": "app.lazyrouter = function lazyrouter(){\n\tif (!this._router) {\nthis._router = new Router({\ncaseSensitive: this.enabled(\"case sensitive routing\"),\nstrict: this.enabled(\"strict routing\")\n});\n\nthis._router.use(query());\nthis._router.use(init);\n}\n\nreturn this._router;\n}", "CodeBleu_score": 42.10706741458121}]}
{"instance_id": "7aadf79801c0", "generation_result": [{"code": "function createApplication(){\n\t\tvar app = function(req, res) {\n\t\tapp.handle(req, res);\n\t};\n\tutil.mixin(app, EventEmitter.prototype);\n\tapp.request = Object.create(Request.prototype);\n\tapp.response = Object.create(Response.prototype);\n\tapp.init();\n\treturn app;\n}", "CodeBleu_score": 27.442336212271222}, {"code": "function createApplication(){\n\t\tvar app = function (req, res) {\n\t\tapp.handle(req, res);\n\t};\n\n\tutil.inherits(app, EventEmitter);\n\n\tapp.request = Object.create(request, {\n\t\tapp: {\n\t\t\tvalue: app\n\t\t}\n\t});\n\n\tapp.response = Object.create(response, {\n\t\tapp: {\n\t\t\tvalue: app\n\t\t}\n\t});\n\n\tapp.init = function () {};\n\n\treturn app;\n}", "CodeBleu_score": 29.16061993853524}, {"code": "function createApplication(){\n\t\tvar app = function(req, res) {\n\t\tapp.handle(req, res);\n\t};\n\tutil.inherits(app, EventEmitter);\n\tapp.request = Object.create(request);\n\tapp.response = Object.create(response);\n\tapp.init = function() {};\n\treturn app;\n}", "CodeBleu_score": 24.435232568627715}]}
{"instance_id": "2b4af4a14e81", "generation_result": [{"code": "res.sendFile = function sendFile(path, options, callback) {\n\t\tvar done = callback;\n\tvar req = this.req;\n\tvar res = this;\n\n\t// Get the path from the arguments\n\tvar path = path || null;\n\n\t// Get the options from the arguments\n\tvar options = options || {};\n\n\t// Get the callback from the arguments\n\tvar callback = callback || null;\n\n\t// Check if path is a string\n\tif (typeof path !== 'string') {\n\t\tvar err = new TypeError('Path must be a string. Received ' + typeof path);\n\t\tif (!callback) {\n\t\t\tthrow err;\n\t\t} else {\n\t\t\treturn next(err);\n\t\t}\n\t}\n\n\t// Check if path is absolute or contains a root directory\n\tif (path.charAt(0) !== '/' && !options.root) {\n\t\tvar err = new Error('Path \"' + path + '\" is not absolute and no root directory was specified');\n\t\tif (!callback) {\n\t\t\tthrow err;\n\t\t} else {\n\t\t\treturn next(err);\n\t\t}\n\t}\n\n\t// Create the options to be passed to createReadStream\n\tvar streamOptions = {};\n\n\t// Check if the path is relative to the root\n\tif (options.root) {\n\t\tstreamOptions.root = options.root;\n\t}\n\n\t// Check if the path is relative to the root\n\tif (path.charAt(0) !== '/') {\n\t\tstreamOptions.root = path;\n\t}\n\n\t// Check if the path is a file\n\tif (options.dotfiles !== 'ignore') {\n\t\tstreamOptions.dotfiles = options.dotfiles;\n\t}\n\n\t// Check if the path is a directory\n\tif (options.headers) {\n\t\tstreamOptions.headers = options.headers;\n\t}\n\n\t// Create the read stream\n\tvar stream = send(req, path, streamOptions);\n\n\t// If the path is not a file, return a 404\n\tstream.on('directory', function onDirectory() {\n\t\tif (done) {\n\t\t\tdone();\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t});\n\n\t// If there is an error, invoke the callback or next middleware\n\tstream.on('error', function onError(err) {\n\t\tif (done) {\n\t\t\tdone(", "CodeBleu_score": 47.20422271834639}, {"code": "res.sendFile = function sendFile(path, options, callback) {\n\t\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = null;\n\t}\n\n\toptions = options || {};\n\n\tvar root = options.root || null;\n\tvar headers = options.headers;\n\tvar dotfiles = options.dotfiles;\n\tvar maxAge = options.maxAge || '365d';\n\tvar root = options.root;\n\tvar etag;\n\tvar file;\n\tvar stream;\n\tvar pathname;\n\n\t// Get the pathname from the given path\n\tpathname = encodeURI(path).replace(/%20/g, ' ');\n\n\t// Make sure root is an absolute path\n\tif (root) {\n\t\troot = path.resolve(root);\n\t}\n\n\t// Normalize the path\n\tpath = path.normalize(pathname);\n\n\t// Make sure root is an absolute path\n\tif (root) {\n\t\tpath = path.substr(root.length);\n\t}\n\n\t// Stat the file\n\tfile = new File(path);\n\n\t// Set headers and status code\n\tif (file.error) {\n\t\tif (file.error.code === 'ENOENT') {\n\t\t\tif (dotfiles !== 'allow' && pathname.indexOf('.') !== -1) {\n\t\t\t\treturn next();\n\t\t\t}\n\n\t\t\tres.statusCode = 404;\n\t\t\treturn res.end();\n\t\t}\n\n\t\tif (file.error.code === 'EISDIR') {\n\t\t\tif (pathname[pathname.length - 1] !== '/') {\n\t\t\t\treturn res.redirect(pathname + '/');\n\t\t\t}\n\n\t\t\tres.statusCode = 403;\n\t\t\treturn res.end();\n\t\t}\n\n\t\tthrow file.error;\n\t}\n\n\t// Resolve the path to an absolute path\n\tpath = file.path;\n\n\t// Make sure we're not trying to access a file outside of the specified root directory\n\tif (root && path.substr(0, root.length) !== root) {\n\t\tthrow new Error('path ' + pathname + ' is outside of root path ' + root);\n\t}\n\n\t// Check if the file is a directory\n\tif (file.isDirectory()) {\n\t\tif (pathname[pathname.length - 1] !== '/') {\n\t\t\treturn res.redirect", "CodeBleu_score": 38.14522886033838}, {"code": "res.sendFile = function sendFile(path, options, callback) {\n\t\tvar done = callback;\n\tvar root = null;\n\tvar headers = {};\n\tvar statusCode = 200;\n\tvar encoding = null;\n\tvar stat;\n\n\t// support function as second arg\n\tif (typeof options === 'function') {\n\t\tdone = options;\n\t\toptions = {};\n\t}\n\n\t// set up options\n\toptions = options || {};\n\troot = options.root || root;\n\theaders = options.headers || headers;\n\tstatusCode = options.statusCode || statusCode;\n\tencoding = options.encoding || null;\n\n\t// normalize path to string\n\tpath = path.toString();\n\n\t// resolve relative paths\n\tif (path[0] !== '/') {\n\t\tif (root) {\n\t\t\tpath = root + '/' + path;\n\t\t} else {\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\n\t// normalize path to remove ..\n\tpath = normalize(path);\n\n\t// ensure absolute\n\tif (path[0] !== '/') {\n\t\tthrow new Error('res.sendFile() requires an absolute path');\n\t}\n\n\t// stat the file\n\tstat = fs.statSync(path);\n\n\t// create read stream\n\tvar stream = fs.createReadStream(path);\n\n\t// if content-type not set, determine from path\n\tif (!headers['Content-Type']) {\n\t\theaders['Content-Type'] = mime.lookup(path);\n\t}\n\n\t// if content-length not set, determine from file\n\tif (!headers['Content-Length']) {\n\t\theaders['Content-Length'] = stat.size;\n\t}\n\n\t// merge headers\n\tfor (var key in headers) {\n\t\tres.setHeader(key, headers[key]);\n\t}\n\n\t// send file\n\tres.writeHead(statusCode);\n\tstream.pipe(res);\n\n\t// done\n\tdone && done();\n}", "CodeBleu_score": 40.53722295698176}]}
{"instance_id": "24ba2258749d", "generation_result": [{"code": "View.prototype.lookup = function lookup(name){\n\t\tvar paths = this.root.map(function(root) {\n\t\treturn this.resolve(root, name);\n\t}, this);\n\n\tfor (var i = 0; i < paths.length; i++) {\n\t\tif (fs.existsSync(paths[i])) {\n\t\t\treturn paths[i];\n\t\t}\n\t}\n}", "CodeBleu_score": 28.08465563815674}, {"code": "View.prototype.lookup = function lookup(name){\n\t\tvar resolved = null,\n\t    i = 0,\n\t    l = this.root.length;\n\n\tfor (; i < l; i++) {\n\t\tresolved = this.resolve(this.root[i], name);\n\t\tif (resolved) {\n\t\t\treturn resolved;\n\t\t}\n\t}\n\n\treturn null;\n}", "CodeBleu_score": 15.826491019983896}, {"code": "View.prototype.lookup = function lookup(name){\n\t\tvar roots = this.roots;\n\tvar length = roots.length;\n\tvar index = -1;\n\tvar root;\n\tvar path;\n\tvar file;\n\n\twhile (++index < length) {\n\t\troot = roots[index];\n\t\tpath = resolve(root, name);\n\t\tfile = basename(path);\n\n\t\tif (file) {\n\t\t\treturn path;\n\t\t}\n\t}\n}", "CodeBleu_score": 30.411008678974966}]}
{"instance_id": "4a3a45242878", "generation_result": [{"code": "module.exports = function query(options){\n\t\tif (typeof options === 'function') {\n\t\treturn function queryParser(req, res, next) {\n\t\t\toptions(req, res, next, parse(req.url, true))\n\t\t}\n\t}\n\n\toptions = options || {}\n\n\tvar parser = options.parser || parse\n\tvar assign = options.assign || 'query'\n\n\treturn function queryParser(req, res, next) {\n\t\treq[assign] = parser(req.url, true)\n\t\tnext()\n\t}\n}", "CodeBleu_score": 32.05345737931935}, {"code": "module.exports = function query(options){\n\t\toptions = options || {};\n\tvar parser = options.parser || queryparse;\n\tvar merge = options.merge === true;\n\n\treturn function query(req, res, next) {\n\t\tif (req._queryparsed === true && !merge) {\n\t\t\treturn next();\n\t\t}\n\n\t\treq._queryparsed = true;\n\t\treq.query = parser(req.url);\n\t\tnext();\n\t};\n}", "CodeBleu_score": 33.688123090813136}, {"code": "module.exports = function query(options){\n\t\tif (typeof options === 'function') {\n\t\treturn queryparse(options);\n\t}\n\toptions = options || {};\n\tvar opts = {\n\t\tarray: options.array || false,\n\t\tdecoder: options.decoder || decodeURIComponent,\n\t\tdelimiter: options.delimiter || '&',\n\t\tdepth: options.depth || 5,\n\t\tplainObjects: options.plainObjects || false,\n\t\tallowPrototypes: options.allowPrototypes || false\n\t};\n\treturn queryparse(opts);\n}", "CodeBleu_score": 36.400119009771366}]}
{"instance_id": "786ae7051b03", "generation_result": [{"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t\tconst {\n\t\tchildren,\n\t\tbasePath,\n\t\tclassName,\n\t\tmodal,\n\t\t...rest\n\t} = framework.props;\n\n\treturn (\n\t\t<FrameworkProvider framework={framework}>\n\t\t\t<RoutingProvider basePath={basePath}>\n\t\t\t\t<DesignSystemProvider designSystem={designSystem}>\n\t\t\t\t\t<DesignSystemApp\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t{...rest}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</DesignSystemApp>\n\t\t\t\t</DesignSystemProvider>\n\t\t\t</RoutingProvider>\n\t\t</FrameworkProvider>\n\t);\n}", "CodeBleu_score": 36.77834755797526}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t\tconst [app, setApp] = React.useState<AppType | null>(null);\n\n\tconst fetchApp = async () => {\n\t\tconst response = await fetch('/api/app');\n\t\tconst data = await response.json();\n\t\tsetApp(data);\n\t};\n\n\tReact.useEffect(() => {\n\t\tfetchApp();\n\t}, []);\n\n\tif (!app) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<FrameworkProvider framework={framework}>\n\t\t\t<RoutingProvider basePath=\"activitypub\" modals={app.modals}>\n\t\t\t\t<DesignSystemProvider designSystem={designSystem} className=\"App\">\n\t\t\t\t\t<Content content={app.content} />\n\t\t\t\t</DesignSystemProvider>\n\t\t\t</RoutingProvider>\n\t\t</FrameworkProvider>\n\t);\n}", "CodeBleu_score": 40.88177540298095}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t\treturn (\n\t\t<FrameworkProvider framework={framework}>\n\t\t\t<RoutingProvider basepath=\"activitypub\">\n\t\t\t\t<DesignSystemApp designSystem={designSystem} className=\"activitypub\">\n\t\t\t\t\t<Routes />\n\t\t\t\t</DesignSystemApp>\n\t\t\t</RoutingProvider>\n\t\t</FrameworkProvider>\n\t);\n}", "CodeBleu_score": 53.66910463506866}]}
{"instance_id": "8100930f7ce7", "generation_result": [{"code": "const darkMode = () =>{\n\t\tif (colorScheme === 'light') {\n\t\treturn false;\n\t} else if (colorScheme === 'dark') {\n\t\treturn true;\n\t} else {\n\t\tconst containerColor = getComputedStyle(el.parentElement).getPropertyValue('background-color');\n\t\tconst contrast = parseInt(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(', ')[0]) / parseInt(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(', ')[1]);\n\t\treturn contrast < 5;\n\t}\n}", "CodeBleu_score": 42.66974737892066}, {"code": "const darkMode = () =>{\n\t\tif (colorScheme === 'light') {\n\t\treturn false;\n\t} else if (colorScheme === 'dark') {\n\t\treturn true;\n\t} else {\n\t\tconst containerColor = getComputedStyle(el.parentElement).getPropertyValue('background-color');\n\t\tconst contrast = parseInt(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(',')[0]) + parseInt(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(',')[1]) + parseInt(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(',')[2]);\n\t\treturn contrast < 5;\n\t}\n}", "CodeBleu_score": 45.59446148914424}, {"code": "const darkMode = () =>{\n\t\tconst colorScheme = window.localStorage.getItem('colorScheme');\n\tif (colorScheme === 'light') {\n\t\treturn false;\n\t} else if (colorScheme === 'dark') {\n\t\treturn true;\n\t} else {\n\t\tconst containerColor = getComputedStyle(el.parentElement).getPropertyValue('background-color');\n\t\tconst contrast = parseInt(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(',')[0]) / parseInt(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(',')[1]);\n\t\treturn contrast < 5;\n\t}\n}", "CodeBleu_score": 44.576216815275465}]}
{"instance_id": "7da55fac8ceb", "generation_result": [{"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t\tif (title === null && showCount === false) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"content-title\">\n\t\t\t<h1 className=\"content-title__title\">{title}</h1>\n\t\t\t{showCount && <span className=\"content-title__count\">{count}</span>}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 33.927275188518024}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t\tif (title === null && showCount === false) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"content-title\">\n\t\t\t<h1>{title}</h1>\n\t\t\t<div className=\"count\">{count}</div>\n\t\t</div>\n\t);\n}", "CodeBleu_score": 31.255839241462347}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t\tif (title === null && showCount === false) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"content-title\">\n\t\t\t<h1 className=\"content-title__title\">{title}</h1>\n\t\t\t{showCount && <p className=\"content-title__count\">{count}</p>}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 34.08540531429959}]}
{"instance_id": "1d104e0b7fc7", "generation_result": [{"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if not args:\n        raise ValueError(\"No querysets provided.\")\n    if len(args) == 1:\n        return args[0]\n    if base_queryset is None:\n        base_queryset = args[0].model.objects\n    q = None\n    for sub_query in args:\n        if q is None:\n            q = sub_query.order_by()\n        else:\n            q = q.union(sub_query.order_by())\n    ids = q.values_list(\"id\", flat=True)\n    return base_queryset.filter(id__in=ids)\n", "CodeBleu_score": 48.844076782309415}, {"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if len(args) < 1:\n        raise ValueError(\"At least one queryset is required.\")\n    if base_queryset is None:\n        base_queryset = args[0].model.objects\n    for q in args:\n        if q.query.order_by:\n            q = q.order_by(*q.query.order_by)\n        base_queryset = base_queryset.filter(pk__in=q.values_list(\"pk\", flat=True))\n    return base_queryset\n\n", "CodeBleu_score": 37.828179449221786}, {"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if not args:\n        raise ValueError(\"You must provide at least one queryset to union.\")\n    if len(args) == 1:\n        return args[0]\n    querysets = []\n    for arg in args:\n        if isinstance(arg, QuerySet):\n            querysets.append(arg)\n        elif isinstance(arg, QuerySetProxy):\n            querysets.extend(arg.querysets)\n        else:\n            raise ValueError(\"Invalid queryset provided.\")\n    for queryset in querysets:\n        if queryset.query.order_by:\n            raise ValueError(\"Querysets provided must not be ordered.\")\n    if base_queryset is None:\n        base_queryset = base_queryset.model.objects.all()\n    elif isinstance(base_queryset, QuerySet):\n        base_queryset = base_queryset\n    elif isinstance(base_queryset, QuerySetProxy):\n        base_queryset = base_queryset.base_queryset\n    else:\n        raise ValueError(\"Invalid base queryset provided.\")\n    querysets = [queryset.order_by() for queryset in querysets]\n    union_query = querysets[0].query.clone()\n    for queryset in querysets[1:]:\n        union_query.add_q(queryset.query.clone())\n    union_query.add_q(query.Q(pk__in=base_queryset.query.clone().values_list(\"pk\", flat=True)))\n    return base_queryset.filter(pk__in=union_query.values_list(\"pk\", flat=True))\n\n", "CodeBleu_score": 40.86751656115869}]}
{"instance_id": "96fe55f8e114", "generation_result": [{"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    if not model:\n        model = self.__class__\n    if not model._meta.abstract:\n        with translation.override(\"en\"):\n            resource_type = model._meta.verbose_name\n            operation_log = create_or_update_operate_log(\n                resource_type=resource_type,\n                resource_ids=ids,\n                action=action,\n                detail=detail,\n                **kwargs,\n            )\n            activity_logs = [\n                ActivityLog(\n                    operation_log=operation_log,\n                    resource_id=resource_id,\n                    resource_type=resource_type,\n                    action=action,\n                    detail=detail,\n                    organization=operation_log.organization,\n                )\n                for resource_id in ids\n            ]\n            ActivityLog.objects.bulk_create(activity_logs)\n\n", "CodeBleu_score": 55.646294582602515}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    if not model:\n        model = self.model\n    if not model:\n        raise ValueError(\"model must be specified\")\n    if not isinstance(ids, list):\n        ids = [ids]\n    if not ids:\n        return\n    model_name = model._meta.model_name\n    if model_name == \"user\":\n        return\n    if model_name == \"organization\":\n        return\n    if model_name == \"activitylog\":\n        return\n    if model_name == \"operationlog\":\n        return\n    if model_name == \"translation\":\n        return\n    if model_name == \"translationkey\":\n        return\n    if model_name == \"translationvalue\":\n        return\n    if model_name == \"translationkeygroup\":\n        return\n    if model_name == \"translationkeygroupmembership\":\n        return\n    if model_name == \"translationkeygrouppermission\":\n        return\n    if model_name == \"translationkeypermission\":\n        return\n    if model_name == \"translationvalue\":\n        return\n    if model_name == \"translationvaluemembership\":\n        return\n    if model_name == \"translationvaluepermission\":\n        return\n    if model_name == \"translationvaluemembership\":\n        return\n    if model_name == \"translationvaluepermission\":\n        return\n    if model_name == \"translationvaluemembership\":\n        return\n    if model_name == \"translationvaluepermission\":\n        return\n    if model_name == \"translationkey\":\n        return\n    if model_name == \"translationkeymembership\":\n        return\n    if model_name == \"translationkeypermission\":\n        return\n    if model_name == \"translationkeymembership\":\n        return\n    if model_name == \"translationkeypermission\":\n        return\n    if model_name == \"translationkeymembership\":\n        return\n    if model_name == \"translationkeypermission\":\n        return\n    if model_name == \"translationkeymembership\":\n        return\n    if model_name == \"translationkeypermission\":\n        return\n    if model_name == \"translationvalue\":\n        return\n    if model_name == \"translationvaluemembership\":\n        return\n    if model_name == \"translationvaluepermission\":\n        return\n    if model_name == \"translationvaluemembership\":\n        return\n    if model_name == \"translationvaluepermission\":\n        return\n    if model_name == \"translationvaluemembership\":\n        return\n    if model_name == \"translationvaluepermission\":\n        return\n    if model_name == \"translationkey\":\n        return\n    if model_name == \"translationkeymembership", "CodeBleu_score": 20.668987637561724}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    if not model:\n        model = self.model\n    if not model:\n        return\n    if not hasattr(model, \"metadata\"):\n        return\n    model_meta = model.metadata\n    if not model_meta:\n        return\n    if not hasattr(model_meta, \"label\"):\n        return\n    model_label = model_meta.label\n    if not model_label:\n        return\n    model_label_plural = model_meta.label_plural\n    if not model_label_plural:\n        return\n    with translation.override(\"en\"):\n        operation_log_dict = {\n            \"action\": action,\n            \"model\": model_label_plural,\n            \"objects\": ids,\n            \"organization\": self.request.user.organization,\n            \"user\": self.request.user,\n            **kwargs,\n        }\n        operation_log = create_or_update_operate_log(operation_log_dict)\n        activity_log_list = []\n        for obj_id in ids:\n            activity_log_dict = {\n                \"action\": action,\n                \"detail\": detail,\n                \"organization\": self.request.user.organization,\n                \"user\": self.request.user,\n                \"operation_log\": operation_log,\n                \"model\": model_label,\n                \"object_id\": obj_id,\n            }\n            activity_log_list.append(ActivityLog(**activity_log_dict))\n        ActivityLog.objects.bulk_create(activity_log_list)\n\n", "CodeBleu_score": 38.637999015982714}]}
{"instance_id": "9e851c424f45", "generation_result": [{"code": "def prepare_django_request(self, request)\n\t\n    request_dict = {}\n    request_dict['is_secure'] = request.is_secure()\n    request_dict['host'] = request.get_host()\n    request_dict['script_name'] = request.path\n    request_dict['get_data'] = request.GET.copy()\n    request_dict['post_data'] = request.POST.copy()\n    return request_dict", "CodeBleu_score": 38.585550272533894}, {"code": "def prepare_django_request(self, request)\n\t\n    self.is_secure = request.is_secure()\n    self.host = request.get_host()\n    self.script_name = request.path\n    self.get_data = request.GET.copy()\n    self.post_data = request.POST.copy()\n    return self", "CodeBleu_score": 15.349588947735926}, {"code": "def prepare_django_request(self, request)\n\t\n    result = {}\n    result['is_secure'] = request.is_secure()\n    result['host'] = request.get_host()\n    result['script_name'] = request.path\n    result['get_data'] = request.GET.copy()\n    result['post_data'] = request.POST.copy()\n    return result", "CodeBleu_score": 41.777590081427704}]}
{"instance_id": "dcea4bd482c4", "generation_result": [{"code": "function getUserLang() {\n\t\tvar lang = 'zh-CN';\n\tif (navigator.cookieEnabled) {\n\t\tvar cookies = document.cookie.split(';');\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = cookies[i].split('=');\n\t\t\tif (cookie[0].trim() == 'django_language') {\n\t\t\t\tlang = cookie[1].trim();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn lang;\n}", "CodeBleu_score": 36.19497865445275}, {"code": "function getUserLang() {\n\t\tvar lang = 'zh-CN';\n\tif (document.cookie.indexOf('django_language=en') > -1) {\n\t\tlang = 'en-US';\n\t}\n\treturn lang;\n}", "CodeBleu_score": 27.903265493522365}, {"code": "function getUserLang() {\n\t\tvar lang = 'zh-CN';\n\tif (navigator.cookieEnabled) {\n\t\tvar index = document.cookie.indexOf('django_language=en');\n\t\tif (index != -1) {\n\t\t\tlang = 'en-US';\n\t\t}\n\t}\n\treturn lang;\n}", "CodeBleu_score": 47.3129466907929}]}
{"instance_id": "fd6824a005d5", "generation_result": [{"code": "function reloadPage(){\n\t\tsetTimeout(function() {\n\t\twindow.location.reload();\n\t}, 300);\n}", "CodeBleu_score": 55.661645246591554}, {"code": "function reloadPage(){\n\t\tsetTimeout(function() {\n\t\twindow.location.reload();\n\t}, 300);\n}", "CodeBleu_score": 55.661645246591554}, {"code": "function reloadPage(){\n\t\tsetTimeout(function(){window.location.reload();}, 300);\n}", "CodeBleu_score": 42.315153690627064}]}
{"instance_id": "b32d5862b6b1", "generation_result": [{"code": "function fillKey(key){\n\t\tconst filledKey = Buffer.alloc(16);\n\tif (key.length > 16) {\n\t\tkey = key.slice(0, 16);\n\t}\n\tkey.copy(filledKey);\n\treturn filledKey;\n}", "CodeBleu_score": 22.721046506968985}, {"code": "function fillKey(key){\n\t\tconst keyBuffer = Buffer.alloc(16);\n\tconst keyBufferLength = keyBuffer.write(key, 0, 'utf8');\n\treturn keyBuffer.slice(0, keyBufferLength);\n}", "CodeBleu_score": 20.78103971107289}, {"code": "function fillKey(key){\n\t\t// Ensure the key is a Buffer\n\tif (!Buffer.isBuffer(key)) {\n\t\tkey = Buffer.from(key);\n\t}\n\n\t// Ensure the key is exactly 16 bytes long\n\tif (key.length > 16) {\n\t\tkey = key.slice(0, 16);\n\t} else if (key.length < 16) {\n\t\t// Create a new buffer of length 16\n\t\tconst newKey = Buffer.alloc(16);\n\n\t\t// Copy the key into the new buffer\n\t\tkey.copy(newKey);\n\n\t\t// Fill the rest of the new buffer with zeroes\n\t\tfor (let i = key.length; i < 16; i++) {\n\t\t\tnewKey[i] = 0;\n\t\t}\n\n\t\t// Use the new buffer as the key\n\t\tkey = newKey;\n\t}\n\n\t// Return the filled key\n\treturn key;\n}", "CodeBleu_score": 37.872267900616635}]}
{"instance_id": "c839d19e0833", "generation_result": [{"code": "function rsaEncrypt(text, pubKey){\n\t\tif (text === \"\") {\n\t\treturn text;\n\t}\n\tvar encrypt = new JSEncrypt();\n\tencrypt.setPublicKey(pubKey);\n\treturn encrypt.encrypt(text);\n}", "CodeBleu_score": 59.70184942056902}, {"code": "function rsaEncrypt(text, pubKey){\n\t\tif (text === \"\") {\n\t\treturn text;\n\t}\n\tvar encryptor = new JSEncrypt();\n\tencryptor.setPublicKey(pubKey);\n\treturn encryptor.encrypt(text);\n}", "CodeBleu_score": 59.062809179270474}, {"code": "function rsaEncrypt(text, pubKey){\n\t\tif (text === \"\") {\n\t\treturn text;\n\t}\n\tvar encryptor = new JSEncrypt();\n\tencryptor.setPublicKey(pubKey);\n\treturn encryptor.encrypt(text);\n}", "CodeBleu_score": 59.062809179270474}]}
{"instance_id": "c73bc91399b9", "generation_result": [{"code": "function checkAll(id, name){\n\t\tvar cbs = document.getElementsByName(name);\n\tvar cb = document.getElementById(id);\n\tfor (var i = 0; i < cbs.length; i++) {\n\t\tcbs[i].checked = cb.checked;\n\t}\n}", "CodeBleu_score": 39.848923089698}, {"code": "function checkAll(id, name){\n\t\tvar checkboxes = document.getElementsByName(name);\n\tvar checked = document.getElementById(id).checked;\n\tfor (var i = 0; i < checkboxes.length; i++) {\n\t\tcheckboxes[i].checked = checked;\n\t}\n}", "CodeBleu_score": 38.215481175827975}, {"code": "function checkAll(id, name){\n\t\tvar master = document.getElementById(id);\n\tvar inputs = document.getElementsByName(name);\n\tfor (var i = 0; i < inputs.length; i++) {\n\t\tinputs[i].checked = master.checked;\n\t}\n}", "CodeBleu_score": 40.56950251621223}]}
{"instance_id": "5164f2c2d67e", "generation_result": [{"code": "function getCookie(name){\n\t\tif (document.cookie.length > 0) {\n\t\tvar cookies = document.cookie.split(\";\");\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = cookies[i].trim();\n\t\t\tif (cookie.substring(0, name.length + 1) == (name + \"=\")) {\n\t\t\t\treturn decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}", "CodeBleu_score": 49.36423008883397}, {"code": "function getCookie(name){\n\t\tif (document.cookie.length > 0) {\n\t\tvar cookies = document.cookie.split(';');\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = jQuery.trim(cookies[i]);\n\t\t\tif (cookie.substring(0, name.length + 1) == (name + '=')) {\n\t\t\t\treturn decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}", "CodeBleu_score": 57.698207456714144}, {"code": "function getCookie(name){\n\t\tif (document.cookie.length > 0) {\n\t\tlet cookies = document.cookie.split(';');\n\t\tfor (let i = 0; i < cookies.length; i++) {\n\t\t\tlet cookie = cookies[i];\n\t\t\tcookie = cookie.trim();\n\t\t\tif (cookie.indexOf(name) == 0) {\n\t\t\t\treturn decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}", "CodeBleu_score": 39.0473899254659}]}
{"instance_id": "7ce6dc0f1f24", "generation_result": [{"code": "def post(self, request)\n\t\n    image_model = self.get_image_model()\n    creation_form = self.get_creation_form(image_model)\n    if creation_form.is_valid():\n        image = self.save_form(creation_form)\n        duplicates = self.find_image_duplicates(image)\n        if duplicates:\n            return self.render_duplicate_found_response(image, duplicates)\n        if self.request.POST.get('select_format'):\n            return self.render_select_format_response(image)\n        else:\n            return self.get_chosen_response(image)\n    else:\n        return self.get_reshow_creation_form_response(creation_form)\n", "CodeBleu_score": 27.043188969333126}, {"code": "def post(self, request)\n\t\n    image_model = self.get_image_model()\n    form = self.get_creation_form(image_model)\n    if form.is_valid():\n        image = self.save_form(form)\n        duplicates = self.find_image_duplicates(image)\n        if duplicates.exists():\n            return self.render_duplicate_found_response(duplicates.first())\n        if self.request.POST.get('format_selection'):\n            return self.render_select_format_response(image)\n        else:\n            return self.get_chosen_response(image)\n    else:\n        return self.get_reshow_creation_form_response(form)\n\n", "CodeBleu_score": 27.357971759069933}, {"code": "def post(self, request)\n\t\n    image_model = self.get_image_model()\n    form = self.get_creation_form()\n    if form.is_valid():\n        image = self.save_form(form)\n        duplicates = self.find_image_duplicates(image)\n        if duplicates.exists():\n            return self.render_duplicate_found_response(duplicates.first())\n        if 'format_selection_requested' in request.POST:\n            return self.render_select_format_response(image)\n        return self.get_chosen_response(image)\n    else:\n        return self.get_reshow_creation_form_response(form)\n", "CodeBleu_score": 24.89312329054301}]}
{"instance_id": "2ee66e343cd1", "generation_result": [{"code": "def _annotate_queryset(self, pages)\n\t\n    # prefetch_related\n    pages = pages.prefetch_related(\n        \"content_type\",\n        \"content_type__model\",\n        \"content_type__app_label\",\n        \"content_type__wagtail_admin_form_fields\",\n        \"content_type__wagtail_content_type_for_pages\",\n        \"content_type__wagtail_content_type_for_pages__model\",\n        \"content_type__wagtail_content_type_for_pages__app_label\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_admin_form_fields\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__model\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__app_label\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__wagtail_admin_form_fields\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__wagtail_content_type_for_pages\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__wagtail_content_type_for_pages__model\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__wagtail_content_type_for_pages__app_label\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__wagtail_content_type_for_pages__wagtail_admin_form_fields\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__wagtail_content_type_for_pages__wagtail_content_type_for_pages\",\n        \"content_type__wagtail_content_type_for_pages__wagtail_content_type_for_pages__", "CodeBleu_score": 3.5654346576967657}, {"code": "def _annotate_queryset(self, pages)\n\t\n    # prefetch related content types\n    pages = pages.prefetch_related(\n        'content_type',\n        'content_type__model',\n        'content_type__app_label',\n    )\n    # prefetch related site roots\n    pages = pages.prefetch_related(\n        Prefetch(\n            'sites_rooted_here',\n            queryset=Site.objects.filter(is_default_site=True),\n            to_attr='site_root',\n        ),\n    )\n    # filter based on permissions\n    pages = pages.explorable_instances()\n    # defer streamfields\n    pages = pages.defer_streamfields()\n    # prefetch workflow states\n    if getattr(settings, 'WAGTAIL_WORKFLOW_ENABLED', False):\n        pages = pages.prefetch_workflow_states()\n    # annotate site root state\n    pages = pages.annotate_site_root_state()\n    # annotate approved schedule\n    pages = pages.annotate_approved_schedule()\n    return pages\n\n", "CodeBleu_score": 39.50693877209482}, {"code": "def _annotate_queryset(self, pages)\n\t\n    # prefetch related content types\n    pages = pages.prefetch_related(\n        \"content_type\",\n        \"content_type__model\",\n        \"content_type__fields\",\n        \"content_type__fields__page_chooser_target_model\",\n    )\n    # prefetch site root state\n    pages = pages.annotate_site_root_state()\n    # filter pages\n    pages = pages.explorable_instances()\n    # defer streamfields\n    pages = pages.defer_streamfields()\n    # prefetch workflow states\n    if settings.WAGTAIL_WORKFLOW_ENABLED:\n        pages = pages.prefetch_workflow_states()\n    # prefetch related objects\n    pages = pages.prefetch_related(\n        \"specific\",\n        \"specific__content_type\",\n        \"specific__content_type__model\",\n        \"specific__content_type__fields\",\n        \"specific__content_type__fields__page_chooser_target_model\",\n    )\n    # prefetch related objects\n    pages = pages.prefetch_related(\n        \"specific__content_type\",\n        \"specific__content_type__model\",\n        \"specific__content_type__fields\",\n        \"specific__content_type__fields__page_chooser_target_model\",\n    )\n    # annotate approved schedule\n    pages = pages.annotate_approved_schedule()\n    return pages\n", "CodeBleu_score": 29.501392664655718}]}
{"instance_id": "970bf123b037", "generation_result": [{"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        queryset = queryset.autocomplete(self.search_field)\n        if not queryset.ordered:\n            queryset = queryset.order_by(\"-search_vector\")\n    return queryset\n\n", "CodeBleu_score": 53.505458780688265}, {"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        if self.query_string:\n            queryset = queryset.autocomplete(self.query_string)\n        if not queryset.ordered:\n            queryset = queryset.order_by(\"-relevance\")\n    return queryset\n\n", "CodeBleu_score": 47.826786003769165}, {"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        queryset = self.get_search_results(queryset, self.query_string)\n        if not self.is_ordered:\n            queryset = queryset.order_by(\"-rank\")\n    return queryset\n\n", "CodeBleu_score": 54.02838107768194}]}
{"instance_id": "b2058bd51dfa", "generation_result": [{"code": "def user_can_access_snippets(user)\n\t\n    snippet_models = get_snippet_models()\n    for model in snippet_models:\n        if user_has_any_permission(user, model):\n            return True\n    return False\n", "CodeBleu_score": 32.71746328736942}, {"code": "def user_can_access_snippets(user)\n\t\n    snippet_models = get_snippet_models()\n    for model in snippet_models:\n        if user_has_any_permission(user, model):\n            return True\n    return False\n", "CodeBleu_score": 32.71746328736942}, {"code": "def user_can_access_snippets(user)\n\t\n    snippet_models = get_snippet_models()\n    for model in snippet_models:\n        if user_has_any_permission(user, model):\n            return True\n    return False\n", "CodeBleu_score": 32.71746328736942}]}
{"instance_id": "bf09fb693900", "generation_result": [{"code": "def get_auth_backends(self, request)\n\t\n    auth_backends = []\n    for backend_path in settings.AUTHENTICATION_BACKENDS:\n        backend = load_backend(backend_path)\n        backend_name = backend.__class__.__name__\n        if hasattr(backend, 'get_saml_idps'):\n            idps = backend.get_saml_idps(request)\n            for idp in idps:\n                auth_data = self.gen_auth_data(backend_name, idp, request)\n                auth_backends.append(auth_data)\n        else:\n            auth_data = self.gen_auth_data(backend_name, backend_name, request)\n            auth_backends.append(auth_data)\n    return auth_backends\n", "CodeBleu_score": 26.402624589442336}, {"code": "def get_auth_backends(self, request)\n\t\n    backends = []\n    for backend_path in settings.AUTHENTICATION_BACKENDS:\n        backend = load_backend(backend_path)\n        backends.append(backend)\n    for backend in backends:\n        backend_name = backend.__class__.__name__\n        if backend_name == \"SAMLAuthenticationBackend\":\n            idps = get_saml_idps()\n            for idp in idps:\n                auth_data = backend.gen_auth_data(idp)\n                if request.GET.get(\"next\"):\n                    auth_data[\"params\"][\"next\"] = request.GET.get(\"next\")\n                backends.append(auth_data)\n    return backends\n\n", "CodeBleu_score": 29.192929657886197}, {"code": "def get_auth_backends(self, request)\n\t\n    auth_backends = []\n    for backend_path in settings.AUTHENTICATION_BACKENDS:\n        backend = load_backend(backend_path)\n        if hasattr(backend, 'get_urls'):\n            url_list = backend.get_urls()\n            for url in url_list:\n                url['backend_name'] = backend_path\n            auth_backends.extend(url_list)\n    if 'next' in request.GET:\n        for backend in auth_backends:\n            backend['params'] += ('next=%s' % request.GET['next'],)\n    if settings.SAML2_ENABLED:\n        for idp in get_saml_idps():\n            for backend in auth_backends:\n                if backend['backend_name'] == 'saml2_auth.backends.Saml2Backend':\n                    backend_copy = copy.copy(backend)\n                    backend_copy['display_name'] = '%s (%s)' % (backend['display_name'], idp['display_name'])\n                    backend_copy['params'] = backend['params'] + ('idp=%s' % idp['entity_id'],)\n                    auth_backends.append(backend_copy)\n    return auth_backends\n", "CodeBleu_score": 28.775237842427813}]}
{"instance_id": "ea59163b25cc", "generation_result": [{"code": "def as_sql(self, qn, connection)\n\t\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s::inet << %s' % (lhs, rhs), params\n\n", "CodeBleu_score": 61.00262945697303}, {"code": "def as_sql(self, qn, connection)\n\t\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s >>= %s' % (lhs, rhs), params\n", "CodeBleu_score": 62.46110713721447}, {"code": "def as_sql(self, qn, connection)\n\t\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '(%s >>= %s)' % (lhs, rhs), params\n", "CodeBleu_score": 60.61551324089996}]}
{"instance_id": "6658ddec6820", "generation_result": [{"code": "def get_model_urls(app_label, model_name)\n\t\n    # Retrieve the views for the specified app label and model name from the registry, handling cases where no views are registered.\n    views = registry.get(app_label, {}).get(model_name, [])\n    # For each view configuration, import the view, either as a class or function, and create a URL path with the appropriate name and kwargs.\n    paths = []\n    for view in views:\n        view_ = import_string(view)\n        if issubclass(view_, View):\n            paths.append(\n                path(\n                    f\"{view_.url_path}/\",\n                    view_.as_view(),\n                    name=view_.url_name,\n                    kwargs={\"model_name\": model_name},\n                )\n            )\n        else:\n            paths.append(\n                path(\n                    f\"{view_.url_path}/\",\n                    view_,\n                    name=view_.url_name,\n                    kwargs={\"model_name\": model_name},\n                )\n            )\n    return paths\n", "CodeBleu_score": 25.651037603980566}, {"code": "def get_model_urls(app_label, model_name)\n\t\n    # Retrieve the model from the app registry\n    model = apps.get_model(app_label, model_name)\n    # Retrieve the registered views for the model\n    registered_views = registry.get(model, [])\n    # If no views are registered, return an empty list\n    if not registered_views:\n        return []\n    # Import the view module and iterate over the views\n    paths = []\n    for view_config in registered_views:\n        # Import the view\n        view_module, view_name = view_config.rsplit(\".\", 1)\n        view_ = import_string(view_module)\n        # If the view is a class, instantiate it\n        if issubclass(view_, View):\n            view_ = view_.as_view()\n        # Create the path\n        path_name = view_config.replace(\".\", \"_\")\n        path_name = path_name.replace(\":\", \"_\")\n        path_name = path_name.replace(\"-\", \"_\")\n        path_name = path_name.replace(\" \", \"_\")\n        path_name = path_name.replace(\"/\", \"_\")\n        path_name = path_name.replace(\"\\\\\", \"_\")\n        path_name = path_name.lower()\n        path_ = path(\n            f\"<str:pk>/{path_name}/\",\n            view_,\n            name=f\"{model._meta.app_label}_{model._meta.model_name}_{path_name}\",\n        )\n        paths.append(path_)\n    return paths\n\n", "CodeBleu_score": 31.626464499737555}, {"code": "def get_model_urls(app_label, model_name)\n\t\n    from django.apps import apps\n    from django.urls import path\n    from django.conf.urls import url\n\n    model = apps.get_registered_model(app_label, model_name)\n    if model is None:\n        return []\n    else:\n        model_name = model._meta.model_name\n        model_views = registry.get(model, [])\n        urls = []\n        for view_config in model_views:\n            view = view_config.view\n            if isinstance(view, str):\n                view = import_string(view)\n            if isinstance(view, type):\n                view = view.as_view()\n            name = view_config.name or view_config.view_name\n            if not name:\n                name = f\"{model_name}-{view_config.action}\"\n            if not name.startswith(model_name):\n                name = f\"{model_name}-{name}\"\n            kwargs = view_config.kwargs.copy()\n            if \"model\" not in kwargs:\n                kwargs[\"model\"] = model\n            if \"app_label\" not in kwargs:\n                kwargs[\"app_label\"] = app_label\n            if \"model_name\" not in kwargs:\n                kwargs[\"model_name\"] = model_name\n            urls.append(\n                path(\n                    f\"{view_config.url_path or ''}\",\n                    view,\n                    name=name,\n                    kwargs=kwargs,\n                )\n            )\n        return urls\n\n", "CodeBleu_score": 31.23940064288287}]}
{"instance_id": "9f4c69dfe312", "generation_result": [{"code": "def run_validators(instance, validators)\n\t\n    current_request = get_current_request()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator = importlib.import_module(validator)\n        if isinstance(validator, dict):\n            validator = CustomValidator(validator)\n        if not issubclass(validator, CustomValidator):\n            raise ImproperlyConfigured(\n                f\"{validator} is not a subclass of CustomValidator\"\n            )\n        validator(instance, current_request)\n\n", "CodeBleu_score": 36.292673625510666}, {"code": "def run_validators(instance, validators)\n\t\n    current_request = get_current_request()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_cls = import_module(validator)\n            if not issubclass(validator_cls, CustomValidator):\n                raise ImproperlyConfigured(\n                    f\"{validator} is not a subclass of CustomValidator\"\n                )\n            validator = validator_cls()\n        if isinstance(validator, dict):\n            validator = CustomValidator(**validator)\n        if not isinstance(validator, CustomValidator):\n            raise ImproperlyConfigured(\n                f\"{validator} is not a subclass of CustomValidator\"\n            )\n        validator.run(instance, current_request)\n", "CodeBleu_score": 33.67119726593775}, {"code": "def run_validators(instance, validators)\n\t\n    current_request = get_current_request()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator = importlib.import_module(validator)\n        if isinstance(validator, dict):\n            validator = CustomValidator(**validator)\n        if not issubclass(validator, CustomValidator):\n            raise ImproperlyConfigured(\n                f\"Validator {validator} is not a subclass of CustomValidator\"\n            )\n        validator.run(instance, current_request)\n", "CodeBleu_score": 33.33410730523204}]}
{"instance_id": "0b2ff7fe76f6", "generation_result": [{"code": "export function playMedia(destiny){\n\t\tlet panel = document.getElementById(destiny);\n\tlet videos = panel.querySelectorAll('video[data-autoplay]');\n\tlet audios = panel.querySelectorAll('audio[data-autoplay]');\n\tlet youtubes = panel.querySelectorAll('iframe[data-autoplay]');\n\n\tfor (let i = 0; i < videos.length; i++) {\n\t\tvideos[i].play();\n\t}\n\tfor (let i = 0; i < audios.length; i++) {\n\t\taudios[i].play();\n\t}\n\tfor (let i = 0; i < youtubes.length; i++) {\n\t\tlet youtube = youtubes[i];\n\t\tlet url = youtube.getAttribute('src');\n\t\tif (url.includes('youtube')) {\n\t\t\tplayYoutube(url, youtube);\n\t\t} else {\n\t\t\tyoutube.onload = function() {\n\t\t\t\tplayYoutube(url, youtube);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 30.080659185297083}, {"code": "export function playMedia(destiny){\n\t\tconst panel = document.getElementById(destiny);\n\tconst videoElements = panel.querySelectorAll('video[data-autoplay]');\n\tconst audioElements = panel.querySelectorAll('audio[data-autoplay]');\n\tconst youtubeElements = panel.querySelectorAll('iframe[data-autoplay]');\n\n\tfor (let i = 0; i < videoElements.length; i++) {\n\t\tvideoElements[i].play();\n\t}\n\n\tfor (let i = 0; i < audioElements.length; i++) {\n\t\taudioElements[i].play();\n\t}\n\n\tfor (let i = 0; i < youtubeElements.length; i++) {\n\t\tplayYoutube(youtubeElements[i]);\n\t}\n}", "CodeBleu_score": 28.49392416577486}, {"code": "export function playMedia(destiny){\n\t\tvar panel = document.querySelector(destiny);\n\tvar videoElements = panel.querySelectorAll('video[data-autoplay]');\n\tvar audioElements = panel.querySelectorAll('audio[data-autoplay]');\n\tvar youtubeElements = panel.querySelectorAll('iframe[data-autoplay]');\n\tfor (var i = 0; i < videoElements.length; i++) {\n\t\tvideoElements[i].play();\n\t}\n\tfor (var i = 0; i < audioElements.length; i++) {\n\t\taudioElements[i].play();\n\t}\n\tfor (var i = 0; i < youtubeElements.length; i++) {\n\t\tvar youtubeElement = youtubeElements[i];\n\t\tvar youtubeURL = youtubeElement.getAttribute('src');\n\t\tif (youtubeURL) {\n\t\t\tif (youtubeURL.indexOf('youtube') > -1) {\n\t\t\t\tplayYoutube(youtubeElement);\n\t\t\t} else {\n\t\t\t\tyoutubeElement.onload = function() {\n\t\t\t\t\tplayYoutube(youtubeElement);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 33.536682236547456}]}
{"instance_id": "12d28719c647", "generation_result": [{"code": "export function stopMedia(destiny){\n\t\tconst panel = getSlideOrSection(destiny);\n\tif (!panel) {\n\t\treturn;\n\t}\n\tutils.$('video, audio', panel).forEach(element => {\n\t\tif (!utils.getAttr(element, 'data-keepplaying')) {\n\t\t\telement.pause();\n\t\t}\n\t});\n\tutils.$('iframe[src*=\"youtube.com/embed/\"]', panel).forEach(element => {\n\t\tif (!utils.getAttr(element, 'data-keepplaying')) {\n\t\t\telement.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n\t\t}\n\t});\n}", "CodeBleu_score": 56.17196442642221}, {"code": "export function stopMedia(destiny){\n\t\tconst panel = getSlideOrSection(destiny);\n\tif (!panel) {\n\t\treturn;\n\t}\n\n\t// Pause HTML5 video and audio elements.\n\tutils.$('video, audio', panel).forEach(element => {\n\t\tif (!element.hasAttribute('data-keepplaying')) {\n\t\t\telement.pause();\n\t\t}\n\t});\n\n\t// Send a message to YouTube iframes to pause them.\n\tutils.$('iframe[src*=\"youtube.com/embed/\"]', panel).forEach(element => {\n\t\tif (!element.hasAttribute('data-keepplaying')) {\n\t\t\telement.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n\t\t}\n\t});\n}", "CodeBleu_score": 58.01345413170489}, {"code": "export function stopMedia(destiny){\n\tconst panel = getSlideOrSection(destiny);\nif (!panel) return;\nutils.$('video, audio', panel).forEach(element => {\nif (!element.hasAttribute('data-keepplaying')) element.pause();\n});\nutils.$('iframe[src*=\"youtube.com/embed/\"]', panel).forEach(element => {\nif (!element.hasAttribute('data-keepplaying')) element.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n});\n}", "CodeBleu_score": 53.29257259464004}]}
{"instance_id": "e0d58d76f87e", "generation_result": [{"code": "export function createSlideArrows(section){\n\t\tconst options = getOptions(section);\n\tconst slideWrapper = section.querySelector(`.${options.slideWrapperClass}`);\n\tconst prevArrow = utils.createElementFromHTML(options.prevArrowHTML);\n\tconst nextArrow = utils.createElementFromHTML(options.nextArrowHTML);\n\n\t// add classes to arrows\n\tutils.addClass(prevArrow, options.prevArrowClass);\n\tutils.addClass(nextArrow, options.nextArrowClass);\n\n\t// set arrow color\n\tprevArrow.style.color = options.arrowColor;\n\tnextArrow.style.color = options.arrowColor;\n\n\t// add arrows to slide wrapper\n\tslideWrapper.appendChild(prevArrow);\n\tslideWrapper.appendChild(nextArrow);\n\n\t// hide previous arrow if looping is disabled\n\tif (!options.loop) {\n\t\tutils.hide(prevArrow);\n\t}\n}", "CodeBleu_score": 22.88266024899589}, {"code": "export function createSlideArrows(section){\n\t\tconst {\n\t\tslideArrows,\n\t\tslidesToShow,\n\t\tslidesToScroll,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesToShow,\n\t\tslideCount,\n\t\tslidesToScroll,\n\t\tslidesTo", "CodeBleu_score": 1.411533701326041}, {"code": "export function createSlideArrows(section){\n\t\tconst sectionID = section.attr('id');\n\tconst sectionSlides = section.find(`.${config.slideClass}`);\n\tconst sectionSlidesLength = sectionSlides.length;\n\n\t// If the section has slides\n\tif (sectionSlidesLength > 0) {\n\t\tconst slideWrapper = section.find(`.${config.slideWrapperClass}`);\n\t\tconst prevArrow = utils.createElementFromHTML(config.prevArrowHTML);\n\t\tconst nextArrow = utils.createElementFromHTML(config.nextArrowHTML);\n\n\t\t// Add classes to arrows\n\t\tprevArrow.addClass(config.prevArrowClass);\n\t\tnextArrow.addClass(config.nextArrowClass);\n\n\t\t// Set color of arrows\n\t\tprevArrow.css('color', config.slideArrowColor);\n\t\tnextArrow.css('color', config.slideArrowColor);\n\n\t\t// If horizontal looping is enabled\n\t\tif (config.slideLoop) {\n\t\t\t// Add click event to arrows\n\t\t\tprevArrow.on('click', () => {\n\t\t\t\tslideWrapper.scrollLeft -= config.slideScrollDuration;\n\t\t\t});\n\t\t\tnextArrow.on('click', () => {\n\t\t\t\tslideWrapper.scrollLeft += config.slideScrollDuration;\n\t\t\t});\n\t\t}\n\t\t// If horizontal looping is disabled\n\t\telse {\n\t\t\t// Hide previous arrow\n\t\t\tprevArrow.addClass(config.prevArrowHiddenClass);\n\n\t\t\t// Add click event to next arrow\n\t\t\tnextArrow.on('click', () => {\n\t\t\t\tslideWrapper.scrollLeft += config.slideScrollDuration;\n\t\t\t});\n\t\t}\n\n\t\t// Append arrows to slide wrapper\n\t\tslideWrapper.append(prevArrow);\n\t\tslideWrapper.append(nextArrow);\n\t}\n}", "CodeBleu_score": 26.46228468517743}]}
{"instance_id": "09898985b216", "generation_result": [{"code": "function slideArrowHandler(){\n\t\tconst closestSection = utils.closest(this, \".slide\");\n\tconst isPrev = utils.hasClass(this, \"SLIDES_PREV\");\n\tif (isPrev && isLeftScrollAllowed) {\n\t\tsetState(closestSection);\n\t\tmoveSlideLeft();\n\t} else if (!isPrev && isRightScrollAllowed) {\n\t\tsetState(closestSection);\n\t\tmoveSlideRight();\n\t}\n}", "CodeBleu_score": 31.421311449452105}, {"code": "function slideArrowHandler(){\n\t\tvar closest = utils.closest(this, '.slide-section');\n\tvar isPrev = utils.hasClass(this, 'SLIDES_PREV');\n\tvar isRightScrollAllowed = getIsScrollAllowed();\n\tif (closest && isRightScrollAllowed !== isPrev) {\n\t\tsetState(closest.id);\n\t\tif (isPrev) {\n\t\t\tmoveSlideLeft();\n\t\t} else {\n\t\t\tmoveSlideRight();\n\t\t}\n\t}\n}", "CodeBleu_score": 32.79232974015268}, {"code": "function slideArrowHandler(){\n\t\tvar section = utils.closest(this, '.section');\n\tvar sectionIndex = sections.indexOf(section);\n\n\tif (utils.hasClass(this, 'SLIDES_PREV')) {\n\t\tif (getIsScrollAllowed('left')) {\n\t\t\tsetState(sectionIndex - 1);\n\t\t\tmoveSlideLeft();\n\t\t}\n\t} else {\n\t\tif (getIsScrollAllowed('right')) {\n\t\t\tsetState(sectionIndex + 1);\n\t\t\tmoveSlideRight();\n\t\t}\n\t}\n}", "CodeBleu_score": 41.33541613664232}]}
{"instance_id": "69ef3030fb15", "generation_result": [{"code": "export function addSlidesNavigation(section){\n\t\tvar bullets = [];\n\tvar bulletContainer;\n\tvar options = getOptions(section);\n\tvar bulletClass = options.bulletClass;\n\tvar bulletActiveClass = options.bulletActiveClass;\n\tvar bulletLinkClass = options.bulletLinkClass;\n\tvar bulletLinkActiveClass = options.bulletLinkActiveClass;\n\tvar bulletContainerClass = options.bulletContainerClass;\n\tvar bulletContainerPosition = options.bulletContainerPosition;\n\tvar bulletContainerZIndex = options.bulletContainerZIndex;\n\tvar bulletContainerMaxWidth = options.bulletContainerMaxWidth;\n\tvar bulletContainerMaxHeight = options.bulletContainerMaxHeight;\n\tvar bulletContainerMargin = options.bulletContainerMargin;\n\tvar bulletContainerPadding = options.bulletContainerPadding;\n\tvar bulletContainerBackgroundColor = options.bulletContainerBackgroundColor;\n\tvar bulletContainerOpacity = options.bulletContainerOpacity;\n\tvar bulletContainerTransition = options.bulletContainerTransition;\n\tvar bulletTransition = options.bulletTransition;\n\tvar bulletTransitionDuration = options.bulletTransitionDuration;\n\tvar bulletTransitionTimingFunction = options.bulletTransitionTimingFunction;\n\tvar bulletTransitionDelay = options.bulletTransitionDelay;\n\tvar bulletMargin = options.bulletMargin;\n\tvar bulletPadding = options.bulletPadding;\n\tvar bulletBorderRadius = options.bulletBorderRadius;\n\tvar bulletBackgroundColor = options.bulletBackgroundColor;\n\tvar bulletOpacity = options.bulletOpacity;\n\tvar bulletHoverTransition = options.bulletHoverTransition;\n\tvar bulletHoverTransitionDuration = options.bulletHoverTransitionDuration;\n\tvar bulletHoverTransitionTimingFunction = options.bulletHoverTransitionTimingFunction;\n\tvar bulletHoverTransitionDelay = options.bulletHoverTransitionDelay;\n\tvar bulletActiveBackgroundColor = options.bulletActiveBackgroundColor;\n\tvar bulletActiveOpacity = options.bulletActiveOpacity;\n\tvar bulletLinkPosition = options.bulletLinkPosition;\n\tvar bulletLinkWidth = options.bulletLinkWidth;\n\tvar bulletLinkHeight = options.bulletLinkHeight;\n\tvar bulletLinkMargin = options.bulletLinkMargin;\n\tvar bulletLinkPadding = options.bulletLinkPadding;\n\tvar bulletLinkBorderRadius = options.bulletLinkBorderRadius;\n\tvar bulletLinkBackgroundColor = options.bulletLinkBackgroundColor;\n\tvar bulletLinkOpacity = options.bulletLinkOpacity;\n", "CodeBleu_score": 19.072970467805124}, {"code": "export function addSlidesNavigation(section){\n\t\tconst options = getOptions(section);\n\tconst bulletsContainer = utils.createElementFromHTML(`\n\t\t<div class=\"slides-navigation\">\n\t\t\t<button class=\"slides-navigation-button slides-navigation-button-prev\" type=\"button\">\n\t\t\t\t<svg class=\"slides-navigation-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" />\n\t\t\t\t\t<path d=\"M0 0h24v24H0z\" fill=\"none\" />\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t\t<div class=\"slides-navigation-bullets\"></div>\n\t\t\t<button class=\"slides-navigation-button slides-navigation-button-next\" type=\"button\">\n\t\t\t\t<svg class=\"slides-navigation-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" />\n\t\t\t\t\t<path d=\"M0 0h24v24H0z\" fill=\"none\" />\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</div>\n\t`);\n\tconst bullets = bulletsContainer.querySelectorAll(\".slides-navigation-bullets\");\n\tconst bulletsContainerWidth = bulletsContainer.offsetWidth;\n\tconst bulletsContainerHeight = bulletsContainer.offsetHeight;\n\tconst bulletsContainerLeft = options.navigationPosition === \"right\"\n\t\t? section.offsetWidth - bulletsContainerWidth\n\t\t: 0;\n\tconst bulletsContainerTop = options.navigationPosition === \"bottom\"\n\t\t? section.offsetHeight - bulletsContainerHeight\n\t\t: 0;\n\tbulletsContainer.style.left = `${bulletsContainerLeft}px`;\n\tbulletsContainer.style.top = `${bulletsContainerTop}px", "CodeBleu_score": 20.77708643099801}, {"code": "export function addSlidesNavigation(section){\n\t\tconst options = getOptions(section);\n\tconst bullets = [];\n\tconst bulletContainer = utils.createElementFromHTML(\n\t\t`<div class=\"bullet-container\"></div>`\n\t);\n\tconst bulletContainerPosition = {\n\t\ttop: \"center\",\n\t\tbottom: \"center\",\n\t\tleft: \"center\",\n\t\tright: \"center\",\n\t};\n\tconst bulletContainerStyles = {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-between\",\n\t\talignItems: \"center\",\n\t};\n\n\tif (options.navigationPosition === \"top\") {\n\t\tbulletContainerPosition.bottom = 0;\n\t\tbulletContainerStyles.flexDirection = \"column\";\n\t} else if (options.navigationPosition === \"bottom\") {\n\t\tbulletContainerPosition.top = 0;\n\t\tbulletContainerStyles.flexDirection = \"column-reverse\";\n\t} else if (options.navigationPosition === \"left\") {\n\t\tbulletContainerPosition.right = 0;\n\t\tbulletContainerStyles.flexDirection = \"column\";\n\t} else if (options.navigationPosition === \"right\") {\n\t\tbulletContainerPosition.left = 0;\n\t\tbulletContainerStyles.flexDirection = \"column-reverse\";\n\t}\n\n\tif (options.navigationPosition === \"bottom\" || options.navigationPosition === \"top\") {\n\t\tbulletContainerStyles.justifyContent = \"center\";\n\t} else {\n\t\tbulletContainerStyles.justifyContent = \"space-between\";\n\t}\n\n\tbulletContainer.style = utils.css(bulletContainerPosition);\n\tbulletContainer.style = utils.css(bulletContainerStyles);\n\n\tfor (let i = 0; i < section.slides.length; i++) {\n\t\tconst bullet = utils.createElementFromHTML(\n\t\t\t`<div class=\"bullet\"></div>`\n\t\t);\n\t\tconst bulletLink = utils.createElementFromHTML(\n\t\t\t`<a href=\"#\"></a>`\n\t\t);\n\t\tbulletLink.innerText = getBulletLinkName(i);\n\t\tbulletLink.setAttribute(\"data-index\", i);\n\t\tbulletLink.addEventListener(\"click\", (e) => {\n\t\t\te.preventDefault();\n\t\t\tconst index = parseInt(e.target.getAttribute(\"data-index\"));\n\t\t\tgoToSlide(index, section);\n\t", "CodeBleu_score": 26.095019670035235}]}
{"instance_id": "d86cd1fd918a", "generation_result": [{"code": "function menuItemsHandler(e){\n\t\tif (e.target.closest('.' + config.menuClass)) {\n\t\tif (utils.getAttr(e.target, 'data-scroll-lock') || utils.getAttr(e.target, 'data-scroll-lock') === '') {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t} else {\n\t\t\tutils.preventDefault(e);\n\t\t\tutils.emitEvent(e.target, 'onMenuClick');\n\t\t}\n\t}\n}", "CodeBleu_score": 29.723017313431953}, {"code": "function menuItemsHandler(e){\n\t\tif (scrollTrigger.state === 'menu') {\n\t\tif (menu && !menu.anchorsLocked && !menu.anchors) {\n\t\t\tutils.preventDefault(e);\n\t\t\tscrollTrigger.emit('onMenuClick', utils.getAttr(this, 'data-anchor'));\n\t\t}\n\t}\n}", "CodeBleu_score": 25.299401971784864}, {"code": "function menuItemsHandler(e){\n\t\tvar target = e.target;\n\tif (target.tagName.toLowerCase() === 'a') {\n\t\tvar menu = target.closest('.scroll-menu');\n\t\tif (menu) {\n\t\t\tvar state = scrollTriggers.getState(menu);\n\t\t\tif (state === 'menu') {\n\t\t\t\tvar anchor = target.getAttribute('href');\n\t\t\t\tif (anchor && (anchor.charAt(0) === '#' || anchor.charAt(0) === '.')) {\n\t\t\t\t\tif (!utils.getAttr(anchor, 'data-scroll-lock') && !utils.getAttr(anchor, 'data-scroll-ignore')) {\n\t\t\t\t\t\tutils.preventDefault(e);\n\t\t\t\t\t\tscrollTriggers.emit(menu, 'onMenuClick', anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 34.65375845186577}]}
{"instance_id": "19fb16a46144", "generation_result": [{"code": "export function setScrolling(element, val){\n\t\tif (options.scrollingEnabled && !utils.hasClass(element, SLIDES_WRAPPER)) {\n\t\tconst scrollBarWidth = getScrollBarWidth();\n\t\tconst windowWidth = window.innerWidth;\n\t\tconst elementWidth = element.clientWidth;\n\t\tconst scrollWidth = element.scrollWidth;\n\t\tconst isOverflowing = elementWidth < scrollWidth;\n\t\tconst isWindow = element === window;\n\t\tconst isBody = element === document.body;\n\t\tconst isBodyWithOverflowingContent = isBody && isOverflowing;\n\t\tconst isBodyWithFixedPosition = isBody && element.style.position === 'fixed';\n\t\tconst isBodyWithAbsolutePosition = isBody && element.style.position === 'absolute';\n\t\tconst isBodyWithRelativePosition = isBody && element.style.position === 'relative';\n\t\tconst isBodyWithScrollingContent = isBody && element.scrollHeight > window.innerHeight;\n\t\tconst isElementWithOverflowingContent = !isBody && isOverflowing;\n\t\tconst isElementWithFixedPosition = !isBody && element.style.position === 'fixed';\n\t\tconst isElementWithAbsolutePosition = !isBody && element.style.position === 'absolute';\n\t\tconst isElementWithRelativePosition = !isBody && element.style.position === 'relative';\n\t\tconst isElementWithScrollingContent = !isBody && element.scrollHeight > element.clientHeight;\n\t\tconst isElementWithScrollBar = scrollBarWidth > 0;\n\t\tconst isElementWithScrollbars = isElementWithScrollBar && isElementWithOverflowingContent;\n\t\tconst isElementWithScrollbarsAndNoScrollBars = isElementWithScrollBar && !isElementWithOverflowingContent;\n\t\tconst isElementWithNoScrollbars = !isElementWithScrollBar && isElementWithOverflowingContent;\n\t\tconst isElementWithNoScrollbarsAndNoScrollBars = !isElementWithScrollBar && !isElementWithOverflowingContent;\n\t\tconst isElementWithNoScrollBarsAndScrollingContent = !isElementWithScrollBar && isElementWithScrollingContent;\n\t\tconst isElementWithNoScrollBarsAndNoScrollingContent = !isElementWithScrollBar && !isElementWithScrollingContent;\n\t\tconst isElementWithNoScrollBarsAndNoScrollingContentAndNoFixedPosition = !isElementWithScrollBar && !isElementWithScrollingContent && !isElementWithFixedPosition;", "CodeBleu_score": 25.346786726884236}, {"code": "export function setScrolling(element, val){\n\t\tif (options.autoScrolling || element.scrollHeight > element.clientHeight || element.className.indexOf(SLIDES_WRAPPER) > -1) {\n\t\tif (element.className.indexOf(SLIDES_WRAPPER) > -1) {\n\t\t\telement.scrollLeft = val;\n\t\t} else {\n\t\t\telement.scrollTo(0, val);\n\t\t}\n\t} else {\n\t\telement.style.top = val + 'px';\n\t}\n}", "CodeBleu_score": 42.138997466848934}, {"code": "export function setScrolling(element, val){\n\t\tif (options.autoScroll || element.scrollWidth > element.clientWidth || element.scrollHeight > element.clientHeight) {\n\t\tif (element.classList.contains(SLIDES_WRAPPER)) {\n\t\t\telement.scrollLeft = val;\n\t\t} else {\n\t\t\telement.scrollTo({\n\t\t\t\ttop: val,\n\t\t\t\tleft: 0,\n\t\t\t\tbehavior: \"smooth\"\n\t\t\t});\n\t\t}\n\t} else {\n\t\telement.style.top = val + \"px\";\n\t}\n}", "CodeBleu_score": 33.64320732096985}]}
{"instance_id": "09a10e1f1af9", "generation_result": [{"code": "function activateMenuElement(name){\n\t\tif (!getOptions() || !getOptions().menu) return;\n\tutils.$(getOptions().menu).forEach(function(menu) {\n\t\tvar $menuAnchors = utils.$(menu).find('.' + getOptions().activeClass);\n\t\tutils.removeClass($menuAnchors, getOptions().activeClass);\n\t\tvar $menuAnchor = utils.$(menu).find('[data-menuanchor=\"' + name + '\"]');\n\t\tutils.addClass($menuAnchor, getOptions().activeClass);\n\t});\n}", "CodeBleu_score": 44.52856989235004}, {"code": "function activateMenuElement(name){\n\t\tvar options = getOptions();\n\tif (options.menu && options.anchors) {\n\t\tutils.removeClass(utils.$$(options.menu).filter('.active'), 'active');\n\t\tutils.addClass(utils.$$(options.menu).filter('[data-menuanchor=\"' + name + '\"]'), 'active');\n\t}\n}", "CodeBleu_score": 29.790335002247847}, {"code": "function activateMenuElement(name){\n\t\tif (getOptions() && getOptions().menu) {\n\t\tutils.removeClass(utils.$('.active-menu'), 'active-menu');\n\t\tutils.addClass(utils.$('[data-menuanchor=\"' + name + '\"]')[0], 'active-menu');\n\t}\n}", "CodeBleu_score": 27.53389237121624}]}
{"instance_id": "4556a956fd7c", "generation_result": [{"code": "export function lazyLoadOthers(){\n\t\tif (lazyLoadEnabled && (responsive || autoHeight)) {\n\t\tsections.forEach(function(section) {\n\t\t\tif (isSectionInViewport(section) && !section.classList.contains(ACTIVE_CLASS)) {\n\t\t\t\tlazyLoad(section);\n\t\t\t}\n\t\t});\n\t}\n}", "CodeBleu_score": 17.077176657226886}, {"code": "export function lazyLoadOthers(){\n\t\tif (lazyLoadEnabled && (responsiveAutoHeight || autoHeight)) {\n\t\tvar $sections = $$(SECTION_SEL + ':not(' + ACTIVE_SEL + ')');\n\t\tfor (var i = 0; i < $sections.length; i++) {\n\t\t\tif (isSectionInViewport($sections[i])) {\n\t\t\t\tlazyLoad($sections[i]);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 28.439630678902038}, {"code": "export function lazyLoadOthers(){\n\t\tconst $sections = utils.$(SECTION_SEL);\n\tconst $activeSection = utils.$(ACTIVE_SEL);\n\n\tif (\n\t\tutils.autoHeightSections.length ||\n\t\tutils.isResponsiveMode\n\t) {\n\t\tutils.lazyLoad($sections.not($activeSection));\n\t}\n}", "CodeBleu_score": 19.842874007992613}]}
{"instance_id": "a4324e094376", "generation_result": [{"code": "function keepSlidesPosition(){\n\t\tvar activeSlides = $$(getSelector('.' + activeClass));\n\tfor (var i = 0; i < activeSlides.length; i++) {\n\t\tsilentLandscapeScroll(activeSlides[i], 'internal');\n\t}\n}", "CodeBleu_score": 52.90347464054644}, {"code": "function keepSlidesPosition(){\n\t\tvar activeSlides = getActiveSlides();\n\tfor (var i = 0; i < activeSlides.length; i++) {\n\t\tsilentLandscapeScroll(activeSlides[i], 'internal');\n\t}\n}", "CodeBleu_score": 51.01280300189256}, {"code": "function keepSlidesPosition(){\n\t\tvar activeSlides = getActiveSlides();\n\tfor (var i = 0; i < activeSlides.length; i++) {\n\t\tsilentLandscapeScroll(activeSlides[i], 'internal');\n\t}\n}", "CodeBleu_score": 51.01280300189256}]}
{"instance_id": "9eb664182655", "generation_result": [{"code": "export function updateStructuralState(){\n\tconst allSectionItems = utils.getContainer().querySelectorAll(", "CodeBleu_score": 6.449590709793303}, {"code": "export function updateStructuralState(){\n\t\tconst {\n\t\tstate,\n\t\tutils,\n\t} = this;\n\tconst {\n\t\tslideSelector,\n\t\tsectionSelector,\n\t\tsectionItemSelector,\n\t} = utils.selectors;\n\tconst allSectionItems = state.container.querySelectorAll(sectionItemSelector);\n\tconst allSections = Array.from(allSectionItems).map(utils.getSection);\n\tconst visibleSectionItems = allSectionItems.filter(utils.isElementVisible);\n\tconst visibleSections = visibleSectionItems.map(utils.getSection);\n\tconst visibleSlideItems = visibleSectionItems.reduce((acc, curr) => acc.concat(curr.querySelectorAll(slideSelector)), []);\n\tconst visibleSlides = visibleSlideItems.map(utils.getSlide);\n\tconst visiblePanels = visibleSections.reduce((acc, curr) => acc.concat(curr.panels), []);\n\tconst allPanels = visibleSections.reduce((acc, curr) => acc.concat(curr.panels), []);\n\tconst allSlides = visibleSections.reduce((acc, curr) => acc.concat(curr.slides), []);\n\tconst {\n\t\tactiveSectionIndex,\n\t\tactiveSlideIndex,\n\t} = state;\n\tconst prevActiveSectionIndex = getPrevActiveSectionIndex.call(this, activeSectionIndex, visibleSections);\n\tconst prevActiveSlideIndex = getPrevActiveSlideIndex.call(this, activeSlideIndex, visibleSlides);\n\tconst activeSection = visibleSections[activeSectionIndex] || null;\n\tconst activeSlide = visibleSlides[activeSlideIndex] || null;\n\tconst prevActiveSection = visibleSections[prevActiveSectionIndex] || null;\n\tconst prevActiveSlide = visibleSlides[prevActiveSlideIndex] || null;\n\tconst activePanel = activeSection ? activeSection.panels[activeSlideIndex] : null;\n\tconst prevActivePanel = prevActiveSection ? prevActiveSection.panels[prevActiveSlideIndex] : null;\n\tconst isFirstSlide = activeSlideIndex === 0;\n\tconst isLastSlide = activeSlideIndex === visibleSlides.length - 1;\n\tconst isFirstSection = activeSectionIndex === 0;\n\tconst isLastSection = activeSectionIndex === visibleSections.length - 1;\n\tconst isFirstPanel = activePanel === allPanels[0];\n\tconst is", "CodeBleu_score": 33.35919398739914}, {"code": "export function updateStructuralState(){\n\t\tconst {\n\t\tcontainer,\n\t\tstate,\n\t\tutils,\n\t\tslideCallbacks,\n\t} = this;\n\n\tconst allSectionItems = utils.getSectionItems(container);\n\tconst allSections = allSectionItems.filter(utils.getVisible);\n\tconst allSlides = utils.getSlides(allSections);\n\n\tconst sections = allSections.map(utils.createSection);\n\tconst slides = allSlides.map(utils.createSlide);\n\n\tconst allSectionPanels = utils.getSectionPanels(allSectionItems);\n\tconst visibleSectionPanels = allSectionPanels.filter(utils.getVisible);\n\n\tconst panels = visibleSectionPanels.map(utils.createPanel);\n\n\tconst prevActivePanelIndex = state.prevActivePanelIndex;\n\tconst activePanelIndex = state.activePanelIndex;\n\n\tconst activeSection = sections[activePanelIndex];\n\tconst activeSlide = slides[activePanelIndex];\n\n\tconst activeSectionIndex = sections.indexOf(activeSection);\n\tconst activeSlideIndex = slides.indexOf(activeSlide);\n\n\tconst prevActiveSection = sections[prevActivePanelIndex];\n\tconst prevActiveSlide = slides[prevActivePanelIndex];\n\n\tconst prevActiveSectionIndex = sections.indexOf(prevActiveSection);\n\tconst prevActiveSlideIndex = slides.indexOf(prevActiveSlide);\n\n\tstate.sections = sections;\n\tstate.slides = slides;\n\tstate.panels = panels;\n\n\tstate.prevActiveSectionIndex = prevActiveSectionIndex;\n\tstate.prevActiveSlideIndex = prevActiveSlideIndex;\n\n\tstate.activeSectionIndex = activeSectionIndex;\n\tstate.activeSlideIndex = activeSlideIndex;\n\n\tstate.totalSections = sections.length;\n\tstate.totalSlides = slides.length;\n\n\tstate.isFirstSlide = activeSlideIndex === 0;\n\tstate.isLastSlide = activeSlideIndex === slides.length - 1;\n\n\tstate.isFirstSection = activeSectionIndex === 0;\n\tstate.isLastSection = activeSectionIndex === sections.length - 1;\n\n\tstate.isFirstPanel = activePanelIndex === 0;\n\tstate.isLastPanel = activePanelIndex === panels.length - 1;\n\n\tstate.isLastSlideInSection = activeSlideIndex === slides.length - ", "CodeBleu_score": 35.36658517733127}]}
{"instance_id": "2b3c1077db45", "generation_result": [{"code": "function performHorizontalMove(slides, v, fireCallback){\n\t\tvar $slides = $(slides);\n\tvar options = getOptions($slides);\n\tvar transforms = getTransforms($slides);\n\tvar current = options.current;\n\tvar $slideTrack = $slides.find('.' + options.slideTrackClass);\n\tvar slideTrackWidth = $slideTrack.width();\n\tvar slideTrackLeft = parseInt($slideTrack.css('left'), 10);\n\tvar $slideTrackWrapper = $slides.find('.' + options.slideTrackWrapperClass);\n\tvar slideTrackWrapperWidth = $slideTrackWrapper.width();\n\tvar slideTrackWrapperLeft = parseInt($slideTrackWrapper.css('left'), 10);\n\tvar slideTrackWrapperRight = slideTrackWrapperWidth - slideTrackWrapperLeft - slideTrackWidth;\n\tvar $activeSlide = $slides.find('.' + options.activeSlideClass);\n\tvar activeSlideWidth = $activeSlide.width();\n\tvar activeSlideLeft = parseInt($activeSlide.css('left'), 10);\n\tvar activeSlideRight = activeSlideWidth - activeSlideLeft - slideTrackWidth;\n\tvar slideTrackWrapperNewLeft = slideTrackWrapperLeft;\n\tvar slideTrackNewLeft = slideTrackLeft;\n\tvar slideTrackWrapperNewRight = slideTrackWrapperRight;\n\tvar slideTrackNewRight = slideTrackRight;\n\tvar $slideTrackWrapperNew = $slideTrackWrapper;\n\tvar $slideTrackNew = $slideTrack;\n\tvar $activeSlideNew = $activeSlide;\n\tvar slideTrackWrapperNewWidth = slideTrackWrapperWidth;\n\tvar slideTrackNewWidth = slideTrackWidth;\n\tvar $slideTrackWrapperNewWrapper = $slideTrackWrapper;\n\tvar slideTrackWrapperNewWrapperWidth = slideTrackWrapperWidth;\n\tvar slideTrackWrapperNewWrapperLeft = slideTrackWrapperLeft;\n\tvar slideTrackNewWrapperLeft = slideTrackLeft;\n\tvar slideTrackWrapperNewWrapperRight = slideTrackWrapperRight;\n\tvar slideTrackNewWrapperRight = slideTrackRight;\n\tvar $slideTrackWrapperNewWrapperNew = $slideTrackWrapperNewWrapper;\n\tvar $slideTrackNewNew = $slideTrackNew;\n\tvar $activeSlideNewNew = $activeSlideNew;\n\tvar slideTrackWrapperNewWrapperNewWidth = slideTrackWrapperNewWrapperWidth;\n\tvar", "CodeBleu_score": 24.8987714066409}, {"code": "function performHorizontalMove(slides, v, fireCallback){\n\t\tvar options = getOptions();\n\tvar transforms = getTransforms();\n\tvar current = slides.index(slides.filter('.' + options.slideActiveClass));\n\tvar dest = slides.index(slides.filter('.' + options.slideNextClass));\n\tvar callback = fireCallback;\n\tvar slideNav = slides.parent().find('.' + options.slideNavCurrentClass);\n\tvar slideNavNext = slides.parent().find('.' + options.slideNavNextClass);\n\tvar slideNavPrev = slides.parent().find('.' + options.slideNavPrevClass);\n\tvar slideNavCurrent = slideNav.find('.' + options.slideNavCurrentClass);\n\tvar slideNavNext = slideNav.find('.' + options.slideNavNextClass);\n\tvar slideNavPrev = slideNav.find('.' + options.slideNavPrevClass);\n\tvar slideNavCurrentText = slideNavCurrent.text();\n\tvar slideNavNextText = slideNavNext.text();\n\tvar slideNavPrevText = slideNavPrev.text();\n\tvar slideNavCurrentText = slideNavCurrent.text();\n\tvar slideNavNextText = slideNavNext.text();\n\tvar slideNavPrevText = slideNavPrev.text();\n\tvar slideNavCurrentText = slideNavCurrent.text();\n\tvar slideNavNextText = slideNavNext.text();\n\tvar slideNavPrevText = slideNavPrev.text();\n\tvar slideNavCurrentText = slideNavCurrent.text();\n\tvar slideNavNextText = slideNavNext.text();\n\tvar slideNavPrevText = slideNavPrev.text();\n\tvar slideNavCurrentText = slideNavCurrent.text();\n\tvar slideNavNextText = slideNavNext.text();\n\tvar slideNavPrevText = slideNavPrev.text();\n\tvar slideNavCurrentText = slideNavCurrent.text();\n\tvar slideNavNextText = slideNavNext.text();\n\tvar slideNavPrevText = slideNavPrev.text();\n\tvar slideNavCurrentText = slideNavCurrent.text();\n\tvar slideNavNextText = slideNavNext.text();\n\tvar slideNavPrevText = slideNavPrev.text();\n\tvar slideNavCurrentText = slideNavCurrent.text();\n\tvar slideNavNextText = slideNavNext", "CodeBleu_score": 22.281407180929314}, {"code": "function performHorizontalMove(slides, v, fireCallback){\n\t\tvar options = getOptions();\n\tvar transforms = getTransforms();\n\tvar slideNav = slides.parent().find('.' + options.slideNavClass);\n\tvar slideNavWidth = slideNav.width();\n\tvar slidesWidth = slides.width();\n\tvar slidesWrapperWidth = slides.parent().width();\n\tvar slidesWrapper = slides.parent();\n\tvar slidesWrapperLeft = slidesWrapper.position().left;\n\tvar slidesWrapperRight = slidesWrapperLeft + slidesWrapperWidth;\n\tvar slidesWrapperTop = slidesWrapper.position().top;\n\tvar slidesWrapperBottom = slidesWrapperTop + slidesWrapperHeight;\n\tvar slidesWrapperOffset = slidesWrapper.offset();\n\tvar slidesWrapperOffsetLeft = slidesWrapperOffset.left;\n\tvar slidesWrapperOffsetTop = slidesWrapperOffset.top;\n\tvar slidesWrapperOffsetRight = slidesWrapperOffsetLeft + slidesWrapperWidth;\n\tvar slidesWrapperOffsetBottom = slidesWrapperOffsetTop + slidesWrapperHeight;\n\tvar slidesWrapperScrollLeft = slidesWrapper.scrollLeft();\n\tvar slidesWrapperScrollTop = slidesWrapper.scrollTop();\n\tvar slidesWrapperScrollRight = slidesWrapperScrollLeft + slidesWrapperWidth;\n\tvar slidesWrapperScrollBottom = slidesWrapperScrollTop + slidesWrapperHeight;\n\tvar slideNavLeft = slideNav.position().left;\n\tvar slideNavRight = slideNavLeft + slideNavWidth;\n\tvar slideNavTop = slideNav.position().top;\n\tvar slideNavBottom = slideNavTop + slideNavHeight;\n\tvar slideNavOffset = slideNav.offset();\n\tvar slideNavOffsetLeft = slideNavOffset.left;\n\tvar slideNavOffsetTop = slideNavOffset.top;\n\tvar slideNavOffsetRight = slideNavOffsetLeft + slideNavWidth;\n\tvar slideNavOffsetBottom = slideNavOffsetTop + slideNavHeight;\n\tvar slideNavScrollLeft = slideNav.scrollLeft();\n\tvar slideNavScrollTop = slideNav.scrollTop();\n\tvar slideNavScrollRight = slideNavScrollLeft + slideNavWidth;\n\tvar slideNavScrollBottom = slideNavScrollTop + slideNavHeight;\n\tvar slidesContainer = slides.parent().parent();\n\tvar slidesContainerWidth = slidesContainer.width();\n\tvar slidesContainerHeight = slidesContainer.height();\n\tvar slidesContainerLeft = slidesContainer.", "CodeBleu_score": 22.542381346519942}]}
{"instance_id": "82491a251576", "generation_result": [{"code": "buildLink (name: string, params: Record<string, any>): string{\n\t\tconst keys: string[] = Object.keys(params);\n\tkeys.sort();\n\tlet query: string = '';\n\tfor (const key of keys) {\n\t\tconst value = params[key];\n\t\tif (value === undefined) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (query) {\n\t\t\tquery += '&';\n\t\t}\n\t\tquery += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n\t}\n\tif (query) {\n\t\tname += '?' + query;\n\t}\n\treturn name;\n}", "CodeBleu_score": 35.47828532863888}, {"code": "buildLink (name: string, params: Record<string, any>): string{\n\t\tconst keys = Object.keys(params).sort();\n\tconst query = keys.map(key => `${key}=${encodeURIComponent(params[key])}`).join('&');\n\treturn name + (query ? `?${query}` : '');\n}", "CodeBleu_score": 45.66641804109569}, {"code": "buildLink (name: string, params: Record<string, any>): string{\n\t\tconst keys = Object.keys(params).sort();\n\tlet query = '';\n\tfor (const key of keys) {\n\t\tif (query) {\n\t\t\tquery += '&';\n\t\t}\n\t\tquery += encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n\t}\n\treturn name + '?' + query.replace(/&$/, '');\n}", "CodeBleu_score": 47.84740070581051}]}
{"instance_id": "89f175570176", "generation_result": [{"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\t\treturn new Promise(resolve => {\n\t\tif (typeof options !== 'object') {\n\t\t\tconsole.error('options must be an object')\n\t\t\treturn\n\t\t}\n\t\tconst title = options.title || ''\n\t\tconst mask = !!options.mask\n\t\tconst icon = options.icon || 'loading'\n\t\tconst duration = options.duration || 0\n\t\tconst success = options.success\n\t\tconst fail = options.fail\n\t\tconst complete = options.complete\n\t\tconst res = { errMsg: 'showToast:ok' }\n\t\tconst params = {\n\t\t\ttitle,\n\t\t\ticon,\n\t\t\tduration,\n\t\t\tmask,\n\t\t\tsuccess (res) {\n\t\t\t\tsuccess && success(res)\n\t\t\t\tresolve(res)\n\t\t\t},\n\t\t\tfail (res) {\n\t\t\t\tfail && fail(res)\n\t\t\t\tresolve(res)\n\t\t\t},\n\t\t\tcomplete (res) {\n\t\t\t\tcomplete && complete(res)\n\t\t\t\tresolve(res)\n\t\t\t}\n\t\t}\n\t\tshowToast(params)\n\t})\n}", "CodeBleu_score": 29.31081233985057}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\t\n}", "CodeBleu_score": 3.345580777590417}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\treturn new Promise<TaroGeneral.CallbackResult>(resolve => {\n  const res = { errMsg: 'showToast:ok' }\n  const { title, mask, success, fail, complete } = options || {}\n  if (typeof title !== 'string') {\n    console.error('showToast failed')\n    res.errMsg = 'showToast:fail invalid title'\n    if (typeof fail === 'function') {\n      fail(res)\n    }\n    if (typeof complete === 'function') {\n      complete(res)\n    }\n    return\n  }\n  const obj: TaroGeneral.CallbackResult = { errMsg: 'showToast:ok' }\n  if (typeof success === 'function') {\n    obj.errMsg = 'showToast:ok'\n    success(obj)\n  }\n  if (typeof complete === 'function') {\n    complete(obj)\n  }\n  resolve(res)\n})\n}", "CodeBleu_score": 34.10540126915024}]}
{"instance_id": "7d41757a0645", "generation_result": [{"code": "export function HomepageTweets(){\n\t\tconst [tweetList, setTweetList] = useState([]);\n\tconst [tweetListError, setTweetListError] = useState(false);\n\n\tconst getTweets = async () => {\n\t\ttry {\n\t\t\tconst res = await fetch(\"/api/tweets\");\n\t\t\tconst data = await res.json();\n\t\t\tsetTweetList(data);\n\t\t\tsetTweetListError(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tsetTweetListError(true);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetTweets();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"homepage-tweets-container\">\n\t\t\t<h2 className=\"homepage-tweets-heading\">Latest Tweets</h2>\n\t\t\t{tweetListError ? (\n\t\t\t\t<div className=\"homepage-tweets-error\">\n\t\t\t\t\t<p>There was an error loading tweets.</p>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"homepage-tweets-row\">\n\t\t\t\t\t{tweetList.map((tweet) => (\n\t\t\t\t\t\t<Tweet\n\t\t\t\t\t\t\tkey={tweet.id}\n\t\t\t\t\t\t\tid={tweet.id}\n\t\t\t\t\t\t\tauthor={tweet.author}\n\t\t\t\t\t\t\tcontent={tweet.content}\n\t\t\t\t\t\t\tcreated_at={tweet.created_at}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}", "CodeBleu_score": 33.17467775081694}, {"code": "export function HomepageTweets(){\n\t\tconst [tweets, setTweets] = useState([]);\n\tconst [error, setError] = useState(false);\n\tconst [loading, setLoading] = useState(true);\n\n\tconst fetchTweets = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\"/tweets\");\n\t\t\tconst data = await response.json();\n\t\t\tsetTweets(data);\n\t\t\tsetLoading(false);\n\t\t} catch (err) {\n\t\t\tsetError(err.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetchTweets();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"homepage-tweets-container\">\n\t\t\t<h1 className=\"homepage-tweets-heading\">\n\t\t\t\t<i className=\"fas fa-home\"></i> Recent Tweets\n\t\t\t</h1>\n\t\t\t<div className=\"homepage-tweets-row\">\n\t\t\t\t{loading ? (\n\t\t\t\t\t<div className=\"homepage-tweets-loader\">\n\t\t\t\t\t\t<div className=\"loader\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t) : error ? (\n\t\t\t\t\t<p className=\"homepage-tweets-error\">{error}</p>\n\t\t\t\t) : tweets.length === 0 ? (\n\t\t\t\t\t<p className=\"homepage-tweets-error\">No tweets found.</p>\n\t\t\t\t) : (\n\t\t\t\t\ttweets.map((tweet) => (\n\t\t\t\t\t\t<Tweet\n\t\t\t\t\t\t\tkey={tweet._id}\n\t\t\t\t\t\t\tauthor={tweet.author}\n\t\t\t\t\t\t\tcontent={tweet.content}\n\t\t\t\t\t\t\tdate={tweet.date}\n\t\t\t\t\t\t\tlikes={tweet.likes}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}", "CodeBleu_score": 41.671499087581395}, {"code": "export function HomepageTweets(){\n\t\tconst [tweets, setTweets] = useState(null);\n\n\tuseEffect(() => {\n\t\tfetch('/api/tweets', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => setTweets(data));\n\t}, []);\n\n\treturn (\n\t\t<div className='homepage-tweets'>\n\t\t\t<h1 className='homepage-tweets-heading'>Recent Tweets</h1>\n\t\t\t<div className='homepage-tweets-container'>\n\t\t\t\t{tweets &&\n\t\t\t\t\ttweets.map((tweet) => (\n\t\t\t\t\t\t<Tweet\n\t\t\t\t\t\t\tkey={tweet.id}\n\t\t\t\t\t\t\tusername={tweet.username}\n\t\t\t\t\t\t\tcontent={tweet.content}\n\t\t\t\t\t\t\ttimestamp={tweet.timestamp}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}", "CodeBleu_score": 30.18063496223759}]}
