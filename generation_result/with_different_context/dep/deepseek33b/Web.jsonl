{"instance_id": "112855ce32e1", "generation_result": [{"code": "handleOpenMarketplace = (): void => {\n\t    const source = 'actions_menu';\n    const modalId = 'marketplace';\n    const dialogType = ModalIdentifiers.MARKETPLACE;\n    const dialogProps = {\n        source,\n        modalId,\n    };\n    this.props.actions.openModal({modalId, dialogType, dialogProps});\n}", "CodeBleu_score": 37.25200374898112}, {"code": "handleOpenMarketplace = (): void => {\n\t    const source = 'actions_menu';\n    const dialogProps = {\n        modalId: MarketplaceModal.MODAL_ID,\n        dialogType: MarketplaceModal,\n        dialogProps: {\n            source,\n        },\n    };\n\n    this.props.actions.openModal(dialogProps);\n}", "CodeBleu_score": 55.92200517527589}, {"code": "handleOpenMarketplace = (): void => {\n\t    const source = 'actions_menu';\n    const modalData = {\n        modalId: ModalIdentifiers.MARKETPLACE,\n        dialogType: MarketplaceModal,\n        dialogProps: {\n            source,\n        },\n    };\n\n    this.props.actions.openModal(modalData);\n}", "CodeBleu_score": 57.535022014023326}]}
{"instance_id": "421836df0bf0", "generation_result": [{"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\t    const context = createCallContext(\n        binding.app_id,\n        binding.location,\n        this.props.channelId,\n        this.props.teamId,\n        this.props.postId,\n        this.props.rootPostId,\n    );\n\n    try {\n        const response = await this.props.actions.handleBindingClick(binding, context, intl);\n        if (response.type === 'OK') {\n            this.props.actions.postEphemeralCallResponseForPost(response.text, this.props.postId, this.props.rootPostId);\n        } else if (response.type === 'NAVIGATE') {\n            this.props.actions.handleAppBindingNavigate(response.url, response.inNewTab);\n        } else if (response.type === 'FORM') {\n            this.props.actions.openAppsModal(response.form);\n        } else {\n            this.props.actions.postEphemeralCallResponseForPost(\n                intl.formatMessage({\n                    id: 'interactive_apps.error.unsupported_response_type',\n                    defaultMessage: 'App response type not supported. Response type: {type}.',\n                }, {\n                    type: response.type,\n                }),\n                this.props.postId,\n                this.props.rootPostId,\n            );\n        }\n    } catch (error) {\n        this.props.actions.postEphemeralCallResponseForPost(\n            intl.formatMessage({\n                id: 'interactive_apps.error.response',\n                defaultMessage: 'There was an error with the app response.',\n            }),\n            this.props.postId,\n            this.props.rootPostId,\n        );\n    }\n}", "CodeBleu_score": 44.97089930102174}, {"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\t", "CodeBleu_score": 0.6236642144069483}, {"code": "onClickAppBinding = async (binding: AppBinding) =>{\n\t    const context = createCallContext(\n        binding.app_id,\n        binding.location,\n        this.props.channelId,\n        this.props.teamId,\n        this.props.postId,\n        this.props.rootPostId,\n    );\n\n    try {\n        const response = await this.props.actions.handleBindingClick(binding, context);\n        if (response.type === AppCallResponseTypes.OK) {\n            this.props.actions.postEphemeralCallResponseForPost(response, this.props.postId, this.props.rootPostId);\n        } else if (response.type === AppCallResponseTypes.NAVIGATE) {\n            handleNavigation(response.text, this.props.actions.openAppsModal);\n        } else if (response.type === AppCallResponseTypes.FORM) {\n            this.props.actions.openAppsModal(response.form);\n        } else {\n            this.props.actions.postEphemeralCallResponseForPost(\n                {\n                    type: AppCallResponseTypes.ERROR,\n                    text: intl.formatMessage({\n                        id: 'apps.error.responses.unsupported',\n                        defaultMessage: 'App response type not supported: {type}',\n                    }, {\n                        type: response.type,\n                    }),\n                },\n                this.props.postId,\n                this.props.rootPostId,\n            );\n        }\n    } catch (error) {\n        this.props.actions.postEphemeralCallResponseForPost(\n            {\n                type: AppCallResponseTypes.ERROR,\n                text: intl.formatMessage({\n                    id: 'apps.error.request.failed',\n                    defaultMessage: 'Failed to enable app',\n                }),\n            },\n            this.props.postId,\n            this.props.rootPostId,\n        );\n    }\n}", "CodeBleu_score": 38.84338637965901}]}
{"instance_id": "7b2d58ae93e2", "generation_result": [{"code": "handleDropdownOpened = (open: boolean) =>{\n\t  if (!open) {\n    this.setState({\n      dropdownOpened: false,\n    });\n    return;\n  }\n\n  const {\n    buttonRef,\n    handleDropdownOpened: handleDropdownOpenedProp,\n  } = this.props;\n\n  const buttonRect = buttonRef.current.getBoundingClientRect();\n\n  const availableSpaceAbove = buttonRect.top;\n  const availableSpaceBelow = window.innerHeight - buttonRect.bottom;\n\n  this.setState(\n    {\n      dropdownOpened: true,\n      dropdownOpenedUpwards: availableSpaceAbove > availableSpaceBelow,\n    },\n    () => {\n      if (handleDropdownOpenedProp) {\n        handleDropdownOpenedProp(open);\n      }\n    }\n  );\n}", "CodeBleu_score": 29.531813152621904}, {"code": "handleDropdownOpened = (open: boolean) =>{\n\t  const { handleDropdownState } = this.props;\n  if (open) {\n    const buttonRect = this.buttonRef.current.getBoundingClientRect();\n    const { height, top } = buttonRect;\n    const spaceAbove = top;\n    const spaceBelow = window.innerHeight - (top + height);\n    this.setState({\n      dropdownOpened: true,\n      dropdownOpenedUpwards: spaceAbove > spaceBelow,\n    });\n  } else {\n    this.setState({\n      dropdownOpened: false,\n    });\n  }\n  handleDropdownState(open);\n}", "CodeBleu_score": 29.13023656334206}, {"code": "handleDropdownOpened = (open: boolean) =>{\n\t    const {\n        dropdownButtonRef,\n        dropdownContentRef,\n        onDropdownOpened,\n    } = this.props;\n\n    if (onDropdownOpened) {\n        onDropdownOpened(open);\n    }\n\n    if (open) {\n        const dropdownButtonRect = dropdownButtonRef.current.getBoundingClientRect();\n        const dropdownContentRect = dropdownContentRef.current.getBoundingClientRect();\n        const dropdownButtonTop = dropdownButtonRect.top;\n        const dropdownButtonBottom = dropdownButtonRect.bottom;\n        const dropdownContentHeight = dropdownContentRect.height;\n        const dropdownButtonHeight = dropdownButtonRect.height;\n        const availableSpaceAbove = dropdownButtonTop;\n        const availableSpaceBelow = window.innerHeight - dropdownButtonBottom;\n        const openUpwards = availableSpaceAbove > availableSpaceBelow;\n        const top = openUpwards ? dropdownButtonTop - dropdownContentHeight : dropdownButtonBottom;\n        const bottom = openUpwards ? dropdownButtonTop + dropdownButtonHeight : dropdownButtonBottom + dropdownContentHeight;\n\n        this.setState({\n            openUpwards,\n            top,\n            bottom,\n        });\n    }\n}", "CodeBleu_score": 25.20884242362523}]}
{"instance_id": "024f57c26061", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\t    const post = ownProps.post;\n    const isSystemMessage = post && isSystemMessagePost(post);\n\n    const showAppBindings = !isSystemMessage && !isFromWebhook(post) && isValidPost(post) && !isPostEphemeral(post) && !isPostPendingOrFailed(post);\n    const appBindings = showAppBindings ? getAppBindings(state, post.id) : [];\n    const appsEnabled = isSystemMessage || (Boolean(appBindings?.length) && !isFromWebhook(post));\n\n    const pluginComponents = getPluginComponents(state);\n\n    const userRoles = getCurrentUserId(state) ? getRoles(state) : '';\n    const teamId = getCurrentTeamId(state);\n    const isMobileView = isMobile();\n\n    const marketplaceAccess = getMarketplaceAccess(state);\n\n    return {\n        appBindings,\n        appsEnabled,\n        pluginComponents,\n        userRoles,\n        teamId,\n        isMobileView,\n        marketplaceAccess,\n    };\n}", "CodeBleu_score": 40.75830249205826}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\t    const post = ownProps.post;\n    const isSystemMessage = isSystemMessagePost(post);\n    const showAppBindings = !isSystemMessage && state.entities.general.config.EnableAppBar && post.props.app_id && post.props.app_id !== '' && !isFromWebhook(post);\n    const appBindings = showAppBindings ? getAppBindings(state, post.props.app_id) : [];\n    const appsEnabled = state.entities.general.config.EnableApps === 'true';\n    const pluginComponents = state.plugins.components.AppBinding;\n    const userRoles = getCurrentUserId(state) ? getRoles(state) : '';\n    const teamId = getCurrentTeamId(state);\n    const isMobile = state.views.mobile;\n    const marketplaceAccess = isCurrentUserSystemAdmin(state) && state.entities.admin.config.PluginSettings.EnableMarketplace;\n\n    return {\n        appBindings,\n        appsEnabled,\n        pluginComponents,\n        userRoles,\n        teamId,\n        isMobile,\n        marketplaceAccess,\n    };\n}", "CodeBleu_score": 44.395685553205276}, {"code": "function mapStateToProps(state: GlobalState, ownProps: Props){\n\t    const post = getPost(state, ownProps.postId);\n    const isSystemMessage = isSystemMessagePost(post);\n\n    const showAppBindings = shouldShowAppBindings(state, post) && !isSystemMessage;\n    const appsEnabled = isAppsEnabled(state);\n    const pluginComponents = getPluginComponents(state);\n    const userRoles = getCurrentUserRoles(state);\n    const teamId = getCurrentTeamId(state);\n    const mobileView = isMobileView(state);\n    const marketplaceAccess = getMarketplaceAccess(state);\n\n    return {\n        appBindings: showAppBindings ? getAppBindingsForLocation(state, '/' + teamId + '/channels/' + post.channel_id) : [],\n        appsEnabled,\n        pluginComponents,\n        userRoles,\n        teamId,\n        mobileView,\n        marketplaceAccess,\n    };\n}", "CodeBleu_score": 40.00993407686908}]}
{"instance_id": "ae0a07f4dbea", "generation_result": [{"code": "export default function DeviceIcon(props: Props){\n\t  const intl = useIntl();\n  const { deviceTitle, devicePicture } = props;\n  const title =\n    typeof deviceTitle === \"object\"\n      ? intl.formatMessage(deviceTitle)\n      : deviceTitle;\n  return (\n    <i\n      className={devicePicture}\n      title={title}\n      aria-hidden=\"true\"\n    />\n  );\n}", "CodeBleu_score": 45.150495818669036}, {"code": "export default function DeviceIcon(props: Props){\n\t  const intl = useIntl();\n  const title = isMessageDescriptor(props.deviceTitle)\n    ? intl.formatMessage(props.deviceTitle)\n    : props.deviceTitle;\n\n  return (\n    <i\n      className={props.devicePicture}\n      title={title}\n    />\n  );\n}", "CodeBleu_score": 59.53829306155699}, {"code": "export default function DeviceIcon(props: Props){\n\t  const intl = useIntl();\n  const title =\n    typeof props.deviceTitle === 'object'\n      ? intl.formatMessage(props.deviceTitle)\n      : props.deviceTitle;\n  return (\n    <i\n      className={props.devicePicture}\n      title={title}\n    />\n  );\n}", "CodeBleu_score": 55.815012285114186}]}
{"instance_id": "e0a805402908", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t    const currentChannel = getCurrentChannel(state) || ownProps.channel;\n    const searchTerm = getSearchTerm(state);\n    const groups = getGroups(state);\n    const filteredGroups = searchTerm\n        ? groups.filter((group) => group.name.toLowerCase().includes(searchTerm.toLowerCase()))\n        : groups.filter((group) => group.id !== currentChannel.id);\n\n    return {\n        currentChannelId: currentChannel.id,\n        currentChannelName: currentChannel.name,\n        currentTeamId: currentChannel.team_id,\n        ...ownProps,\n        searchTerm,\n        filteredGroups,\n    };\n}", "CodeBleu_score": 43.519435689705354}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t  const searchTerm = getSearchTerm(state);\n  const currentChannel = ownProps.currentChannel || getCurrentChannel(state);\n  const groups = getGroupsNotAssociatedWithChannel(state, currentChannel.id);\n  const filteredGroups = searchTerm ? groups.filter(group => group.name.toLowerCase().includes(searchTerm.toLowerCase())) : groups;\n\n  return {\n    currentChannelName: currentChannel.name,\n    currentChannelId: currentChannel.id,\n    teamId: getCurrentTeamId(state),\n    ...ownProps,\n    searchTerm,\n    filteredGroups,\n  };\n}", "CodeBleu_score": 41.14227178745442}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n\t  const searchTerm = state.entities.search.searchTerm;\n  const currentChannel = ownProps.channelId || getCurrentChannelId(state);\n  const groupsNotAssociatedWithChannel = getGroupsNotAssociatedWithChannel(state, currentChannel);\n  const filteredGroups = searchTerm ? groupsNotAssociatedWithChannel.filter((group) => group.name.toLowerCase().includes(searchTerm.toLowerCase())) : groupsNotAssociatedWithChannel;\n\n  return {\n    currentChannelName: getCurrentChannel(state).name,\n    currentChannelId: getCurrentChannelId(state),\n    currentTeamId: getCurrentTeamId(state),\n    ...ownProps,\n    searchTerm,\n    filteredGroups,\n  };\n}", "CodeBleu_score": 44.11976835545294}]}
{"instance_id": "a3412b1c0762", "generation_result": [{"code": "componentDidUpdate(prevProps: Props){\n\t  if (this.props.searchTerm !== prevProps.searchTerm) {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.timeout = setTimeout(() => {\n      this.setGroupsLoadingState(true);\n      this.props.actions.getGroupsNotAssociatedToChannel(\n        this.props.searchTerm,\n        this.props.currentPage,\n        this.props.pageSize\n      );\n      this.setGroupsLoadingState(false);\n    }, 500);\n  }\n}", "CodeBleu_score": 32.98967172499603}, {"code": "componentDidUpdate(prevProps: Props){\n\t    const { searchTerm } = this.props;\n    if (searchTerm !== prevProps.searchTerm) {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      this.timeout = setTimeout(() => {\n        this.setState({ loading: true });\n        this.props.actions.getGroupsNotAssociatedToChannel(this.props.channel.id, searchTerm).then(() => {\n          this.setState({ loading: false });\n        });\n      }, 500);\n    }\n  }", "CodeBleu_score": 34.84896215662228}, {"code": "componentDidUpdate(prevProps: Props){\n\t    const { searchTerm } = this.props;\n    if (searchTerm !== prevProps.searchTerm) {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      this.timeout = setTimeout(() => {\n        this.setGroupsLoadingState(true);\n        this.props.actions.getGroupsNotAssociatedToChannel(searchTerm, this.props.channelId);\n        this.setGroupsLoadingState(false);\n      }, 500);\n    }\n  }", "CodeBleu_score": 38.069345057879325}]}
{"instance_id": "0f47faf97411", "generation_result": [{"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t  const currentChannel = getCurrentChannel(state, ownProps.channelId);\n  const currentUserId = getCurrentUserId(state);\n  const searchTerm = state.entities.search.searchTerms.groupList;\n  const groups = getGroupsNotAssociatedToChannel(state, currentChannel.id, currentUserId);\n  const filteredGroups = searchTerm ? filterGroupsMatchingTerm(groups, searchTerm) : groups;\n\n  return {\n    currentChannel,\n    currentChannelId: currentChannel.id,\n    currentTeamId: getCurrentTeamId(state),\n    currentUserId,\n    onAssociatedGroupChanged: (groupWithAssociated: Group) => {\n      handleAssociatedGroupChanged(groupWithAssociated, currentChannel, currentUserId);\n    },\n    onCancel: () => {\n      handleCancel(currentChannel.id);\n    },\n    onGroupClick: (group: Group) => {\n      handleGroupClick(group, currentChannel, currentUserId);\n    },\n    onGroupRemoved: (group: Group) => {\n      handleGroupRemoved(group, currentChannel, currentUserId);\n    },\n    onSearch: (term: string) => {\n      handleSearch(term);\n    },\n    onToggle: () => {\n      handleToggle(currentChannel.id);\n    },\n    excludedGroups: getExcludedGroupsForChannel(state, currentChannel.id),\n    searchTerm,\n    groups: filteredGroups,\n  };\n}", "CodeBleu_score": 39.463980901012604}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t  const currentChannel = getCurrentChannel(state, ownProps.channelId)\n  const currentUserId = getCurrentUserId(state)\n  const searchTerm = getSearchTerm(state)\n  const { excludeMyGroups, excludeDefaultChannels } = ownProps\n  const excludedGroups = excludeMyGroups ? getMyChannelMemberships(state) : []\n  const filteredGroups = getFilteredGroups(state, currentUserId, currentChannel?.id, searchTerm, excludeDefaultChannels, excludedGroups)\n\n  return {\n    currentChannel,\n    currentChannelId: currentChannel?.id,\n    currentUserId,\n    searchTerm,\n    excludedGroups,\n    filteredGroups,\n    onSearchChange: (searchTerm: string) => dispatch(setSearchTerm(searchTerm)),\n    onGroupClick: (id: string) => dispatch(setCurrentGroup(id)),\n    onGroupClose: (id: string) => dispatch(removeGroup(id)),\n    onChannelClick: (id: string) => dispatch(setCurrentChannel(id)),\n    onChannelClose: (id: string) => dispatch(removeChannel(id)),\n    onGroupAdd: (id: string) => dispatch(addGroup(id)),\n    onChannelAdd: (id: string) => dispatch(addChannel(id)),\n    onClose: () => dispatch(closeModal()),\n  }\n}", "CodeBleu_score": 32.50764538563047}, {"code": "function mapStateToProps(state: GlobalState, ownProps: OwnProps){\n\t  const currentChannel = getCurrentChannel(state, ownProps);\n  const searchTerm = getSearchTermForCurrent(state);\n  const groupsExcludedOnSave = getGroupsExcludedOnSave(state);\n  const groupsAssociatedWithCurrent = getGroupsAssociatedWithCurrent(state);\n  const groupsNotAssociatedWithCurrent = getGroupsNotAssociatedWithCurrent(state);\n  const groupsNotAssociatedWithCurrentAndNotExcluded = groupsNotAssociatedWithCurrent.filter((group) => {\n    return !groupsExcludedOnSave.has(group.id);\n  });\n  const groupsFiltered = searchTerm ? filterGroupsMatchingTerm(groupsNotAssociatedWithCurrentAndNotExcluded, searchTerm) : groupsNotAssociatedWithCurrentAndNotExcluded;\n  return {\n    currentChannel,\n    currentChannelId: currentChannel.id,\n    currentChannelIsArchived: currentChannel.delete_at !== 0,\n    currentTeamId: getCurrentTeamId(state),\n    groupsAssociatedWithCurrent,\n    groupsFiltered,\n    groupsNotAssociatedWithCurrent,\n    searchTerm,\n    setModalSearchTerm: (term: string) => {\n      setSearchTermForCurrent(term);\n    },\n    showArchived: isModalSearchTermFilteringCurrentChannel(state),\n    showMore: getShowMoreChannels(state),\n    toggleShowMoreChannels: () => {\n      toggleShowMoreChannels();\n    },\n  };\n}", "CodeBleu_score": 37.24658264823517}]}
{"instance_id": "923c0c472c01", "generation_result": [{"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t    if (page > prevPage) {\n      this.setUsersLoadingState(true);\n      const { groupId } = this.props;\n      if (groupId) {\n        this.fetchGroupProfiles(page);\n      } else {\n        this.fetchProfiles(page);\n      }\n    }\n  }", "CodeBleu_score": 41.40876294124638}, {"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t    if (page > prevPage) {\n        this.setUsersLoadingState(true);\n        if (this.props.groupId) {\n            this.fetchGroupMembers(this.props.groupId, page, 10);\n        } else {\n            this.fetchUsers(page, 10);\n        }\n    }\n}", "CodeBleu_score": 46.66579099082118}, {"code": "private handlePageChange = (page: number, prevPage: number): void => {\n\t    if (page > prevPage) {\n      this.setUsersLoadingState(true)\n      if (this.props.groupId) {\n        this.fetchGroupUsers(page)\n      } else {\n        this.fetchUsers(page)\n      }\n    }\n  }", "CodeBleu_score": 40.681173772087895}]}
{"instance_id": "4614bb3319bb", "generation_result": [{"code": "public search = (searchTerm: string): void => {\n\t  clearTimeout(this.searchTimeout);\n\n  const trimmedSearchTerm = searchTerm.trim();\n  this.setState({ searchTerm: trimmedSearchTerm });\n\n  if (trimmedSearchTerm) {\n    this.setUsersLoadingState(true);\n\n    this.searchTimeout = setTimeout(() => {\n      this.props.actions.searchProfiles(trimmedSearchTerm);\n      this.setUsersLoadingState(false);\n    }, 500);\n  }\n}", "CodeBleu_score": 55.31994400421192}, {"code": "public search = (searchTerm: string): void => {\n\t    clearTimeout(this.searchTimeout);\n    this.setState({ searchTerm: searchTerm.trim() });\n    if (this.state.searchTerm !== \"\") {\n        this.setUsersLoadingState(true);\n        this.searchTimeout = setTimeout(async () => {\n            await this.props.actions.searchProfiles(this.state.searchTerm);\n            this.setUsersLoadingState(false);\n        }, 500);\n    }\n}", "CodeBleu_score": 33.509731772154325}, {"code": "public search = (searchTerm: string): void => {\n\t    clearTimeout(this.searchTimeout);\n    this.setState({ searchTerm: searchTerm.trim() });\n    if (searchTerm.trim().length > 0) {\n      this.setUsersLoadingState(true);\n      this.searchTimeout = setTimeout(async () => {\n        await this.props.actions.searchProfiles(searchTerm.trim());\n        this.setUsersLoadingState(false);\n      }, 500);\n    }\n  }", "CodeBleu_score": 36.27921727840585}]}
{"instance_id": "aeafe2d0ee11", "generation_result": [{"code": "visibleSections = () =>{\n\t", "CodeBleu_score": 0.39278204779788817}, {"code": "visibleSections = () =>{\n\t  const {\n    config,\n    license,\n    buildEnterpriseReady,\n    consoleAccess,\n    adminDefinition,\n    cloud,\n  } = this.props;\n  const { sections } = config;\n\n  const result = new Set();\n\n  sections.forEach((section) => {\n    if (\n      section.schema &&\n      section.title &&\n      !section.isHidden(\n        license,\n        buildEnterpriseReady,\n        consoleAccess,\n        adminDefinition,\n        cloud\n      )\n    ) {\n      result.add(section.url);\n      section.subsections.forEach((subsection) => {\n        if (\n          subsection.schema &&\n          subsection.title &&\n          !subsection.isHidden(\n            license,\n            buildEnterpriseReady,\n            consoleAccess,\n            adminDefinition,\n            cloud\n          )\n        ) {\n          result.add(subsection.url);\n        }\n      });\n    }\n  });\n\n  return result;\n}", "CodeBleu_score": 38.11499434576112}, {"code": "visibleSections = () =>{\n\t", "CodeBleu_score": 0.39278204779788817}]}
{"instance_id": "e869682a1b2c", "generation_result": [{"code": "handleImageChange = () =>{\n\t  const fileInput = this.props.fileInput;\n\n  if (fileInput && fileInput.current && fileInput.current.files) {\n    const file = fileInput.current.files[0];\n\n    this.props.setSaveNeeded(true);\n    this.setState({\n      image: file,\n      delete: false,\n    });\n  }\n}", "CodeBleu_score": 50.119697117131224}, {"code": "handleImageChange = () =>{\n\t    if (this.props.imageInputRef.current.files && this.props.imageInputRef.current.files[0]) {\n        this.props.setSaveNeeded(true);\n        this.setState({\n            image: this.props.imageInputRef.current.files[0],\n            delete: false,\n        });\n    }\n}", "CodeBleu_score": 22.980108658445857}, {"code": "handleImageChange = () =>{\n\t    if (this.props.imageInputRef.current.files && this.props.imageInputRef.current.files[0]) {\n        this.props.setSaveNeeded(true);\n        this.setState({\n            image: this.props.imageInputRef.current.files[0],\n            delete: false\n        });\n    }\n}", "CodeBleu_score": 22.111773994809838}]}
{"instance_id": "8bc13681a6b2", "generation_result": [{"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\t    if (this.state.removingChannelId === channel.id) {\n        return;\n    }\n\n    this.setState({\n        removingChannelId: channel.id,\n    });\n\n    const {page, pageSize} = this.state;\n    const {onRemoveCallback} = this.props;\n\n    if (onRemoveCallback) {\n        onRemoveCallback(channel);\n    }\n\n    const {endCount} = this.getPaginationProps(page, pageSize);\n    if (endCount === this.getVisibleTotalCount()) {\n        this.setStatePage(page - 1);\n    }\n}", "CodeBleu_score": 39.314268782240745}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\t    const {\n      onRemoveCallback,\n    } = this.props;\n\n    const {\n      channels,\n      page,\n    } = this.state;\n\n    if (channel.isMarkedForRemoval) {\n      return;\n    }\n\n    const {\n      endCount,\n      pageSize,\n    } = this.getPaginationProps();\n\n    onRemoveCallback(channel);\n\n    if (endCount - 1 === pageSize) {\n      this.setStatePage(page - 1);\n    }\n  }", "CodeBleu_score": 41.29695427563376}, {"code": "private removeChannel = (channel: ChannelWithTeamData) =>{\n\t", "CodeBleu_score": 1.890253090438119}]}
{"instance_id": "ac41454927ac", "generation_result": [{"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t    const { removedChannels } = this.state;\n    const newRemovedChannels = removedChannels.includes(channel.id) ?\n        removedChannels.filter((c) => c !== channel.id) :\n        [...removedChannels, channel.id];\n\n    this.setState({\n        removedChannels: newRemovedChannels,\n        count: newRemovedChannels.length,\n    });\n\n    this.props.actions.setNavigationBlocked(newRemovedChannels.length !== 0);\n}", "CodeBleu_score": 31.596550264718452}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t    const {removedChannels} = this.state;\n    const {newChannels} = this.props;\n    const newRemovedChannels = [...removedChannels];\n    const newNewChannels = [...newChannels];\n\n    if (newRemovedChannels.includes(channel)) {\n        return;\n    }\n\n    newRemovedChannels.push(channel);\n\n    const index = newNewChannels.findIndex((c) => c.id === channel.id);\n    if (index > -1) {\n        newNewChannels.splice(index, 1);\n    }\n\n    this.setState({\n        removedChannels: newRemovedChannels,\n        newChannels: newNewChannels,\n    });\n\n    this.props.actions.setNavigationBlocked(true);\n}", "CodeBleu_score": 36.95088665551908}, {"code": "addToRemovedChannels = (channel: ChannelWithTeamData) => {\n\t    const {\n        newChannels,\n        removedChannels,\n    } = this.state;\n    const {\n        setNavigationBlocked,\n    } = this.props.actions;\n    const newRemovedChannels = [...removedChannels, channel];\n    const newNewChannels = newChannels.filter((c) => c.id !== channel.id);\n    this.setState({\n        newChannels: newNewChannels,\n        removedChannels: newRemovedChannels,\n    });\n    setNavigationBlocked(true);\n}", "CodeBleu_score": 35.034346408859726}]}
{"instance_id": "bdc81f9a884e", "generation_result": [{"code": "private removeTeam = (team: Team) =>{\n\t  const {\n    pageNumber,\n    pageSize,\n    totalCount,\n    visibleTotalCount,\n  } = this.getPaginationProps();\n  const { onRemoveCallback } = this.props;\n  const teamIndex = this.state.teams.findIndex(\n    (t) => t.id === team.id,\n  );\n  const teamExists = teamIndex !== -1;\n  const teamRemoved = this.state.teamsToRemove.includes(team.id);\n\n  if (teamRemoved || !teamExists) {\n    return;\n  }\n\n  const teamsToRemove = [...this.state.teamsToRemove, team.id];\n  const updatedTeams = this.state.teams.filter(\n    (t) => t.id !== team.id,\n  );\n  const updatedVisibleTotalCount = this.getVisibleTotalCount(\n    updatedTeams,\n  );\n  const updatedPageNumber = Math.ceil(\n    (updatedVisibleTotalCount - pageSize) / pageSize,\n  );\n\n  onRemoveCallback(team);\n\n  this.setState({\n    teams: updatedTeams,\n    teamsToRemove,\n  });\n\n  if (updatedVisibleTotalCount < visibleTotalCount) {\n    this.setStatePage(updatedPageNumber);\n  }\n}", "CodeBleu_score": 31.256094732692603}, {"code": "private removeTeam = (team: Team) =>{\n\t    if (this.state.teams.find(t => t.id === team.id)?.remove) {\n        return;\n    }\n\n    const { paginationProps, visibleTotalCount } = this.getPaginationProps(team);\n    this.props.onRemoveCallback(team);\n\n    if (visibleTotalCount !== this.getVisibleTotalCount()) {\n        this.setStatePage(paginationProps.current);\n    }\n}", "CodeBleu_score": 30.812505064252864}, {"code": "private removeTeam = (team: Team) =>{\n\t    if (this.props.teamsToRemove.includes(team)) {\n        return;\n    }\n\n    const { paginationProps, visibleTotalCount } = this.getPaginationProps(team);\n    const { onRemoveCallback } = this.props;\n\n    onRemoveCallback(team);\n\n    if (paginationProps.currentPage > 1 && paginationProps.currentPage > paginationProps.totalPages) {\n        paginationProps.currentPage = paginationProps.currentPage - 1;\n    }\n\n    this.setStatePage(paginationProps.currentPage);\n}", "CodeBleu_score": 30.563596623004273}]}
{"instance_id": "e55dd105e5d2", "generation_result": [{"code": "async function loadListInPageNumber(page: number){\n\t  try {\n    const response = await fetch(\n      `https://api.opendota.com/api/teams?page=${page}`\n    );\n    const data = await response.json();\n    const sortedData = data.sort((a: any, b: any) =>\n      a.name.localeCompare(b.name)\n    );\n    if (page === 0) {\n      setList(sortedData);\n    } else {\n      setList((prevList) => [...prevList, ...sortedData]);\n    }\n    setPageNumber(page);\n  } catch (error) {\n    console.error(\"Error fetching teams:\", error);\n  }\n}", "CodeBleu_score": 33.31359685624719}, {"code": "async function loadListInPageNumber(page: number){\n\t    try {\n        const response = await fetch(`https://api.opendota.com/api/teams?page=${page}`);\n        const data = await response.json();\n        const teams = data.map((team: any) => ({\n            id: team.team_id,\n            name: team.name,\n            displayName: team.tag,\n            logo: team.logo_url\n        }));\n        const sortedTeams = teams.sort((a: any, b: any) => a.displayName.localeCompare(b.displayName));\n\n        if (page === 0) {\n            setList(sortedTeams);\n        } else {\n            setList((prevList: any) => [...prevList, ...sortedTeams]);\n        }\n        setPageNumber(page + 1);\n    } catch (error) {\n        console.error(error);\n    }\n}", "CodeBleu_score": 51.82832955870082}, {"code": "async function loadListInPageNumber(page: number){\n\t  try {\n    const response = await fetch(`https://api.opendota.com/api/teams?page=${page}`);\n    const data = await response.json();\n    const sortedData = data.sort((a: any, b: any) => a.name.localeCompare(b.name));\n    if (page === 1) {\n      setList(sortedData);\n    } else {\n      setList((prevList) => [...prevList, ...sortedData]);\n    }\n    setPageNumber(page);\n  } catch (error) {\n    console.error(error);\n  }\n}", "CodeBleu_score": 34.337774146737466}]}
{"instance_id": "2de31ed13207", "generation_result": [{"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t  try {\n    const { data } = await searchTeams({\n      search: term,\n      page: 1,\n      perPage: 100,\n    });\n\n    if (data.length === 0) {\n      callBack({\n        options: [],\n        hasMore: false,\n        additional: {\n          page: 1,\n        },\n      });\n      return;\n    }\n\n    const options = data.map((team) => ({\n      label: team.name,\n      value: team.id,\n    }));\n\n    callBack({\n      options,\n      hasMore: false,\n      additional: {\n        page: 1,\n      },\n    });\n  } catch (error) {\n    console.error(error);\n    callBack({\n      options: [],\n      hasMore: false,\n      additional: {\n        page: 1,\n      },\n    });\n  }\n}", "CodeBleu_score": 44.79681815643719}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t  try {\n    const teams = await searchTeams(term, {limit: 50, page: 1});\n    if (teams.length > 0) {\n      const options = teams.map((team: TeamType) => ({\n        label: team.name,\n        value: team.id,\n      }));\n      callBack(options);\n    } else {\n      callBack([]);\n    }\n  } catch (error) {\n    console.error(error);\n    callBack([]);\n  }\n}", "CodeBleu_score": 51.4105887189513}, {"code": "async function searchInList(term: string, callBack: (options: OptionsType<{label: string; value: string}>) => void){\n\t    try {\n        const teams = await searchTeams({\n            query: term,\n            page: 1,\n            perPage: 20,\n        });\n\n        if (teams.length > 0) {\n            const options = teams.map((team) => ({\n                label: team.name,\n                value: team.id,\n            }));\n            callBack(options);\n        } else {\n            callBack([]);\n        }\n    } catch (error) {\n        console.error(error);\n        callBack([]);\n    }\n}", "CodeBleu_score": 53.883149939618434}]}
{"instance_id": "845d63ff0f74", "generation_result": [{"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t    const { rolesToChange, groupTeams, groupChannels } = this.state;\n\n    let listToChange = [];\n    if (type === 'team') {\n        listToChange = groupTeams;\n    } else if (type === 'channel') {\n        listToChange = groupChannels;\n    }\n\n    const updatedList = listToChange.map((item) => {\n        if (item.id === id) {\n            return {\n                ...item,\n                schemeAdmin,\n            };\n        }\n        return item;\n    });\n\n    if (type === 'team') {\n        this.setState({ groupTeams: updatedList });\n    } else if (type === 'channel') {\n        this.setState({ groupChannels: updatedList });\n    }\n\n    this.setState({ rolesToChange: true });\n    this.props.actions.blockNavigation(true);\n}", "CodeBleu_score": 34.93083317449806}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t    const { rolesToChange, groupTeams, groupChannels } = this.state;\n    const list = type === 'team' ? groupTeams : groupChannels;\n    const newList = list.map((item) => {\n        if (item.id === id) {\n            return {\n                ...item,\n                schemeAdmin,\n            };\n        }\n        return item;\n    });\n    this.setState({\n        [type === 'team' ? 'groupTeams' : 'groupChannels']: newList,\n        rolesToChange: newList.filter((item) => item.schemeAdmin !== item.originalSchemeAdmin),\n        saving: true,\n    });\n    this.props.actions.blockNavigation(this.props.match.url);\n}", "CodeBleu_score": 31.358701690912756}, {"code": "onChangeRoles = (id: string, type: string, schemeAdmin: boolean) =>{\n\t    const {\n        rolesToChange,\n        groupTeams,\n        groupChannels,\n    } = this.state;\n    const newRolesToChange = rolesToChange.map((role) => {\n        if (role.id === id) {\n            return {\n                ...role,\n                schemeAdmin,\n            };\n        }\n        return role;\n    });\n    let newGroupTeams = groupTeams;\n    let newGroupChannels = groupChannels;\n    if (type === 'team') {\n        newGroupTeams = groupTeams.map((team) => {\n            if (team.id === id) {\n                return {\n                    ...team,\n                    schemeAdmin,\n                };\n            }\n            return team;\n        });\n    } else {\n        newGroupChannels = groupChannels.map((channel) => {\n            if (channel.id === id) {\n                return {\n                    ...channel,\n                    schemeAdmin,\n                };\n            }\n            return channel;\n        });\n    }\n    this.setState({\n        rolesToChange: newRolesToChange,\n        groupTeams: newGroupTeams,\n        groupChannels: newGroupChannels,\n        saving: true,\n    });\n    this.props.blockNavigation(true);\n}", "CodeBleu_score": 32.9688774596621}]}
{"instance_id": "02b54f0774f3", "generation_result": [{"code": "handleRolesToUpdate = async () =>{\n\t  const { rolesToChange } = this.state;\n  const promises = [];\n\n  if (rolesToChange.length) {\n    rolesToChange.forEach(role => {\n      const { syncableId, syncableType } = role;\n\n      const updatePromise = this.updateRole(syncableId, syncableType);\n      promises.push(updatePromise);\n    });\n\n    const results = await Promise.all(promises);\n    const errors = results.filter(result => result.error);\n\n    if (errors.length) {\n      this.setState({\n        errorMessage: `Error updating roles: ${errors.map(error => error.message).join(', ')}`,\n      });\n    } else {\n      this.setState({\n        rolesToChange: [],\n      });\n    }\n  }\n\n  return true;\n}", "CodeBleu_score": 34.278450282622316}, {"code": "handleRolesToUpdate = async () =>{\n\t    const { rolesToChange } = this.state;\n    const promises = [];\n    if (rolesToChange.length > 0) {\n      rolesToChange.forEach((role) => {\n        const syncableIds = role.syncableIds;\n        const syncableTypes = role.syncableTypes;\n        syncableIds.forEach((syncableId) => {\n          syncableTypes.forEach((syncableType) => {\n            promises.push(\n              updateRole({\n                roleId: role.roleId,\n                syncableId: syncableId,\n                syncableType: syncableType,\n              })\n            );\n          });\n        });\n      });\n      const results = await Promise.all(promises);\n      const hasErrors = results.some((result) => result.error);\n      if (hasErrors) {\n        this.setState({\n          error:\n            \"An error occurred while updating roles. Please try again later.\",\n          rolesToChange: [],\n        });\n      } else {\n        this.setState({\n          rolesToChange: [],\n          error: null,\n        });\n      }\n      return true;\n    }\n    return false;\n  }", "CodeBleu_score": 41.34290162989213}, {"code": "handleRolesToUpdate = async () =>{\n\t    const { rolesToChange } = this.state;\n\n    if (rolesToChange.length) {\n        const updatePromises = [];\n\n        rolesToChange.forEach(role => {\n            const { id, type } = role;\n\n            const syncableIds = this.getSyncableIds(id, type);\n\n            syncableIds.forEach(syncableId => {\n                const updatePromise = this.updateRole(syncableId, type);\n                updatePromises.push(updatePromise);\n            });\n        });\n\n        const results = await Promise.all(updatePromises);\n\n        const errors = results.filter(result => result.error);\n\n        if (errors.length) {\n            this.setState({ error: 'Error updating roles' });\n        } else {\n            this.setState({ rolesToChange: [] });\n        }\n    }\n\n    return true;\n}", "CodeBleu_score": 36.08876558856764}]}
{"instance_id": "30463a7bcb15", "generation_result": [{"code": "nextPage = async () =>{\n\t  const { page, members, totalMembers } = this.state;\n  const nextPage = page + 1;\n  const newTotal = page * 10 + members.length;\n  if (newTotal >= totalMembers) return;\n  this.setState({ loading: true });\n  const res = await fetchMembers(nextPage);\n  this.setState((prevState) => ({\n    members: [...prevState.members, ...res.members],\n    loading: false,\n    page: nextPage,\n  }));\n}", "CodeBleu_score": 23.068713066230472}, {"code": "nextPage = async () =>{\n\t    const { page, members } = this.state;\n    const { total } = this.props;\n\n    if (members.length >= total) return;\n\n    this.setState({ loading: true });\n\n    const nextPage = page + 1;\n\n    const response = await fetchMembers(nextPage);\n\n    this.setState(prev => ({\n      members: [...prev.members, ...response.members],\n      page: nextPage,\n      loading: false,\n    }));\n  }", "CodeBleu_score": 23.284514216910896}, {"code": "nextPage = async () =>{\n\t    const { page, members, totalMembers } = this.state;\n    if ((page + 1) * 10 >= totalMembers) {\n        return;\n    }\n    this.setState({ loading: true });\n    const membersData = await fetchMembers(page + 1);\n    this.setState({\n        page: page + 1,\n        members: [...members, ...membersData],\n        loading: false,\n    });\n}", "CodeBleu_score": 21.443677986265268}]}
{"instance_id": "d6aba286f65f", "generation_result": [{"code": "public handleGroupSearchKeyUp(e: any){\n\t    if (e.key === \"Enter\") {\n        this.state.page = 0;\n        this.searchGroups();\n    }\n    const newState = { ...this.state };\n    if (e.target.value.match(this.regex)) {\n        newState.groupSearch.searchString = e.target.value;\n        newState.groupSearch.searchStringValid = true;\n        newState.groupSearch.searchStringError = \"\";\n    } else {\n        newState.groupSearch.searchString = e.target.value;\n        newState.groupSearch.searchStringValid = false;\n        newState.groupSearch.searchStringError = \"Search string must be at least 3 characters long and can only contain letters, numbers, and spaces\";\n    }\n    this.setState(newState);\n}", "CodeBleu_score": 28.0108452694161}, {"code": "public handleGroupSearchKeyUp(e: any){\n\t  if (e.key === 'Enter') {\n    this.setState({ page: 0 });\n    this.searchGroups(this.state.groupSearchString);\n  }\n  const newState = { ...this.state };\n  if (e.key === 'Enter' || e.key === 'Backspace') {\n    newState.groupSearchString = e.target.value;\n  }\n  this.setState(newState);\n}", "CodeBleu_score": 27.548003290234902}, {"code": "public handleGroupSearchKeyUp(e: any){\n\t    if (e.key === 'Enter') {\n      this.setState({\n        page: 0,\n        search: e.target.value,\n      });\n      this.search();\n    }\n\n    const state: any = {};\n    if (e.target.value.match(/^[0-9]+$/)) {\n      state.searchType = 'id';\n    } else if (e.target.value.match(/^[0-9a-f]{24}$/)) {\n      state.searchType = 'id';\n    } else if (e.target.value.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/)) {\n      state.searchType = 'id';\n    } else {\n      state.searchType = 'name';\n    }\n    this.setState(state);\n  }", "CodeBleu_score": 26.370804024560428}]}
{"instance_id": "f0ab31c8ac4b", "generation_result": [{"code": "reloadPercentage = async () => {\n\t  try {\n    const { percentage, error } = await this.props.actions.getUpgradeStatus();\n    if (percentage === 100) {\n      clearInterval(this.interval);\n      this.trackEvent('Upgrade to E0 Complete');\n      this.props.actions.setUpgradeToE0Status('complete');\n    } else if (error) {\n      clearInterval(this.interval);\n      this.trackEvent('Upgrade to E0 Error');\n      this.props.actions.setUpgradeToE0Status('error');\n    }\n    this.setState({ percentage, error });\n  } catch (e) {\n    console.error('Error retrieving upgrade status:', e);\n  }\n}", "CodeBleu_score": 41.77943961863154}, {"code": "reloadPercentage = async () => {\n\t  const { actions } = this.props\n  const { upgradeToE0Status } = this.state\n\n  const { percentage, error } = await actions.getUpgradeToE0Status()\n\n  if (percentage === 100 || error) {\n    clearInterval(this.interval)\n    this.interval = null\n\n    if (error) {\n      this.props.actions.trackEvent({\n        category: 'Upgrade',\n        action: 'Error',\n        name: error,\n      })\n    } else {\n      this.props.actions.trackEvent({\n        category: 'Upgrade',\n        action: 'Complete',\n        name: 'Upgrade to E0',\n      })\n    }\n  }\n\n  this.setState({\n    upgradeToE0Status: {\n      ...upgradeToE0Status,\n      percentage,\n      error,\n    },\n  })\n}", "CodeBleu_score": 38.36927200783602}, {"code": "reloadPercentage = async () => {\n\t  const { actions } = this.props\n  const { upgradePercentage, error } = await actions.getUpgradeStatus()\n  if (upgradePercentage > 0 && !this.interval) {\n    this.interval = setInterval(this.reloadPercentage, 2000)\n  } else if (upgradePercentage === 100) {\n    clearInterval(this.interval)\n    this.interval = null\n    this.setState({ upgradePercentage: 0, error: null })\n    this.props.actions.upgradeToE0Status(true)\n  } else if (error) {\n    clearInterval(this.interval)\n    this.interval = null\n    this.setState({ upgradePercentage: 0, error })\n    this.props.actions.upgradeToE0Status(false)\n  } else {\n    this.setState({ upgradePercentage, error: null })\n  }\n}", "CodeBleu_score": 44.5510604975288}]}
{"instance_id": "f91ab43e6fe1", "generation_result": [{"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\t    e.preventDefault();\n    if (fileObj) {\n      setIsUploading(true);\n      dispatch(uploadLicense(fileObj));\n    }\n    if (serverError) {\n      setFileObj(null);\n      setServerError(\"\");\n      setIsUploading(false);\n    }\n    if (uploadSuccessful) {\n      dispatch(getLicenseConfig());\n      setFileObj(null);\n      setServerError(\"\");\n      setIsUploading(false);\n      setUploadSuccessful(false);\n    }\n  }", "CodeBleu_score": 52.25473503761322}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\t  e.preventDefault();\n\n  if (!fileObj) {\n    return;\n  }\n\n  setIsUploading(true);\n\n  try {\n    await dispatch(uploadLicense(fileObj));\n  } catch (error) {\n    setFileObj(null);\n    setServerError(error.message);\n    setIsUploading(false);\n    return;\n  }\n\n  await dispatch(getLicenseConfig());\n\n  setFileObj(null);\n  setServerError('');\n  setIsUploading(false);\n  setUploadSuccessful(true);\n}", "CodeBleu_score": 65.26446141801092}, {"code": "const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n\t    e.preventDefault();\n    if (fileObj) {\n      setIsUploading(true);\n      dispatch(uploadLicense(fileObj));\n    }\n  }", "CodeBleu_score": 18.581796649709975}]}
{"instance_id": "840d965d4dcc", "generation_result": [{"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\t    e.preventDefault();\n    if (this.props.confirmationNeeded) {\n        this.setState({ confirmation: true });\n        return;\n    }\n    this.setState({ saving: true });\n    this.setState({ serverError: '' });\n    if (this.state.saveNeeded) {\n        const settings = this.props.editRole.permissions ? this.props.editRole.permissions : this.props.editRole.configuration;\n        const roleBindings = this.props.editRole.permissions ? this.mapSettingsToRoleBindings(settings) : this.mapSettingsToRoleBindings(settings, true);\n        try {\n            await this.props.updateRoles(roleBindings);\n            this.props.history.push(this.props.editRole.permissions ? '/access-control/roles' : '/access-control/cluster-settings');\n        } catch (error) {\n            this.setState({ serverError: error.message });\n        }\n    } else {\n        this.props.resetState();\n        this.props.unblockNavigation();\n    }\n}", "CodeBleu_score": 26.337128175776}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\t    e.preventDefault();\n    const { editRole, setState, saveNeeded, confirm, setConfirm, setSaving, setServerErrors } = this.props;\n    if (confirm) {\n      setConfirm(false);\n      return;\n    }\n    setSaving(true);\n    setServerErrors([]);\n    if (saveNeeded) {\n      const { settings, roleBindings } = this.state;\n      const bindings = mapSettingsToRoleBindings(settings, roleBindings);\n      const promises = bindings.map((binding) => {\n        const { role, subjects } = binding;\n        return editRole(role, subjects);\n      });\n      await Promise.all(promises)\n        .then(() => {\n          this.setState({ saveNeeded: false });\n          this.props.unblockNavigation();\n        })\n        .catch((err) => {\n          const errors = parseError(err);\n          setServerErrors(errors);\n        });\n    } else {\n      this.props.submitSettings();\n    }\n  }", "CodeBleu_score": 25.4172684812691}, {"code": "handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) =>{\n\t    e.preventDefault();\n\n    if (this.props.confirmation) {\n        this.setState({\n            confirming: false,\n        });\n\n        return;\n    }\n\n    this.setState({\n        saving: true,\n        serverError: '',\n    });\n\n    if (this.props.saveNeeded) {\n        const roleBindings = this.mapSettingsToRoleBindings();\n        const promises = roleBindings.map((roleBinding) => this.props.editRole(roleBinding));\n\n        try {\n            await Promise.all(promises);\n        } catch (err) {\n            this.setState({\n                serverError: err.message,\n            });\n\n            return;\n        }\n    }\n\n    if (this.props.saveNeeded) {\n        this.props.onSubmit();\n    } else {\n        this.props.onReset();\n        this.props.unblockNavigation();\n    }\n}", "CodeBleu_score": 25.207032496437243}]}
{"instance_id": "86453b2860e5", "generation_result": [{"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\t  const { openContactSales } = useSalesContact();\n\n  const onClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    trackEvent(props.trackingEvent);\n    openContactSales();\n  };\n\n  return (\n    <button\n      className={`${props.customClass}`}\n      onClick={onClick}\n    >\n      {props.text}\n    </button>\n  );\n}", "CodeBleu_score": 31.92422263360728}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\t  const { openContactSales } = useContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    trackEvent(props.trackingEvent);\n    openContactSales(props.salesEmail);\n  };\n\n  return (\n    <button className={props.customClass} onClick={handleClick}>\n      {props.text}\n    </button>\n  );\n}", "CodeBleu_score": 28.812456936110596}, {"code": "const ContactUsButton: React.FC<Props> = (props: Props) =>{\n\t  const { openContactSales } = useContactSales();\n  const { text, customClass } = props;\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    trackEvent('Contact Us Button Clicked');\n    openContactSales();\n  };\n\n  return (\n    <button className={customClass} onClick={handleClick}>\n      {text}\n    </button>\n  );\n}", "CodeBleu_score": 31.103633453615686}]}
{"instance_id": "49713e95ae2e", "generation_result": [{"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\t  const { isDisabled, isLoading, message } = props;\n  const { openContactSales } = useContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <Button\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      onClick={handleClick}\n      variant=\"primary\"\n    >\n      {message}\n    </Button>\n  );\n}", "CodeBleu_score": 43.918033397984175}, {"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\t  const {\n    isDisabled,\n    isLoading,\n    message,\n    values\n  } = props;\n\n  const { openContactSales } = useContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <Button\n      buttonStyle=\"primary\"\n      disabled={isDisabled}\n      isLoading={isLoading}\n      onClick={handleClick}\n    >\n      {message && (\n        <FormattedMessage\n          id={message}\n          values={values}\n        />\n      )}\n    </Button>\n  );\n}", "CodeBleu_score": 43.24322637335024}, {"code": "const RenewalLink = (props: RenewalLinkProps) => {\n\t  const { formatMessage } = useIntl();\n  const openContactSales = useOpenContactSales();\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    openContactSales();\n  };\n\n  return (\n    <Button\n      disabled={props.disabled}\n      onClick={handleClick}\n      type=\"button\"\n    >\n      {formatMessage(messages.renewalLinkText)}\n    </Button>\n  );\n}", "CodeBleu_score": 36.936401593369204}]}
{"instance_id": "23618eba67aa", "generation_result": [{"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t    const { intl } = this.props;\n    let errorFound = false;\n    if (formError) {\n        this.setState({\n            error: {\n                message: formError,\n                type: 'form'\n            }\n        });\n        errorFound = true;\n    }\n    const fieldErrorsFound = Object.keys(fieldErrors || {}).length > 0;\n    if (fieldErrorsFound) {\n        const elementsWithErrors = elements.filter(e => fieldErrors[e.name]);\n        if (this.checkIfErrorsMatchElements(elementsWithErrors, fieldErrors)) {\n            elementsWithErrors.forEach(e => {\n                this.setState({\n                    [e.name]: {\n                        error: {\n                            message: intl.formatMessage({ id: fieldErrors[e.name] }),\n                            type: 'field'\n                        }\n                    }\n                });\n            });\n        } else {\n            this.setState({\n                error: {\n                    message: intl.formatMessage({ id: 'dialog.fieldErrors.unknown' }),\n                    type: 'form'\n                }\n            });\n        }\n        errorFound = true;\n    }\n    return errorFound;\n}", "CodeBleu_score": 37.061377215283066}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t    const { intl } = this.props;\n    const { errors } = this.state;\n    const hasErrors = !!formError || !!fieldErrors;\n    let hasUpdated = false;\n    if (hasErrors) {\n        const updatedErrors = { ...errors };\n        if (formError) {\n            updatedErrors.formError = intl.formatMessage({\n                id: formError,\n                defaultMessage: formError,\n            });\n            hasUpdated = true;\n        }\n        if (fieldErrors) {\n            Object.keys(fieldErrors).forEach((fieldName) => {\n                const element = elements.find((elem) => elem.name === fieldName);\n                if (element) {\n                    updatedErrors[fieldName] = intl.formatMessage({\n                        id: fieldErrors[fieldName],\n                        defaultMessage: fieldErrors[fieldName],\n                    });\n                    hasUpdated = true;\n                } else {\n                    updatedErrors[fieldName] = intl.formatMessage({\n                        id: 'dialog.unknownFieldError',\n                        defaultMessage: 'Unknown field error',\n                    });\n                    hasUpdated = true;\n                }\n            });\n        }\n        if (hasUpdated) {\n            this.setState({ errors: updatedErrors });\n        }\n    }\n    return hasUpdated;\n}", "CodeBleu_score": 35.43849617174012}, {"code": "updateErrors = (elements: DialogElement[], fieldErrors?: {[x: string]: string}, formError?: string): boolean =>{\n\t  if (!elements || !elements.length) {\n    return false;\n  }\n\n  let hasErrors = false;\n  const errorElements = elements.map(element => {\n    const fieldError = fieldErrors && fieldErrors[element.name];\n    if (fieldError) {\n      hasErrors = true;\n    }\n    return {\n      ...element,\n      error: fieldError,\n    };\n  });\n  this.setState({\n    elements: errorElements,\n    error: formError,\n  });\n  return hasErrors;\n}", "CodeBleu_score": 22.290883452769954}]}
{"instance_id": "10be7e79f7e0", "generation_result": [{"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t  const lowercaseInput = userInput.toLowerCase();\n  const { data } = await autocomplete({\n    type: \"channel\",\n    name: lowercaseInput,\n  });\n\n  const options = data.map((channel: any) => {\n    return {\n      label: channel.display_name,\n      value: channel.id,\n    };\n  });\n  return options;\n}", "CodeBleu_score": 38.04787434263751}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t    const lowerCaseInput = userInput.trim().toLowerCase();\n    const channelOptions = await autocompleteChannels(lowerCaseInput);\n    return channelOptions.map((channel) => ({\n        label: channel.display_name,\n        value: channel.id,\n    }));\n}", "CodeBleu_score": 40.07585804057334}, {"code": "loadDynamicChannelOptions = async (userInput: string): Promise<AppSelectOption[]> =>{\n\t  const lowercaseInput = userInput.toLowerCase();\n  const channelOptions = await autocompleteChannels(lowercaseInput);\n\n  return channelOptions.map((channel) => ({\n    label: channel.display_name,\n    value: channel.id,\n  }));\n}", "CodeBleu_score": 38.75873889276019}]}
{"instance_id": "b44d060ba306", "generation_result": [{"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\t    const {actions, currentUserId, teamId, teamName} = this.props;\n    const isMember = this.isMemberOfChannel(channel);\n\n    if (!isMember) {\n        const result = await actions.joinChannel(currentUserId, teamId, channel.id, teamName);\n\n        if (result.error) {\n            this.setState({serverError: result.error.message});\n            return;\n        }\n    }\n\n    this.updateChannelMemberCount(channel);\n\n    const channelURL = this.getRelativeChannelURL(channel);\n    this.props.actions.getHistory().push(channelURL);\n    this.closeEditRHS();\n\n    if (done) {\n        done();\n    }\n}", "CodeBleu_score": 67.61286309116011}, {"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\t    const {actions, currentUserId, teamId, teamName} = this.props;\n\n    if (!this.isMemberOfChannel(channel)) {\n        const result = await actions.joinChannel(channel.id, currentUserId, teamId, teamName);\n        if (result.error) {\n            this.setState({serverError: result.error.message});\n            return;\n        }\n    }\n\n    this.updateChannelMemberCount(channel.id);\n    getRelativeChannelURL(channel);\n    done();\n    this.closeEditRHS();\n}", "CodeBleu_score": 62.87055464305291}, {"code": "handleJoin = async (channel: Channel, done: () => void) => {\n\t    const {actions, currentUserId, teamId, teamName} = this.props;\n\n    if (!this.isMemberOfChannel(channel)) {\n        const result = await actions.joinChannel(channel.id, currentUserId, teamId, teamName);\n\n        if (result.error) {\n            this.setState({serverError: result.error.message});\n            return;\n        }\n\n        this.updateChannelMemberCount(channel);\n        this.navigateToChannel(channel);\n        this.closeEditRHS();\n    }\n\n    if (done) {\n        done();\n    }\n}", "CodeBleu_score": 67.01990274324237}]}
{"instance_id": "c6636f0c9c0b", "generation_result": [{"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { children, expanded, onClick } = props;\n\n  return (\n    <div\n      className={`card-header ${expanded ? \"expanded\" : \"\"}`}\n      onClick={onClick}\n    >\n      {children}\n      {expanded && <hr />}\n    </div>\n  );\n}", "CodeBleu_score": 36.45157180689269}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { children, expanded, onClick } = props;\n  const classNames = [\"card-header\"];\n  if (expanded) {\n    classNames.push(\"expanded\");\n  }\n  return (\n    <div className={classNames.join(\" \")} onClick={onClick}>\n      {children}\n      {expanded && <hr />}\n    </div>\n  );\n}", "CodeBleu_score": 43.00878854988134}, {"code": "const CardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { children, expanded, onClick } = props;\n  const className = `card-header ${expanded ? 'expanded' : ''}`;\n\n  return (\n    <div className={className} onClick={onClick}>\n      {children}\n      {expanded && <hr />}\n    </div>\n  );\n}", "CodeBleu_score": 39.60794188926306}]}
{"instance_id": "230cb3cd6dd5", "generation_result": [{"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { title, subtitle, buttonText, onClick, isDisabled } = props;\n  return (\n    <div className=\"card-header\">\n      <h5 className=\"card-title\">{title}</h5>\n      {subtitle && <h6 className=\"card-subtitle\">{subtitle}</h6>}\n      {buttonText && onClick && (\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={onClick}\n          disabled={isDisabled}\n        >\n          {buttonText}\n        </button>\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 21.291910139062512}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t  const { title, subtitle, buttonText, onClick, isDisabled } = props;\n  return (\n    <div className=\"card-header\">\n      <h3 className=\"card-title\">{title}</h3>\n      {subtitle && <h5 className=\"card-subtitle\">{subtitle}</h5>}\n      {buttonText && onClick && (\n        <button\n          className=\"btn btn-primary\"\n          onClick={onClick}\n          disabled={isDisabled}\n        >\n          {buttonText}\n        </button>\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 21.123188249023315}, {"code": "const TitleAndButtonCardHeader: React.FC<Props> = (props: Props) =>{\n\t    const { title, subtitle, buttonText, onClick, isDisabled } = props;\n\n    return (\n        <div className=\"title-and-button-card-header\">\n            <h3>{title}</h3>\n            {subtitle && <h4>{subtitle}</h4>}\n            {buttonText && onClick && (\n                <button\n                    className=\"title-and-button-card-header-button\"\n                    onClick={onClick}\n                    disabled={isDisabled}\n                >\n                    {buttonText}\n                </button>\n            )}\n        </div>\n    );\n}", "CodeBleu_score": 36.88981367689942}]}
{"instance_id": "eb5c7946fd59", "generation_result": [{"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t  if (!services.notifications) {\n    throw new Error('services.notifications is not defined');\n  }\n\n  const show = (\n    title: string,\n    body: string,\n    color: KibanaReactNotificationsColor,\n    icon: KibanaReactNotificationsIcon,\n    lifetime: number,\n    onClose: () => void\n  ) => {\n    services.notifications.toasts.add({\n      title,\n      text: body,\n      color,\n      iconType: icon,\n      toastLifeTimeMs: lifetime,\n      onClose,\n    });\n  };\n\n  const success = (title: string, body: string, lifetime: number = 5000) => {\n    show(title, body, 'success', 'check', lifetime, () => {});\n  };\n\n  const warning = (title: string, body: string, lifetime: number = 5000) => {\n    show(title, body, 'warning', 'help', lifetime, () => {});\n  };\n\n  const danger = (title: string, body: string, lifetime: number = 5000) => {\n    show(title, body, 'danger', 'alert', lifetime, () => {});\n  };\n\n  return {\n    show,\n    success,\n    warning,\n    danger,\n  };\n}", "CodeBleu_score": 29.27477256244597}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t  if (!services.notifications) {\n    throw new Error('services.notifications is not defined');\n  }\n\n  const toast: KibanaReactNotifications['toasts'] = {\n    success: (input: KibanaReactNotifications['toasts']['success']) =>\n      services.notifications.toasts.addSuccess(input),\n    warning: (input: KibanaReactNotifications['toasts']['warning']) =>\n      services.notifications.toasts.addWarning(input),\n    danger: (input: KibanaReactNotifications['toasts']['danger']) =>\n      services.notifications.toasts.addDanger(input),\n    error: (input: KibanaReactNotifications['toasts']['error']) =>\n      services.notifications.toasts.addError(input),\n    show: (input: KibanaReactNotifications['toasts']['show']) =>\n      services.notifications.toasts.add(input),\n  };\n\n  return {\n    toasts: toast,\n  };\n}", "CodeBleu_score": 29.942675826178487}, {"code": "export const createNotifications = (services: KibanaServices): KibanaReactNotifications => {{\n\t  if (!services.notifications) {\n    throw new Error('services.notifications is undefined');\n  }\n\n  const show: KibanaReactNotifications['show'] = ({\n    title,\n    body,\n    color,\n    icon,\n    lifetime,\n    onClose,\n  }) => {\n    services.notifications.toasts.add({\n      title,\n      text: body,\n      color,\n      iconType: icon,\n      toastLifeTimeMs: lifetime,\n      onClose,\n    });\n  };\n\n  const success: KibanaReactNotifications['success'] = ({ title, body, lifetime, onClose }) => {\n    show({\n      title,\n      body,\n      color: 'success',\n      icon: 'check',\n      lifetime,\n      onClose,\n    });\n  };\n\n  const warning: KibanaReactNotifications['warning'] = ({ title, body, lifetime, onClose }) => {\n    show({\n      title,\n      body,\n      color: 'warning',\n      icon: 'help',\n      lifetime,\n      onClose,\n    });\n  };\n\n  const danger: KibanaReactNotifications['danger'] = ({ title, body, lifetime, onClose }) => {\n    show({\n      title,\n      body,\n      color: 'danger',\n      icon: 'alert',\n      lifetime,\n      onClose,\n    });\n  };\n\n  return {\n    show,\n    success,\n    warning,\n    danger,\n  };\n}", "CodeBleu_score": 37.1813070395895}]}
{"instance_id": "e8c4d43e5232", "generation_result": [{"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t  checkCoreService();\n  const flyoutSession = services.overlays.openFlyout(\n    toMountPoint(node, options),\n    options\n  );\n  return {\n    close: flyoutSession.close,\n  };\n}", "CodeBleu_score": 44.62237082730374}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t  checkCoreService();\n  const flyoutSession = services.overlays.openFlyout(\n    toMountPoint(node, options?.theme$),\n    options\n  );\n  return {\n    onClose: flyoutSession.close\n  };\n}", "CodeBleu_score": 46.20679047518135}, {"code": "const openFlyout: KibanaReactOverlays['openFlyout'] = (node, options?) =>{\n\t  if (!services.core) {\n    throw new Error('Core services is not defined');\n  }\n  if (!services.overlays) {\n    throw new Error('Overlays service is not defined');\n  }\n  const { theme } = services.core.application;\n  const mountPoint = toMountPoint(node, theme);\n  return services.overlays.openFlyout(mountPoint, options);\n}", "CodeBleu_score": 34.10595656527736}]}
{"instance_id": "89d99efaa3c9", "generation_result": [{"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\t    if (onClickCallback) {\n      onClickCallback(event);\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n      return;\n    }\n\n    // Prevent default link behavior\n    event.preventDefault();\n\n    const locationObject = toLocationObject(to);\n    history.push(locationObject);\n  }", "CodeBleu_score": 56.512684114583436}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\t    if (onClickCallback) {\n      onClickCallback(event);\n    }\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event) || isModifiedEvent(event)) {\n      return;\n    }\n\n    if (event.defaultPrevented === true) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (isLeftClickEvent(event)) {\n      if ((event.target as unknown as { getAttribute: (a: string) => unknown })?.getAttribute('target')) {\n        return;\n      }\n\n      if (event.target instanceof HTMLAnchorElement) {\n        return;\n      }\n\n      history.push(toLocationObject(to));\n    }\n  }", "CodeBleu_score": 72.32786183221025}, {"code": "export const reactRouterOnClickHandler =\n  (history: ScopedHistory | History, to: string | LocationObject, onClickCallback?: Function) =>\n  (event: MouseEvent) =>{\n\t    if (onClickCallback) {\n      onClickCallback(event);\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n      return;\n    }\n\n    // Prevent default action\n    event.preventDefault();\n\n    // Navigate to the provided location\n    history.push(toLocationObject(to));\n  }", "CodeBleu_score": 57.07512952723008}]}
{"instance_id": "8d8e28c04bbd", "generation_result": [{"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\t  const { services } = useKibana();\n\n  if (!services.globalClient) {\n    throw new Error('Global Client service is not available');\n  }\n\n  const [value, setValue] = useState<T>(services.globalClient.get(key, defaultValue));\n\n  useEffect(() => {\n    const subscription = services.globalClient.get$(key, defaultValue).subscribe((newValue) => {\n      setValue(newValue);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [key, defaultValue, services.globalClient]);\n\n  const setter = (newValue: T) => {\n    services.globalClient.set(key, newValue);\n  };\n\n  return [value, setter];\n}", "CodeBleu_score": 43.58340832172681}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\t  const { globalClient } = useSettings();\n  if (!globalClient) {\n    throw new Error('globalClient is not available');\n  }\n\n  const [value, setValue] = useState<T>(defaultValue);\n\n  useEffect(() => {\n    const subscription = globalClient.get(key).subscribe((newValue) => {\n      setValue(newValue);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [globalClient, key]);\n\n  const setter = (newValue: T) => {\n    globalClient.set(key, newValue);\n  };\n\n  return [value, setter];\n}", "CodeBleu_score": 42.21044673469687}, {"code": "export const useGlobalUiSetting$ = <T>(key: string, defaultValue?: T): [T, Setter<T>] => {\n\t  const { globalClient } = useKibana().services;\n  const [setting, setSetting] = useState<T>(defaultValue);\n  const [setting$, setSetting$] = useState<Observable<T>>();\n\n  useEffect(() => {\n    const subscription = globalClient.get(key).subscribe((value) => {\n      setSetting(value);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [key, globalClient]);\n\n  useEffect(() => {\n    const setting$ = globalClient.get$(key);\n    setSetting$(setting$);\n    return () => {\n      setting$.unsubscribe();\n    };\n  }, [key, globalClient]);\n\n  const setter = useCallback(\n    (value: T) => {\n      globalClient.set(key, value);\n      setSetting(value);\n      setting$?.next(value);\n    },\n    [key, globalClient, setting$]\n  );\n\n  return [setting, setter];\n}", "CodeBleu_score": 36.83496412473625}]}
{"instance_id": "7da631faf620", "generation_result": [{"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t  const panel = panels[id];\n  if (panel && panel.items.length > 10) {\n    const visibleItems = panel.items.slice(0, 10);\n    const submenuItems = panel.items.slice(10);\n\n    const submenuPanel: PanelDescriptor = {\n      id: `${id}_submenu`,\n      title: `${panel.title} - More`,\n      items: submenuItems,\n    };\n\n    panels[`${id}_submenu`] = submenuPanel;\n\n    const moreItem: PanelItem = {\n      type: 'submenu',\n      id: `${id}_submenu`,\n      title: 'More',\n    };\n\n    panel.items = [...visibleItems, moreItem];\n  }\n}", "CodeBleu_score": 39.071875951972466}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t  const panel = panels[id];\n  if (!panel) {\n    return;\n  }\n\n  const { items, ...rest } = panel;\n  const visibleItems = items.slice(0, 10);\n  const submenuItems = items.slice(10);\n\n  if (submenuItems.length === 0) {\n    return;\n  }\n\n  const submenuPanel: PanelDescriptor = {\n    ...rest,\n    items: submenuItems,\n  };\n\n  const moreItem = {\n    id: 'more',\n    label: 'More',\n    icon: 'arrowRight',\n    panel: submenuPanel,\n  };\n\n  panels[`${id}.submenu`] = submenuPanel;\n\n  panels[id] = {\n    ...rest,\n    items: [...visibleItems, moreItem],\n  };\n}", "CodeBleu_score": 40.15626660259336}, {"code": "const wrapMainPanelItemsIntoSubmenu = (panels: Record<string, PanelDescriptor>, id: string) =>{\n\t  const panel = panels[id];\n  if (!panel) {\n    return;\n  }\n  const { items } = panel;\n  const limit = 10;\n  if (!items || items.length <= limit) {\n    return;\n  }\n  const visibleItems = items.slice(0, limit);\n  const submenuItems = items.slice(limit);\n  const submenuPanel: PanelDescriptor = {\n    id: `${id}_submenu`,\n    title: 'More',\n    icon: 'gear',\n    items: submenuItems,\n  };\n  panels[submenuPanel.id] = submenuPanel;\n  panel.items = visibleItems;\n  panel.items.push({\n    id: `${id}_more`,\n    title: 'More',\n    icon: 'gear',\n    onClick: () => {\n      openSubPanel(submenuPanel.id);\n    },\n  });\n}", "CodeBleu_score": 43.5245097775995}]}
{"instance_id": "7a1a98211380", "generation_result": [{"code": "private scheduleFlush(){\n\t    clearTimeout(this.flushTimeout);\n\n    if (this.pendingTasks.size === 0) {\n        this.pendingTasks = new Set(this.batchingQueue);\n        this.batchingQueue.clear();\n    }\n\n    if (this.pendingTasks.size === 0) {\n        return;\n    }\n\n    const alwaysShowPopup = Array.from(this.pendingTasks).some(task => task.alwaysShowPopup);\n\n    if (alwaysShowPopup) {\n        this.flushTimeout = setTimeout(() => {\n            this.showPopupMenu();\n        }, 0);\n    } else if (this.pendingTasks.size === 1) {\n        const task = Array.from(this.pendingTasks)[0];\n        this.flushTimeout = setTimeout(() => {\n            this.executeTask(task);\n        }, 0);\n    } else {\n        this.flushTimeout = setTimeout(() => {\n            this.showPopupMenu();\n        }, 0);\n    }\n\n    this.pendingTasks.clear();\n}", "CodeBleu_score": 47.04548352940125}, {"code": "private scheduleFlush(){\n\t  clearTimeout(this.flushTimeout);\n  this.flushTimeout = setTimeout(() => {\n    const tasks = this.batchingQueue.length\n      ? this.batchingQueue.filter((task, i, self) => self.indexOf(task) === i)\n      : this.pendingTasks;\n\n    if (tasks.length === 0) {\n      this.pendingTasks = [];\n      return;\n    }\n\n    const alwaysShowPopup = tasks.some(task => task.alwaysShowPopup);\n\n    if (alwaysShowPopup) {\n      this.showPopupMenu(tasks);\n    } else if (tasks.length === 1) {\n      tasks[0].execute();\n    } else {\n      this.showPopupMenu(tasks);\n    }\n\n    this.pendingTasks = [];\n  }, 1000);\n}", "CodeBleu_score": 45.919166490331165}, {"code": "private scheduleFlush(){\n\t    if (this.pendingTasks.length > 0) {\n        this.timeout = setTimeout(() => {\n            this.flush();\n        }, 50);\n    } else {\n        this.timeout = setTimeout(() => {\n            const tasks = [...new Set(this.batchingQueue)];\n            this.batchingQueue = [];\n            if (tasks.some((task) => task.alwaysShowPopup)) {\n                this.showPopup(tasks);\n            } else if (tasks.length === 1) {\n                tasks[0].execute();\n            } else if (tasks.length > 1) {\n                this.showPopup(tasks);\n            }\n        }, 50);\n    }\n}", "CodeBleu_score": 47.9563153040133}]}
{"instance_id": "702779fd9f4a", "generation_result": [{"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t  const trigger = this.service.triggerService.getTrigger(context);\n  const compatibleActions = this.service.actionService.getCompatibleActions(context, trigger);\n\n  await Promise.all(\n    compatibleActions.map((action) => {\n      return this.service.executionService.execute(action, context, trigger, alwaysShowPopup);\n    })\n  );\n}", "CodeBleu_score": 47.9614154873175}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t  const actions = await this.service.actionService.getCompatibleActions(context, this.trigger);\n  if (actions.length === 0) {\n    return;\n  }\n\n  const promises = actions.map((action) => {\n    return this.service.executionService.execute(action, context, this.trigger, alwaysShowPopup);\n  });\n\n  await Promise.all(promises);\n}", "CodeBleu_score": 49.66730452654649}, {"code": "public async execute(context: Context, alwaysShowPopup?: boolean){\n\t  const actions = await this.service.actionService.getCompatibleActions(context, this.trigger);\n  const promises = actions.map((action) => this.service.executionService.execute(action, context, this.trigger, alwaysShowPopup));\n  await Promise.all(promises);\n}", "CodeBleu_score": 47.71398445386699}]}
{"instance_id": "16fd1e46a9be", "generation_result": [{"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t  const subChunks = chunk.getSubChunks();\n  const images = [];\n\n  for (let i = 0; i < frameCount; i++) {\n    const subChunk = subChunks[i];\n    if (subChunk.type !== 'icon') {\n      throw new Error(`Invalid sub-chunk type at index ${i}: ${subChunk.type}`);\n    }\n    const imageData = chunk.data.slice(subChunk.start, subChunk.end);\n    images.push(imageData);\n  }\n\n  return images;\n}", "CodeBleu_score": 42.25447060124801}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t  const images: Uint8Array[] = [];\n  for (let i = 0; i < frameCount; i++) {\n    const subChunk = chunk.getSubChunk(i);\n    if (subChunk.type !== 'icon') {\n      throw new Error(`Invalid sub-chunk type: ${subChunk.type}`);\n    }\n    const imageData = chunk.data.slice(subChunk.offset, subChunk.offset + subChunk.length);\n    images.push(imageData);\n  }\n  return images;\n}", "CodeBleu_score": 45.37740738969653}, {"code": "function readImages(chunk: Chunk, frameCount: number): Uint8Array[] {\n\t  const images: Uint8Array[] = [];\n  for (let i = 0; i < frameCount; i++) {\n    const subChunk = chunk.subChunks[i];\n    if (subChunk.type !== 'icon') {\n      throw new Error(`Expected sub-chunk ${i} to be of type 'icon', but got '${subChunk.type}'`);\n    }\n    const imageData = chunk.data.slice(subChunk.start, subChunk.end);\n    images.push(imageData);\n  }\n  return images;\n}", "CodeBleu_score": 42.58305949924027}]}
{"instance_id": "6b6f91239073", "generation_result": [{"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t  const frames: AniFrame[] = [];\n  let totalDuration = 0;\n\n  // Parse the contents to extract frame data\n  const frameData = parseAni(contents);\n\n  // Calculate the display rate\n  const displayRate = frameData.length > 0 ? frameData[0].displayRate : 0;\n\n  // Determine the total duration\n  for (const frame of frameData) {\n    totalDuration += frame.duration;\n  }\n\n  // Map images to frame objects with URLs and empty percentage arrays\n  for (const frame of frameData) {\n    const image = new Image();\n    image.src = frame.imageUrl;\n    frames.push({ image, percents: [] });\n  }\n\n  // Calculate and assign the elapsed display percentage for each frame\n  for (let i = 0; i < frames.length; i++) {\n    const elapsedDisplayPercent = (i * displayRate) / totalDuration;\n    frames[i].percents.push(elapsedDisplayPercent);\n  }\n\n  return {\n    totalDuration,\n    frames,\n  };\n}", "CodeBleu_score": 30.556107074638728}, {"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t  const header = new DataView(contents.slice(0, 16).buffer);\n  const frameCount = header.getUint16(0, true);\n  const displayRate = header.getUint16(4, true);\n  const totalDuration = (frameCount / displayRate) * 1000;\n  const frames: AniFrame[] = [];\n  let currentOffset = 16;\n  for (let i = 0; i < frameCount; i++) {\n    const frameHeader = new DataView(contents.slice(currentOffset, currentOffset + 8).buffer);\n    const frameWidth = frameHeader.getUint16(0, true);\n    const frameHeight = frameHeader.getUint16(2, true);\n    const frameSize = frameHeader.getUint32(4, true);\n    const frameUrl = `data:image/png;base64,${btoa(String.fromCharCode.apply(null, contents.slice(currentOffset + 8, currentOffset + 8 + frameSize)))}`;\n    frames.push({\n      url: frameUrl,\n      percents: [],\n    });\n    currentOffset += 8 + frameSize;\n  }\n  const frameDuration = totalDuration / frameCount;\n  for (let i = 0; i < frameCount; i++) {\n    frames[i].percents.push((i / frameCount) * 100);\n  }\n  return {\n    totalDuration,\n    frames,\n  };\n}", "CodeBleu_score": 28.50893916840646}, {"code": "function readAni(contents: Uint8Array): AniCursorImage{\n\t  const frames: AniCursorImage['frames'] = [];\n  const totalDuration = contents[0x04];\n  const displayRate = contents[0x06];\n  const frameCount = contents[0x08];\n  const frameOffsets: number[] = [];\n  for (let i = 0; i < frameCount; i++) {\n    frameOffsets.push(contents[0x0a + i] * 2);\n  }\n  for (let i = 0; i < frameCount; i++) {\n    const frameOffset = frameOffsets[i];\n    const frameWidth = contents[frameOffset + 0x00];\n    const frameHeight = contents[frameOffset + 0x01];\n    const frameX = contents[frameOffset + 0x02];\n    const frameY = contents[frameOffset + 0x03];\n    const frameData = contents.slice(\n      frameOffset + 0x04,\n      frameOffset + 0x04 + frameWidth * frameHeight\n    );\n    const frameImage = new Image();\n    frameImage.src = URL.createObjectURL(\n      new Blob([frameData], { type: 'image/png' })\n    );\n    frames.push({\n      image: frameImage,\n      percents: [],\n      x: frameX,\n      y: frameY,\n    });\n  }\n  for (let i = 0; i < frameCount; i++) {\n    const frame = frames[i];\n    const frameDuration = contents[0x0a + i];\n    const framePercents = frame.percents;\n    for (let j = 0; j < frameDuration; j++) {\n      framePercents.push((j / frameDuration) * 100);\n    }\n  }\n  return {\n    duration: (totalDuration / displayRate) * 1000,\n    frames,\n  };\n}", "CodeBleu_score": 26.32649317327047}]}
{"instance_id": "f059427111a8", "generation_result": [{"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t  const items = await queryDatabase('SELECT * FROM items WHERE metadata IS NOT NULL');\n\n  const tooManyFiles: any[] = [];\n  const tooFewFiles: any[] = [];\n  const missingSkinFile: any[] = [];\n\n  for (const item of items) {\n    const metadata = JSON.parse(item.metadata);\n    const files = metadata.files;\n\n    if (files.length > 100) {\n      tooManyFiles.push(item);\n    } else if (files.length < 10) {\n      tooFewFiles.push(item);\n    }\n\n    const hasSkinFile = files.some((file: any) => file.name.endsWith('.skin'));\n    if (!hasSkinFile) {\n      missingSkinFile.push(item);\n    }\n  }\n\n  logTable({\n    headers: ['Category', 'Count'],\n    rows: [\n      ['Too Many Files', tooManyFiles.length],\n      ['Too Few Files', tooFewFiles.length],\n      ['Missing Skin File', missingSkinFile.length],\n    ],\n  });\n}", "CodeBleu_score": 34.192560594090736}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t  const items = await getItemsWithMetadata();\n  const tooManyFiles = [];\n  const tooFewFiles = [];\n  const missingSkinFile = [];\n\n  for (const item of items) {\n    const metadata = JSON.parse(item.metadata);\n    const files = metadata.files;\n\n    if (files.length > 20) {\n      tooManyFiles.push(item);\n    } else if (files.length < 20) {\n      tooFewFiles.push(item);\n    }\n\n    if (!files.some((file) => file.name.includes(\"_skin.png\"))) {\n      missingSkinFile.push(item);\n    }\n  }\n\n  console.log(\"Too many files:\");\n  console.table(tooManyFiles);\n  console.log(\"Too few files:\");\n  console.table(tooFewFiles);\n  console.log(\"Missing skin file:\");\n  console.table(missingSkinFile);\n}", "CodeBleu_score": 26.66112535955677}, {"code": "export async function checkInternetArchiveMetadata(): Promise<void>{\n\t  const db = await openDb();\n  const items = await db.all(\n    \"SELECT * FROM items WHERE metadata IS NOT NULL AND metadata != ''\"\n  );\n\n  const tooManyFiles = [];\n  const tooFewFiles = [];\n  const missingSkinFile = [];\n\n  for (const item of items) {\n    const metadata = JSON.parse(item.metadata);\n    const files = Object.keys(metadata.files);\n\n    if (files.length > 50) {\n      tooManyFiles.push({\n        identifier: item.identifier,\n        files: files.length,\n      });\n    } else if (files.length < 5) {\n      tooFewFiles.push({\n        identifier: item.identifier,\n        files: files.length,\n      });\n    }\n\n    if (!files.some((file) => file.endsWith(\".skin\"))) {\n      missingSkinFile.push({\n        identifier: item.identifier,\n      });\n    }\n  }\n\n  console.table({\n    \"Too many files\": tooManyFiles,\n    \"Too few files\": tooFewFiles,\n    \"Missing skin file\": missingSkinFile,\n  });\n}", "CodeBleu_score": 34.20762187751996}]}
{"instance_id": "9d9b04763521", "generation_result": [{"code": "function useSkinKeyboardControls(){\n\t  const dispatch = useAppDispatch();\n  const { skin } = useAppSelector((state) => state.skin);\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"ArrowRight\") {\n        dispatch(selectNextSkin());\n      } else if (event.key === \"ArrowLeft\") {\n        dispatch(selectPreviousSkin());\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [dispatch, skin]);\n}", "CodeBleu_score": 42.42983650191867}, {"code": "function useSkinKeyboardControls(){\n\t  const dispatch = useAppDispatch();\n  const { skinIndex, skins } = useAppSelector((state) => state.skins);\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"ArrowRight\") {\n        dispatch(selectNextSkin(skins));\n      } else if (event.key === \"ArrowLeft\") {\n        dispatch(selectPreviousSkin(skins));\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [dispatch, skinIndex, skins]);\n}", "CodeBleu_score": 40.37283209515484}, {"code": "function useSkinKeyboardControls(){\n\t  const dispatch = useAppDispatch();\n  const skins = useAppSelector(selectSkins);\n  const selectedSkin = useAppSelector(selectSelectedSkin);\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"ArrowRight\") {\n        const nextSkinIndex =\n          (skins.findIndex((skin) => skin.id === selectedSkin?.id) + 1) %\n          skins.length;\n        dispatch(selectSkin(skins[nextSkinIndex]));\n      } else if (event.key === \"ArrowLeft\") {\n        const previousSkinIndex =\n          (skins.findIndex((skin) => skin.id === selectedSkin?.id) -\n            1 +\n            skins.length) %\n          skins.length;\n        dispatch(selectSkin(skins[previousSkinIndex]));\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [dispatch, skins, selectedSkin]);\n}", "CodeBleu_score": 36.794270827067905}]}
{"instance_id": "c49e878d86ad", "generation_result": [{"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t  return (dispatch) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.multiple = true;\n    input.accept = accept;\n    input.click();\n\n    input.onchange = () => {\n      const files = input.files;\n      if (files && files.length > 0) {\n        const fileName = files[0].name;\n        dispatch(\n          fileReferenceActions.setFileReferences({\n            expectedType,\n            numberOfFiles: files.length,\n            fileName,\n          })\n        );\n        dispatch(loadFilesFromReferences(files));\n      }\n    };\n  };\n}", "CodeBleu_score": 51.91981762365696}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t  return (dispatch) => {\n    const fileInput = document.createElement(\"input\");\n    fileInput.type = \"file\";\n    if (accept) {\n      fileInput.accept = accept;\n    }\n    fileInput.multiple = true;\n    fileInput.click();\n\n    fileInput.onchange = () => {\n      const files = fileInput.files;\n      if (!files) {\n        return;\n      }\n\n      const fileNames = Array.from(files).map((file) => file.name);\n      const firstFileName = fileNames[0];\n      const numFiles = fileNames.length;\n\n      dispatch(\n        setFileReferences({\n          expectedType,\n          numFiles,\n          firstFileName,\n        })\n      );\n      dispatch(loadFilesFromReferences(files));\n    };\n  };\n}", "CodeBleu_score": 49.509382353554685}, {"code": "function _openFileDialog(\n  accept: string | null,\n  expectedType: \"SKIN\" | \"MEDIA\" | \"EQ\"\n): Thunk{\n\t  return (dispatch) => {\n    const fileInput = document.createElement(\"input\");\n    fileInput.type = \"file\";\n    fileInput.multiple = true;\n    fileInput.accept = accept || \"\";\n    fileInput.onchange = () => {\n      const files = fileInput.files;\n      if (files && files.length > 0) {\n        const fileName = files[0].name;\n        dispatch({\n          type: \"OPEN_FILE_DIALOG\",\n          payload: {\n            expectedType,\n            fileCount: files.length,\n            fileName,\n          },\n        });\n        dispatch(loadFilesFromReferences(files));\n      }\n    };\n    fileInput.click();\n  };\n}", "CodeBleu_score": 50.38635831586718}]}
{"instance_id": "afa715d20f88", "generation_result": [{"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\t  return (dispatch: Dispatch) => {\n    const files = extractFilesFromEvent(e)\n\n    if (handleTrackDropEvent) {\n      handleTrackDropEvent(e, files, loadStyle, atIndex)\n    } else {\n      dispatch(loadFilesFromReferences(files, loadStyle, atIndex))\n    }\n  }\n}", "CodeBleu_score": 38.2241297826296}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\t  return async (dispatch: AppDispatch) => {\n    const files = extractFilesFromEvent(e);\n\n    if (files.length === 0) {\n      return;\n    }\n\n    if (handleTrackDropEvent) {\n      handleTrackDropEvent(e, files, loadStyle, atIndex);\n      return;\n    }\n\n    dispatch(loadFilesFromReferences(files, loadStyle, atIndex));\n  };\n}", "CodeBleu_score": 46.683914425569235}, {"code": "export function loadMedia(\n  e: React.DragEvent<HTMLDivElement>,\n  loadStyle: LoadStyle = LOAD_STYLE.NONE,\n  atIndex = 0\n): Thunk{\n\t  return async (dispatch) => {\n    const files = extractFilesFromDragEvent(e);\n    if (files.length === 0) {\n      return;\n    }\n\n    if (handleTrackDropEvent) {\n      const { handleTrackDropEvent, handleTrackDropEventStyle } =\n        await handleTrackDropEvent(e);\n      if (handleTrackDropEvent) {\n        dispatch(\n          loadFilesFromReferences(\n            files.map((file) => ({\n              file,\n              style: handleTrackDropEventStyle,\n              atIndex,\n            }))\n          )\n        );\n      }\n    } else {\n      dispatch(\n        loadFilesFromReferences(\n          files.map((file) => ({\n            file,\n            style: loadStyle,\n            atIndex,\n          }))\n        )\n      );\n    }\n  };\n}", "CodeBleu_score": 43.01714191074153}]}
{"instance_id": "0faea0aa350c", "generation_result": [{"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t    dispatch({ type: 'FETCH_MEDIA_TAGS_REQUEST', id })\n    try {\n      const tags = await requireMusicMetadata(file)\n      const { artist, title, album, picture } = tags.common\n      const albumArt = picture && URL.createObjectURL(new Blob([new Uint8Array(picture.data)], { type: 'image/png' }))\n      dispatch({ type: 'FETCH_MEDIA_TAGS_SUCCESS', id, artist, title, album, albumArt })\n    } catch (error) {\n      dispatch({ type: 'FETCH_MEDIA_TAGS_FAILURE', id, error })\n    }\n  }", "CodeBleu_score": 25.946172559924317}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t    dispatch({ type: 'FETCH_MEDIA_TAGS_STARTED' })\n    try {\n      const tags = await requireMusicMetadata(file)\n      const { artist, title, album, picture } = tags.common\n      const albumArt = picture ? URL.createObjectURL(new Blob([picture.data], { type: 'image/jpeg' })) : null\n      dispatch({ type: 'FETCH_MEDIA_TAGS_SUCCESS', payload: { id, artist, title, album, albumArt } })\n    } catch (error) {\n      dispatch({ type: 'FETCH_MEDIA_TAGS_FAILURE', payload: { id, error } })\n    }\n  }", "CodeBleu_score": 24.692294737651814}, {"code": "export function fetchMediaTags(file: string | Blob, id: number): Thunk {\n  return async (dispatch, getState, { requireMusicMetadata }) =>{\n\t    dispatch(setMediaTagsStart(id));\n    try {\n      const metadata = await requireMusicMetadata(file);\n      const { artist, title, album, picture } = metadata.common;\n      const albumArt = picture ? URL.createObjectURL(new Blob([new Uint8Array(picture.data)])) : null;\n      dispatch(setMediaTagsSuccess(id, { artist, title, album, albumArt }));\n    } catch (error) {\n      dispatch(setMediaTagsFailure(id, error));\n    }\n  }", "CodeBleu_score": 24.362114477855908}]}
{"instance_id": "02174213852f", "generation_result": [{"code": "export function playTrack(id: number): Thunk {{\n\t  return (dispatch: d, getState: gs) => {\n    const state = getState();\n    if (Selectors.getMediaStatus(state) === MediaStatus.STOPPED) {\n      dispatch(Actions.bufferTrack(id));\n    } else {\n      dispatch(Actions.playTrack(id));\n    }\n  };\n}", "CodeBleu_score": 39.74568148288801}, {"code": "export function playTrack(id: number): Thunk {{\n\t    return (dispatch, getState) => {\n        const state = getState()\n        const mediaStatus = Selectors.getMediaStatus(state)\n        if (mediaStatus === 'stopped') {\n            dispatch(Actions.bufferTrack(id))\n        } else {\n            dispatch(Actions.playTrack(id))\n        }\n    }\n}", "CodeBleu_score": 48.44868706375897}, {"code": "export function playTrack(id: number): Thunk {{\n\t  return (dispatch, getState) => {\n    const { mediaStatus } = getState().player;\n    if (mediaStatus === 'STOPPED') {\n      dispatch(bufferTrack(id));\n    } else {\n      dispatch(playTrackAction(id));\n    }\n  };\n}", "CodeBleu_score": 34.97581383393551}]}
{"instance_id": "643b829015d2", "generation_result": [{"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t  e.preventDefault();\n  const { volume } = getState();\n  dispatch(setVolume(volume + e.deltaY * 0.01));\n}", "CodeBleu_score": 32.3912722822609}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t  e.preventDefault();\n  const currentVolume = store.getState().player.volume;\n  const volume = Math.min(Math.max(currentVolume + e.deltaY * -0.01, 0), 1);\n  store.dispatch(setVolume(volume));\n}", "CodeBleu_score": 47.751386583013456}, {"code": "export function scrollVolume(e: React.WheelEvent<HTMLDivElement>): Thunk{\n\t    e.preventDefault();\n    const currentVolume = getState().volume;\n    dispatch(setVolume(currentVolume + e.deltaY));\n}", "CodeBleu_score": 47.85708582820708}]}
{"instance_id": "d97c127090ce", "generation_result": [{"code": "function FullScreen(props: Props){\n\t  const { children, enabled, onChange } = props\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const element = ref.current\n    if (element) {\n      const fullscreenchange = () => {\n        if (onChange) {\n          onChange(document.fullscreenElement === element)\n        }\n      }\n      element.addEventListener('fullscreenchange', fullscreenchange)\n      return () => {\n        element.removeEventListener('fullscreenchange', fullscreenchange)\n      }\n    }\n  }, [onChange])\n\n  useLayoutEffect(() => {\n    const element = ref.current\n    if (element) {\n      if (enabled) {\n        if (!document.fullscreenElement) {\n          element.requestFullscreen()\n        }\n      } else {\n        if (document.fullscreenElement === element) {\n          document.exitFullscreen()\n        }\n      }\n    }\n  }, [enabled])\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        height: '100%',\n        width: '100%',\n        display: enabled ? 'block' : 'none',\n      }}\n    >\n      {children}\n    </div>\n  )\n}", "CodeBleu_score": 43.379744338444375}, {"code": "function FullScreen(props: Props){\n\t  const { enabled, children, onChange, target } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (enabled && ref.current) {\n      ref.current.requestFullscreen();\n    }\n  }, [enabled]);\n\n  useEffect(() => {\n    if (onChange) {\n      const eventName = getFullscreenChangeEventName();\n      const handler = () => {\n        onChange(document.fullscreenElement === ref.current);\n      };\n      document.addEventListener(eventName, handler);\n      return () => {\n        document.removeEventListener(eventName, handler);\n      };\n    }\n  }, [onChange]);\n\n  const style: CSSProperties = enabled\n    ? {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 9999,\n        display: 'flex',\n        flexDirection: 'column',\n      }\n    : {\n        display: 'flex',\n        flexDirection: 'column',\n      };\n\n  return (\n    <div ref={ref} style={style}>\n      {children}\n    </div>\n  );\n}", "CodeBleu_score": 47.698541623585754}, {"code": "function FullScreen(props: Props){\n\t  const { enabled, children } = props;\n  const targetRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const target = targetRef.current;\n    if (!target) return;\n\n    const handleFullscreenChange = () => {\n      if (!document.fullscreenElement) {\n        // Exit fullscreen mode\n      }\n    };\n\n    target.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\n    return () => {\n      target.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    const target = targetRef.current;\n    if (!target) return;\n\n    if (enabled) {\n      target.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  }, [enabled]);\n\n  return (\n    <div\n      ref={targetRef}\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        display: enabled ? \"block\" : \"none\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}", "CodeBleu_score": 51.85108352533228}]}
{"instance_id": "d333738337a8", "generation_result": [{"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t  const clipPaths = {};\n  Object.keys(skinRegion).forEach((regionName) => {\n    if (skinRegion[regionName].polygons) {\n      clipPaths[regionName] = `url(#${regionName})`;\n    }\n  });\n  return clipPaths;\n}", "CodeBleu_score": 23.83399195685965}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t  const clipPaths = {};\n  for (const regionName in skinRegion) {\n    const regionData = skinRegion[regionName];\n    if (regionData.polygons.length) {\n      clipPaths[regionName] = `url(#${regionName})`;\n    }\n  }\n  return clipPaths;\n}", "CodeBleu_score": 31.1656125808311}, {"code": "const getClipPaths = createSelector(Selectors.getSkinRegion, (skinRegion) =>{\n\t  const clipPaths = {};\n  Object.entries(skinRegion).forEach(([regionName, polygons]) => {\n    if (polygons.length) {\n      clipPaths[regionName] = polygons.map((polygon) => polygon.id);\n    }\n  });\n  return clipPaths;\n}", "CodeBleu_score": 26.00215476047662}]}
{"instance_id": "6d30b280ffbe", "generation_result": [{"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t  const buckets = new Array(NUM_BARS).fill(0);\n\n  const frequencySteps = Math.pow(2, 1 / NUM_BARS);\n  const minHz = 20;\n  const maxHz = SAMPLE_RATE / 2;\n\n  let frequency = minHz;\n  while (frequency < maxHz) {\n    const index = Math.round((bufferLength / SAMPLE_RATE) * frequency);\n    buckets[index] = index;\n    frequency *= frequencySteps;\n  }\n\n  return buckets;\n}", "CodeBleu_score": 34.95003683793832}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t  const buckets = new Array(NUM_BARS).fill(0);\n  const frequencyStep = Math.pow(2, 1 / 12);\n  const minHz = 20;\n  const maxHz = 22050;\n\n  for (let i = 0; i < NUM_BARS; i++) {\n    const frequency = minHz * Math.pow(frequencyStep, i);\n    const index = Math.round((bufferLength / 2) * (frequency / maxHz));\n    buckets[i] = index;\n  }\n\n  return buckets;\n}", "CodeBleu_score": 44.43696472370925}, {"code": "function octaveBucketsForBufferLength(bufferLength: number): number[]{\n\t  const buckets = new Array(NUM_BARS).fill(0)\n  const minHz = 20\n  const maxHz = SAMPLE_RATE / 2\n  const frequencySteps = Math.pow(2, 1 / NUM_BARS)\n  const minHzStep = Math.pow(frequencySteps, Math.floor(Math.log(minHz) / Math.log(frequencySteps)))\n  const maxHzStep = Math.pow(frequencySteps, Math.ceil(Math.log(maxHz) / Math.log(frequencySteps)))\n\n  let hz = minHzStep\n  let hzStep = minHzStep * 2\n  let bucket = 0\n  while (hz < maxHz) {\n    const hzStepEnd = Math.min(hzStep, maxHzStep)\n    while (hz < hzStepEnd) {\n      const hzNorm = hz / (SAMPLE_RATE / 2)\n      const bin = Math.round(hzNorm * bufferLength)\n      buckets[bucket] = Math.max(buckets[bucket], bin)\n      hz *= frequencySteps\n    }\n    hzStep *= frequencySteps\n    bucket++\n  }\n  return buckets\n}", "CodeBleu_score": 37.02205008335516}]}
{"instance_id": "e7c399fb0db4", "generation_result": [{"code": "function EqGraph(){\n\t  const canvasRef = useRef(null);\n  const canvasCtx = useMemo(() => {\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.canvas.width = 100;\n      ctx.canvas.height = 100;\n      return ctx;\n    }\n    return null;\n  }, [canvasRef]);\n\n  const [colorPattern, setColorPattern] = useState(null);\n  const [node, setNode] = useState(null);\n  const [image, setImage] = useState(null);\n\n  useLayoutEffect(() => {\n    if (canvasCtx) {\n      const colorPattern = canvasCtx.createPattern(image, \"repeat\");\n      setColorPattern(colorPattern);\n      const node = canvasCtx.createLinearGradient(0, 0, 0, 100);\n      node.addColorStop(0, \"#000000\");\n      node.addColorStop(1, \"#ffffff\");\n      setNode(node);\n    }\n  }, [canvasCtx, image]);\n\n  useEffect(() => {\n    if (canvasCtx && colorPattern && node) {\n      canvasCtx.clearRect(0, 0, canvasCtx.canvas.width, canvasCtx.canvas.height);\n      canvasCtx.fillStyle = colorPattern;\n      canvasCtx.fillRect(0, 0, canvasCtx.canvas.width, canvasCtx.canvas.height);\n      canvasCtx.strokeStyle = node;\n      canvasCtx.lineWidth = 1;\n      canvasCtx.beginPath();\n      canvasCtx.moveTo(0, 50);\n      canvasCtx.lineTo(100, 50);\n      canvasCtx.stroke();\n    }\n  }, [canvasCtx, colorPattern, node]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{\n        width: \"100px\",\n        height: \"100px\",\n      }}\n    />\n  );\n}", "CodeBleu_score": 30.55685422828348}, {"code": "function EqGraph(){\n\t", "CodeBleu_score": 0.8779573970704413}, {"code": "function EqGraph(){\n\t", "CodeBleu_score": 0.8779573970704413}]}
{"instance_id": "b858f410c3f3", "generation_result": [{"code": "const ClutterBar = memo(() =>{\n\t", "CodeBleu_score": 1.1151438765950388}, {"code": "const ClutterBar = memo(() =>{\n\t  const dispatch = useDispatch();\n  const doubled = useTypedSelector((state) => state.doubled);\n  const setFocus = useActionCreator(setFocusActionCreator);\n  const mouseUp = useActionCreator(mouseUpActionCreator);\n\n  return (\n    <div\n      className={`clutter-bar${doubled ? \" doubled\" : \"\"}`}\n      onMouseDown={() => setFocus(true)}\n      onMouseUp={() => mouseUp()}\n    >\n      <div className=\"clutter-bar-buttons\">\n        <button\n          className={`clutter-bar-button${doubled ? \" doubled\" : \"\"}`}\n          onClick={() => dispatch(toggleDoubled())}\n        >\n          {doubled ? \"Single\" : \"Double\"}\n        </button>\n        <button\n          className={`clutter-bar-button${doubled ? \" doubled\" : \"\"}`}\n          onClick={() => dispatch(toggleDoubled())}\n        >\n          {doubled ? \"Single\" : \"Double\"}\n        </button>\n        <button\n          className={`clutter-bar-button${doubled ? \" doubled\" : \"\"}`}\n          onClick={() => dispatch(toggleDoubled())}\n        >\n          {doubled ? \"Single\" : \"Double\"}\n        </button>\n      </div>\n      <ContextMenu />\n    </div>\n  );\n}", "CodeBleu_score": 25.683622377645342}, {"code": "const ClutterBar = memo(() =>{\n\t", "CodeBleu_score": 1.1151438765950388}]}
{"instance_id": "5946b13d68ba", "generation_result": [{"code": "const PlaylistToggleButton = memo(() =>{\n\t  const isPlaylistOpen = useTypedSelector(Selectors.getWindowOpen);\n  const dispatch = useActionCreator(Actions.toggleWindow);\n  const onClick = () => dispatch();\n  const className = classnames(\n    'playlist-toggle-button',\n    {\n      'playlist-toggle-button--open': isPlaylistOpen,\n    },\n  );\n  return (\n    <button\n      id=\"playlist-toggle-button\"\n      className={className}\n      onClick={onClick}\n      title=\"Toggle Playlist Editor\"\n    />\n  );\n}", "CodeBleu_score": 37.194942542824215}, {"code": "const PlaylistToggleButton = memo(() =>{\n\t  const isOpen = useTypedSelector(Selectors.getWindowOpen);\n  const togglePlaylist = useActionCreator(\n    ActionCreators.togglePlaylist,\n    Selectors.getWindowOpen\n  );\n\n  return (\n    <button\n      id=\"playlist-toggle\"\n      className={`playlist-toggle ${isOpen ? \"playlist-open\" : \"\"}`}\n      onClick={togglePlaylist}\n      title={isOpen ? \"Close Playlist\" : \"Open Playlist\"}\n    >\n      <FontAwesomeIcon icon={faList} />\n    </button>\n  );\n}", "CodeBleu_score": 28.94440474764277}, {"code": "const PlaylistToggleButton = memo(() =>{\n\t  const isWindowOpen = useTypedSelector(Selectors.getWindowOpen);\n  const dispatch = useTypedDispatch();\n  const togglePlaylistEditor = useActionCreator(\n    Actions.togglePlaylistEditor,\n    dispatch\n  );\n\n  const handleClick = () => {\n    togglePlaylistEditor();\n  };\n\n  const buttonClassName = classNames(\"playlist-toggle-button\", {\n    selected: isWindowOpen,\n  });\n\n  return (\n    <button\n      id=\"playlist-toggle-button\"\n      className={buttonClassName}\n      onClick={handleClick}\n      title=\"Toggle Playlist Editor\"\n    >\n      <div className=\"bar\" />\n      <div className=\"bar\" />\n      <div className=\"bar\" />\n    </button>\n  );\n}", "CodeBleu_score": 33.71061062147103}]}
{"instance_id": "39ecf0db7a99", "generation_result": [{"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t  const desktopRef = React.useRef<HTMLDivElement | null>(null);\n\n  React.useEffect(() => {\n    const desktop = document.createElement(\"div\");\n    desktop.classList.add(\"webamp-desktop\");\n    document.body.appendChild(desktop);\n    desktopRef.current = desktop;\n\n    return () => {\n      document.body.removeChild(desktop);\n    };\n  }, []);\n\n  if (!desktopRef.current) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(children, desktopRef.current);\n}", "CodeBleu_score": 42.27197650511754}, {"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t  const desktop = React.useRef<HTMLDivElement | null>(null);\n\n  React.useEffect(() => {\n    desktop.current = document.createElement(\"div\");\n    desktop.current.classList.add(\"webamp-desktop\");\n    document.body.appendChild(desktop.current);\n    return () => {\n      document.body.removeChild(desktop.current);\n    };\n  }, []);\n\n  return desktop.current\n    ? ReactDOM.createPortal(children, desktop.current)\n    : null;\n}", "CodeBleu_score": 36.925473118547984}, {"code": "const Desktop = React.memo(({ children }: Props) =>{\n\t  const [div] = React.useState(() => {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"webamp-desktop\");\n    return div;\n  });\n\n  React.useEffect(() => {\n    document.body.appendChild(div);\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n\n  return ReactDOM.createPortal(children, div);\n}", "CodeBleu_score": 50.322819041168685}]}
{"instance_id": "41be320578a4", "generation_result": [{"code": "export default function PlaylistScrollBar(){\n\t  const playlistHeight = useSelector((state) => state.playlist.height);\n  const scrollPosition = useSelector((state) => state.playlist.scrollPosition);\n  const allTracksVisible = useSelector((state) => state.playlist.allTracksVisible);\n  const dispatch = useDispatch();\n\n  const handleScroll = (event, value) => {\n    dispatch(setPlaylistScrollPosition(value));\n  };\n\n  return (\n    <VerticalSlider\n      value={scrollPosition}\n      onChange={handleScroll}\n      min={0}\n      max={playlistHeight}\n      disabled={allTracksVisible}\n      handle={<VerticalSliderHandle />}\n    />\n  );\n}", "CodeBleu_score": 32.330773585989}, {"code": "export default function PlaylistScrollBar(){\n\t  const playlistHeight = useSelector(selectPlaylistHeight);\n  const scrollPosition = useSelector(selectPlaylistScrollPosition);\n  const allTracksVisible = useSelector(selectAllTracksVisible);\n\n  const dispatch = useDispatch();\n\n  const handleScroll = (event, newValue) => {\n    dispatch(setPlaylistScrollPosition(newValue));\n  };\n\n  return (\n    <VerticalSlider\n      value={scrollPosition}\n      onChange={handleScroll}\n      min={0}\n      max={playlistHeight}\n      step={1}\n      disabled={allTracksVisible}\n      handle={\n        <div\n          style={{\n            width: 10,\n            height: 10,\n            borderRadius: \"50%\",\n            backgroundColor: \"gray\",\n          }}\n        />\n      }\n    />\n  );\n}", "CodeBleu_score": 32.581960900625184}, {"code": "export default function PlaylistScrollBar(){\n\t  const playlistHeight = useSelector(selectPlaylistHeight);\n  const scrollPosition = useSelector(selectPlaylistScrollPosition);\n  const allTracksVisible = useSelector(selectAllTracksVisible);\n\n  const dispatch = useDispatch();\n\n  const handleScroll = (event, newValue) => {\n    dispatch(setPlaylistScrollPosition(newValue));\n  };\n\n  return (\n    <VerticalSlider\n      value={scrollPosition}\n      onChange={handleScroll}\n      min={0}\n      max={playlistHeight}\n      disabled={allTracksVisible}\n      handle={<VerticalSliderHandle />}\n    />\n  );\n}", "CodeBleu_score": 28.289540701709754}]}
{"instance_id": "fccf51432007", "generation_result": [{"code": "export function genMediaDuration(url: string): Promise<number>{\n\t  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('durationchange', () => {\n      resolve(audio.duration);\n      audio.removeEventListener('durationchange', null);\n    });\n    audio.addEventListener('error', (e) => {\n      reject(e);\n      audio.removeEventListener('error', null);\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 38.56592844214747}, {"code": "export function genMediaDuration(url: string): Promise<number>{\n\t  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('durationchange', () => {\n      resolve(audio.duration);\n      audio.removeEventListener('durationchange', () => {});\n    });\n    audio.addEventListener('error', (e) => {\n      reject(e);\n      audio.removeEventListener('error', () => {});\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 38.6845205062282}, {"code": "export function genMediaDuration(url: string): Promise<number>{\n\t  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('durationchange', () => {\n      resolve(audio.duration);\n      audio.removeEventListener('durationchange', () => {});\n    });\n    audio.addEventListener('error', (e) => {\n      reject(e);\n      audio.removeEventListener('error', () => {});\n    });\n    audio.src = url;\n  });\n}", "CodeBleu_score": 38.6845205062282}]}
{"instance_id": "8055da9c9425", "generation_result": [{"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t  return new Promise((resolve, reject) => {\n    if (!fileReference) {\n      reject(new Error('No file reference provided.'));\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = () => {\n      reject(new Error('Error reading file.'));\n    };\n\n    reader.readAsArrayBuffer(fileReference);\n  });\n}", "CodeBleu_score": 58.45399568123189}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t  if (fileReference === null) {\n    throw new Error('File reference is null');\n  }\n\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsArrayBuffer(fileReference);\n  });\n}", "CodeBleu_score": 57.92750513815228}, {"code": "export async function genArrayBufferFromFileReference(\n  fileReference: File\n): Promise<any>{\n\t  return new Promise((resolve, reject) => {\n    if (fileReference) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.onerror = () => {\n        reject(reader.error);\n      };\n      reader.readAsArrayBuffer(fileReference);\n    } else {\n      reject(new Error('File reference is null'));\n    }\n  });\n}", "CodeBleu_score": 65.79293814307321}]}
{"instance_id": "b3dc12d7d309", "generation_result": [{"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t  const [value, setValue] = useState<T | null>(null);\n  const [disposed, setDisposed] = useState(false);\n\n  useEffect(() => {\n    propValue.then((result) => {\n      if (!disposed) {\n        setValue(result);\n      }\n    });\n    return () => {\n      setDisposed(true);\n    };\n  }, [propValue, disposed]);\n\n  return value;\n}", "CodeBleu_score": 62.633115062282705}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t    const [value, setValue] = React.useState<T | null>(null);\n    const [disposed, setDisposed] = React.useState(false);\n\n    React.useEffect(() => {\n        propValue.then((newValue) => {\n            if (!disposed) {\n                setValue(newValue);\n            }\n        });\n\n        return () => {\n            setDisposed(true);\n        };\n    }, [propValue]);\n\n    return value;\n}", "CodeBleu_score": 49.63403272048836}, {"code": "export function usePromiseValueOrNull<T>(propValue: Promise<T>): T | null{\n\t  const [value, setValue] = useState<T | null>(null);\n  const [disposed, setDisposed] = useState(false);\n\n  useEffect(() => {\n    propValue.then((value) => {\n      if (!disposed) {\n        setValue(value);\n      }\n    });\n    return () => {\n      setDisposed(true);\n    };\n  }, [propValue, disposed]);\n\n  return value;\n}", "CodeBleu_score": 62.77595530885862}]}
{"instance_id": "7fc14a50df16", "generation_result": [{"code": "export default function regionParser(regionStr: string): RegionData{\n\t", "CodeBleu_score": 1.3588827273498159}, {"code": "export default function regionParser(regionStr: string): RegionData{\n\t  const lines = regionStr.split('\n');\n  const sections: { [key: string]: string[] } = {};\n  let currentSection = '';\n\n  for (const line of lines) {\n    const trimmedLine = line.trim();\n\n    if (trimmedLine.startsWith('[') && trimmedLine.endsWith(']')) {\n      currentSection = trimmedLine.slice(1, -1);\n      sections[currentSection] = [];\n    } else if (currentSection) {\n      sections[currentSection].push(trimmedLine);\n    }\n  }\n\n  const output: RegionData = {};\n\n  for (const [section, lines] of Object.entries(sections)) {\n    const polygons = lines\n      .map((line) => {\n        const match = line.match(/^(\\d+),(\\d+),(\\d+),(\\d+)$/);\n        if (match) {\n          const x1 = parseInt(match[1], 10);\n          const y1 = parseInt(match[2], 10);\n          const x2 = parseInt(match[3], 10);\n          const y2 = parseInt(match[4], 10);\n          if (x1 === x2 || y1 === y2) {\n            return { x1, y1, x2, y2 };\n          }\n        }\n        return null;\n      })\n      .filter((polygon) => polygon !== null) as Polygon[];\n\n    if (polygons.length > 0) {\n      output[section] = polygons;\n    }\n  }\n\n  return output;\n}", "CodeBleu_score": 35.886167264724726}, {"code": "export default function regionParser(regionStr: string): RegionData{\n\t    const regionData: RegionData = {};\n    const sections = regionStr.split(/\\r?\n\\r?\n/);\n\n    for (const section of sections) {\n        const lines = section.split(/\\r?\n/);\n        const header = lines[0];\n        const polygonPoints = lines.slice(1).map((line) => {\n            const [x, y] = line.split(/\\s+/);\n            return { x: parseFloat(x), y: parseFloat(y) };\n        });\n\n        const validPolygonPoints = polygonPoints.filter((point) => {\n            const { x, y } = point;\n            return !isNaN(x) && !isNaN(y) && !(x === 0 && y === 0);\n        });\n\n        if (validPolygonPoints.length > 0) {\n            regionData[header] = validPolygonPoints;\n        }\n    }\n\n    return regionData;\n}", "CodeBleu_score": 25.219623524927705}]}
{"instance_id": "6e97ec2706cf", "generation_result": [{"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t\tmediaPlaybackState: ( state: State ) => state.mediaPlayback,\n\tcurrentTrack: ( state: State ) => state.currentTrack,\n\tmediaTags: ( state: State ) => state.mediaTags,\n}", "CodeBleu_score": 9.708832293620521}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t\tmedia: ( state ) => state.media,\n\tcurrentTrackId: ( state ) => state.currentTrackId,\n\tmediaTags: ( state, currentTrackId ) =>\n\t\tcurrentTrackId ? state.media.tags[ currentTrackId ] : null,\n}", "CodeBleu_score": 16.244794907535454}, {"code": "export const getCurrentlyPlayingTrackIdIfLoaded = createSelector({\n\t\tisMediaPlaying: ( state ) => state.isMediaPlaying,\n\tcurrentTrackId: ( state ) => state.currentTrackId,\n\tmediaTags: ( state ) => state.mediaTags,\n}", "CodeBleu_score": 11.54805438773225}]}
{"instance_id": "5dbbdd07f829", "generation_result": [{"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t    this.dispatch(centerWindows());\n    await this.waitForSkin();\n\n    if (this._root) {\n      throw new Error('Already rendered');\n    }\n\n    this._root = createRoot(node);\n    this._cleanup = () => this._root.unmount();\n\n    this._root.render(\n      <Provider store={this._store}>\n        <App media={this._media} filePicker={this._filePicker} />\n      </Provider>\n    );\n  }", "CodeBleu_score": 29.758593742802557}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t  // Dispatch an action to center windows\n  this._root.store.dispatch(centerWindow());\n\n  // Wait for the skin to load\n  await this._root.skin.whenLoaded;\n\n  // Ensure the instance is not already rendered\n  if (this._root.rendered) {\n    throw new Error('Instance is already rendered');\n  }\n\n  // Set up cleanup to unmount the React root later\n  this._root.unmount = () => {\n    this._root.unmount = null;\n    this._root.root.unmount();\n  };\n\n  // Create a React root\n  this._root.root = createRoot(node);\n\n  // Render the application within a Redux Provider, passing media and file picker options\n  this._root.root.render(\n    <Provider store={this._root.store}>\n      <App media={this._root.media} filePicker={this._root.filePicker} />\n    </Provider>\n  );\n\n  // Set the rendered flag to true\n  this._root.rendered = true;\n}", "CodeBleu_score": 27.929122645569233}, {"code": " async renderWhenReady(node: HTMLElement): Promise<void>{\n\t    this._root.unmount();\n    await this.centerWindows();\n    await this.waitForSkin();\n    if (this._disposed) {\n      return;\n    }\n    this._root = ReactDOM.createRoot(node);\n    this._root.render(\n      <Provider store={this._store}>\n        <App\n          media={this._media}\n          filePickerOptions={this._filePickerOptions}\n          onDispose={this._onDispose}\n        />\n      </Provider>\n    );\n  }", "CodeBleu_score": 31.698074243189684}]}
{"instance_id": "2598a3bbc50d", "generation_result": [{"code": "handleContextMenu(e: any){\n\t  const activeElem = document.activeElement;\n  const isTextArea = activeElem.tagName === 'TEXTAREA';\n  const isInputText = activeElem.tagName === 'INPUT' && activeElem.type === 'text';\n  const isNonTerminalInputField = isTextArea || isInputText;\n  const hasSelectedText = window.getSelection().toString() !== '';\n\n  if (isNonTerminalInputField || hasSelectedText) {\n    this.GlobalModel.contextEditMenu(e, {\n      cut: true,\n      copy: true,\n      paste: true,\n      selectAll: true,\n      undo: true,\n      redo: true,\n    });\n  }\n}", "CodeBleu_score": 34.43142131889204}, {"code": "handleContextMenu(e: any){\n\t  const sel = window.getSelection();\n  const activeElem = document.activeElement;\n  const isTextArea = activeElem.tagName === 'TEXTAREA';\n  const isInput = activeElem.tagName === 'INPUT' && activeElem.getAttribute('type') === 'text';\n  const isBlank = sel?.toString() === '';\n  const showCut = (isTextArea || isInput) && !isBlank;\n  const options = {\n    cut: showCut,\n    copy: true,\n    paste: true\n  };\n  if (showCut || !isBlank || activeElem.classList.contains('terminal')) {\n    GlobalModel.contextEditMenu(e, options);\n  }\n}", "CodeBleu_score": 39.502968551914}, {"code": "handleContextMenu(e: any){\n\t  const activeElem = document.activeElement as HTMLElement;\n  const isInputField = activeElem?.tagName === 'TEXTAREA' || activeElem?.tagName === 'INPUT';\n  const hasSelection = window.getSelection()?.toString() !== '';\n  const isBlank = activeElem?.classList.contains('blank');\n  if (isInputField || hasSelection || isBlank) {\n    this.GlobalModel.contextEditMenu(e, {\n      cut: isInputField || hasSelection,\n      copy: hasSelection,\n      paste: true,\n      del: isInputField || hasSelection,\n    });\n  }\n}", "CodeBleu_score": 30.729298947452744}]}
{"instance_id": "9a7475588195", "generation_result": [{"code": "handleChangeFontSize(fontSize: string): void{\n\t    const newFontSize = Number(fontSize);\n    if (newFontSize !== this.termFontSize) {\n        this.termFontSize = newFontSize;\n        this.commandRtnHandler(this.setTermFontSize(newFontSize));\n    }\n}", "CodeBleu_score": 41.450013543068536}, {"code": "handleChangeFontSize(fontSize: string): void{\n\t  const newFontSize = Number(fontSize);\n  if (newFontSize !== GlobalModel.getTermFontSize()) {\n    GlobalModel.setTermFontSize(newFontSize);\n    commandRtnHandler(\n      GlobalCommandRunner.setTermFontSize(newFontSize),\n      'Error: Failed to change font size.'\n    );\n  }\n}", "CodeBleu_score": 49.38108295435596}, {"code": "handleChangeFontSize(fontSize: string): void{\n\t    const newFontSize = Number(fontSize);\n    if (isNaN(newFontSize)) {\n        this.commandRtnHandler(\n            \"Error: Invalid font size. Please enter a valid number.\"\n        );\n        return;\n    }\n    if (newFontSize !== this.GlobalModel.getTermFontSize()) {\n        this.GlobalModel.setTermFontSize(newFontSize);\n        this.commandRtnHandler(\n            `Terminal font size changed to ${newFontSize}px.`\n        );\n    } else {\n        this.commandRtnHandler(\n            `Terminal font size is already ${newFontSize}px.`\n        );\n    }\n}", "CodeBleu_score": 38.89262549939489}]}
{"instance_id": "d4d74a9c8035", "generation_result": [{"code": "handleChangeTermTheme(theme: string): void{\n\t    const currentTheme = GlobalModel.getTermThemeSettings();\n    if (currentTheme === theme) return;\n    GlobalCommandRunner.setRootTermTheme(theme);\n    commandRtnHandler(GlobalCommandRunner.setRootTermTheme(theme));\n}", "CodeBleu_score": 37.22435452369977}, {"code": "handleChangeTermTheme(theme: string): void{\n\t    const currentTheme = GlobalModel.getTermThemeSettings();\n    if (currentTheme === theme) {\n        return;\n    }\n    GlobalModel.setTermThemeSettings(theme);\n    GlobalCommandRunner.setRootTermTheme(theme);\n    commandRtnHandler(GlobalCommandRunner.runCommand(`setTheme ${theme}`));\n}", "CodeBleu_score": 41.03279815808051}, {"code": "handleChangeTermTheme(theme: string): void{\n\t  const currentTheme = GlobalModel.getTermThemeSettings();\n  if (currentTheme === theme) return;\n  GlobalModel.setTermThemeSettings(theme);\n  GlobalCommandRunner.setRootTermTheme(theme);\n  const rtn = commandRtnHandler(GlobalCommandRunner.changeTermTheme(theme));\n  if (rtn.error) {\n    GlobalModel.setTermThemeSettings(currentTheme);\n    GlobalCommandRunner.setRootTermTheme(currentTheme);\n  }\n}", "CodeBleu_score": 41.481994454459254}]}
{"instance_id": "329444949255", "generation_result": [{"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t  return (\n    <div className=\"modal-header\">\n      <div className=\"modal-title\">{title}</div>\n      {onClose && (\n        <button type=\"button\" className=\"close\" onClick={onClose}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      )}\n      {keybindings && <ModalKeybindings keybindings={keybindings} />}\n    </div>\n  );\n}", "CodeBleu_score": 24.766351900901476}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t  return (\n    <div className=\"modal-header\">\n      <h5 className=\"modal-title\">{title}</h5>\n      {onClose && (\n        <button\n          type=\"button\"\n          className=\"btn-close\"\n          aria-label=\"Close\"\n          onClick={onClose}\n        />\n      )}\n      {keybindings && onClose && (\n        <ModalKeybindings keybindings={keybindings} onClose={onClose} />\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 27.106943179644542}, {"code": "const ModalHeader: React.FC<ModalHeaderProps> = ({ onClose, keybindings, title }) => {\n\t  return (\n    <div className=\"modal-header\">\n      <h2>{title}</h2>\n      {onClose && (\n        <button\n          type=\"button\"\n          className=\"modal-close-button\"\n          onClick={onClose}\n          aria-label=\"Close\"\n        >\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n      )}\n      {keybindings && onClose && (\n        <ModalKeybindings keybindings={keybindings} onClose={onClose} />\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 42.518721661878764}]}
{"instance_id": "1da69d707d33", "generation_result": [{"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t    if (rptr === null || rptr.remoteid.length === 0) {\n        return \"\";\n    }\n    const remoteName = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n    const name = rptr.name.length > 0 ? `:${rptr.name}` : \"\";\n    return `[${remoteName}${name}]`;\n}", "CodeBleu_score": 42.95319107051233}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t  if (!rptr || !rptr.remoteid) {\n    return \"\";\n  }\n\n  let rname = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n  if (rptr.name) {\n    rname += \": \" + rptr.name;\n  }\n  return \"[\" + rname + \"]\";\n}", "CodeBleu_score": 51.79208040290044}, {"code": "function formatRemoteName(rnames: Record<string, string>, rptr: RemotePtrType): string{\n\t  if (!rptr || !rptr.remoteid) {\n    return '';\n  }\n\n  let name = rnames[rptr.remoteid] || rptr.remoteid.substring(0, 8);\n\n  if (rptr.name) {\n    name += ':' + rptr.name;\n  }\n\n  return '[' + name + ']';\n}", "CodeBleu_score": 42.763113637603965}]}
{"instance_id": "757ee5b9626f", "generation_result": [{"code": "adjustTextAreaHeight(){\n\t    const textarea = document.getElementById('myTextarea');\n    textarea.style.height = '1px';\n    const scrollHeight = textarea.scrollHeight;\n    const fontSize = parseInt(window.getComputedStyle(textarea).fontSize);\n    const maxLines = 5;\n    const minHeight = fontSize * 1.5;\n    const maxHeight = fontSize * maxLines;\n    const newHeight = Math.min(Math.max(scrollHeight, minHeight), maxHeight);\n    textarea.style.height = `${newHeight}px`;\n}", "CodeBleu_score": 39.31336060369004}, {"code": "adjustTextAreaHeight(){\n\t  const textarea = document.getElementById('myTextarea');\n  const fontSize = parseInt(window.getComputedStyle(textarea).fontSize);\n  const maxLines = 5;\n  const minHeight = 30;\n  const maxHeight = 100;\n\n  textarea.style.height = '1px'; // Set initial height to measure scrollHeight\n  const scrollHeight = textarea.scrollHeight;\n\n  const lineHeight = fontSize * 1.2; // Assuming a line height of 1.2x font size\n  const newHeight = Math.max(minHeight, Math.min(scrollHeight, maxLines * lineHeight));\n\n  textarea.style.height = `${Math.min(newHeight, maxHeight)}px`;\n}", "CodeBleu_score": 34.79094113888988}, {"code": "adjustTextAreaHeight(){\n\t    const textarea = document.querySelector('textarea');\n    const fontSize = parseInt(getComputedStyle(textarea).fontSize);\n    const maxLines = 10;\n    const maxHeight = fontSize * maxLines;\n    const minHeight = fontSize * 1;\n\n    textarea.style.height = '1px';\n    const scrollHeight = textarea.scrollHeight;\n    const newHeight = Math.min(Math.max(scrollHeight, minHeight), maxHeight);\n    textarea.style.height = `${newHeight}px`;\n}", "CodeBleu_score": 38.76518346478397}]}
{"instance_id": "c0fa6e5d0067", "generation_result": [{"code": "onEnterKeyPressed(){\n\t    const selectedCodeBlockIndex = this.getSelectedCodeBlockIndex();\n    if (selectedCodeBlockIndex !== -1) {\n        this.onSetCmdInputValue();\n    } else {\n        const messageStr = this.chatInputRef.current?.value || \"\";\n        this.submitChatMessage(messageStr);\n        this.clearInputValue();\n        this.resetCmdAndOutput();\n    }\n    return true;\n}", "CodeBleu_score": 49.3927668397057}, {"code": "onEnterKeyPressed(){\n\t        const selectedIdx = GlobalModel.sidebarchatModel.getSelectedCodeBlockIndex();\n        if (selectedIdx >= 0) {\n            this.onSetCmdInputValue();\n        } else {\n            const messageStr = this.getInputValue();\n            this.submitChatMessage(messageStr);\n            this.clearInputValue();\n            GlobalModel.sidebarchatModel.resetCmdAndOutput();\n        }\n        return true;\n    }", "CodeBleu_score": 57.716985345269364}, {"code": "onEnterKeyPressed(){\n\t    const selectedIdx = GlobalModel.sidebarchatModel.getSelectedCodeBlockIndex();\n    if (selectedIdx !== -1) {\n        this.onSetCmdInputValue();\n    } else {\n        const messageStr = GlobalModel.inputModel.getCurrentMessage();\n        this.submitChatMessage(messageStr);\n        GlobalModel.inputModel.clearCurrentMessage();\n        GlobalModel.sidebarchatModel.resetCmdAndOutput();\n    }\n    return true;\n}", "CodeBleu_score": 58.67565587716291}]}
{"instance_id": "a022487e54ff", "generation_result": [{"code": "function readAuthKey(): string{\n\t  const home = process.env.HOME || process.env.USERPROFILE\n  const authKeyPath = path.join(home, '.authkey')\n\n  if (!fs.existsSync(authKeyPath)) {\n    const authKey = uuid.v4()\n    fs.writeFileSync(authKeyPath, authKey, { mode: 0o600 })\n    return authKey\n  }\n\n  const authKey = fs.readFileSync(authKeyPath, 'utf8')\n  if (!uuid.validate(authKey)) {\n    throw new Error('Invalid auth key')\n  }\n  return authKey\n}", "CodeBleu_score": 24.7959360727374}, {"code": "function readAuthKey(): string{\n\t  const homeDir = process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME']\n  const authKeyFilePath = path.join(homeDir, '.authkey')\n  if (!fs.existsSync(authKeyFilePath)) {\n    const authKey = uuid.v4()\n    fs.writeFileSync(authKeyFilePath, authKey, { mode: 0o600 })\n    return authKey\n  }\n  const authKey = fs.readFileSync(authKeyFilePath, 'utf-8').trim()\n  if (!uuid.validate(authKey)) {\n    throw new Error('Invalid auth key')\n  }\n  return authKey\n}", "CodeBleu_score": 28.803623744862207}, {"code": "function readAuthKey(): string{\n\t  const homeDir = os.homedir();\n  const authKeyPath = path.join(homeDir, '.authkey');\n\n  if (!fs.existsSync(authKeyPath)) {\n    const authKey = uuidv4();\n    fs.writeFileSync(authKeyPath, authKey, { mode: 0o600 });\n    return authKey;\n  }\n\n  const authKey = fs.readFileSync(authKeyPath, 'utf8');\n  if (!isValidUUID(authKey)) {\n    throw new Error('Invalid auth key');\n  }\n  return authKey;\n}", "CodeBleu_score": 26.554366454268614}]}
{"instance_id": "9c3e2f93e1c1", "generation_result": [{"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t  if (!this.isRunning) {\n    return;\n  }\n\n  for (let i = 0; i < data.length; i += this.chunkSize) {\n    const chunk = data.slice(i, i + this.chunkSize);\n    this.handleInputChunk(chunk, renderer);\n  }\n}", "CodeBleu_score": 51.69360703296319}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t  if (!this.isRunning) {\n    return;\n  }\n\n  for (let i = 0; i < data.length; i += this.chunkSize) {\n    const chunk = data.slice(i, i + this.chunkSize);\n    this.handleInputChunk(chunk, renderer);\n  }\n}", "CodeBleu_score": 51.69360703296319}, {"code": "handleDataFromRenderer(data: string, renderer: RendererModel): void{\n\t  if (!this.isRunning) {\n    return;\n  }\n\n  for (let i = 0; i < data.length; i += this.chunkSize) {\n    const chunk = data.slice(i, i + this.chunkSize);\n    this.handleInputChunk(chunk, renderer);\n  }\n}", "CodeBleu_score": 51.69360703296319}]}
{"instance_id": "37ad09d7b939", "generation_result": [{"code": "function checkValidServiceWorker(swUrl) {\n\t  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}", "CodeBleu_score": 82.16534926987826}, {"code": "function checkValidServiceWorker(swUrl) {\n\t  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}", "CodeBleu_score": 83.08601597889147}, {"code": "function checkValidServiceWorker(swUrl) {\n\t  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}", "CodeBleu_score": 82.20457974792437}]}
{"instance_id": "27dabe0c40aa", "generation_result": [{"code": "function areAllRequiredElementsHighlighted{\n\t\n    let requiredElements = [];\n    let highlightedElements = [];\n\n    // Get the required elements from the configuration\n    for (let i = 0; i < configuration.requiredElements.length; i++) {\n        requiredElements.push(configuration.requiredElements[i]);\n    }\n\n    // Get the highlighted elements from the configuration\n    for (let i = 0; i < configuration.highlighted.length; i++) {\n        highlightedElements.push(configuration.highlighted[i]);\n    }\n\n    // Check if all required elements are highlighted\n    let allHighlighted = requiredElements.every(element => highlightedElements.includes(element));\n\n    // Check if any required elements are highlighted\n    let anyHighlighted = requiredElements.some(element => highlightedElements.includes(element));\n\n    // Return the appropriate checkbox state\n    if (allHighlighted) {\n        return CheckboxState.CHECKED;\n    } else if (anyHighlighted) {\n        return CheckboxState.INDETERMINATE;\n    } else {\n        return CheckboxState.UNCHECKED;\n    }\n}", "CodeBleu_score": 27.619163037077033}, {"code": "function areAllRequiredElementsHighlighted{\n\t\n\n    // The number of highlighted elements that are required to be highlighted.\n    const requiredHighlightedElements = requiredHighlightedElements.length;\n\n    // The number of highlighted elements that are present in the highlighted array.\n    const numberOfHighlightedElements = highlighted.length;\n\n    // The number of highlighted elements that are required to be highlighted but are not present in the highlighted array.\n    const numberOfMissingHighlightedElements = requiredHighlightedElements - numberOfHighlightedElements;\n\n    // If there are no missing highlighted elements, then all required highlighted elements are present.\n    if (numberOfMissingHighlightedElements === 0) {\n        return CHECKED;\n    }\n\n    // If there are missing highlighted elements, then some required highlighted elements are missing.\n    if (numberOfMissingHighlightedElements > 0) {\n        return UNCHECKED;\n    }\n\n    // If the number of missing highlighted elements is less than zero, then there are more highlighted elements than required.\n    if (numberOfMissingHighlightedElements < 0) {\n        return INDETERMINATE;\n    }\n}", "CodeBleu_score": 23.656501485082373}, {"code": "function areAllRequiredElementsHighlighted{\n\t    if (highlighted.includes(requiredElements[0]) && highlighted.includes(requiredElements[1]) && highlighted.includes(requiredElements[2])) {\n        return CheckBoxState.CHECKED;\n    } else if (highlighted.length === 0) {\n        return CheckBoxState.UNCHECKED;\n    } else {\n        return CheckBoxState.INDETERMINATE;\n    }\n}", "CodeBleu_score": 22.237869713632563}]}
{"instance_id": "c60e532809af", "generation_result": [{"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t    const actions = actionsFn(...handles)\n    return Object.entries(actions).map(([key, action]) => {\n        const [event, selector] = key.split(':')\n        return {\n            event,\n            handler: (e: Event) => {\n                if (selector) {\n                    if (hasMatchInAncestry(e.target as HTMLElement, selector)) {\n                        action(e)\n                    }\n                } else {\n                    action(e)\n                }\n            }\n        }\n    })\n}", "CodeBleu_score": 45.57562713263048}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t    const actions = actionsFn(...handles);\n    const handlers = [];\n    for (const [key, action] of Object.entries(actions)) {\n        const [eventName, selector] = key.split(':');\n        const handler = (event: any) => {\n            if (!selector || hasMatchInAncestry(event.target, selector)) {\n                action(event);\n            }\n        };\n        handlers.push({ eventName, handler });\n    }\n    return handlers;\n}", "CodeBleu_score": 51.3482820729508}, {"code": "const createHandlers = (actionsFn: (...arg: any[]) => object, ...handles: any[]) => {\n\t    const actions = actionsFn(...handles)\n    return Object.entries(actions).map(([event, action]) => {\n        const [eventName, selector] = event.split('@')\n        return {\n            [eventName]: (e: any) => {\n                if (!selector || hasMatchInAncestry(e.target, selector)) {\n                    action(e)\n                }\n            }\n        }\n    })\n}", "CodeBleu_score": 56.70744283092063}]}
{"instance_id": "8c81ca953249", "generation_result": [{"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t  const root = document.getElementById('storybook-root');\n  if (!root) {\n    return;\n  }\n  const handleEvent = (event: any) => {\n    actionsFn(event.detail);\n  };\n  handles.forEach((handle) => {\n    root.addEventListener(handle, handleEvent);\n  });\n  return () => {\n    handles.forEach((handle) => {\n      root.removeEventListener(handle, handleEvent);\n    });\n  };\n}", "CodeBleu_score": 40.672111735851544}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t  const root = document.getElementById(\"storybook-root\");\n  if (!root) {\n    return;\n  }\n\n  const eventHandlers = handles.map((handle) => {\n    return {\n      handle,\n      eventName: handle.split(\"on\")[1],\n      eventListener: (e: any) => {\n        actionsFn[handle](e);\n      },\n    };\n  });\n\n  React.useEffect(() => {\n    eventHandlers.forEach(({ handle, eventName, eventListener }) => {\n      root.addEventListener(eventName, eventListener);\n    });\n\n    return () => {\n      eventHandlers.forEach(({ handle, eventName, eventListener }) => {\n        root.removeEventListener(eventName, eventListener);\n      });\n    };\n  }, [root, actionsFn, ...eventHandlers]);\n}", "CodeBleu_score": 42.05513299220243}, {"code": "const applyEventHandlers = (actionsFn: any, ...handles: any[]) =>{\n\t  const root = document.getElementById('storybook-root')\n\n  if (!root) {\n    return\n  }\n\n  root.addEventListener('keydown', actionsFn)\n\n  handles.forEach((handle) => {\n    root.addEventListener(handle, actionsFn)\n  })\n\n  return () => {\n    root.removeEventListener('keydown', actionsFn)\n    handles.forEach((handle) => {\n      root.removeEventListener(handle, actionsFn)\n    })\n  }\n}", "CodeBleu_score": 37.12105658019062}]}
{"instance_id": "3b9dc9070ef1", "generation_result": [{"code": "addAction = (action: ActionDisplay) =>{\n\t  const { state, options } = this.props;\n  const actions = state.actions.slice(0, options.maxActions);\n  const lastAction = actions[actions.length - 1];\n  if (lastAction && safeDeepEqual(lastAction.data, action.data)) {\n    lastAction.count++;\n  } else {\n    action.count = 1;\n    actions.push(action);\n  }\n  this.setState({\n    actions: actions.slice(0, options.maxActions),\n  });\n}", "CodeBleu_score": 51.83173361473419}, {"code": "addAction = (action: ActionDisplay) =>{\n\t  const { state, options } = this.props;\n  const { actions } = state;\n  const lastAction = actions.slice(-1)[0];\n\n  if (lastAction && safeDeepEqual(lastAction, action)) {\n    lastAction.count++;\n  } else {\n    action.count = 1;\n    actions.push(action);\n  }\n\n  this.setState({\n    actions: actions.slice(-options.limit),\n  });\n}", "CodeBleu_score": 43.717981781966344}, {"code": "addAction = (action: ActionDisplay) =>{\n\t  const { state, options } = this\n  const { actions } = state\n  const lastAction = actions[actions.length - 1]\n  if (safeDeepEqual(lastAction.data, action.data)) {\n    lastAction.count++\n  } else {\n    action.count = 1\n    actions.push(action)\n  }\n  this.setState(\n    {\n      actions: actions.slice(-options.limit),\n    },\n    () => {\n      if (options.onAddAction) {\n        options.onAddAction(action)\n      }\n    }\n  )\n}", "CodeBleu_score": 41.24508842367553}]}
{"instance_id": "c58b95bdb84e", "generation_result": [{"code": "export const addGridStyle = (selector: string, css: string) => {\n\t    const style = document.getElementById(selector)\n    if (!style) {\n        const style = document.createElement('style')\n        style.setAttribute('id', selector)\n        style.innerHTML = css\n        document.head.appendChild(style)\n    } else {\n        if (style.innerHTML !== css) {\n            style.innerHTML = css\n        }\n    }\n}", "CodeBleu_score": 53.91072919625356}, {"code": "export const addGridStyle = (selector: string, css: string) => {\n\t  const style = document.querySelector(`style[id=\"${selector}\"]`)\n  if (style) {\n    if (style.innerHTML !== css) {\n      style.innerHTML = css\n    }\n  } else {\n    const newStyle = document.createElement('style')\n    newStyle.id = selector\n    newStyle.innerHTML = css\n    document.head.appendChild(newStyle)\n  }\n}", "CodeBleu_score": 52.373975452391605}, {"code": "export const addGridStyle = (selector: string, css: string) => {\n\t  let style = document.getElementById(selector);\n  if (!style) {\n    style = document.createElement('style');\n    style.setAttribute('id', selector);\n    document.head.appendChild(style);\n  }\n  style.textContent = css;\n}", "CodeBleu_score": 39.22206206300528}]}
{"instance_id": "882d870a20b2", "generation_result": [{"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t  const existingStyle = document.getElementById(selector)\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css\n  } else if (!existingStyle) {\n    const style = document.createElement('style')\n    style.setAttribute('id', selector)\n    style.innerHTML = css\n    document.head.appendChild(style)\n  }\n\n  const existingGridStyle = document.getElementById(`grid-${storyId}`)\n  if (existingGridStyle) {\n    existingGridStyle.parentElement?.insertBefore(existingStyle, existingGridStyle)\n  } else {\n    document.head.appendChild(existingStyle)\n  }\n}", "CodeBleu_score": 55.00707806273335}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t  const existingStyle = document.getElementById(selector)\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css\n  } else if (!existingStyle) {\n    const style = document.createElement('style')\n    style.setAttribute('id', selector)\n    style.innerHTML = css\n    document.head.appendChild(style)\n  }\n\n  const existingGridStyle = document.getElementById(`grid-${storyId}`)\n  if (existingGridStyle) {\n    existingGridStyle.parentElement?.insertBefore(style, existingGridStyle)\n  } else {\n    document.head.appendChild(style)\n  }\n}", "CodeBleu_score": 54.665276246941104}, {"code": "export const addBackgroundStyle = (selector: string, css: string, storyId: string | null) =>{\n\t  const existingStyle = document.getElementById(selector);\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css;\n  } else if (!existingStyle) {\n    const style = document.createElement('style');\n    style.setAttribute('id', selector);\n    style.innerHTML = css;\n    document.head.appendChild(style);\n  }\n\n  const existingGridStyle = document.getElementById(`grid-${storyId}`);\n  if (existingGridStyle) {\n    existingGridStyle.parentElement?.insertBefore(existingStyle, existingGridStyle);\n  } else {\n    document.head.appendChild(existingStyle);\n  }\n}", "CodeBleu_score": 58.377039631480564}]}
{"instance_id": "c17e647327b5", "generation_result": [{"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\t    event.preventDefault();\n    if (isSaving) {\n      return;\n    }\n    setErrorMessage('');\n    setSaving(true);\n    try {\n      const sanitizedStoryName = storyName.replace(/^[^a-z]/i, '').replaceAll(' ', '-');\n      await createStory(sanitizedStoryName);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n    setCreating(false);\n    setSaving(false);\n  }", "CodeBleu_score": 53.9493213566322}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\t  event.preventDefault();\n  if (isSaving) return;\n  setErrorMessage('');\n  setSaving(true);\n  try {\n    await createStory(sanitize(storyName));\n    setCreating(false);\n    setSaving(false);\n  } catch (error) {\n    setErrorMessage((error as Error).message);\n    setSaving(false);\n  }\n}", "CodeBleu_score": 50.106231355069774}, {"code": "const onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) =>{\n\t  event.preventDefault();\n\n  if (isSaving) return;\n\n  setErrorMessage('');\n  setSaving(true);\n\n  try {\n    await createStory({\n      variables: {\n        storyName: storyName.replace(/^[^a-z]/i, '').replaceAll(' ', '-'),\n      },\n    });\n    setCreating(false);\n    setSaving(false);\n  } catch (error) {\n    setErrorMessage(error.message);\n    setSaving(false);\n  }\n}", "CodeBleu_score": 59.358233824890185}]}
{"instance_id": "2d58c69eda27", "generation_result": [{"code": "function Title(){\n\t  const { argTypes } = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) => argType?.control && argType?.control !== 'none'\n  ).length;\n  const suffix = controlsCount ? (\n    <span\n      style={{\n        display: 'inline-block',\n        position: 'relative',\n        top: '-0.2em',\n        fontSize: '75%',\n        marginLeft: '0.3em',\n        color: 'rgba(255, 255, 255, 0.5)',\n      }}\n    >\n      {controlsCount}\n    </span>\n  ) : null;\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <div style={{ fontSize: 13, lineHeight: 1, marginRight: 4 }}>\n        Controls\n      </div>\n      {suffix}\n    </div>\n  );\n}", "CodeBleu_score": 45.441626085962255}, {"code": "function Title(){\n\t  const { argTypes } = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) =>\n      argType?.control &&\n      argType?.control !== 'none' &&\n      !argType?.control?.disable\n  ).length;\n  const suffix = controlsCount ? (\n    <Badge status=\"neutral\">{controlsCount}</Badge>\n  ) : null;\n\n  return (\n    <div className=\"sb-title\">\n      <span>Controls</span>\n      {suffix && <span className=\"sb-badge\">{suffix}</span>}\n    </div>\n  );\n}", "CodeBleu_score": 46.75713768476506}, {"code": "function Title(){\n\t  const { argTypes } = useArgTypes();\n  const controlsCount = Object.values(argTypes).filter(\n    (argType) => argType?.control && argType.control !== 'none'\n  ).length;\n  return (\n    <div>\n      <span>Controls</span>\n      {controlsCount > 0 && (\n        <Badge status=\"neutral\">\n          <span>{controlsCount}</span>\n        </Badge>\n      )}\n    </div>\n  );\n}", "CodeBleu_score": 37.82698576946322}]}
{"instance_id": "b8fba20204d6", "generation_result": [{"code": "const highlight = (infos: HighlightInfo) =>{\n\t  const { elements, style } = infos;\n  const id = 'highlight-style';\n  const styleElement = document.getElementById(id);\n  if (styleElement) {\n    styleElement.remove();\n  }\n  const newStyleElement = document.createElement('style');\n  newStyleElement.id = id;\n  const rules = elements.map(element => {\n    const { selector, backgroundColor, color } = element;\n    const rule = `${selector} { background-color: ${backgroundColor}; color: ${color}; }`;\n    return rule;\n  });\n  newStyleElement.innerHTML = rules.join('\n');\n  document.head.appendChild(newStyleElement);\n}", "CodeBleu_score": 39.476645498795584}, {"code": "const highlight = (infos: HighlightInfo) =>{\n\t  const { elements, styles } = infos\n  const uniqueElements = Array.from(new Set(elements))\n\n  const style = document.createElement('style')\n  style.id = 'highlight-style'\n  style.innerHTML = uniqueElements.map((element) => {\n    const selector = element.selector || element.toString()\n    const styleRules = Object.entries(styles).map(([key, value]) => `${key}: ${value}`).join('; ')\n    return `${selector} { ${styleRules} }`\n  }).join('\n')\n\n  const existingStyle = document.getElementById('highlight-style')\n  if (existingStyle) {\n    existingStyle.remove()\n  }\n  document.head.appendChild(style)\n}", "CodeBleu_score": 40.41547927937229}, {"code": "const highlight = (infos: HighlightInfo) =>{\n\t  const { elements, style } = infos;\n  const styleElement = document.createElement('style');\n  styleElement.id = 'highlight-style';\n  styleElement.innerHTML = `\n    ${elements\n      .map((element) => {\n        const { selector, style } = element;\n        return `${selector} { ${style} }`;\n      })\n      .join('\n')}\n  `;\n  document.head.appendChild(styleElement);\n}", "CodeBleu_score": 42.072151968358504}]}
{"instance_id": "08a3fb827e48", "generation_result": [{"code": "const resetHighlight = () =>{\n\t    const c = document.getElementById('sheetToBeRemoved');\n    c?.parentNode?.removeChild(c);\n}", "CodeBleu_score": 27.00103897122346}, {"code": "const resetHighlight = () =>{\n\t  const sheetToBeRemoved = document.getElementById(\"highlight-style\");\n  sheetToBeRemoved?.parentNode?.removeChild(sheetToBeRemoved);\n}", "CodeBleu_score": 36.4039820366587}, {"code": "const resetHighlight = () =>{\n\t  const c = document.getElementById(\"highlight-style\");\n  c?.parentNode?.removeChild(c);\n}", "CodeBleu_score": 25.12658688081366}]}
{"instance_id": "1287df4e99b3", "generation_result": [{"code": "function parseQuery(queryString: string){\n\t  const obj = {};\n  const pairs = (queryString[0] === '?' ? queryString.substring(1) : queryString).split('&');\n\n  for (let i = 0; i < pairs.length; i++) {\n    const [key, value] = pairs[i].split('=').map(decodeURIComponent);\n    obj[key] = value;\n  }\n\n  return obj;\n}", "CodeBleu_score": 58.78358834366968}, {"code": "function parseQuery(queryString: string){\n\t  const obj: { [key: string]: string } = {};\n  const pairs = (queryString[0] === '?' ? queryString.substring(1) : queryString).split('&');\n  for (let i = 0; i < pairs.length; i++) {\n    const pair = pairs[i].split('=');\n    obj[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n  }\n  return obj;\n}", "CodeBleu_score": 70.80609130884325}, {"code": "function parseQuery(queryString: string){\n\t    const obj: Record<string, string> = {};\n    const pairs = (queryString[0] === '?' ? queryString.substring(1) : queryString)\n        .split('&')\n        .filter((p) => p !== '');\n    for (let i = 0; i < pairs.length; i++) {\n        const pair = pairs[i].split('=');\n        const key = decodeURIComponent(pair[0]);\n        const value = decodeURIComponent(pair[1] || '');\n        obj[key] = value;\n    }\n    return obj;\n}", "CodeBleu_score": 71.89516788398123}]}
{"instance_id": "83c4f520b99a", "generation_result": [{"code": "const linksListener = (e: Event) =>{\n\t  if (e.target instanceof HTMLElement) {\n    const { sbKind, sbStory } = e.target.dataset;\n\n    if (sbKind || sbStory) {\n      e.preventDefault();\n      navigate(sbKind, sbStory);\n    }\n  }\n}", "CodeBleu_score": 30.485446582684805}, {"code": "const linksListener = (e: Event) =>{\n\t    const target = e.target as HTMLElement;\n    if (target.tagName === 'HTML') return;\n    const kind = target.dataset.sbKind;\n    const story = target.dataset.sbStory;\n    if (kind || story) {\n        e.preventDefault();\n        navigate(kind, story);\n    }\n}", "CodeBleu_score": 42.1152261530282}, {"code": "const linksListener = (e: Event) =>{\n\t  if (e.target instanceof HTMLElement) {\n    const { sbKind, sbStory } = e.target.dataset\n    if (sbKind || sbStory) {\n      e.preventDefault()\n      navigate(sbKind, sbStory)\n    }\n  }\n}", "CodeBleu_score": 28.38558708698192}]}
{"instance_id": "8b8e277eb593", "generation_result": [{"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t    if (node.shadowRoot) {\n        const nestedElement = node.shadowRoot.elementFromPoint(0, 0);\n        if (nestedElement === node) {\n            return node;\n        }\n        if (nestedElement.shadowRoot) {\n            return crawlShadows(nestedElement);\n        }\n        return nestedElement;\n    }\n    return node;\n}", "CodeBleu_score": 58.34714601489826}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t  if (node.shadowRoot) {\n    const nestedNode = (node.shadowRoot as any).elementFromPoint(\n      node.offsetLeft,\n      node.offsetTop\n    );\n\n    if (node.isEqualNode(nestedNode)) {\n      return node;\n    }\n\n    if (nestedNode.shadowRoot) {\n      return crawlShadows(nestedNode);\n    }\n\n    return nestedNode;\n  }\n\n  return node;\n}", "CodeBleu_score": 59.688131460703374}, {"code": "const crawlShadows = (node: HTMLElement): HTMLElement =>{\n\t  if (node.shadowRoot) {\n    const nested = (node.shadowRoot as any).elementFromPoint(1, 1);\n    if (nested === node) return node;\n    if (nested.shadowRoot) return crawlShadows(nested);\n    return nested;\n  }\n  return node;\n}", "CodeBleu_score": 44.479204930102114}]}
{"instance_id": "2fa298c35659", "generation_result": [{"code": "function createCanvas(): CanvasState{\n\t  const canvas = document.createElement('canvas');\n  canvas.id = 'canvas';\n  const context = canvas.getContext('2d');\n  if (!context) {\n    throw new Error('Failed to obtain 2D drawing context');\n  }\n\n  canvas.width = document.documentElement.clientWidth;\n  canvas.height = document.documentElement.clientHeight;\n\n  canvas.style.position = 'absolute';\n  canvas.style.top = '0';\n  canvas.style.left = '0';\n  canvas.style.zIndex = '9999';\n  canvas.style.pointerEvents = 'none';\n\n  document.body.appendChild(canvas);\n\n  return {\n    canvas,\n    context,\n    width: canvas.width,\n    height: canvas.height,\n  };\n}", "CodeBleu_score": 47.89226067731398}, {"code": "function createCanvas(): CanvasState{\n\t  const canvas = document.createElement(\"canvas\");\n  canvas.id = \"canvas\";\n  const context = canvas.getContext(\"2d\");\n  if (!context) {\n    throw new Error(\"Failed to get 2D context\");\n  }\n\n  canvas.width = document.documentElement.clientWidth;\n  canvas.height = document.documentElement.clientHeight;\n\n  canvas.style.position = \"absolute\";\n  canvas.style.top = \"0\";\n  canvas.style.left = \"0\";\n  canvas.style.zIndex = \"9999\";\n  canvas.style.pointerEvents = \"none\";\n\n  document.body.appendChild(canvas);\n\n  return {\n    canvas,\n    context,\n    width: canvas.width,\n    height: canvas.height,\n  };\n}", "CodeBleu_score": 44.139124897617}, {"code": "function createCanvas(): CanvasState{\n\t  const canvas = document.createElement(\"canvas\");\n  canvas.id = \"canvas\";\n  const context = canvas.getContext(\"2d\");\n  if (!context) {\n    throw new Error(\"Failed to obtain 2D drawing context\");\n  }\n  const { width, height } = getDocumentWidthAndHeight();\n  canvas.width = width;\n  canvas.height = height;\n  canvas.style.position = \"absolute\";\n  canvas.style.top = \"0\";\n  canvas.style.left = \"0\";\n  canvas.style.zIndex = \"10000\";\n  canvas.style.pointerEvents = \"none\";\n  document.body.appendChild(canvas);\n  return { canvas, context, width, height };\n}", "CodeBleu_score": 56.680371200729184}]}
{"instance_id": "0484eaeba359", "generation_result": [{"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t  const { telemetry } = options;\n  const serverChannel = channel as ServerChannel;\n  if (telemetry === false) {\n    return serverChannel;\n  }\n  if (telemetry === true || telemetry === undefined) {\n    const { version } = await import('@storybook/addon-onboarding/package.json');\n    serverChannel.addListener(TELEMETRY_EVENT, (event) => {\n      serverChannel.emit(TELEMETRY_EVENT, {\n        ...event,\n        addonVersion: version,\n      });\n    });\n  }\n  return serverChannel;\n}", "CodeBleu_score": 30.014573667279876}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t    const { telemetry } = await core.config();\n    if (!telemetry) {\n        return channel;\n    }\n    const addonVersion = await getVersion(options);\n    channel.on(TELEMETRY, (event) => {\n        channel.emit(TELEMETRY, {\n            ...event,\n            addonVersion,\n        });\n    });\n    return channel;\n}", "CodeBleu_score": 25.823969515230477}, {"code": "export const experimental_serverChannel = async (channel: Channel, options: Options) =>{\n\t  const { telemetry } = options;\n  if (!telemetry) {\n    return channel;\n  }\n  const addonVersion = await getVersion('@storybook/addon-onboarding');\n  channel.on(EVENTS.TELEMETRY, (event) => {\n    channel.emit(EVENTS.TELEMETRY, { ...event, addonVersion });\n  });\n  return channel;\n}", "CodeBleu_score": 23.334037656991015}]}
{"instance_id": "8552de1f8368", "generation_result": [{"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t  const existingStyle = document.getElementById(selector);\n\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css;\n  } else if (!existingStyle) {\n    const style = document.createElement('style');\n    style.setAttribute('id', selector);\n    style.innerHTML = css;\n    document.head.appendChild(style);\n  }\n}", "CodeBleu_score": 63.51697673729693}, {"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t  const existingStyle = document.getElementById(selector)\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css\n  } else if (!existingStyle) {\n    const style = document.createElement('style')\n    style.setAttribute('id', selector)\n    style.innerHTML = css\n    document.head.appendChild(style)\n  }\n}", "CodeBleu_score": 56.24938908119316}, {"code": "export const addOutlineStyles = (selector: string, css: string) => {\n\t  const existingStyle = document.getElementById(selector);\n\n  if (existingStyle && existingStyle.innerHTML !== css) {\n    existingStyle.innerHTML = css;\n  } else if (!existingStyle) {\n    const style = document.createElement('style');\n    style.setAttribute('id', selector);\n    style.innerHTML = css;\n    document.head.appendChild(style);\n  }\n}", "CodeBleu_score": 63.51697673729693}]}
{"instance_id": "2472b6d48b9a", "generation_result": [{"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\t  const logger = context.logger;\n  const { sourceLocale, locales, duplicateTranslation } = i18n;\n\n  const translationLoaders = [];\n\n  for (const locale of locales) {\n    if (locale.inlineLocale === false) {\n      continue;\n    }\n\n    const translationLoader = new TranslationLoader(\n      context,\n      locale,\n      sourceLocale,\n      duplicateTranslation,\n    );\n\n    const translationFiles = await translationLoader.loadTranslations();\n\n    if (translationFiles.length > 0) {\n      translationLoaders.push(translationLoader);\n    }\n  }\n\n  return translationLoaders;\n}", "CodeBleu_score": 35.44429766826481}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\t  for (const locale of i18n.locales) {\n    if (!locale.inline && locale.locale !== i18n.sourceLocale) {\n      continue;\n    }\n\n    if (locale.translations) {\n      const loader = new TranslationLoader(context, locale.translations);\n      try {\n        await loader.loadTranslations(\n          i18n.duplicateTranslation,\n          i18n.sourceLocale,\n          locale.locale,\n        );\n      } catch (e) {\n        context.logger.error(e.message);\n      }\n    }\n  }\n}", "CodeBleu_score": 40.21746037510772}, {"code": "export async function loadActiveTranslations(\n  context: BuilderContext,\n  i18n: NormalizedApplicationBuildOptions['i18nOptions'],\n){\n\t  const { sourceLocale, locales } = i18n;\n  const { logger } = context;\n\n  for (const locale of locales) {\n    if (locale.skipInlineTranslations) {\n      continue;\n    }\n\n    const translationFiles = locale.translationFiles;\n    if (translationFiles.length) {\n      const translationLoader = new TranslationLoader(\n        context,\n        locale,\n        i18n.duplicateTranslationBehavior,\n      );\n\n      const translations = await translationLoader.loadTranslations(\n        translationFiles,\n      );\n      locale.translations = translations;\n    }\n  }\n}", "CodeBleu_score": 38.37064405076358}]}
{"instance_id": "24579c798101", "generation_result": [{"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t  const { build } = createBuilder(context);\n  const normalizedPluginsOrExtensions = normalizePluginsOrExtensions(\n    pluginsOrExtensions,\n  );\n  return build(options, normalizedPluginsOrExtensions);\n}", "CodeBleu_score": 30.841267453829847}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t  const plugins: Plugin[] = [];\n  const extensions: ApplicationBuilderExtensions = {};\n\n  if (Array.isArray(pluginsOrExtensions)) {\n    plugins.push(...pluginsOrExtensions);\n  } else {\n    Object.assign(extensions, pluginsOrExtensions);\n  }\n\n  return buildApplicationInternal(options, context, plugins, extensions);\n}", "CodeBleu_score": 40.41423611904417}, {"code": "export function buildApplication(\n  options: ApplicationBuilderOptions,\n  context: BuilderContext,\n  pluginsOrExtensions?: Plugin[] | ApplicationBuilderExtensions,\n): AsyncIterable<ApplicationBuilderOutput>{\n\t  const normalizedExtensions = normalizeExtensions(pluginsOrExtensions);\n\n  return buildApplicationInternal(options, context, normalizedExtensions);\n}", "CodeBleu_score": 28.167354125591093}]}
{"instance_id": "126e9e9e4010", "generation_result": [{"code": "const diagnostics = checkDuplicateMessages{\n\t  checkFileSystem: any,\n  messages: any,\n  type: 'warning',\n  basePath: any,\n}", "CodeBleu_score": 16.549423030851706}, {"code": "const diagnostics = checkDuplicateMessages{\n\t  checkFileSystem,\n  messages: extractionResult.messages,\n  severity: 'warning',\n  basePath: extractionResult.basePath\n}", "CodeBleu_score": 39.68610749549572}, {"code": "const diagnostics = checkDuplicateMessages{\n\t    checkFileSystem: any,\n    messages: extractionResult.messages,\n    severity: 'warning',\n    basePath: extractionResult.basePath,\n}", "CodeBleu_score": 27.587147399311846}]}
{"instance_id": "349518a072df", "generation_result": [{"code": "function isTslibHelperName(name: string): boolean{\n\t  const [originalName, num] = name.split('$')\n\n  if (num === undefined || isNaN(Number(num))) {\n    return false\n  }\n\n  return tslibHelpers.has(originalName)\n}", "CodeBleu_score": 37.949035795657814}, {"code": "function isTslibHelperName(name: string): boolean{\n\t    const parts = name.split('$');\n    if (parts.length !== 2) {\n        return false;\n    }\n\n    const originalName = parts[0];\n    const num = parseInt(parts[1]);\n    if (isNaN(num)) {\n        return false;\n    }\n\n    return tslibHelpers.has(originalName);\n}", "CodeBleu_score": 65.49090428502977}, {"code": "function isTslibHelperName(name: string): boolean{\n\t    const parts = name.split('$');\n    if (parts.length !== 2 || isNaN(parseInt(parts[1]))) {\n        return false;\n    }\n    const originalName = parts[0];\n    return tslibHelpers.has(originalName);\n}", "CodeBleu_score": 63.227933028054565}]}
{"instance_id": "0a9b3093b5bc", "generation_result": [{"code": "async bundle(): Promise<BundleContextResult>{\n\t  if (this.#performBundle) {\n    return this.#performBundle();\n  }\n  return this.#performBundle = async () => {\n    const result = await this.#performBundle();\n    if (this.#caching) {\n      this.#cachedResult = result;\n    }\n    return result;\n  };\n}", "CodeBleu_score": 72.74957054353494}, {"code": "async bundle(): Promise<BundleContextResult>{\n\t    if (this.#performBundle) {\n        return this.#performBundle();\n    }\n\n    return {\n        errors: [],\n        warnings: [],\n        bundledContext: this.context,\n    };\n}", "CodeBleu_score": 24.982171022351785}, {"code": "async bundle(): Promise<BundleContextResult>{\n\t  if (this.#performBundle) {\n    return this.#performBundle();\n  }\n\n  return this.#performBundle = async () => {\n    const result = await this.#performBundle();\n    if (this.#cache) {\n      this.#cache.set(result);\n    }\n    return result;\n  };\n}", "CodeBleu_score": 60.941606997971334}]}
{"instance_id": "f4fe3e6ac648", "generation_result": [{"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t    const changed = new Set<string>();\n    for (const [filePath, hash] of this.outputHashes.entries()) {\n        const previousHash = previousOutputHashes.get(filePath);\n        if (!previousHash || previousHash !== hash) {\n            changed.add(filePath);\n        }\n    }\n    return changed;\n}", "CodeBleu_score": 66.89842507414583}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t    const changed = new Set<string>();\n    for (const [filePath, hash] of Object.entries(this.outputHashes)) {\n        const previousHash = previousOutputHashes.get(filePath);\n        if (!previousHash || previousHash !== hash) {\n            changed.add(filePath);\n        }\n    }\n    return changed;\n}", "CodeBleu_score": 66.44921035171458}, {"code": "findChangedFiles(previousOutputHashes: Map<string, string>): Set<string> {\n\t    const changed = new Set<string>();\n    for (const [filePath, hash] of this.outputHashes.entries()) {\n        const previousHash = previousOutputHashes.get(filePath);\n        if (previousHash === undefined || previousHash !== hash) {\n            changed.add(filePath);\n        }\n    }\n    return changed;\n}", "CodeBleu_score": 71.4966033052133}]}
{"instance_id": "8969b8ce5198", "generation_result": [{"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t  return localizeToolsModule ??= await import('@angular/localize/tools');\n}", "CodeBleu_score": 37.06867782874275}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t  return localizeToolsModule ??= await import('@angular/localize/tools');\n}", "CodeBleu_score": 37.06867782874275}, {"code": "async function loadLocalizeTools(): Promise<LocalizeUtilityModule> {\n\t    return localizeToolsModule ??= await import('@angular/localize/tools');\n}", "CodeBleu_score": 37.498582386643264}]}
{"instance_id": "d7c4df80e1ac", "generation_result": [{"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t  const {\n    initDiagnostics,\n    ...diagnostics\n  } = await import('@fluent/bundle/l10n');\n  const FluentBundle = (await import('@fluent/bundle')).FluentBundle;\n  const FluentResource = (await import('@fluent/bundle')).FluentResource;\n  const { default: FluentVariable } = await import('@fluent/bundle/compat/FluentVariable');\n  const { default: FluentType } = await import('@fluent/bundle/compat/FluentType');\n  const { default: FluentNumber } = await import('@fluent/bundle/compat/FluentNumber');\n  const { default: FluentDateTime } = await import('@fluent/bundle/compat/FluentDateTime');\n\n  const diagnosticsBundle = new FluentBundle('en-US');\n  initDiagnostics(diagnosticsBundle, diagnostics);\n\n  const resource = new FluentResource(locale);\n  resource.addResource(new FluentResource(translation ?? {}));\n\n  const bundle = new FluentBundle(locale);\n  const errors = bundle.addResource(resource);\n\n  const missing = bundle.hasMessage('');\n  if (missing) {\n    bundle.addResource(diagnosticsBundle);\n  }\n\n  const plugins = [\n    new FluentVariable([], { useIsolating: false }),\n    new FluentType(bundle, ['html']),\n    new FluentNumber([], { useGrouping: true }),\n    new FluentDateTime([], { useGrouping: true }),\n    new FluentBundlePlugin(bundle, { useIsolating: false }),\n    new LocaleSpecifierPlugin(locale),\n  ];\n\n  if (missing) {\n    plugins.push(new MissingTranslationPlugin(bundle, { useIsolating: false }));\n  }\n\n  return {\n    diagnostics: errors,\n    plugins,\n  };\n}", "CodeBleu_score": 27.62627625041375}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t  const { getDiagnostics, getTranslationPlugin, replaceLocaleSpecifier } = await import(\n    '@angular/localize'\n  );\n  const diagnostics = getDiagnostics(translation);\n  const translationPlugin = getTranslationPlugin(translation);\n  const missingTranslationPlugin = {\n    name: 'missing-translation',\n    transform(source: string) {\n      if (source.includes('$localize')) {\n        return {\n          code: `throw new Error('Translation key not found')`,\n          map: null,\n        };\n      }\n      return null;\n    },\n  };\n  const localeSpecifierPlugin = replaceLocaleSpecifier(locale);\n  return {\n    diagnostics,\n    plugins: [translationPlugin, missingTranslationPlugin, localeSpecifierPlugin],\n  };\n}", "CodeBleu_score": 38.47127402918342}, {"code": "async function createI18nPlugins(locale: string, translation: Record<string, unknown> | undefined){\n\t", "CodeBleu_score": 6.858667206095573}]}
{"instance_id": "9486259c4631", "generation_result": [{"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t  const relativePath = filePath.replace(`${browserOutputDir}/`, '')\n  const file = browserOutputFiles.find((file) => file.path === relativePath)\n  if (file) {\n    return file.text\n  } else {\n    throw new Error(`File ${filePath} does not exist.`)\n  }\n}", "CodeBleu_score": 59.491744286046355}, {"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t  const path = filePath.replace(/^\\//, '');\n  const file = browserOutputFiles.find((file) => file.path === path);\n  if (file) {\n    return file.text;\n  } else {\n    throw new Error(`File ${path} does not exist`);\n  }\n}", "CodeBleu_score": 60.26120312644431}, {"code": "const readAsset = async function (filePath: string): Promise<string>{\n\t    const relativePath = filePath.replace(/^\\//, '');\n    const file = browserOutputFiles.find((file) => file.path === relativePath);\n    if (file) {\n        return file.text;\n    } else {\n        throw new Error(`File ${filePath} does not exist`);\n    }\n}", "CodeBleu_score": 64.4450750688689}]}
{"instance_id": "2206ca03c7ec", "generation_result": [{"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t    this.#loadResults.set: s\n    if (result.watchFiles) {\n        const normalizedWatchFiles = result.watchFiles.map(normalize: s)\n        for (const watchFile of normalizedWatchFiles) {\n            this.#fileDependencies.get: s\n        }\n    }\n}", "CodeBleu_score": 43.00509704139114}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t    this.#loadResults.set(path, result);\n\n    if (result.watchFiles) {\n        for (const watchFile of result.watchFiles) {\n            const normalizedWatchFile = normalize(watchFile);\n            let files = this.#fileDependencies.get(normalizedWatchFile);\n            if (!files) {\n                files = new Set();\n                this.#fileDependencies.set(normalizedWatchFile, files);\n            }\n            files.add(path);\n        }\n    }\n}", "CodeBleu_score": 81.55343055031852}, {"code": "async put(path: string, result: OnLoadResult): Promise<void>{\n\t    this.#loadResults.set(path, result);\n\n    if (result.watchFiles) {\n        const normalizedWatchFiles = await Promise.all(result.watchFiles.map(normalize));\n        const affected = new Set<string>();\n        for (const watchFile of normalizedWatchFiles) {\n            this.#fileDependencies.get(watchFile)?.forEach((affectedPath) => affected.add(affectedPath));\n        }\n        for (const affectedPath of affected) {\n            this.#fileDependencies.get(affectedPath)?.add(path);\n        }\n    }\n}", "CodeBleu_score": 61.08645495399783}]}
{"instance_id": "a261d85630d0", "generation_result": [{"code": "invalidate(path: string): boolean{\n\t  let found = false;\n  const deps = this.#fileDependencies.get(path);\n  if (deps) {\n    for (const dep of deps) {\n      found = this.#loadResults.delete(dep) || found;\n    }\n  }\n  this.#fileDependencies.delete(path);\n  return found;\n}", "CodeBleu_score": 56.9305892928943}, {"code": "invalidate(path: string): boolean{\n\t  const affectedPaths = this.#fileDependencies.get(path);\n  if (!affectedPaths) {\n    return false;\n  }\n\n  let found = false;\n  for (const affectedPath of affectedPaths) {\n    if (this.#loadResults.delete(affectedPath)) {\n      found = true;\n    }\n  }\n\n  this.#fileDependencies.delete(path);\n  return found;\n}", "CodeBleu_score": 81.97245825093604}, {"code": "invalidate(path: string): boolean{\n\t  let found = false;\n  const affected = this.#fileDependencies.get(path);\n  if (affected) {\n    for (const p of affected) {\n      if (this.#loadResults.delete(p)) {\n        found = true;\n      }\n    }\n  }\n  this.#fileDependencies.delete(path);\n  return found;\n}", "CodeBleu_score": 70.51703822107473}]}
{"instance_id": "8fa6dee0ba79", "generation_result": [{"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t  const endTime = process.hrtime.bigint();\n  const duration = Number(endTime - startTime) / 1000000000;\n\n  if (cumulative) {\n    const durationMap = new Map<string, number>();\n    durationMap.set(name, duration);\n  } else {\n    console.log(`${name} took ${duration.toFixed(9)} seconds`);\n  }\n}", "CodeBleu_score": 43.327549851367465}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t    const endTime = process.hrtime.bigint();\n    const duration = Number(endTime - startTime) / 1e9;\n    if (cumulative) {\n        if (!cumulativeDurations[name]) {\n            cumulativeDurations[name] = 0;\n        }\n        cumulativeDurations[name] += duration;\n    } else {\n        console.log(`${name} took ${duration.toFixed(9)} seconds.`);\n    }\n}", "CodeBleu_score": 39.9319124655258}, {"code": "function recordDuration(name: string, startTime: bigint, cumulative?: boolean): void{\n\t  const duration = process.hrtime.bigint() - startTime;\n  if (cumulative) {\n    if (!cumulativeDurations.has(name)) {\n      cumulativeDurations.set(name, BigInt(0));\n    }\n    cumulativeDurations.set(name, cumulativeDurations.get(name) + duration);\n  } else {\n    console.log(`${name} took ${(duration / BigInt(1e9)).toFixed(9)} seconds`);\n  }\n}", "CodeBleu_score": 42.58566633519247}]}
{"instance_id": "0c530cbeb386", "generation_result": [{"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\t  const getSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = function () {\n    const sourceFiles = getSourceFiles.call(program);\n    for (const sourceFile of sourceFiles) {\n      if (!sourceFile.version) {\n        sourceFile.version = createHash(\"sha256\").update(sourceFile.text).digest(\"hex\");\n      }\n    }\n    return sourceFiles;\n  };\n}", "CodeBleu_score": 52.81146090746446}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\t  const baseGetSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = function () {\n    const files = baseGetSourceFiles.call(program);\n    for (const file of files) {\n      if (!file.version) {\n        file.version = createHash(\"sha256\").update(file.text).digest();\n      }\n    }\n    return files;\n  };\n}", "CodeBleu_score": 58.72052103290194}, {"code": "export function ensureSourceFileVersions(program: ts.Program): void{\n\t  const baseGetSourceFiles = program.getSourceFiles;\n  program.getSourceFiles = () => {\n    const sourceFiles = baseGetSourceFiles.call(program);\n\n    for (const file of sourceFiles) {\n      if (!file.version) {\n        const hash = createHash('sha256').update(file.text).digest('hex');\n        file.version = hash;\n      }\n    }\n\n    return sourceFiles;\n  };\n}", "CodeBleu_score": 54.73433531740759}]}
{"instance_id": "3faf480d56ae", "generation_result": [{"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t  if (resolvedModule && resolvedModule.resolvedFileName) {\n    const normalizedResolvedFileName = normalizePath(resolvedModule.resolvedFileName);\n    const replacement = replacements[normalizedResolvedFileName];\n\n    if (replacement) {\n      return {\n        resolvedFileName: normalizePath(replacement),\n        isExternalLibraryImport: true,\n      };\n    }\n  }\n\n  return resolvedModule;\n}", "CodeBleu_score": 48.98513455713316}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t  if (!resolvedModule) return resolvedModule;\n\n  const { resolvedFileName } = resolvedModule;\n  const normalizedFileName = resolvedFileName.replace(/\\\\/g, '/');\n\n  const replacement = replacements.get(normalizedFileName);\n  if (replacement) {\n    return {\n      resolvedFileName: replacement,\n      isExternalLibraryImport: true,\n    };\n  }\n\n  return resolvedModule;\n}", "CodeBleu_score": 51.922771149618576}, {"code": "const tryReplace = (resolvedModule: ts.ResolvedModule | undefined) =>{\n\t  if (resolvedModule && resolvedModule.resolvedFileName) {\n    const normalizedResolvedFileName = path.normalize(resolvedModule.resolvedFileName);\n    const replacement = replacements[normalizedResolvedFileName];\n    if (replacement) {\n      return {\n        resolvedFileName: path.resolve(\n          path.dirname(resolvedModule.resolvedFileName),\n          replacement\n        ),\n        isExternalLibraryImport: true,\n      };\n    }\n  }\n  return resolvedModule;\n}", "CodeBleu_score": 45.427377603531305}]}
{"instance_id": "382672b61228", "generation_result": [{"code": "get waitUntilReady(): Promise<boolean>{\n\t    if (this.compilationReadyPromise === undefined) {\n        this.compilationReadyPromise = new Promise((resolve, reject) => {\n            this.compilationReadyResolve = resolve;\n            this.compilationReadyReject = reject;\n        });\n    }\n    return this.compilationReadyPromise;\n}", "CodeBleu_score": 26.15236216191811}, {"code": "get waitUntilReady(): Promise<boolean>{\n\t  if (!this._waitUntilReadyPromise) {\n    this._waitUntilReadyPromise = new Promise((resolve, reject) => {\n      this._waitUntilReadyResolve = resolve;\n      this._waitUntilReadyReject = reject;\n    });\n  }\n  return this._waitUntilReadyPromise;\n}", "CodeBleu_score": 25.581434722786444}, {"code": "get waitUntilReady(): Promise<boolean>{\n\t    if (!this._compilationReadyPromise) {\n        this._compilationReadyPromise = new Promise((resolve, reject) => {\n            const callback = (err: Error) => {\n                this._compilationReadyPromise = undefined;\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(true);\n                }\n            };\n            if (this._compilation) {\n                this._compilation.finish(callback);\n            } else {\n                callback(null);\n            }\n        });\n    }\n    return this._compilationReadyPromise;\n}", "CodeBleu_score": 27.371148862026658}]}
{"instance_id": "27f631043b39", "generation_result": [{"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t  const ctx = new BundlerContext(this.workspaceRoot, {\n    incremental: this.incremental,\n  });\n\n  const stylesheetBundleOptions = this.createStylesheetBundleOptions();\n\n  ctx.entryPoints.set(entry, {\n    resolvedEntryPoints: [entry],\n    stylesheetBundleOptions,\n  });\n\n  ctx.addPlugin(\n    new AngularComponentStylesheetPlugin({\n      path: entry,\n      namespace: 'angular:styles/component',\n      content: () => this.getContent(entry),\n      loader: this.loader,\n      resolveDirectory: path.dirname(entry),\n    })\n  );\n\n  return ctx;\n}", "CodeBleu_score": 19.54535030901753}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t  const ctx = new BundlerContext({\n    workspaceRoot: this.workspaceRoot,\n    incremental: this.incremental,\n  });\n\n  const stylesheetBundleOptions = {\n    entryPoints: [entry],\n    external: this.externalDependencies,\n    logLevel: 'silent',\n  };\n  ctx.setup(stylesheetBundleOptions);\n\n  ctx.addPlugin({\n    name: 'angular:styles/component',\n    setup(build) {\n      build.onResolve({ filter: /.css$/ }, async (args) => {\n        const path = args.path;\n        const namespace = 'angular:styles/component';\n        const content = await fs.readFile(path, 'utf8');\n        const loader = 'text';\n        const resolveDir = path.dirname;\n\n        return { path, namespace, content, loader, resolveDir };\n      });\n    },\n  });\n\n  return ctx;\n}", "CodeBleu_score": 33.431019384599274}, {"code": "const bundlerContext = await this.#inlineContexts.getOrCreate(entry, () =>{\n\t", "CodeBleu_score": 1.1067848918783338}]}
{"instance_id": "b89b44b794a7", "generation_result": [{"code": "invalidate(files: Iterable<string>) {\n\t  if (this.#incremental) {\n    const normalizedFiles = [...files].map((file) => normalizePath(file));\n    for (const bundler of this.#fileContexts.values()) {\n      bundler.invalidate(normalizedFiles);\n    }\n    for (const bundler of this.#inlineContexts.values()) {\n      bundler.invalidate(normalizedFiles);\n    }\n  }\n}", "CodeBleu_score": 75.77876250767387}, {"code": "invalidate(files: Iterable<string>) {\n\t  if (!this.#incremental) {\n    return;\n  }\n\n  const normalizedFiles = [...files].map(file => this.#normalizeFilePath(file));\n\n  for (const bundler of this.#fileContexts.values()) {\n    bundler.invalidate(normalizedFiles);\n  }\n\n  for (const bundler of this.#inlineContexts.values()) {\n    bundler.invalidate(normalizedFiles);\n  }\n}", "CodeBleu_score": 81.39788377922167}, {"code": "invalidate(files: Iterable<string>) {\n\t    if (!this.#isIncremental) {\n        return;\n    }\n    const normalizedFiles = new Set(files.map(file => this.#normalizePath(file)));\n    for (const bundler of this.#fileContexts.values()) {\n        bundler.invalidate(normalizedFiles);\n    }\n    for (const bundler of this.#inlineContexts.values()) {\n        bundler.invalidate(normalizedFiles);\n    }\n}", "CodeBleu_score": 75.78030843435796}]}
{"instance_id": "aa3aa0817adf", "generation_result": [{"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t  const { code, messageText } = typescript.formatDiagnosticsWithColorAndContext(\n    [diagnostic],\n    {\n      getCanonicalFileName: (fileName) => fileName,\n      getCurrentDirectory: () => process.cwd(),\n      getNewLine: () => '\n',\n    },\n  )\n\n  const message: PartialMessage = {\n    text: messageText,\n  }\n\n  if (diagnostic.file) {\n    const { line, character } = diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start)\n    message.location = {\n      file: diagnostic.file.fileName,\n      line: line + 1,\n      column: character + 1,\n    }\n  }\n\n  if (diagnostic.source === 'ts') {\n    message.code = `TS${code}`\n  } else if (diagnostic.source === 'ngtsc') {\n    message.code = `NG${code}`\n  }\n\n  if (diagnostic.relatedInformation) {\n    message.notes = diagnostic.relatedInformation.map(\n      (relatedDiagnosticInfo) => convertTypeScriptDiagnosticInfo(typescript, relatedDiagnosticInfo),\n    )\n  }\n\n  return message\n}", "CodeBleu_score": 45.694727955646485}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t  const prefix = diagnostic.source === 'ts' ? 'TS' : 'NG';\n  const code = prefix + diagnostic.code;\n  const message = convertTypeScriptDiagnosticInfo(typescript, diagnostic);\n\n  if (diagnostic.relatedInformation) {\n    message.notes = diagnostic.relatedInformation.map(\n      relatedInformation => convertTypeScriptDiagnosticInfo(typescript, relatedInformation),\n    );\n  }\n\n  return message;\n}", "CodeBleu_score": 43.36467408964207}, {"code": "export function convertTypeScriptDiagnostic(\n  typescript: typeof ts,\n  diagnostic: ts.Diagnostic,\n): PartialMessage {\n\t  const info = convertTypeScriptDiagnosticInfo(typescript, diagnostic)\n  const message: PartialMessage = {\n    text: info.text,\n    code: info.code,\n  }\n  if (diagnostic.relatedInformation) {\n    message.notes = diagnostic.relatedInformation.map((info) => ({\n      text: convertTypeScriptDiagnosticInfo(typescript, info).text,\n    }))\n  }\n  return message\n}", "CodeBleu_score": 39.21738847016486}]}
{"instance_id": "0cd0285018f1", "generation_result": [{"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t  const normalizedContainingFile = path.normalize(containingFile);\n  for (const referencedFile of referencedFiles) {\n    const normalizedReferencedFile = path.normalize(referencedFile);\n    if (normalizedContainingFile === normalizedReferencedFile) {\n      continue;\n    }\n    let referencingFiles = this.referencingFiles.get(normalizedReferencedFile);\n    if (!referencingFiles) {\n      referencingFiles = new Set();\n      this.referencingFiles.set(normalizedReferencedFile, referencingFiles);\n    }\n    referencingFiles.add(normalizedContainingFile);\n  }\n}", "CodeBleu_score": 54.216309316045084}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t  const normalizedContainingFile = normalizePath(containingFile);\n\n  for (const referencedFile of referencedFiles) {\n    const normalizedReferencedFile = normalizePath(referencedFile);\n\n    if (normalizedContainingFile === normalizedReferencedFile) {\n      continue;\n    }\n\n    if (!this.#referencingFiles.has(normalizedReferencedFile)) {\n      this.#referencingFiles.set(normalizedReferencedFile, new Set());\n    }\n\n    this.#referencingFiles.get(normalizedReferencedFile)!.add(normalizedContainingFile);\n  }\n}", "CodeBleu_score": 57.35749752792453}, {"code": "add(containingFile: string, referencedFiles: Iterable<string>): void{\n\t    containingFile = this.normalizePath(containingFile);\n    for (const referencedFile of referencedFiles) {\n        if (containingFile === referencedFile) {\n            continue;\n        }\n        const normalizedReferencedFile = this.normalizePath(referencedFile);\n        if (!this.referencingFiles.has(normalizedReferencedFile)) {\n            this.referencingFiles.set(normalizedReferencedFile, new Set());\n        }\n        this.referencingFiles.get(normalizedReferencedFile)!.add(containingFile);\n    }\n}", "CodeBleu_score": 44.411548194395415}]}
{"instance_id": "e22be1916b33", "generation_result": [{"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t    return this.#compilerCli ??= await loadEsmModule<typeof ng>('@angular/compiler-cli');\n}", "CodeBleu_score": 55.845623247405754}, {"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t  return this.ng = this.ng ?? await import('@angular/compiler-cli');\n}", "CodeBleu_score": 21.659816233283394}, {"code": "static async loadCompilerCli(): Promise<typeof ng> {\n\t  return this.compilerCli ||= await import('@angular/compiler-cli');\n}", "CodeBleu_score": 28.81537945876833}]}
{"instance_id": "64e42342101f", "generation_result": [{"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t  if (useParallelTs) {\n    const { ParallelCompilation } = await import('@angular/compiler-cli');\n    return new ParallelCompilation();\n  }\n\n  if (jit) {\n    const { JitCompilation } = await import('@angular/compiler-cli');\n    return new JitCompilation();\n  }\n\n  const { AotCompilation } = await import('@angular/compiler-cli');\n  return new AotCompilation();\n}", "CodeBleu_score": 70.62146303492698}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t  if (useParallelTs) {\n    const { ParallelCompilation } = await import('@ngtools/webpack');\n    return new ParallelCompilation();\n  } else if (jit) {\n    const { JitCompilation } = await import('@ngtools/webpack');\n    return new JitCompilation();\n  } else {\n    const { AotCompilation } = await import('@ngtools/webpack');\n    return new AotCompilation();\n  }\n}", "CodeBleu_score": 73.97046218881287}, {"code": "export async function createAngularCompilation(jit: boolean): Promise<AngularCompilation>{\n\t    if (useParallelTs) {\n        const { ParallelCompilation } = await import('@angular/compiler-cli');\n        return new ParallelCompilation();\n    }\n    if (jit) {\n        const { JitCompilation } = await import('@angular/compiler-cli');\n        return new JitCompilation();\n    }\n    const { AotCompilation } = await import('@angular/compiler-cli');\n    return new AotCompilation();\n}", "CodeBleu_score": 70.55133763943242}]}
{"instance_id": "37804d74eb2d", "generation_result": [{"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t  const sources = sourceMap.sources.map((source) => {\n    const relative = fileURLToPath(source)\n    const relativePath = relative.startsWith(root)\n      ? relative.slice(root.length)\n      : relative\n    return relativePath\n  })\n  const updatedSourceMap = {\n    ...sourceMap,\n    sources,\n  }\n  const base64EncodedSourceMap = Buffer.from(\n    JSON.stringify(updatedSourceMap),\n  ).toString('base64')\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64EncodedSourceMap}`\n}", "CodeBleu_score": 47.76760901929035}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t  const { sources, ...rest } = sourceMap;\n  const updatedSources = sources.map((source) => {\n    const path = fileURLToPath(source);\n    const relativePath = relative(root, path);\n    return `/${relativePath}`;\n  });\n\n  const updatedSourceMap = {\n    ...rest,\n    sources: updatedSources,\n  };\n\n  const serializedSourceMap = JSON.stringify(updatedSourceMap);\n  const base64EncodedSourceMap = Buffer.from(serializedSourceMap, 'utf8').toString(\n    'base64',\n  );\n\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64EncodedSourceMap}`;\n}", "CodeBleu_score": 43.90961727456536}, {"code": "function sourceMapToUrlComment(\n  sourceMap: Exclude<CompileResult['sourceMap'], undefined>,\n  root: string,\n): string{\n\t  const sources = sourceMap.sources.map((source) => {\n    const relativePath = fileURLToPath(source)\n    return fileURLToPath(pathToFileURL(relativePath).href.replace(root, ''))\n  })\n  const updatedSourceMap = { ...sourceMap, sources }\n  const base64EncodedSourceMap = Buffer.from(\n    JSON.stringify(updatedSourceMap),\n  ).toString('base64')\n  return `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64EncodedSourceMap}`\n}", "CodeBleu_score": 50.38772622645982}]}
{"instance_id": "bccb5eeb4c4d", "generation_result": [{"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t  const cwd = process.cwd();\n  const lines = stack.split('\n');\n  for (const line of lines) {\n    const segments = line.split(' ');\n    const fileSegmentIndex = segments.findIndex(segment => segment.includes(':'));\n    if (fileSegmentIndex !== -1) {\n      const filePath = segments.slice(0, fileSegmentIndex).join(' ');\n      const relativeFilePath = path.relative(cwd, filePath);\n      yield relativeFilePath;\n    }\n  }\n}", "CodeBleu_score": 46.074495076327004}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t  const lines = stack.split('\n');\n  const cwd = process.cwd();\n\n  for (const line of lines) {\n    const segments = line.split(' ');\n    const fileSegments: string[] = [];\n    let inLocation = false;\n\n    for (const segment of segments) {\n      if (inLocation) {\n        fileSegments.push(segment);\n      } else if (segment.includes('(')) {\n        inLocation = true;\n      }\n    }\n\n    if (fileSegments.length > 0) {\n      const filePath = fileSegments.join(' ').replace(/[()]/g, '');\n      const relativePath = path.relative(cwd, filePath);\n      yield relativePath;\n    }\n  }\n}", "CodeBleu_score": 51.61581132920312}, {"code": "function* extractFilesFromStack(stack: string): Iterable<string>{\n\t  const lines = stack.split('\n');\n  for (const line of lines) {\n    const segments = line.split(' ');\n    const file = segments.slice(0, segments.indexOf(':')).join(' ');\n    if (file.startsWith('at ')) {\n      yield file.slice(3);\n    } else {\n      yield file;\n    }\n  }\n}", "CodeBleu_score": 43.47230095189305}]}
{"instance_id": "e73986d88a00", "generation_result": [{"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t", "CodeBleu_score": 4.125658188672457}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t", "CodeBleu_score": 4.125658188672457}, {"code": "function hasTailwindKeywords(contents: string | Uint8Array): boolean{\n\t", "CodeBleu_score": 4.125658188672457}]}
{"instance_id": "ff27dc4f1deb", "generation_result": [{"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t  const headers = server.config.server.headers;\n  if (headers) {\n    Object.entries(headers).forEach(([key, value]) => {\n      if (value !== undefined) {\n        res.setHeader(key, value);\n      }\n    });\n  }\n}", "CodeBleu_score": 73.25515316085371}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t  const headers = server.config.server.headers;\n  if (headers) {\n    for (const key in headers) {\n      const value = headers[key];\n      if (value !== undefined) {\n        res.setHeader(key, value);\n      }\n    }\n  }\n}", "CodeBleu_score": 70.9949268891873}, {"code": "export function appendServerConfiguredHeaders(\n  server: ViteDevServer,\n  res: ServerResponse<IncomingMessage>,\n): void{\n\t  const headers = server.config.server.headers;\n  if (headers) {\n    Object.keys(headers).forEach((key) => {\n      const value = headers[key];\n      if (value !== undefined) {\n        res.setHeader(key, value);\n      }\n    });\n  }\n}", "CodeBleu_score": 69.1964072340531}]}
{"instance_id": "1d547de72724", "generation_result": [{"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t  const parsers = await import('./parsers');\n  const diagnostics = await import('./diagnostics');\n\n  return function loadTranslations(filePath: string): TranslationDetails {\n    const content = fs.readFileSync(filePath, 'utf8');\n\n    const messages: string[] = [];\n    for (const [parserName, parser] of Object.entries(parsers)) {\n      const analysis = parser.analyze(content);\n      if (analysis.canParse) {\n        messages.push(`Attempting to parse ${filePath} as ${parserName}`);\n        const result = parser.parse(content);\n        return {\n          format: parserName,\n          locale: result.locale,\n          translations: result.translations,\n          diagnostics: analysis.diagnostics,\n          integrity: createHash('sha256').update(content).digest('hex'),\n        };\n      } else {\n        messages.push(analysis.diagnostics.formatDiagnostics());\n      }\n    }\n\n    throw new Error(`Unable to parse ${filePath}. Tried the following:\n${messages.join('\n')}`);\n  };\n}", "CodeBleu_score": 43.563143292371684}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t", "CodeBleu_score": 0.9144276103247926}, {"code": "export async function createTranslationLoader(): Promise<TranslationLoader>{\n\t  const parsers = await import('./parsers');\n  const diagnostics = await import('./diagnostics');\n\n  return (filePath: string) => {\n    const content = fs.readFileSync(filePath, 'utf8');\n\n    for (const [parserName, parser] of Object.entries(parsers)) {\n      const analysis = parser.analyze(content);\n      if (analysis.canParse) {\n        const parsed = parser.parse(content);\n        const contentIntegrity = createHash('sha256').update(content).digest('hex');\n        return {\n          format: parserName,\n          locale: parsed.locale,\n          translations: parsed.translations,\n          diagnostics: analysis.diagnostics,\n          contentIntegrity,\n        };\n      }\n    }\n\n    const messages = [];\n    for (const [parserName, parser] of Object.entries(parsers)) {\n      const analysis = parser.analyze(content);\n      messages.push(`${parserName}: ${analysis.diagnostics.formatDiagnostics()}`);\n    }\n    throw new Error(`Could not parse translations file:\n${messages.join('\n')}`);\n  };\n}", "CodeBleu_score": 45.8230838726176}]}
{"instance_id": "0c0d3dcf983c", "generation_result": [{"code": "toggleSidebar(): boolean{\n\t  this.sidebarService.toggle(true, 'menu-sidebar');\n  this.layoutService.changeLayoutSize();\n\n  return false;\n}", "CodeBleu_score": 74.49297484123683}, {"code": "toggleSidebar(): boolean{\n\t  this.sidebarService.toggle(false, 'menu-sidebar');\n  this.layoutService.changeLayoutSize();\n\n  return false;\n}", "CodeBleu_score": 57.24112589442336}, {"code": "toggleSidebar(): boolean{\n\t  this.sidebarService.toggle(true, 'menu-sidebar');\n  this.layoutService.changeLayoutSize();\n\n  return false;\n}", "CodeBleu_score": 74.49297484123683}]}
{"instance_id": "c5ebbdd1dadf", "generation_result": [{"code": "loadNext(cardData){\n\t    if (cardData.loading) {\n        return;\n    }\n    cardData.loading = true;\n    cardData.news.push({\n        type: 'placeholder',\n        layout: 'none'\n    });\n    cardData.news.push({\n        type: 'placeholder',\n        layout: 'none'\n    });\n    this.newsService.getNews(cardData.page).subscribe(news => {\n        cardData.news = cardData.news.filter(item => item.type !== 'placeholder');\n        cardData.news = cardData.news.concat(news);\n        cardData.loading = false;\n        cardData.page++;\n    });\n}", "CodeBleu_score": 61.509212970491255}, {"code": "loadNext(cardData){\n\t  if (cardData.loading) {\n    return;\n  }\n  cardData.loading = true;\n  this.createPlaceholders();\n  this.newsService.load(cardData.filters, cardData.page)\n    .subscribe(response => {\n      const items = response['items'];\n      for (const i in items) {\n        cardData.news.push(items[i]);\n      }\n      this.loading = false;\n      cardData.page++;\n    });\n}", "CodeBleu_score": 50.070372898129}, {"code": "loadNext(cardData){\n\t  if (this.loading) return;\n  this.loading = true;\n  this.createPlaceholders();\n  this.newsService.getNews(this.page).subscribe(news => {\n    this.news = this.news.concat(news);\n    this.loading = false;\n    this.page++;\n  });\n}", "CodeBleu_score": 16.00440771902547}]}
{"instance_id": "1bd87ab8efa2", "generation_result": [{"code": "backToTop(){\n\t    if (this.isMoving) return\n    const start = window.pageYOffset\n    let i = 0\n    this.isMoving = true\n    this.interval = setInterval(() => {\n      const next = Math.floor(this.easeInOutQuad(10 * i, start, -start, 500))\n      if (next <= this.backPosition) {\n        window.scrollTo(0, this.backPosition)\n        clearInterval(this.interval)\n        this.isMoving = false\n      } else {\n        window.scrollTo(0, next)\n      }\n      i++\n    }, 16.7)\n  }", "CodeBleu_score": 96.79789366301401}, {"code": "backToTop(){\n\t      if (this.isMoving) return\n      const start = window.pageYOffset\n      let i = 0\n      this.isMoving = true\n      this.interval = setInterval(() => {\n        const next = Math.floor(this.easeInOutQuad(10 * i, start, -start, 500))\n        if (next <= this.backPosition) {\n          window.scrollTo(0, this.backPosition)\n          clearInterval(this.interval)\n          this.isMoving = false\n        } else {\n          window.scrollTo(0, next)\n        }\n        i++\n      }, 16.7)\n    }", "CodeBleu_score": 95.28222602834421}, {"code": "backToTop(){\n\t  if (this.isMoving) return\n  const start = window.pageYOffset\n  let i = 0\n  this.isMoving = true\n  this.interval = setInterval(() => {\n    const next = Math.floor(this.easeInOutQuad(10 * i, start, -start, 500))\n    if (next <= this.backPosition) {\n      window.scrollTo(0, this.backPosition)\n      clearInterval(this.interval)\n      this.isMoving = false\n    } else {\n      window.scrollTo(0, next)\n    }\n    i++\n  }, 16.7)\n}", "CodeBleu_score": 98.52706448564587}]}
{"instance_id": "0ef728b56235", "generation_result": [{"code": "getBreadcrumb(){\n\t  // only show routes with meta.title\n  let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\n  const first = matched[0]\n\n  if (!this.isDashboard(first)) {\n    matched = [{ path: '/dashboard', meta: { title: 'Dashboard' }}].concat(matched)\n  }\n\n  this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\n}", "CodeBleu_score": 98.3303958083076}, {"code": "getBreadcrumb(){\n\t  // only show routes with meta.title\n  let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\n  const first = matched[0]\n\n  if (!this.isDashboard(first)) {\n    matched = [{ path: '/dashboard', meta: { title: 'Dashboard' }}].concat(matched)\n  }\n\n  this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\n}", "CodeBleu_score": 98.3303958083076}, {"code": "getBreadcrumb(){\n\t  // only show routes with meta.title\n  let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\n  const first = matched[0]\n\n  if (!this.isDashboard(first)) {\n    matched = [{ path: '/dashboard', meta: { title: 'Dashboard' }}].concat(matched)\n  }\n\n  this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\n}", "CodeBleu_score": 98.3303958083076}]}
{"instance_id": "4431fde0a559", "generation_result": [{"code": "destroyListener(){\n\t  window.removeEventListener('resize', this.$_resizeHandler)\n  this.$_resizeHandler = null\n\n  this.$_sidebarElm && this.$_sidebarElm.removeEventListener('transitionend', this.$_sidebarResizeHandler)\n}", "CodeBleu_score": 69.98952015193895}, {"code": "destroyListener(){\n\t  window.removeEventListener('resize', this.$_resizeHandler)\n  this.$_resizeHandler = null\n\n  this.$_sidebarElm && this.$_sidebarElm.removeEventListener('transitionend', this.$_sidebarResizeHandler)\n}", "CodeBleu_score": 69.98952015193895}, {"code": "destroyListener(){\n\t  window.removeEventListener('resize', this.$_resizeHandler)\n  this.$_resizeHandler = null\n\n  this.$_sidebarElm && this.$_sidebarElm.removeEventListener('transitionend', this.$_sidebarResizeHandler)\n}", "CodeBleu_score": 69.98952015193895}]}
{"instance_id": "7215170e04cd", "generation_result": [{"code": "deleteEle(ele){\n\t  for (const item of this.list1) {\n    if (item.id === ele.id) {\n      const index = this.list1.indexOf(item)\n      this.list1.splice(index, 1)\n      break\n    }\n  }\n  if (this.isNotInList2(ele)) {\n    this.list2.unshift(ele)\n  }\n}", "CodeBleu_score": 97.45147909998522}, {"code": "deleteEle(ele){\n\t  for (const item of this.list1) {\n    if (item.id === ele.id) {\n      const index = this.list1.indexOf(item)\n      this.list1.splice(index, 1)\n      break\n    }\n  }\n  if (this.isNotInList2(ele)) {\n    this.list2.unshift(ele)\n  }\n}", "CodeBleu_score": 97.45147909998522}, {"code": "deleteEle(ele){\n\t  const index = this.list1.findIndex((item) => item.id === ele.id);\n  if (index !== -1) {\n    this.list1.splice(index, 1);\n    if (this.isNotInList2(ele)) {\n      this.list2.unshift(ele);\n    }\n  }\n}", "CodeBleu_score": 60.393359478769824}]}
{"instance_id": "b2acc5757074", "generation_result": [{"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\t  let res = []\n\n  for (const router of routes) {\n    // skip hidden router\n    if (router.hidden) { continue }\n\n    const data = {\n      path: path.resolve(basePath, router.path),\n      title: [...prefixTitle]\n    }\n\n    if (router.meta && router.meta.title) {\n      data.title = [...data.title, router.meta.title]\n\n      if (router.redirect !== 'noRedirect') {\n        // only push the routes with title\n        // special case: need to exclude parent router without redirect\n        res.push(data)\n      }\n    }\n\n    // recursive child routes\n    if (router.children) {\n      const tempRoutes = this.generateRoutes(router.children, data.path, data.title)\n      if (tempRoutes.length >= 1) {\n        res = [...res, ...tempRoutes]\n      }\n    }\n  }\n  return res\n}", "CodeBleu_score": 98.88433286835762}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\t  let res = []\n\n  for (const router of routes) {\n    // skip hidden router\n    if (router.hidden) { continue }\n\n    const data = {\n      path: path.resolve(basePath, router.path),\n      title: [...prefixTitle]\n    }\n\n    if (router.meta && router.meta.title) {\n      data.title = [...data.title, router.meta.title]\n\n      if (router.redirect !== 'noRedirect') {\n        // only push the routes with title\n        // special case: need to exclude parent router without redirect\n        res.push(data)\n      }\n    }\n\n    // recursive child routes\n    if (router.children) {\n      const tempRoutes = this.generateRoutes(router.children, data.path, data.title)\n      if (tempRoutes.length >= 1) {\n        res = [...res, ...tempRoutes]\n      }\n    }\n  }\n  return res\n}", "CodeBleu_score": 98.88433286835762}, {"code": "generateRoutes(routes, basePath = '/', prefixTitle = []){\n\t  let res = []\n\n  for (const router of routes) {\n    // skip hidden router\n    if (router.hidden) { continue }\n\n    const data = {\n      path: path.resolve(basePath, router.path),\n      title: [...prefixTitle]\n    }\n\n    if (router.meta && router.meta.title) {\n      data.title = [...data.title, router.meta.title]\n\n      if (router.redirect !== 'noRedirect') {\n        // only push the routes with title\n        // special case: need to exclude parent router without redirect\n        res.push(data)\n      }\n    }\n\n    // recursive child routes\n    if (router.children) {\n      const tempRoutes = this.generateRoutes(router.children, data.path, data.title)\n      if (tempRoutes.length >= 1) {\n        res = [...res, ...tempRoutes]\n      }\n    }\n  }\n  return res\n}", "CodeBleu_score": 98.88433286835762}]}
{"instance_id": "c4e47c376d30", "generation_result": [{"code": "closeSidebar(evt){\n\t  const parent = evt.target.closest('.rightPanel')\n  if (!parent) {\n    this.show = false\n    window.removeEventListener('click', this.closeSidebar)\n  }\n}", "CodeBleu_score": 95.87371165588348}, {"code": "closeSidebar(evt){\n\t  const parent = evt.target.closest('.rightPanel')\n  if (!parent) {\n    this.show = false\n    window.removeEventListener('click', this.closeSidebar)\n  }\n}", "CodeBleu_score": 95.87371165588348}, {"code": "closeSidebar(evt){\n\t  const parent = evt.target.closest('.rightPanel')\n  if (!parent) {\n    this.show = false\n    window.removeEventListener('click', this.closeSidebar)\n  }\n}", "CodeBleu_score": 95.87371165588348}]}
{"instance_id": "ab91e02736a1", "generation_result": [{"code": "click(){\n\t  if (!screenfull.enabled) {\n    this.$message({\n      message: 'you browser can not work',\n      type: 'warning'\n    })\n    return false\n  }\n  screenfull.toggle()\n}", "CodeBleu_score": 71.20574551694583}, {"code": "click(){\n\t    if (!screenfull.enabled) {\n      this.$message({\n        message: 'you browser can not work',\n        type: 'warning'\n      })\n      return false\n    }\n    screenfull.toggle()\n  }", "CodeBleu_score": 68.91018317859508}, {"code": "click(){\n\t  if (!screenfull.enabled) {\n    this.$message({\n      message: 'you browser can not work',\n      type: 'warning'\n    })\n    return false\n  }\n  screenfull.toggle()\n}", "CodeBleu_score": 71.20574551694583}]}
{"instance_id": "3f27cb09d8c2", "generation_result": [{"code": "function checkPermission(el, binding) {\n\t    const { value } = binding\n    if (value && value instanceof Array && value.length > 0) {\n        const roles = store.getters && store.getters.roles\n        const permissionRoles = value\n        const hasPermission = roles.some(role => {\n            return permissionRoles.includes(role)\n        })\n        if (!hasPermission) {\n            el.parentNode && el.parentNode.removeChild(el)\n        }\n    } else {\n        throw new Error(`need roles: like v-permission=\"['admin','editor']\"`)\n    }\n}", "CodeBleu_score": 80.0791586320978}, {"code": "function checkPermission(el, binding) {\n\t    const { value } = binding;\n    if (value && value instanceof Array && value.length > 0) {\n      const requiredRoles = value;\n      const hasRole = roles.some(role => {\n        return requiredRoles.includes(role);\n      });\n      if (!hasRole) {\n        el.parentNode && el.parentNode.removeChild(el);\n      }\n    } else {\n      throw new Error(`need roles: like v-permission=\"['admin','editor']\"`);\n    }\n  }", "CodeBleu_score": 62.74662589946172}, {"code": "function checkPermission(el, binding) {\n\t  const { value } = binding\n  if (value && value instanceof Array && value.length > 0) {\n    const roles = useUserStore().roles\n    const permissionRoles = value\n    const hasPermission = roles.some(role => {\n      return permissionRoles.includes(role)\n    })\n    if (!hasPermission) {\n      el.parentNode && el.parentNode.removeChild(el)\n    }\n  } else {\n    throw new Error(`need roles: like v-permission=\"['admin','editor']\"`)\n  }\n}", "CodeBleu_score": 72.66027470970768}]}
{"instance_id": "04e47e771281", "generation_result": [{"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\t    const E = await this.adminService.inviteUserToSignInViaEmail(\n      adminUser,\n      inviteeEmail,\n    );\n    if (E.isLeft()) {\n      throwErr(E.value);\n    }\n    return E.value;\n  }", "CodeBleu_score": 54.41942588899252}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\t    const invitee = await this.adminService.inviteUserToSignInViaEmail(\n      adminUser,\n      inviteeEmail,\n    );\n    if (E.isLeft(invitee)) {\n      throwErr(invitee.left);\n    }\n    return invitee.right;\n  }", "CodeBleu_score": 58.523769486693176}, {"code": "async inviteNewUser(\n    @GqlUser() adminUser: AuthUser,\n    @Args({\n      name: 'inviteeEmail',\n      description: 'invitee email',\n    })\n    inviteeEmail: string,\n  ): Promise<InvitedUser>{\n\t    const inviteUser = await this.adminService.inviteUserToSignInViaEmail(\n      adminUser.email,\n      inviteeEmail,\n    );\n    if (E.isLeft(inviteUser)) {\n      throwErr(inviteUser.left);\n    }\n    return inviteUser.right;\n  }", "CodeBleu_score": 66.43838084309445}]}
{"instance_id": "3f25736bfbcd", "generation_result": [{"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\t    const { user } = req;\n    if (!user) {\n      return 'No user from google';\n    }\n    const { accessToken, refreshToken } = await this.authService.generateTokens(\n      user,\n    );\n    res.cookie('access_token', accessToken, { httpOnly: true });\n    res.cookie('refresh_token', refreshToken, { httpOnly: true });\n    res.redirect(`${this.configService.get('FRONTEND_URI')}/profile`);\n  }", "CodeBleu_score": 41.20440839575008}, {"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\t    try {\n      const { user } = await this.authService.googleLogin(req);\n      const { accessToken, refreshToken } = await this.authService.getCookiesForUser(user);\n\n      await this.usersService.setCurrentRefreshToken(refreshToken, user.id);\n      req.res.setHeader('Set-Cookie', [accessToken, refreshToken]);\n\n      res.redirect(`${this.configService.get('FRONTEND_URL')}/dashboard`);\n    } catch (error) {\n      return {\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n      };\n    }\n  }", "CodeBleu_score": 37.171194798751515}, {"code": "async googleAuthRedirect(@Request() req, @Res() res){\n\t  const { user } = req;\n  if (!user) {\n    return 'No user from google';\n  }\n\n  const { accessToken, refreshToken } = await this.authService.generateTokens(\n    user,\n  );\n\n  const { accessOption, refreshOption } = this.authService.getCookiesForUser(\n    accessToken,\n    refreshToken,\n  );\n\n  res.cookie('Authentication', accessToken, accessOption);\n  res.cookie('Refresh', refreshToken, refreshOption);\n\n  return res.redirect(\n    `${this.configService.get('CLIENT_REDIRECT_URI')}/auth/google/success`,\n  );\n}", "CodeBleu_score": 37.80825066394093}]}
{"instance_id": "52aa108e3521", "generation_result": [{"code": "const mousewheel = function(element, callback){\n\t  // Add the event listener for the different browsers\n  element.addEventListener('DOMMouseScroll', normalizeWheel, false);\n  element.addEventListener('mousewheel', normalizeWheel, false);\n\n  /**\n   * This function, normalizeWheel, normalizes the wheel event and calls the provided callback function with the event and normalized values.\n   */\n  function normalizeWheel(event) {\n    // Prevent the default action\n    event.preventDefault();\n\n    // Get the delta value\n    const delta = event.wheelDelta ? event.wheelDelta : -event.detail;\n\n    // Call the callback function with the normalized values\n    callback(event, delta);\n  }\n}", "CodeBleu_score": 39.239855406127646}, {"code": "const mousewheel = function(element, callback){\n\t    if (element && element.addEventListener) {\n        element.addEventListener(\n            \"DOMMouseScroll\",\n            function(e) {\n                callback(e, normalizeWheelDelta(e));\n            },\n            false\n        );\n    }\n    element.onmousewheel = document.onmousewheel = function(e) {\n        callback(e, normalizeWheelDelta(e));\n    };\n}", "CodeBleu_score": 41.431505766790394}, {"code": "const mousewheel = function(element, callback){\n\t    if (element && element.addEventListener) {\n        element.addEventListener(\n            \"DOMMouseScroll\",\n            function(e) {\n                e.delta = e.detail < 0 ? 1 : -1;\n                callback(e);\n            },\n            false\n        );\n    }\n    element.onmousewheel = document.onmousewheel = function(e) {\n        e.delta = e.wheelDelta < 0 ? 1 : -1;\n        callback(e);\n    };\n}", "CodeBleu_score": 43.23468715223847}]}
{"instance_id": "bb9e14122636", "generation_result": [{"code": "let i18nHandler = function(){\n\t  let $t = this.$t;\n  if (typeof $t !== 'function') {\n    return;\n  }\n  let locale = this.$root.$i18n.locale;\n  if (!locale) {\n    return;\n  }\n  let merged = this.$root.$i18n.merged;\n  if (!merged) {\n    this.$root.$i18n.merged = true;\n    let messages = this.$root.$i18n.messages;\n    if (messages[locale]) {\n      this.$root.$i18n.locale = {\n        ...messages[locale],\n        ...this.$root.$i18n.locale\n      };\n    }\n  }\n  return $t.apply(this, arguments);\n}", "CodeBleu_score": 37.70783584009359}, {"code": "let i18nHandler = function(){\n\t    const $t = this.$t;\n    if (typeof $t !== 'function') {\n        return;\n    }\n    if (!this.$root.$i18n.locale) {\n        return;\n    }\n    if (!this.$root.$i18n.merged) {\n        this.$root.$i18n.merged = true;\n        this.$root.$i18n.locale = {\n            ...this.$root.$i18n.locale,\n            ...this.$root.$i18n.languageData,\n        };\n    }\n    return $t.apply(this, arguments);\n}", "CodeBleu_score": 34.570814361580254}, {"code": "let i18nHandler = function(){\n\t  let $t = this.$t;\n  if (typeof $t !== 'function') {\n    throw new Error('$t is not a function');\n  }\n  if (!Vue.locale) {\n    throw new Error('Vue.locale is not defined');\n  }\n  if (!this.merged) {\n    let lang = this.$lang;\n    if (!lang) {\n      throw new Error('$lang is not defined');\n    }\n    let locale = Vue.locale;\n    if (!locale) {\n      throw new Error('Vue.locale is not defined');\n    }\n    if (!locale[lang]) {\n      locale[lang] = {};\n    }\n    locale[lang] = Object.assign(locale[lang], this.language);\n    this.merged = true;\n  }\n  return $t.apply(this, arguments);\n}", "CodeBleu_score": 34.90827898203972}]}
{"instance_id": "b0608b85127a", "generation_result": [{"code": "function broadcast(componentName, eventName, params){\n\t  this.$children.forEach(child => {\n    var name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]));\n    }\n  });\n}", "CodeBleu_score": 89.7081771825668}, {"code": "function broadcast(componentName, eventName, params){\n\t  this.$children.forEach(child => {\n    var name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]));\n    }\n  });\n}", "CodeBleu_score": 89.7081771825668}, {"code": "function broadcast(componentName, eventName, params){\n\t  this.$children.forEach(child => {\n    var name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]));\n    }\n  });\n}", "CodeBleu_score": 89.7081771825668}]}
{"instance_id": "da57b9dc5023", "generation_result": [{"code": "aria.Utils.focusFirstDescendant = function(element){\n\t  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n}", "CodeBleu_score": 87.83904016470923}, {"code": "aria.Utils.focusFirstDescendant = function(element){\n\t  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (aria.Utils.attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n}", "CodeBleu_score": 98.7580845932321}, {"code": "aria.Utils.focusFirstDescendant = function(element){\n\t  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n}", "CodeBleu_score": 87.83904016470923}]}
{"instance_id": "a029702e104d", "generation_result": [{"code": "highlight(index){\n\t  // Check if suggestions are visible and not loading\n  if (!this.suggestionVisible || this.loading) {\n    return;\n  }\n\n  // Adjust index if it is out of bounds\n  if (index < 0) {\n    this.highlightedIndex = -1;\n    return;\n  }\n  if (index >= this.suggestions.length) {\n    index = this.suggestions.length - 1;\n  }\n\n  // Get the suggestion element and its list of items\n  const suggestion = this.$refs.suggestions.$el.querySelector('.el-autocomplete-suggestion__wrap');\n  const suggestionList = suggestion.querySelectorAll('.el-autocomplete-suggestion__list li');\n\n  // Get the highlighted item, scroll position, and offset\n  let highlightItem = suggestionList[index];\n  let scrollTop = suggestion.scrollTop;\n  let offsetTop = highlightItem.offsetTop;\n\n  // Adjust scroll position if highlighted item is not visible\n  if (offsetTop + highlightItem.scrollHeight > (scrollTop + suggestion.clientHeight)) {\n    suggestion.scrollTop += highlightItem.scrollHeight;\n  }\n  if (offsetTop < scrollTop) {\n    suggestion.scrollTop -= highlightItem.scrollHeight;\n  }\n\n  // Update highlighted index and aria-activedescendant attribute\n  this.highlightedIndex = index;\n  let $input = this.getInput();\n  $input.setAttribute('aria-activedescendant', `${this.id}-item-${this.highlightedIndex}`);\n}", "CodeBleu_score": 98.98058306429375}, {"code": "highlight(index){\n\t    if (!this.suggestionVisible || this.loading) {\n      return;\n    }\n    if (index < 0) {\n      this.highlightedIndex = -1;\n      return;\n    }\n    if (index >= this.suggestions.length) {\n      index = this.suggestions.length - 1;\n    }\n    const suggestion = this.$refs.suggestions.$el.querySelector('.el-autocomplete-suggestion__wrap');\n    const suggestionList = suggestion.querySelectorAll('.el-autocomplete-suggestion__list li');\n\n    let highlightItem = suggestionList[index];\n    let scrollTop = suggestion.scrollTop;\n    let offsetTop = highlightItem.offsetTop;\n\n    if (offsetTop + highlightItem.scrollHeight > (scrollTop + suggestion.clientHeight)) {\n      suggestion.scrollTop += highlightItem.scrollHeight;\n    }\n    if (offsetTop < scrollTop) {\n      suggestion.scrollTop -= highlightItem.scrollHeight;\n    }\n    this.highlightedIndex = index;\n    let $input = this.getInput();\n    $input.setAttribute('aria-activedescendant', `${this.id}-item-${this.highlightedIndex}`);\n  }", "CodeBleu_score": 97.58218444823402}, {"code": "highlight(index){\n\t  if (!this.suggestionVisible || this.loading) { return; }\n  if (index < 0) {\n    this.highlightedIndex = -1;\n    return;\n  }\n  if (index >= this.suggestions.length) {\n    index = this.suggestions.length - 1;\n  }\n  const suggestion = this.$refs.suggestions.$el.querySelector('.el-autocomplete-suggestion__wrap');\n  const suggestionList = suggestion.querySelectorAll('.el-autocomplete-suggestion__list li');\n\n  let highlightItem = suggestionList[index];\n  let scrollTop = suggestion.scrollTop;\n  let offsetTop = highlightItem.offsetTop;\n\n  if (offsetTop + highlightItem.scrollHeight > (scrollTop + suggestion.clientHeight)) {\n    suggestion.scrollTop += highlightItem.scrollHeight;\n  }\n  if (offsetTop < scrollTop) {\n    suggestion.scrollTop -= highlightItem.scrollHeight;\n  }\n  this.highlightedIndex = index;\n  let $input = this.getInput();\n  $input.setAttribute('aria-activedescendant', `${this.id}-item-${this.highlightedIndex}`);\n}", "CodeBleu_score": 99.1135325747031}]}
{"instance_id": "2db32f7ad18f", "generation_result": [{"code": "translateItem(index, activeIndex, oldIndex){\n\t  // Code for updating the state of a carousel item\n}", "CodeBleu_score": 2.1251853858818373}, {"code": "translateItem(index, activeIndex, oldIndex){\n\t  const parentType = this.$parent.type;\n  const parentDirection = this.parentDirection;\n  const length = this.$parent.items.length;\n\n  if (parentType !== 'card' && oldIndex !== undefined) {\n    this.animating = index === activeIndex || index === oldIndex;\n  }\n\n  if (index !== activeIndex && length > 2 && this.$parent.loop) {\n    index = this.processIndex(index, activeIndex, length);\n  }\n\n  if (parentType === 'card') {\n    if (parentDirection === 'vertical') {\n      console.warn('[Element Warn][Carousel]vertical direction is not supported in card mode');\n    }\n    this.inStage = Math.round(Math.abs(index - activeIndex)) <= 1;\n    this.active = index === activeIndex;\n    this.translate = this.calcCardTranslate(index, activeIndex);\n    this.scale = this.active ? 1 : CARD_SCALE;\n  } else {\n    this.active = index === activeIndex;\n    const isVertical = parentDirection === 'vertical';\n    this.translate = this.calcTranslate(index, activeIndex, isVertical);\n    this.scale = 1;\n  }\n\n  this.ready = true;\n}", "CodeBleu_score": 99.25712075572845}, {"code": "translateItem(index, activeIndex, oldIndex){\n\t    const parentType = this.$parent.type;\n    const parentDirection = this.parentDirection;\n    const length = this.$parent.items.length;\n    if (parentType !== 'card' && oldIndex !== undefined) {\n      this.animating = index === activeIndex || index === oldIndex;\n    }\n    if (index !== activeIndex && length > 2 && this.$parent.loop) {\n      index = this.processIndex(index, activeIndex, length);\n    }\n    if (parentType === 'card') {\n      if (parentDirection === 'vertical') {\n        console.warn('[Element Warn][Carousel]vertical direction is not supported in card mode');\n      }\n      this.inStage = Math.round(Math.abs(index - activeIndex)) <= 1;\n      this.active = index === activeIndex;\n      this.translate = this.calcCardTranslate(index, activeIndex);\n      this.scale = this.active ? 1 : CARD_SCALE;\n    } else {\n      this.active = index === activeIndex;\n      const isVertical = parentDirection === 'vertical';\n      this.translate = this.calcTranslate(index, activeIndex, isVertical);\n      this.scale = 1;\n    }\n    this.ready = true;\n  }", "CodeBleu_score": 98.05226528254988}]}
{"instance_id": "49b9aa91f62e", "generation_result": [{"code": "handleButtonEnter(arrow){\n\t  if (this.direction === 'vertical') return;\n  this.items.forEach((item, index) => {\n    if (arrow === this.itemInStage(item, index)) {\n      item.hover = true;\n    }\n  });\n}", "CodeBleu_score": 96.72464853211284}, {"code": "handleButtonEnter(arrow){\n\t  if (this.direction === 'vertical') return;\n  this.items.forEach((item, index) => {\n    if (arrow === this.itemInStage(item, index)) {\n      item.hover = true;\n    }\n  });\n}", "CodeBleu_score": 96.72464853211284}, {"code": "handleButtonEnter(arrow){\n\t  if (this.direction === 'vertical') return;\n  this.items.forEach((item, index) => {\n    if (arrow === this.itemInStage(item, index)) {\n      item.hover = true;\n    }\n  });\n}", "CodeBleu_score": 96.72464853211284}]}
{"instance_id": "85cdf6991b1f", "generation_result": [{"code": "scrollIntoView(){\n\t  if (this.$isServer) return;\n\n  const menus = this.$refs.menu || [];\n  menus.forEach(menu => {\n    const menuElement = menu.$el;\n    if (menuElement) {\n      const container = menuElement.querySelector('.el-scrollbar__wrap');\n      const activeNode = menuElement.querySelector('.el-cascader-node.is-active') ||\n        menuElement.querySelector('.el-cascader-node.in-active-path');\n      scrollIntoView(container, activeNode);\n    }\n  });\n}", "CodeBleu_score": 98.09979047790951}, {"code": "scrollIntoView(){\n\t  if (this.$isServer) return;\n\n  const menus = this.$refs.menu || [];\n  menus.forEach(menu => {\n    const menuElement = menu.$el;\n    if (menuElement) {\n      const container = menuElement.querySelector('.el-scrollbar__wrap');\n      const activeNode = menuElement.querySelector('.el-cascader-node.is-active') ||\n        menuElement.querySelector('.el-cascader-node.in-active-path');\n      scrollIntoView(container, activeNode);\n    }\n  });\n}", "CodeBleu_score": 98.09979047790951}, {"code": "scrollIntoView(){\n\t  if (this.$isServer) return;\n\n  const menus = this.$refs.menu || [];\n  menus.forEach(menu => {\n    const menuElement = menu.$el;\n    if (menuElement) {\n      const container = menuElement.querySelector('.el-scrollbar__wrap');\n      const activeNode = menuElement.querySelector('.el-cascader-node.is-active') ||\n        menuElement.querySelector('.el-cascader-node.in-active-path');\n      scrollIntoView(container, activeNode);\n    }\n  });\n}", "CodeBleu_score": 98.09979047790951}]}
{"instance_id": "fc6784c79aa5", "generation_result": [{"code": "const rgb2hsv = function(r, g, b){\n\t  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const diff = max - min;\n\n  let h = 0;\n  let s = 0;\n  let v = max;\n\n  if (diff === 0) {\n    h = 0;\n  } else if (max === r) {\n    h = (g - b) / diff;\n  } else if (max === g) {\n    h = 2 + (b - r) / diff;\n  } else if (max === b) {\n    h = 4 + (r - g) / diff;\n  }\n\n  if (max !== 0) {\n    s = diff / max;\n  }\n\n  h *= 60;\n  if (h < 0) {\n    h += 360;\n  }\n\n  return { h: h * 100, s: s * 100, v: v * 100 };\n}", "CodeBleu_score": 43.80482822897906}, {"code": "const rgb2hsv = function(r, g, b){\n\t  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n\n  const v = max;\n  const d = max - min;\n  const s = max === 0 ? 0 : d / max;\n\n  let h;\n  if (max === min) {\n    h = 0;\n  } else if (max === r) {\n    h = (g - b) / d + (g < b ? 6 : 0);\n  } else if (max === g) {\n    h = (b - r) / d + 2;\n  } else if (max === b) {\n    h = (r - g) / d + 4;\n  }\n\n  h = h / 6;\n\n  return { h: h * 360, s: s * 100, v: v * 100 };\n}", "CodeBleu_score": 56.763232733908396}, {"code": "const rgb2hsv = function(r, g, b){\n\t    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs);\n    diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        }else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        }else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}", "CodeBleu_score": 29.60814904444542}]}
{"instance_id": "37b868b6a5cc", "generation_result": [{"code": "handleDrag(event){\n\t    const rect = this.$el.getBoundingClientRect();\n    const { thumb } = this.$refs;\n\n    if (!this.vertical) {\n        let left = event.clientX - rect.left;\n        left = Math.max(thumb.offsetWidth / 2, left);\n        left = Math.min(left, rect.width - thumb.offsetWidth / 2);\n\n        this.color.set('alpha', Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 100));\n    } else {\n        let top = event.clientY - rect.top;\n        top = Math.max(thumb.offsetHeight / 2, top);\n        top = Math.min(top, rect.height - thumb.offsetHeight / 2);\n\n        this.color.set('alpha', Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 100));\n    }\n}", "CodeBleu_score": 97.62058863345389}, {"code": "handleDrag(event){\n\t    const rect = this.$el.getBoundingClientRect();\n    const { thumb } = this.$refs;\n\n    if (!this.vertical) {\n        let left = event.clientX - rect.left;\n        left = Math.max(thumb.offsetWidth / 2, left);\n        left = Math.min(left, rect.width - thumb.offsetWidth / 2);\n\n        this.color.set('alpha', Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 100));\n    } else {\n        let top = event.clientY - rect.top;\n        top = Math.max(thumb.offsetHeight / 2, top);\n        top = Math.min(top, rect.height - thumb.offsetHeight / 2);\n\n        this.color.set('alpha', Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 100));\n    }\n}", "CodeBleu_score": 97.62058863345389}, {"code": "handleDrag(event){\n\t    // Get the bounding rectangle of the element\n    const rect = this.$el.getBoundingClientRect();\n\n    // Get the thumb element\n    const { thumb } = this.$refs;\n\n    // Calculate the position of the drag relative to the element's bounding rectangle\n    let position = event.clientX - rect.left;\n\n    // Adjust the position based on the orientation\n    if (!this.vertical) {\n        position = Math.max(thumb.offsetWidth / 2, position);\n        position = Math.min(position, rect.width - thumb.offsetWidth / 2);\n    } else {\n        position = Math.max(thumb.offsetHeight / 2, position);\n        position = Math.min(position, rect.height - thumb.offsetHeight / 2);\n    }\n\n    // Set the alpha value based on the normalized position\n    this.color.set('alpha', Math.round((position - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 100));\n}", "CodeBleu_score": 70.44920256874023}]}
{"instance_id": "a3b2c61b5a1e", "generation_result": [{"code": "displayValue(){\n\t  const formattedValue = formatAsFormatAndType(this.parsedValue, this.format, this.type, this.rangeSeparator);\n  if (Array.isArray(this.userInput)) {\n    return [\n      this.userInput[0] || (formattedValue && formattedValue[0]) || '',\n      this.userInput[1] || (formattedValue && formattedValue[1]) || ''\n    ];\n  } else if (this.userInput !== null) {\n    return this.userInput;\n  } else if (formattedValue) {\n    return (this.type === 'dates' || this.type === 'years' || this.type === 'months')\n      ? formattedValue.join(', ')\n      : formattedValue;\n  } else {\n    return '';\n  }\n}", "CodeBleu_score": 98.82705234079219}, {"code": "displayValue(){\n\t  const formattedValue = formatAsFormatAndType(this.parsedValue, this.format, this.type, this.rangeSeparator);\n  if (Array.isArray(this.userInput)) {\n    return [\n      this.userInput[0] || (formattedValue && formattedValue[0]) || '',\n      this.userInput[1] || (formattedValue && formattedValue[1]) || ''\n    ];\n  } else if (this.userInput !== null) {\n    return this.userInput;\n  } else if (formattedValue) {\n    return (this.type === 'dates' || this.type === 'years' || this.type === 'months')\n      ? formattedValue.join(', ')\n      : formattedValue;\n  } else {\n    return '';\n  }\n}", "CodeBleu_score": 98.82705234079219}, {"code": "displayValue(){\n\t    const formattedValue = formatAsFormatAndType(this.parsedValue, this.format, this.type, this.rangeSeparator);\n    if (Array.isArray(this.userInput)) {\n        return [\n            this.userInput[0] || (formattedValue && formattedValue[0]) || '',\n            this.userInput[1] || (formattedValue && formattedValue[1]) || ''\n        ];\n    } else if (this.userInput !== null) {\n        return this.userInput;\n    } else if (formattedValue) {\n        return (this.type === 'dates' || this.type === 'years' || this.type === 'months')\n            ? formattedValue.join(', ')\n            : formattedValue;\n    } else {\n        return '';\n    }\n}", "CodeBleu_score": 96.66276213710341}]}
{"instance_id": "305dba2399e1", "generation_result": [{"code": "handleStartChange(event){\n\t  const value = this.parseString(this.userInput && this.userInput[0]);\n  if (value) {\n    this.userInput = [this.formatToString(value), this.displayValue[1]];\n    const newValue = [value, this.picker.value && this.picker.value[1]];\n    this.picker.value = newValue;\n    if (this.isValidValue(newValue)) {\n      this.emitInput(newValue);\n      this.userInput = null;\n    }\n  }\n}", "CodeBleu_score": 98.13083325742173}, {"code": "handleStartChange(event){\n\t  const value = this.parseString(this.userInput && this.userInput[0]);\n  if (value) {\n    this.userInput = [this.formatToString(value), this.displayValue[1]];\n    const newValue = [value, this.picker.value && this.picker.value[1]];\n    this.picker.value = newValue;\n    if (this.isValidValue(newValue)) {\n      this.emitInput(newValue);\n      this.userInput = null;\n    }\n  }\n}", "CodeBleu_score": 98.13083325742173}, {"code": "handleStartChange(event){\n\t  const value = this.parseString(this.userInput && this.userInput[0]);\n  if (value) {\n    this.userInput = [this.formatToString(value), this.displayValue[1]];\n    const newValue = [value, this.picker.value && this.picker.value[1]];\n    this.picker.value = newValue;\n    if (this.isValidValue(newValue)) {\n      this.emitInput(newValue);\n      this.userInput = null;\n    }\n  }\n}", "CodeBleu_score": 98.13083325742173}]}
{"instance_id": "0f76d5fb83b3", "generation_result": [{"code": "bindScrollEvent(){\n\t    const bindFunction = (type) => {\n      this.$refs[type].wrap.onscroll = (event) => {\n        this.handleScroll(type, event);\n      };\n    };\n    bindFunction('hours');\n    bindFunction('minutes');\n    bindFunction('seconds');\n  }", "CodeBleu_score": 84.25202176640165}, {"code": "bindScrollEvent(){\n\t    const bindFunction = (elementType) => {\n        this.$refs[elementType].wrap.onscroll = (event) => {\n            this.handleScroll(elementType, event)\n        }\n    }\n    bindFunction('hours')\n    bindFunction('minutes')\n    bindFunction('seconds')\n}", "CodeBleu_score": 61.32070366942589}, {"code": "bindScrollEvent(){\n\t  const bindFunction = (type) => {\n    const element = this.$refs[type];\n    element.wrap.onscroll = (e) => {\n      this.handleScroll(type, e);\n    };\n  };\n  bindFunction('hours');\n  bindFunction('minutes');\n  bindFunction('seconds');\n}", "CodeBleu_score": 77.83073982580173}]}
{"instance_id": "fe8ad366d911", "generation_result": [{"code": "scrollDown(step){\n\t  const scrollbar = this.scrollbars[this.currentScrollbar];\n  if (!scrollbar) {\n    this.emit('selectRange', 'hours');\n    return;\n  }\n\n  const { scrollbarElement, list, step: stepSize } = scrollbar;\n  const currentValue = parseInt(scrollbarElement.value, 10);\n  let nextValue = currentValue + (step || stepSize);\n\n  if (scrollbar.id === 'hours') {\n    const hours = list.filter((h) => h !== '');\n    const index = hours.indexOf(currentValue.toString());\n    const nextIndex = (index + stepSize) % hours.length;\n    nextValue = parseInt(hours[nextIndex], 10);\n  } else {\n    const maxValue = currentValue + 60;\n    if (nextValue > maxValue) {\n      nextValue = maxValue;\n    }\n  }\n\n  scrollbarElement.value = nextValue;\n  this.updateDate();\n  this.adjustSpinner();\n  this.emit('selectRange', this.currentScrollbar);\n}", "CodeBleu_score": 29.181720381876026}, {"code": "scrollDown(step){\n\t    if (!this.scrollbar) {\n        this.selectRangeEvent(this.hours, 'hours');\n        return;\n    }\n\n    if (this.scrollbar === 'hours') {\n        let index = this.hours.indexOf(this.value);\n        let newIndex = index;\n        do {\n            newIndex = (newIndex + 1) % this.hours.length;\n        } while (this.hours[newIndex] === '');\n        this.value = this.hours[newIndex];\n    } else {\n        this.value = (parseInt(this.value) + step) % 60;\n    }\n\n    this.updateDate();\n    this.adjustSpinner();\n    this.selectRangeEvent(this.value, this.scrollbar);\n}", "CodeBleu_score": 26.139270929324436}, {"code": "scrollDown(step){\n\t  if (!this.scrollbar) {\n    this.emitSelectRangeEvent(this.scrollbar);\n    return;\n  }\n\n  if (this.scrollbar === 'hours') {\n    for (let i = 0; i < this.hours.length; i++) {\n      if (this.hours[i] === this.value) {\n        const nextIndex = i + step;\n        if (nextIndex >= 0 && nextIndex < this.hours.length) {\n          this.value = this.hours[nextIndex];\n        }\n        break;\n      }\n    }\n  } else {\n    const value = parseInt(this.value, 10);\n    const newValue = value + step;\n    if (newValue >= 0 && newValue <= 60) {\n      this.value = newValue.toString();\n    }\n  }\n\n  this.updateDateField();\n  this.adjustSpinner();\n  this.emitSelectRangeEvent(this.scrollbar);\n}", "CodeBleu_score": 27.405147054155886}]}
{"instance_id": "9b22163fdfde", "generation_result": [{"code": "imgStyle(){\n\t    const { scale, rotation, offsetX, offsetY, transition, mode } = this.state;\n\n    const style = {\n        transform: `scale(${scale}) rotate(${rotation}deg)`,\n        ...(transition && { transition: 'transform 0.3s ease-out' }),\n        position: 'absolute',\n        left: `${offsetX}px`,\n        top: `${offsetY}px`,\n    };\n\n    if (mode === 'CONTAIN') {\n        style.maxWidth = '100%';\n        style.maxHeight = '100%';\n    }\n\n    return style;\n}", "CodeBleu_score": 58.070416980992455}, {"code": "imgStyle(){\n\t  const { scale, rotation, transition, offsetX, offsetY, mode } = this.state;\n\n  const style = {\n    transform: `scale(${scale}) rotate(${rotation}deg)`,\n    transition: transition ? 'transform 0.3s ease' : 'none',\n    position: 'absolute',\n    left: `${offsetX}px`,\n    top: `${offsetY}px`,\n  };\n\n  if (mode === 'CONTAIN') {\n    style.maxWidth = '100%';\n    style.maxHeight = '100%';\n  }\n\n  return style;\n}", "CodeBleu_score": 60.878974083315626}, {"code": "imgStyle(){\n\t    const { scale, rotation, offsetX, offsetY, mode, enableTransition } = this.state;\n    const style = {\n      transform: `scale(${scale}) rotate(${rotation}deg)`,\n      transformOrigin: 'top left',\n      position: 'absolute',\n      left: `${offsetX}px`,\n      top: `${offsetY}px`,\n    };\n\n    if (enableTransition) {\n      style.transition = 'transform 0.3s ease-out';\n    }\n\n    if (mode === 'CONTAIN') {\n      style.maxWidth = '100%';\n      style.maxHeight = '100%';\n    }\n\n    return style;\n  }", "CodeBleu_score": 57.10232765041907}]}
{"instance_id": "3bf2230ab870", "generation_result": [{"code": "addLazyLoadListener(){\n\t  if (this.$isServer) return;\n\n  const { scrollContainer } = this;\n  let _scrollContainer = null;\n\n  if (isHtmlElement(scrollContainer)) {\n    _scrollContainer = scrollContainer;\n  } else if (isString(scrollContainer)) {\n    _scrollContainer = document.querySelector(scrollContainer);\n  } else {\n    _scrollContainer = getScrollContainer(this.$el);\n  }\n\n  if (_scrollContainer) {\n    this._scrollContainer = _scrollContainer;\n    this._lazyLoadHandler = throttle(200, this.handleLazyLoad);\n    on(_scrollContainer, 'scroll', this._lazyLoadHandler);\n    this.handleLazyLoad();\n  }\n}", "CodeBleu_score": 98.58211661940115}, {"code": "addLazyLoadListener(){\n\t  if (this.$isServer) return;\n\n  const { scrollContainer } = this;\n  let _scrollContainer = null;\n\n  if (isHtmlElement(scrollContainer)) {\n    _scrollContainer = scrollContainer;\n  } else if (isString(scrollContainer)) {\n    _scrollContainer = document.querySelector(scrollContainer);\n  } else {\n    _scrollContainer = getScrollContainer(this.$el);\n  }\n\n  if (_scrollContainer) {\n    this._scrollContainer = _scrollContainer;\n    this._lazyLoadHandler = throttle(200, this.handleLazyLoad);\n    on(_scrollContainer, 'scroll', this._lazyLoadHandler);\n    this.handleLazyLoad();\n  }\n}", "CodeBleu_score": 98.58211661940115}, {"code": "addLazyLoadListener(){\n\t  if (this.$isServer) return;\n\n  const { scrollContainer } = this;\n  let _scrollContainer = null;\n\n  if (isHtmlElement(scrollContainer)) {\n    _scrollContainer = scrollContainer;\n  } else if (isString(scrollContainer)) {\n    _scrollContainer = document.querySelector(scrollContainer);\n  } else {\n    _scrollContainer = getScrollContainer(this.$el);\n  }\n\n  if (_scrollContainer) {\n    this._scrollContainer = _scrollContainer;\n    this._lazyLoadHandler = throttle(200, this.handleLazyLoad);\n    on(_scrollContainer, 'scroll', this._lazyLoadHandler);\n    this.handleLazyLoad();\n  }\n}", "CodeBleu_score": 98.58211661940115}]}
{"instance_id": "7180fba29076", "generation_result": [{"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\t  if (result.error instanceof TRPCClientError) {\n    return {\n      ...result,\n      error: new TRPCClientError(\n        result.error.message,\n        result.error.data,\n        result.error.shape,\n      ),\n    } as TState;\n  }\n  return result;\n}", "CodeBleu_score": 28.67110429293404}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\t  if (result.error instanceof TRPCClientError) {\n    const error = new TRPCClientError(\n      result.error.message,\n      result.error.data,\n      result.error.shape,\n    );\n    return { ...result, error };\n  }\n  return result;\n}", "CodeBleu_score": 37.00520939625366}, {"code": "function transformQueryOrMutationCacheErrors<\n  TState extends\n    | DehydratedState['mutations'][0]\n    | DehydratedState['queries'][0],\n>(result: TState): TState {\n\t  if (result.error instanceof TRPCClientError) {\n    const { message, data, shape } = result.error;\n    const newError = new TRPCClientError(message, data, shape);\n    return {\n      ...result,\n      error: newError,\n    } as TState;\n  }\n  return result;\n}", "CodeBleu_score": 34.18099187427928}]}
{"instance_id": "b0ff12e8aa0d", "generation_result": [{"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t  const appProps = await appOrPageCtx.Component.getInitialProps?.(appOrPageCtx.ctx);\n  return {\n    ...appProps,\n    trpcState: appOrPageCtx.ctx.trpcState,\n  };\n}", "CodeBleu_score": 11.996230168622937}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t  const appProps = await appOrPageCtx.Component.getInitialProps?.(appOrPageCtx);\n\n  return {\n    ...appProps,\n    trpcState: appOrPageCtx.ctx.trpcState ?? null,\n  };\n}", "CodeBleu_score": 12.057995931050588}, {"code": "WithTRPC.getInitialProps = async (appOrPageCtx: AppContextType) => {\n\t  const appOrPageProps = await appOrPageCtx.Component.getInitialProps?.(appOrPageCtx);\n\n  return {\n    ...appOrPageProps,\n    trpcState: appOrPageCtx.ctx.trpcState ?? null,\n  };\n}", "CodeBleu_score": 12.685575211536843}]}
{"instance_id": "b46c87572278", "generation_result": [{"code": "export function formDataToObject(formData: FormData){\n\t  const result: Record<string, any> = {};\n\n  for (const [key, value] of formData.entries()) {\n    const parts = key.split(/[\\.\\[\\]]/);\n    let current = result;\n\n    for (let i = 0; i < parts.length - 1; i++) {\n      const part = parts[i];\n      if (!current[part]) {\n        current[part] = {};\n      }\n      current = current[part];\n    }\n\n    current[parts[parts.length - 1]] = value;\n  }\n\n  return result;\n}", "CodeBleu_score": 55.13275469597543}, {"code": "export function formDataToObject(formData: FormData){\n\t  const result: Record<string, any> = {};\n\n  for (const [key, value] of formData.entries()) {\n    const parts = key.split(/[\\.\\[\\]]/);\n\n    let current = result;\n\n    for (let i = 0; i < parts.length - 1; i++) {\n      const part = parts[i];\n\n      if (!current[part]) {\n        current[part] = {};\n      }\n\n      current = current[part];\n    }\n\n    current[parts[parts.length - 1]] = value;\n  }\n\n  return result;\n}", "CodeBleu_score": 55.13275469597543}, {"code": "export function formDataToObject(formData: FormData){\n\t  const result: Record<string, any> = {};\n\n  for (const [key, value] of formData.entries()) {\n    const parts = key.split(/[\\.\\[\\]]/);\n\n    let current = result;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const part = parts[i];\n      if (!current[part]) {\n        current[part] = {};\n      }\n      current = current[part];\n    }\n\n    current[parts[parts.length - 1]] = value;\n  }\n\n  return result;\n}", "CodeBleu_score": 55.13275469597543}]}
{"instance_id": "b63467546c58", "generation_result": [{"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t  const { cacheTag } = await req.json();\n\n  if (typeof cacheTag !== 'string') {\n    return new Response(\n      `{\"error\":\"Invalid cache tag. Must be a string.\"}`,\n      {\n        status: 400,\n      }\n    );\n  }\n\n  await revalidateTag(cacheTag);\n\n  return new Response(\n    `{\"success\":true,\"timestamp\":${Date.now()},\"cacheTag\":\"${cacheTag}\"}`,\n    {\n      status: 200,\n    }\n  );\n}", "CodeBleu_score": 68.6114780978968}, {"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t  const { cacheTag } = (await req.json()) as { cacheTag?: string }\n\n  if (typeof cacheTag !== 'string') {\n    return new Response('Error revalidating: cacheTag is not a string', {\n      status: 400,\n    })\n  }\n\n  await revalidateTag(cacheTag)\n\n  return new Response(`Revalidated tag ${cacheTag}`, {\n    status: 200,\n  })\n}", "CodeBleu_score": 45.05886553583983}, {"code": "export async function experimental_revalidateEndpoint(req: Request){\n\t  const { cacheTag } = await req.json();\n  if (typeof cacheTag !== 'string') {\n    return new Response('Invalid cacheTag', { status: 400 });\n  }\n  await revalidateTag(cacheTag);\n  return new Response(`Revalidated tag ${cacheTag}`, { status: 200 });\n}", "CodeBleu_score": 59.85127354893927}]}
{"instance_id": "4cc5d9754d1f", "generation_result": [{"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t  return createRecursiveProxy<TRouter>((path, args) => {\n    return client.query(path, args)\n  })\n}", "CodeBleu_score": 15.46981598259412}, {"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t  return <TInput extends inferRouterInputs<TRouter>, TOutput extends inferRouterOutputs<TRouter>>(\n    client: TRPCClient<TRouter>,\n    opts: UseProxyOptions<TRouter> = {},\n  ) => {\n    const path = opts.path ?? []\n\n    return createRecursiveProxy<TInput, TOutput>((...args) => {\n      return client.query(opts.path.join(path), ...args)\n    })\n  }\n}", "CodeBleu_score": 41.678638944185586}, {"code": "export function createUseProxy<TRouter extends AnyRouter>{\n\t  return (\n    opts: {\n      path: string[];\n      client: TRPCProxyClient<TRouter>;\n    }\n  ) => createRecursiveProxy(opts.path, opts.client);\n}", "CodeBleu_score": 16.379636880475836}]}
{"instance_id": "ec07b15792dd", "generation_result": [{"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t  return (\n    <AccordionPrimitive.Root type=\"single\" collapsible>\n      <AccordionPrimitive.Item value=\"item-1\">\n        <AccordionPrimitive.Header>\n          <AccordionPrimitive.Trigger\n            className={`group flex w-full items-center justify-between rounded-t-md border border-slate-200 px-5 py-5 text-left text-sm font-medium text-slate-900 hover:bg-slate-100 focus:z-10 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75 dark:border-slate-700 dark:text-slate-100 dark:hover:bg-slate-800`}\n          >\n            <span>{name}</span>\n            <ChevronDownIcon\n              className={`ml-2 h-5 w-5 shrink-0 text-slate-400 group-hover:text-slate-500 dark:text-slate-600 dark:group-hover:text-slate-500`}\n              aria-hidden=\"true\"\n            />\n          </AccordionPrimitive.Trigger>\n        </AccordionPrimitive.Header>\n        <AccordionPrimitive.Content>\n          <div className=\"rounded-b-md border border-slate-200 border-t-0 bg-white p-5 dark:border-slate-700 dark:bg-slate-800\">\n            <div className=\"space-y-6 text-sm text-slate-500 dark:text-slate-400\">\n              {child}\n            </div>\n          </div>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n}", "CodeBleu_score": 42.75457562419012}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t  return (\n    <AccordionPrimitive.Root type=\"single\" collapsible>\n      <AccordionPrimitive.Item value=\"item-1\">\n        <AccordionPrimitive.Trigger\n          className={`group flex w-full items-center justify-between rounded-md px-2 py-2 text-sm font-medium text-gray-800 hover:bg-gray-100 ${\n            open ? \"bg-gray-200\" : \"bg-white\"\n          }`}\n        >\n          <span>{name}</span>\n          <ChevronDownIcon\n            className={`h-5 w-5 text-gray-600 group-hover:text-gray-800 ${\n              open ? \"rotate-180 transform\" : \"\"\n            }`}\n          />\n        </AccordionPrimitive.Trigger>\n        <AccordionPrimitive.Content>\n          <div className=\"mt-2 rounded-md bg-white p-4\">{child}</div>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    </AccordionPrimitive.Root>\n  );\n}", "CodeBleu_score": 49.220129509658825}, {"code": "const Accordion = ({ child, name }: AccordionProps) =>{\n\t  const [isOpen, setIsOpen] = useState(false);\n\n  const handleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <AccordionPrimitive.Root\n      type=\"single\"\n      value={isOpen ? \"open\" : \"closed\"}\n      className=\"flex flex-col\"\n    >\n      <AccordionPrimitive.Trigger\n        className=\"group flex w-full items-center justify-between rounded-lg bg-white px-4 py-2 text-left text-sm font-medium text-gray-900 hover:bg-gray-50\"\n        onClick={handleOpen}\n      >\n        <span>{name}</span>\n        <AccordionPrimitive.Chevron\n          className={`h-5 w-5 text-gray-500 group-hover:text-gray-700 ${\n            isOpen ? \"rotate-180 transform\" : \"\"\n          }`}\n        />\n      </AccordionPrimitive.Trigger>\n      <AccordionPrimitive.Content className=\"data-[state=open]:animate-slideDown data-[state=closed]:animate-slideUp overflow-hidden text-[15px] \">\n        <div className=\"py-4 px-5 text-gray-500\">{child}</div>\n      </AccordionPrimitive.Content>\n    </AccordionPrimitive.Root>\n  );\n}", "CodeBleu_score": 44.84111672726361}]}
{"instance_id": "728fa96ca3cf", "generation_result": [{"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t  const [isOpen, setIsOpen] = useState(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const menuRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        buttonRef.current &&\n        !buttonRef.current.contains(event.target as Node) &&\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleMenuItemClick = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <MenuPrimitive>\n      <MenuButton\n        ref={buttonRef}\n        onClick={handleButtonClick}\n        buttonPosition={buttonPosition}\n      >\n        {icon && <Icon icon={icon} />}\n        {name && <span>{name}</span>}\n        {chevron && <Icon icon=\"chevron-down\" />}\n      </MenuButton>\n      {isOpen && (\n        <MenuItems ref={menuRef} buttonPosition={buttonPosition}>\n          {items.map((item) => (\n            <MenuItem key={item.name} onClick={handleMenuItemClick}>\n              <Icon icon={item.icon} />\n              <span>{item.name}</span>\n            </MenuItem>\n          ))}\n        </MenuItems>\n      )}\n    </MenuPrimitive>\n  );\n}", "CodeBleu_score": 23.25455855177026}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t  return (\n    <MenuPrimitive.Root>\n      <MenuPrimitive.Trigger asChild>\n        <button className=\"menu-button\">\n          {icon && <span className=\"menu-icon\">{icon}</span>}\n          {name && <span className=\"menu-name\">{name}</span>}\n          {chevron && <span className=\"menu-chevron\">{chevron}</span>}\n        </button>\n      </MenuPrimitive.Trigger>\n      <MenuPrimitive.Portal>\n        <MenuPrimitive.Content\n          className={`menu-content ${buttonPosition}`}\n          sideOffset={5}\n        >\n          <MenuPrimitive.List className=\"menu-list\">\n            {items.map((item, index) => (\n              <MenuPrimitive.Item\n                key={`${item.name}-${index}`}\n                className=\"menu-item\"\n                onSelect={item.onSelect}\n              >\n                {item.name}\n              </MenuPrimitive.Item>\n            ))}\n          </MenuPrimitive.List>\n        </MenuPrimitive.Content>\n      </MenuPrimitive.Portal>\n    </MenuPrimitive.Root>\n  );\n}", "CodeBleu_score": 46.7874663447916}, {"code": "function Menu({ icon, name, items, chevron, buttonPosition = \"top\" }: MenuProps){\n\t  return (\n    <MenuPrimitive>\n      <MenuButton icon={icon} name={name} chevron={chevron} />\n      <MenuItems buttonPosition={buttonPosition}>\n        {items.map((item, index) => (\n          <MenuItem key={index} {...item} />\n        ))}\n      </MenuItems>\n    </MenuPrimitive>\n  );\n}", "CodeBleu_score": 32.67939748213994}]}
{"instance_id": "a2733fb19224", "generation_result": [{"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const hasUserScrolled = scrollTop + clientHeight >= scrollHeight - threshold;\n    setHasUserScrolled(hasUserScrolled);\n  }", "CodeBleu_score": 63.1062613276662}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const hasUserScrolled = scrollTop + clientHeight >= scrollHeight - threshold;\n    setHasUserScrolled(hasUserScrolled);\n  }", "CodeBleu_score": 63.1062613276662}, {"code": "const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n\t    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n    const threshold = 10;\n    const isScrolledUp = scrollTop + clientHeight >= scrollHeight - threshold;\n    setHasUserScrolled(isScrolledUp);\n  }", "CodeBleu_score": 55.939737830743496}]}
{"instance_id": "128baf9be3e8", "generation_result": [{"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t  if (scrollRef.current) {\n    scrollRef.current.scrollTo({\n      top: scrollRef.current.scrollHeight,\n      behavior: behaviour,\n    });\n  }\n}", "CodeBleu_score": 66.40424776881413}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t  if (scrollRef.current) {\n    scrollRef.current.scrollTo({\n      top: scrollRef.current.scrollHeight,\n      behavior: behaviour,\n    });\n  }\n}", "CodeBleu_score": 66.40424776881413}, {"code": "const handleScrollToBottom = (behaviour: \"instant\" | \"smooth\") =>{\n\t  if (scrollRef.current) {\n    scrollRef.current.scrollTo({\n      top: scrollRef.current.scrollHeight,\n      behavior: behaviour,\n    });\n  }\n}", "CodeBleu_score": 66.40424776881413}]}
{"instance_id": "070c4b1ac0b5", "generation_result": [{"code": "const saveElementAsImage = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n\n  if (!element) {\n    alert(\"Element not found\");\n    return;\n  }\n\n  const style = window.getComputedStyle(element);\n\n  const width = parseInt(style.getPropertyValue(\"width\"));\n  const height = parseInt(style.getPropertyValue(\"height\"));\n  const padding = parseInt(style.getPropertyValue(\"padding\"));\n  const borderWidth = parseInt(style.getPropertyValue(\"border-width\"));\n\n  const adjustedWidth = width - 2 * padding - 2 * borderWidth;\n  const adjustedHeight = height - 2 * padding - 2 * borderWidth;\n\n  const options = {\n    style: {\n      border: \"none\",\n      padding: 0,\n      margin: 0,\n      width: `${adjustedWidth}px`,\n      height: `${adjustedHeight}px`,\n      \"box-sizing\": \"border-box\",\n    },\n    backgroundColor: \"white\",\n  };\n\n  htmlToImage\n    .toJpeg(element, options)\n    .then((dataUrl) => {\n      const link = document.createElement(\"a\");\n      link.download = \"agent-gpt-output.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((error) => {\n      alert(\"Error saving image\");\n      console.error(\"Error:\", error);\n    });\n}", "CodeBleu_score": 51.52618812595382}, {"code": "const saveElementAsImage = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n\n  if (!element) {\n    alert(\"Element not found\");\n    return;\n  }\n\n  const style = element.style;\n  style.backgroundColor = \"white\";\n  style.padding = \"10px\";\n  style.lineHeight = \"1.6\";\n  style.fontFamily = \"Arial\";\n\n  htmlToImage\n    .toJpeg(element, { quality: 0.95 })\n    .then(function (dataUrl) {\n      const link = document.createElement(\"a\");\n      link.download = \"agent-gpt-output.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch(function (error) {\n      alert(\"Error saving image: \" + error);\n    });\n}", "CodeBleu_score": 55.006081236762405}, {"code": "const saveElementAsImage = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n  if (!element) {\n    alert('Element not found');\n    return;\n  }\n\n  const style = {\n    border: '1px solid #000000',\n    borderRadius: '4px',\n    padding: '10px',\n    backgroundColor: 'white',\n    color: 'black',\n  };\n\n  htmlToImage\n    .toJpeg(element, { style })\n    .then((dataUrl) => {\n      const link = document.createElement('a');\n      link.download = 'agent-gpt-output.png';\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((error) => {\n      alert('Error saving image');\n      console.error(error);\n    });\n}", "CodeBleu_score": 58.612284621656926}]}
{"instance_id": "346ea48343da", "generation_result": [{"code": "const copyElementText = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n  if (element) {\n    const text = element.innerText;\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(text);\n    } else {\n      const textarea = document.createElement(\"textarea\");\n      textarea.value = text;\n      textarea.style.position = \"fixed\";\n      textarea.style.opacity = \"0\";\n      document.body.appendChild(textarea);\n      textarea.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(textarea);\n    }\n  }\n}", "CodeBleu_score": 56.9245881443335}, {"code": "const copyElementText = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n  if (!element) {\n    console.error(`Element with ID ${elementId} not found.`);\n    return;\n  }\n\n  const text = element.innerText;\n\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        console.log(`Text copied to clipboard: ${text}`);\n      },\n      (err) => {\n        console.error(`Failed to copy text to clipboard: ${err}`);\n      }\n    );\n  } else {\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.position = \"fixed\";\n    textArea.style.left = \"-9999px\";\n    textArea.style.top = \"-9999px\";\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textArea);\n    console.log(`Text copied to clipboard: ${text}`);\n  }\n}", "CodeBleu_score": 65.0637388139308}, {"code": "const copyElementText = (elementId: string) =>{\n\t  const element = document.getElementById(elementId);\n  if (!element) {\n    console.error(`Element with ID '${elementId}' not found.`);\n    return;\n  }\n\n  const text = element.innerText;\n\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        console.log('Text copied to clipboard.');\n      },\n      (err) => {\n        console.error('Error copying text: ', err);\n      }\n    );\n  } else {\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n  }\n}", "CodeBleu_score": 68.201695519091}]}
{"instance_id": "25f193a0eddf", "generation_result": [{"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t  const match = /language-(\\w+)/.exec(className || '');\n  const language = match?.[1];\n  const code = String(children).replace(/\n$/, '');\n\n  if (inline) {\n    return (\n      <code className={className}>\n        {code}\n      </code>\n    );\n  }\n\n  return (\n    <pre className={className}>\n      <code className={`language-${language}`}>\n        {code}\n      </code>\n    </pre>\n  );\n}", "CodeBleu_score": 43.11860779589228}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t  if (inline) {\n    return <code className={className}>{children}</code>;\n  }\n\n  const language = className?.replace('language-', '');\n  return (\n    <pre className={`${className} ${language}`}>\n      <code className={`language-${language}`}>{children}</code>\n    </pre>\n  );\n}", "CodeBleu_score": 41.08678116052532}, {"code": "const CustomCodeBlock = ({ inline, className, children }: CustomCodeBlockProps) => {\n\t  if (inline) {\n    return <code className={className}>{children}</code>;\n  }\n\n  const language = className?.replace('language-', '');\n\n  return (\n    <SyntaxHighlighter\n      language={language}\n      style={vs2015}\n      showLineNumbers\n      customStyle={{\n        backgroundColor: '#282c34',\n        borderRadius: '8px',\n        padding: '16px',\n      }}\n    >\n      {children}\n    </SyntaxHighlighter>\n  );\n}", "CodeBleu_score": 45.76984077229306}]}
{"instance_id": "7ba7dfdc0ab6", "generation_result": [{"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\t  if (typeof node === 'string') {\n    return node;\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  }\n\n  if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n\n  return '';\n}", "CodeBleu_score": 85.83270931842935}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\t  if (typeof node === 'string') {\n    return node;\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  }\n\n  if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n\n  return '';\n}", "CodeBleu_score": 85.83270931842935}, {"code": "const extractTextFromNode = (node: React.ReactNode): string =>{\n\t  if (typeof node === 'string') {\n    return node;\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(extractTextFromNode).join('');\n  }\n\n  if (React.isValidElement(node)) {\n    return extractTextFromNode(node.props.children);\n  }\n\n  return '';\n}", "CodeBleu_score": 85.83270931842935}]}
{"instance_id": "a67cb8d31dde", "generation_result": [{"code": "const Summarize = () =>{\n\t  const { agent, lifecycle, tasks, summary } = useContext(AppContext);\n\n  const [prompt, setPrompt] = useState(\"\");\n\n  const handleSummarize = async () => {\n    if (agent) {\n      setPrompt(\"Summarizing...\");\n      const result = await agent.summarize();\n      setPrompt(result);\n      setSummary(true);\n    }\n  };\n\n  const isAvailable = agent && agent.isAvailable();\n  const isStopped = lifecycle === \"stopped\";\n  const hasCompletedTasks = tasks.some(\n    (task) => task.status === \"completed\" && task.result\n  );\n\n  if (isAvailable && isStopped && hasCompletedTasks && !summary) {\n    return (\n      <div className=\"summarize\">\n        <div className=\"summarize-prompt\">\n          {prompt ? (\n            <div>{prompt}</div>\n          ) : (\n            <div>\n              The conversation is over. Would you like to summarize the\n              conversation?\n            </div>\n          )}\n        </div>\n        <div className=\"summarize-button\">\n          <button onClick={handleSummarize}>Summarize</button>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n}", "CodeBleu_score": 31.37188702638425}, {"code": "const Summarize = () =>{\n\t  const { agent, lifecycle, tasks, summary } = useContext(AppContext);\n\n  if (\n    !agent ||\n    lifecycle !== \"stopped\" ||\n    !tasks.find((task) => task.status === \"completed\" && task.result) ||\n    summary\n  )\n    return null;\n\n  return (\n    <div>\n      <p>\n        You have completed your tasks. Would you like to summarize your\n        conversation?\n      </p>\n      <button\n        onClick={() => {\n          setSummary(true);\n          agent?.summarize();\n        }}\n      >\n        Summarize\n      </button>\n    </div>\n  );\n}", "CodeBleu_score": 28.352595663265507}, {"code": "const Summarize = () =>{\n\t  const { agent, lifecycle, tasks, summary } = useContext(AppContext);\n\n  const handleSummarize = () => {\n    setSummary(true);\n    agent?.summarize();\n  };\n\n  return (\n    <div>\n      {agent?.available &&\n        lifecycle === \"stopped\" &&\n        tasks.filter((task) => task.result).length > 0 &&\n        !summary && (\n          <div>\n            <p>Would you like to summarize the conversation?</p>\n            <button onClick={handleSummarize}>Summarize</button>\n          </div>\n        )}\n    </div>\n  );\n}", "CodeBleu_score": 18.714425282600963}]}
{"instance_id": "983031b20224", "generation_result": [{"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t  return (\n    <ClerkProvider\n      appearance={{\n        elements: {\n          footer: {\n            display: \"none\",\n          },\n          navbar: {\n            display: \"none\",\n          },\n          card: {\n            background: \"#121212\",\n            borderRadius: \"0.5rem\",\n            boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1)\",\n            padding: \"1.5rem\",\n            margin: \"1rem\",\n          },\n          input: {\n            background: \"#121212\",\n            borderRadius: \"0.5rem\",\n            boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1)\",\n            padding: \"1.5rem\",\n            margin: \"1rem\",\n          },\n          button: {\n            background: \"#121212\",\n            borderRadius: \"0.5rem\",\n            boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1)\",\n            padding: \"1.5rem\",\n            margin: \"1rem\",\n          },\n        },\n        variables: {\n          colorPrimary: \"#000000\",\n        },\n      }}\n      frontendApi={clerkFrontendApi}\n      navigate={(to) => router.push(to)}\n    >\n      <TRPCReactProvider client={trpcClient} queryClient={queryClient}>\n        {children}\n      </TRPCReactProvider>\n    </ClerkProvider>\n  );\n}", "CodeBleu_score": 50.96291396392117}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t  return (\n    <ClerkProvider\n      appearance={{\n        elements: {\n          card: 'box-border rounded-none',\n          footer: 'bg-transparent',\n          headerTitle: 'text-primary',\n          label: 'text-primary',\n          input: 'border-primary',\n          button: 'bg-primary text-white',\n          inputContainer: 'bg-transparent',\n          footerAction: 'text-primary',\n        },\n        variables: {\n          colorPrimary: '#000000',\n        },\n        layout: {\n          socialButtonsVariant: 'iconButton',\n        },\n      }}\n      {...pageProps}\n    >\n      <TRPCReactProvider>{children}</TRPCReactProvider>\n    </ClerkProvider>\n  )\n}", "CodeBleu_score": 32.61938957980166}, {"code": "export default function DashboardLayout({ children }: PropsWithChildren){\n\t  return (\n    <ClerkProvider\n      appearance={{\n        elements: {\n          card: \"dark\",\n          footer: \"dark\",\n          header: \"dark\",\n          loader: \"dark\",\n          pageButton: \"dark\",\n        },\n        variables: {\n          colorPrimary: \"#000000\",\n        },\n      }}\n      {...pageProps}\n    >\n      <TRPCReactProvider>{children}</TRPCReactProvider>\n    </ClerkProvider>\n  );\n}", "CodeBleu_score": 39.762800862742594}]}
{"instance_id": "0ba912ee94c7", "generation_result": [{"code": "export function ActiveButton({ href, label, icon }: Props){\n\t  const pathname = usePathname();\n  const isActive = pathname === href;\n\n  return (\n    <Button\n      as={Link}\n      href={href}\n      className={cn(\n        \"justify-start\",\n        isActive\n          ? \"bg-muted text-foreground\"\n          : \"text-foreground/60 hover:bg-muted hover:text-foreground\"\n      )}\n      variant=\"ghost\"\n    >\n      <Icon className=\"mr-2 h-4 w-4\" />\n      <span className=\"truncate\">{label}</span>\n    </Button>\n  );\n}", "CodeBleu_score": 58.20051624312247}, {"code": "export function ActiveButton({ href, label, icon }: Props){\n\t  const pathname = usePathname();\n  const isActive = pathname === href;\n\n  return (\n    <Button\n      as={Link}\n      href={href}\n      variant=\"ghost\"\n      justifyContent=\"start\"\n      fontWeight={isActive ? \"bold\" : \"normal\"}\n      color={isActive ? \"accent\" : \"primary\"}\n      className={isActive ? \"active\" : \"\"}\n    >\n      {icon}\n      <Text\n        fontWeight={isActive ? \"bold\" : \"normal\"}\n        whiteSpace=\"nowrap\"\n        overflow=\"hidden\"\n        textOverflow=\"ellipsis\"\n      >\n        {label}\n      </Text>\n    </Button>\n  );\n}", "CodeBleu_score": 54.10588313403131}, {"code": "export function ActiveButton({ href, label, icon }: Props){\n\t  const pathname = usePathname();\n  const isActive = pathname === href;\n\n  return (\n    <Button\n      as={Link}\n      href={href}\n      variant=\"ghost\"\n      className={cn(\"justify-start\", {\n        \"bg-muted\": isActive,\n      })}\n    >\n      {icon && <span className=\"mr-2\">{icon}</span>}\n      <p className=\"text-sm font-medium\">{label}</p>\n    </Button>\n  );\n}", "CodeBleu_score": 60.9489668773795}]}
{"instance_id": "1fd5b7fdcc9b", "generation_result": [{"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={`${inter.variable} ${roboto.variable} ${robotoMono.variable}`}>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"dark\">\n          {children}\n          <Toaster />\n          <Analytics />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 52.10234804399689}, {"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={`${inter.className} dark:bg-[#111010]`}>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"dark\" enableSystem>\n          {children}\n          <Toaster />\n          <Analytics />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 50.724937335669594}, {"code": "export default function RootLayout({ children }: PropsWithChildren) {\n\t  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={`${inter.className} ${roboto.variable}`}>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n          {children}\n          <Toaster />\n          <Analytics />\n          <SpeedInsights />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}", "CodeBleu_score": 52.06620298443012}]}
{"instance_id": "390ef9405b57", "generation_result": [{"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t  return (\n    <a\n      className={twMerge(\n        \"inline-block rounded-lg text-sm font-semibold leading-6 text-slate-900 transition-colors hover:text-slate-900/70 active:text-slate-900/80\",\n        intent === \"primary\" &&\n          \"bg-sky-500 text-white hover:bg-sky-500/90 active:bg-sky-500/70\",\n        intent === \"secondary\" &&\n          \"bg-slate-300 text-slate-900 hover:bg-slate-300/90 active:bg-slate-300/70\",\n        size === \"small\" && \"px-3 py-1 text-xs\",\n        size === \"medium\" && \"px-4 py-2\",\n        size === \"large\" && \"px-5 py-2.5\",\n        underline === \"always\" && \"underline\",\n        underline === \"hover\" && \"hover:underline\",\n        className\n      )}\n      {...props}\n    />\n  );\n}", "CodeBleu_score": 14.152494680166615}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t  return (\n    <a\n      className={twMerge(\n        'rounded-md transition',\n        intent === 'primary' && [\n          'bg-blue-600 px-4 py-[0.6rem]',\n          'hover:bg-blue-500 active:bg-blue-600 active:text-white/80',\n          'disabled:bg-blue-600/60 disabled:hover:bg-blue-600/60',\n        ],\n        intent === 'secondary' && [\n          'bg-gray-200 px-4 py-[0.6rem] text-gray-900',\n          'hover:bg-gray-300 active:bg-gray-200 active:text-gray-900/80',\n          'dark:bg-gray-700 dark:text-gray-100',\n          'dark:hover:bg-gray-600 dark:active:bg-gray-700 dark:active:text-gray-100/80',\n          'disabled:bg-gray-200/60 disabled:hover:bg-gray-200/60',\n        ],\n        size === 'small' && 'text-xs',\n        size === 'medium' && 'text-sm',\n        size === 'large' && 'text-base',\n        underline === 'none' && 'no-underline',\n        underline === 'hover' && 'no-underline hover:underline',\n        underline === 'always' && 'underline',\n        className\n      )}\n      {...props}\n    />\n  )\n}", "CodeBleu_score": 13.697036151046152}, {"code": "export function Button({ className, intent, size, underline, ...props }: ButtonProps){\n\t  return (\n    <a\n      className={twMerge(\n        \"inline-block rounded-full\",\n        \"font-medium text-white\",\n        \"focus:outline-none focus:ring-2 focus:ring-offset-2\",\n        \"border border-transparent\",\n        \"transition duration-200\",\n        intent === \"primary\" &&\n          \"bg-primary-500 hover:bg-primary-600 active:bg-primary-700\",\n        intent === \"secondary\" &&\n          \"bg-secondary-500 hover:bg-secondary-600 active:bg-secondary-700\",\n        intent === \"tertiary\" &&\n          \"bg-tertiary-500 hover:bg-tertiary-600 active:bg-tertiary-700\",\n        intent === \"danger\" &&\n          \"bg-danger-500 hover:bg-danger-600 active:bg-danger-700\",\n        size === \"sm\" && \"text-sm py-2 px-4\",\n        size === \"md\" && \"text-base py-2 px-4\",\n        size === \"lg\" && \"text-lg py-2 px-6\",\n        underline && \"underline\",\n        className\n      )}\n      {...props}\n    />\n  );\n}", "CodeBleu_score": 14.34118796130769}]}
{"instance_id": "aa655671cb7e", "generation_result": [{"code": "export function middleware(request: NextRequest){\n\t  const host = request.headers.get('host');\n  if (host?.includes('next-enterprise.vercel.app')) {\n    return NextResponse.redirect(\n      'https://blazity.com/open-source/nextjs-enterprise-boilerplate',\n      301,\n    );\n  }\n}", "CodeBleu_score": 30.35472382898249}, {"code": "export function middleware(request: NextRequest){\n\t  if (request.nextUrl.host.includes('next-enterprise.vercel.app')) {\n    return NextResponse.redirect(\n      'https://blazity.com/open-source/nextjs-enterprise-boilerplate',\n      301\n    );\n  }\n}", "CodeBleu_score": 30.008147631}, {"code": "export function middleware(request: NextRequest){\n\t  if (request.nextUrl.host.includes(\"next-enterprise.vercel.app\")) {\n    return NextResponse.redirect(\n      \"https://blazity.com/open-source/nextjs-enterprise-boilerplate\",\n      301\n    );\n  }\n}", "CodeBleu_score": 31.006244988868577}]}
{"instance_id": "b33fa69187fb", "generation_result": [{"code": "app.lazyrouter = function lazyrouter(){\n\t  if (app.router) return;\n  app.router = new Router({\n    caseSensitive: app.get('case sensitive routing'),\n    strict: app.get('strict routing')\n  });\n\n  app.router.use(query(app.get('query parser')));\n  app.router.use(middleware.init(app));\n}", "CodeBleu_score": 26.44986727960623}, {"code": "app.lazyrouter = function lazyrouter(){\n\t  if (app.router) return;\n  app.router = new Router({\n    caseSensitive: app.get('case sensitive routing'),\n    strict: app.get('strict routing')\n  });\n  app.router.use(query(app.get('query parser')));\n  app.router.use(init(app));\n}", "CodeBleu_score": 25.2708482286425}, {"code": "app.lazyrouter = function lazyrouter(){\n\t  if (app.router) {\n    return;\n  }\n\n  var router = app.router = new Router({\n    caseSensitive: app.get('case sensitive routing'),\n    strict: app.get('strict routing')\n  });\n\n  router.use(query(app.get('query parser')));\n  router.use(app.init);\n}", "CodeBleu_score": 26.30314495860918}]}
{"instance_id": "7aadf79801c0", "generation_result": [{"code": "function createApplication(){\n\t    var app = function (req, res, next) {\n        app.handle(req, res, next);\n    };\n    mixin(app, EventEmitter.prototype, false);\n    mixin(app, proto, false);\n\n    app.request = Object.create(req, {\n        app: { configurable: true, enumerable: true, writable: true, value: app }\n    });\n\n    app.response = Object.create(res, {\n        app: { configurable: true, enumerable: true, writable: true, value: app }\n    });\n\n    app.init();\n    return app;\n}", "CodeBleu_score": 89.49380778939688}, {"code": "function createApplication(){\n\t  const app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  Object.setPrototypeOf(app, EventEmitter.prototype);\n\n  app.init = function (cb) {\n    // do some initialization here\n    cb();\n  };\n\n  app.handle = function (req, res, callback) {\n    const fn = this.router.match(req.url, req.method);\n    if (fn) {\n      fn(req, res, callback);\n    } else {\n      callback();\n    }\n  };\n\n  app.router = new Router();\n\n  app.listen = function () {\n    const server = http.createServer(this);\n    return server.listen.apply(server, arguments);\n  };\n\n  return app;\n}", "CodeBleu_score": 39.860641449746986}, {"code": "function createApplication(){\n\t  var app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  });\n\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  });\n\n  app.init();\n  return app;\n}", "CodeBleu_score": 91.16904160074772}]}
{"instance_id": "2b4af4a14e81", "generation_result": [{"code": "res.sendFile = function sendFile(path, options, callback) {\n\t", "CodeBleu_score": 3.373203616900878}, {"code": "res.sendFile = function sendFile(path, options, callback) {\n\t", "CodeBleu_score": 3.373203616900878}, {"code": "res.sendFile = function sendFile(path, options, callback) {\n\t", "CodeBleu_score": 3.373203616900878}]}
{"instance_id": "24ba2258749d", "generation_result": [{"code": "View.prototype.lookup = function lookup(name){\n\t  var roots = this.root.length ? this.root : [this.root];\n  var path = name;\n  var dir = '';\n  var file = '';\n\n  for (var i = 0, len = roots.length; i < len; ++i) {\n    dir = roots[i];\n    file = resolve(dir, path);\n    if (stat(file)) {\n      return file;\n    }\n  }\n}", "CodeBleu_score": 35.20130344138834}, {"code": "View.prototype.lookup = function lookup(name){\n\t  var roots = this.root.length ? this.root : [this.root];\n  var path = '';\n  var file = '';\n  var dir = '';\n  var ext = '';\n\n  for (var i = 0, len = roots.length; i < len; ++i) {\n    path = roots[i] + name;\n    ext = this.extname(path);\n    if (ext) {\n      file = path;\n      break;\n    }\n\n    path = roots[i] + name + '/index';\n    ext = this.extname(path);\n    if (ext) {\n      file = path;\n      break;\n    }\n  }\n\n  if (!file) {\n    return;\n  }\n\n  dir = path.slice(0, -(name.length + ext.length + 1));\n\n  return {\n    path: path,\n    dir: dir,\n    file: file,\n    ext: ext\n  };\n}", "CodeBleu_score": 29.29035639901936}, {"code": "View.prototype.lookup = function lookup(name){\n\t  var path;\n  var roots = this.root;\n\n  for (var i = 0; i < roots.length; i++) {\n    var root = roots[i];\n    var loc = path = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    var stat = yield this.resolver.resolve(dir, file);\n\n    if (stat) {\n      return path;\n    }\n  }\n}", "CodeBleu_score": 58.12098161261539}]}
{"instance_id": "4a3a45242878", "generation_result": [{"code": "module.exports = function query(options){\n\t  var opts = options || {};\n  var queryparse = opts.parser || queryparse;\n\n  if (typeof queryparse !== 'function') {\n    throw new TypeError('option `parser` must be a function');\n  }\n\n  var enableProto = opts.enableProto;\n  var delimiter = opts.delimiter || '&';\n  var depth = opts.depth;\n  var arrayLimit = opts.arrayLimit;\n  var parseArrays = opts.parseArrays;\n  var allowDots = opts.allowDots;\n  var allowPrototypes = opts.allowPrototypes || enableProto;\n\n  // The prototype patch is deprecated and removed in qs@7\n  // This code pattern will be removed in next major version\n  if (allowPrototypes === undefined) {\n    allowPrototypes = true;\n  }\n\n  var parseOptions = {\n    delimiter: delimiter,\n    depth: depth,\n    arrayLimit: arrayLimit,\n    parseArrays: parseArrays,\n    allowDots: allowDots,\n    allowPrototypes: allowPrototypes\n  };\n\n  return function (req, res, next) {\n    if (!req.query) {\n      var val = req.url.split('?', 2)[1] || '';\n      req.query = queryparse(val, parseOptions);\n    }\n\n    next();\n  };\n}", "CodeBleu_score": 39.78540078820234}, {"code": "module.exports = function query(options){\n\t    var opts = options || {};\n    var queryparse = opts.parser || queryparse;\n\n    return function query(req, res, next) {\n        if (!req.query) {\n            req.query = ~req.url.indexOf('?')\n                ? queryparse(req.url.split('?')[1])\n                : {};\n        }\n\n        next();\n    };\n}", "CodeBleu_score": 31.66573710900057}, {"code": "module.exports = function query(options){\n\t  let opts = options || {};\n\n  let queryparse = require('./queryparse');\n  let querystring = require('querystring');\n\n  let parse = opts.parser || queryparse;\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      let val = parse(req.url);\n      req.query = val;\n    }\n\n    next();\n  };\n}", "CodeBleu_score": 34.900732753844245}]}
{"instance_id": "786ae7051b03", "generation_result": [{"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basePath=\"activitypub\" modals={modals}>\n        <DesignSystemApp designSystem={designSystem} className=\"activitypub\">\n          <MainContent />\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n}", "CodeBleu_score": 67.40910413274837}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basePath=\"activitypub\" modals={modals}>\n        <DesignSystemApp designSystem={designSystem} className=\"activitypub\">\n          <Main />\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n}", "CodeBleu_score": 63.78727940887564}, {"code": "const App: React.FC<AppProps> = ({framework, designSystem}) =>{\n\t  return (\n    <FrameworkProvider framework={framework}>\n      <RoutingProvider basePath=\"activitypub\" modals={modals}>\n        <DesignSystemApp designSystem={designSystem} className=\"activitypub-app\">\n          <Main />\n        </DesignSystemApp>\n      </RoutingProvider>\n    </FrameworkProvider>\n  );\n}", "CodeBleu_score": 63.85688776570544}]}
{"instance_id": "8100930f7ce7", "generation_result": [{"code": "const darkMode = () =>{\n\t  if (colorScheme === 'light') return false;\n  if (colorScheme === 'dark') return true;\n  const el = document.createElement('div');\n  el.style.backgroundColor = containerColor;\n  document.body.appendChild(el);\n  const contrast = getComputedStyle(el.parentElement).getPropertyValue('color-contrast');\n  document.body.removeChild(el);\n  return contrast.split('(')[1].split(')')[0] < 5;\n}", "CodeBleu_score": 31.14798704127163}, {"code": "const darkMode = () =>{\n\t    if (colorScheme === 'light') {\n        return false;\n    } else if (colorScheme === 'dark') {\n        return true;\n    } else {\n        const el = document.getElementById('container');\n        const containerColor = window.getComputedStyle(el.parentElement).getPropertyValue('background-color');\n        const contrast = contrastRatio(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(', ').map(parseFloat), [255, 255, 255]);\n        return contrast < 5;\n    }\n}", "CodeBleu_score": 47.58495338054976}, {"code": "const darkMode = () =>{\n\t    if (colorScheme === 'light') return false;\n    if (colorScheme === 'dark') return true;\n\n    const containerColor = getComputedStyle(el.parentElement).getPropertyValue('background-color');\n    const contrast = getContrast(containerColor.substring(containerColor.indexOf('(') + 1, containerColor.lastIndexOf(')')).split(', '), [255, 255, 255]);\n    return contrast < 5;\n}", "CodeBleu_score": 32.19676494814397}]}
{"instance_id": "7da55fac8ceb", "generation_result": [{"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t    if (!title && !showCount) return null;\n    return (\n        <div className=\"flex flex-row items-center justify-between\">\n            <h1 className=\"text-2xl font-bold\">{title}</h1>\n            {showCount && <span className=\"text-sm text-gray-500\">{count}</span>}\n        </div>\n    );\n}", "CodeBleu_score": 39.24814744452184}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t\n  if (!title && !showCount) return null;\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      {title && <h3 className=\"text-xl font-bold\">{title}</h3>}\n      {showCount && <span className=\"text-sm text-gray-500\">{count}</span>}\n    </div>\n  )\n}", "CodeBleu_score": 36.29858944985337}, {"code": "const ContentTitle: React.FC<ContentTitleProps> = ({title, showCount, count}) =>{\n\t  if (!title && !showCount) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex items-center justify-between\">\n      {title && <h2 className=\"text-lg font-medium text-gray-900\">{title}</h2>}\n      {showCount && <span className=\"text-sm text-gray-500\">{count}</span>}\n    </div>\n  );\n}", "CodeBleu_score": 42.912929695032865}]}
{"instance_id": "1d104e0b7fc7", "generation_result": [{"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if not args:\n        raise ValueError(\"At least one queryset must be provided\")\n    querysets = list(args)\n    if base_queryset is not None:\n        querysets.append(base_queryset)\n    if len(querysets) == 1:\n        return querysets[0]\n    result = querysets[0].union(*querysets[1:])\n    ids = result.order_by(\"id\").values_list(\"id\", flat=True)\n    if base_queryset is not None:\n        return base_queryset.filter(id__in=ids)\n    return result.model.objects.filter(id__in=ids)\n\n", "CodeBleu_score": 45.97794301163998}, {"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if base_queryset is None:\n        base_queryset = args[0].model.objects.all()\n    if len(args) == 1:\n        return args[0]\n    if len(args) == 0:\n        raise ValueError('At least one queryset must be provided')\n    querysets = [qs.order_by('pk') for qs in args]\n    union_qs = querysets[0].union(*querysets[1:])\n    ids = union_qs.values_list('pk', flat=True)\n    return base_queryset.filter(pk__in=ids)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "CodeBleu_score": 58.107320304882826}, {"code": "def union_queryset(*args, base_queryset=None)\n\t\n    if len(args) < 1:\n        raise ValueError(\"At least one queryset must be provided.\")\n\n    querysets = list(args)\n    if base_queryset is not None:\n        querysets.append(base_queryset)\n\n    ordered_querysets = [qs.order_by('pk') for qs in querysets]\n    combined_queryset = ordered_querysets.pop(0)\n\n    for qs in ordered_querysets:\n        combined_queryset = combined_queryset.union(qs)\n\n    combined_queryset = combined_queryset.order_by('pk')\n    ids = combined_queryset.values_list('pk', flat=True)\n\n    if base_queryset is not None:\n        return base_queryset.filter(pk__in=ids)\n    else:\n        model = querysets[0].model\n        return model.objects.filter(pk__in=ids)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "CodeBleu_score": 37.25061251659135}]}
{"instance_id": "96fe55f8e114", "generation_result": [{"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    if model is None:\n        model = self.model\n    lang = translation.get_language()\n    with translation.override(\"en\"):\n        resource_type = model._meta.verbose_name\n    operation_log, created = OperationLog.objects.get_or_create(\n        action=action,\n        resource_type=resource_type,\n        resource_ids=ids,\n        defaults=kwargs,\n    )\n    if not created:\n        operation_log.details = kwargs\n        operation_log.save()\n    activity_logs = []\n    for resource_id in ids:\n        activity_log = ActivityLog(\n            action=action,\n            resource_type=resource_type,\n            resource_id=resource_id,\n            details=detail,\n            operation_log=operation_log,\n        )\n        activity_logs.append(activity_log)\n    ActivityLog.objects.bulk_create(activity_logs)\n    translation.activate(lang)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "CodeBleu_score": 46.9107436707623}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    from django.utils.translation import override\n    from django.utils.translation import gettext_lazy as _\n    from django.contrib.contenttypes.models import ContentType\n    from django.contrib.admin.models import LogEntry\n    from django.contrib.auth.models import User\n    from django.db import transaction\n    from django.db.models import Q\n    from django.apps import apps\n    from django.conf import settings\n    from django.utils import timezone\n    from django.db.models.functions import Now\n    from django.contrib.admin.models import ADDITION, CHANGE, DELETION\n\n    if not ids:\n        return\n\n    if not model:\n        model = self.model\n\n    if isinstance(model, str):\n        model = apps.get_model(model)\n\n    content_type = ContentType.objects.get_for_model(model)\n\n    if action == \"create\":\n        action = ADDITION\n    elif action == \"update\":\n        action = CHANGE\n    elif action == \"delete\":\n        action = DELETION\n\n    with override(\"en\"):\n        resource_type = model._meta.verbose_name\n\n    with transaction.atomic():\n        operation_log = LogEntry.objects.filter(\n            content_type=content_type,\n            action_flag=action,\n            object_id__in=ids,\n            user=self.request.user,\n        ).first()\n\n        if operation_log:\n            operation_log.change_message = detail\n            operation_log.save()\n        else:\n            operation_log = LogEntry.objects.create(\n                content_type=content_type,\n                action_flag=action,\n                object_id=ids[0],\n                user=self.request.user,\n                change_message=detail,\n            )\n\n        activity_logs = []\n        for id in ids:\n            activity_log = ActivityLog(\n                content_type=content_type,\n                resource_type=resource_type,\n                resource_id=id,\n                action=action,\n                detail=detail,\n               ", "CodeBleu_score": 37.97478703292929}, {"code": "def record_logs(self, ids, action, detail, model=None, **kwargs)\n\t\n    from django.utils import translation\n    from django.utils.translation import gettext_lazy as _\n    from django.apps import apps\n    from django.contrib.contenttypes.models import ContentType\n    from django.db import transaction\n    from django.db.models import Q\n    from django.contrib.auth import get_user_model\n    from django.conf import settings\n    from django.utils import timezone\n    from django.core.exceptions import ObjectDoesNotExist\n    from django.utils.module_loading import import_string\n    from django.contrib.admin.models import LogEntry, ADDITION, CHANGE, DELETION\n    from django.contrib.admin.utils import quote\n    from django.contrib.admin.filters import (\n        AllValuesFieldListFilter,\n        BooleanFieldListFilter,\n        ChoicesFieldListFilter,\n        DateFieldListFilter,\n        RelatedFieldListFilter,\n        RelatedOnlyFieldListFilter,\n        SimpleListFilter,\n    )\n    from django.contrib.admin.options import InlineModelAdmin, ModelAdmin\n    from django.contrib.admin.helpers import AdminReadonlyField\n    from django.contrib.admin.utils import NestedObjects\n    from django.contrib.admin.views.main import ChangeList\n    from django.contrib.admin.views.decorators import staff_member_required\n    from django.contrib.admin.templatetags.admin_list import items_for_result, result_headers\n    from django.contrib.admin.templatetags.admin_modify import *\n    from django.contrib.admin.templatetags.admin_urls import *\n    from django.contrib.admin.sites import AdminSite\n    from django.contrib.admin.forms import AdminAuthenticationForm\n    from django.contrib.admin.checks import check_admin_app, check_generic_foreign_keys\n    from django.contrib.admin.apps import AdminConfig\n    from django.contrib.admin.decorators import register\n    from django.contrib.admin.filters import (\n        AllValuesFieldListFilter", "CodeBleu_score": 21.29634571443619}]}
{"instance_id": "9e851c424f45", "generation_result": [{"code": "def prepare_django_request(self, request)\n\t\n    return {\n        \"secure\": request.is_secure(),\n        \"http_host\": request.META[\"HTTP_HOST\"],\n        \"script_name\": request.META[\"PATH_INFO\"],\n        \"get_data\": request.GET.copy(),\n        \"post_data\": request.POST.copy(),\n    }\n\n", "CodeBleu_score": 41.37027234100973}, {"code": "def prepare_django_request(self, request)\n\t\n    return {\n        \"secure\": request.is_secure(),\n        \"http_host\": request.get_host(),\n        \"script_name\": request.path_info,\n        \"get_data\": request.GET.copy(),\n        \"post_data\": request.POST.copy(),\n    }", "CodeBleu_score": 34.690593397536155}, {"code": "def prepare_django_request(self, request)\n\t\n    return {\n        \"secure\": request.is_secure(),\n        \"http_host\": request.META[\"HTTP_HOST\"],\n        \"script_name\": request.META[\"PATH_INFO\"],\n        \"get_data\": request.GET.copy(),\n        \"post_data\": request.POST.copy(),\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "CodeBleu_score": 41.37027234100973}]}
{"instance_id": "dcea4bd482c4", "generation_result": [{"code": "function getUserLang() {\n\t    const cookie = document.cookie;\n    const djangoLang = 'django_language=';\n    const en = 'en';\n    const zh = 'zh';\n    const enUS = 'en-US';\n    const zhCN = 'zh-CN';\n\n    if (cookie.indexOf(djangoLang + en) > -1) {\n        return enUS;\n    } else if (cookie.indexOf(djangoLang + zh) > -1) {\n        return zhCN;\n    } else {\n        return zhCN;\n    }\n}", "CodeBleu_score": 35.57294862681651}, {"code": "function getUserLang() {\n\t    var lang = navigator.language || navigator.userLanguage;\n    var cookie = document.cookie;\n    var regex = /django_language=en/;\n    if (regex.test(cookie)) {\n        return 'en-US';\n    } else {\n        return 'zh-CN';\n    }\n}", "CodeBleu_score": 46.16160420979375}, {"code": "function getUserLang() {\n\t    var lang = 'zh-CN';\n    if (document.cookie.indexOf('django_language=en') > -1) {\n        lang = 'en-US';\n    }\n    return lang;\n}", "CodeBleu_score": 32.26741806343555}]}
{"instance_id": "fd6824a005d5", "generation_result": [{"code": "function reloadPage(){\n\t  setTimeout(function() {\n    location.reload();\n  }, 300);\n}", "CodeBleu_score": 28.276236988996505}, {"code": "function reloadPage(){\n\t    setTimeout(function () {\n        window.location.reload();\n    }, 300);\n}", "CodeBleu_score": 74.2782347872843}, {"code": "function reloadPage(){\n\t  setTimeout(function () {\n    location.reload();\n  }, 300);\n}", "CodeBleu_score": 37.73773704240379}]}
{"instance_id": "b32d5862b6b1", "generation_result": [{"code": "function fillKey(key){\n\t  const keyBuffer = Buffer.alloc(16);\n  keyBuffer.fill(key);\n  return keyBuffer;\n}", "CodeBleu_score": 15.767610065210446}, {"code": "function fillKey(key){\n\t    // Create a buffer with the same length as the key\n    const keyBuffer = Buffer.alloc(key.length);\n\n    // Copy the key into the buffer\n    keyBuffer.fill(key);\n\n    // Return the filled key\n    return keyBuffer;\n}", "CodeBleu_score": 18.6771330049029}, {"code": "function fillKey(key){\n\t  const filledKey = new Uint8Array(16);\n  const keyBytes = new TextEncoder().encode(key);\n  filledKey.set(keyBytes.slice(0, 16));\n  return filledKey;\n}", "CodeBleu_score": 22.855362660238164}]}
{"instance_id": "c839d19e0833", "generation_result": [{"code": "function rsaEncrypt(text, pubKey){\n\t  if (text === \"\") {\n    return text;\n  }\n  const encrypt = new JSEncrypt();\n  encrypt.setPublicKey(pubKey);\n  return encrypt.encrypt(text);\n}", "CodeBleu_score": 64.8616938562538}, {"code": "function rsaEncrypt(text, pubKey){\n\t  if (text === \"\") {\n    return text;\n  }\n  var encrypt = new JSEncrypt();\n  encrypt.setPublicKey(pubKey);\n  return encrypt.encrypt(text);\n}", "CodeBleu_score": 62.5424587427712}, {"code": "function rsaEncrypt(text, pubKey){\n\t  if (text === \"\") {\n    return text;\n  }\n  var encrypt = new JSEncrypt();\n  encrypt.setPublicKey(pubKey);\n  return encrypt.encrypt(text);\n}", "CodeBleu_score": 62.5424587427712}]}
{"instance_id": "c73bc91399b9", "generation_result": [{"code": "function checkAll(id, name){\n\t  var checkboxes = document.getElementsByName(name);\n  var masterCheckbox = document.getElementById(id);\n  for (var i = 0; i < checkboxes.length; i++) {\n    checkboxes[i].checked = masterCheckbox.checked;\n  }\n}", "CodeBleu_score": 42.83051228186701}, {"code": "function checkAll(id, name){\n\t    var checkboxes = document.getElementsByName(name);\n    var master = document.getElementById(id);\n    for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = master.checked;\n    }\n}", "CodeBleu_score": 43.275501575834234}, {"code": "function checkAll(id, name){\n\t  var checkboxes = document.getElementsByName(name);\n  var master = document.getElementById(id);\n\n  for (var i = 0, n = checkboxes.length; i < n; i++) {\n    checkboxes[i].checked = master.checked;\n  }\n}", "CodeBleu_score": 32.38193428850435}]}
{"instance_id": "5164f2c2d67e", "generation_result": [{"code": "function getCookie(name){\n\t    const cookies = document.cookie;\n    const cookieArray = cookies.split(';');\n\n    for (let i = 0; i < cookieArray.length; i++) {\n        const cookie = cookieArray[i].trim();\n        if (cookie.startsWith(name + '=')) {\n            const cookieValue = cookie.substring(name.length + 1);\n            return decodeURIComponent(cookieValue);\n        }\n    }\n\n    return null;\n}", "CodeBleu_score": 41.70281431247083}, {"code": "function getCookie(name){\n\t  const cookies = document.cookie;\n  const cookieArray = cookies.split(';');\n\n  for (let i = 0; i < cookieArray.length; i++) {\n    const cookie = cookieArray[i].trim();\n    if (cookie.startsWith(name + '=')) {\n      const cookieValue = cookie.substring(name.length + 1);\n      return decodeURIComponent(cookieValue);\n    }\n  }\n\n  return null;\n}", "CodeBleu_score": 39.4721157165549}, {"code": "function getCookie(name){\n\t  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    if (cookie.startsWith(name + '=')) {\n      return decodeURIComponent(cookie.substring(name.length + 1));\n    }\n  }\n  return null;\n}", "CodeBleu_score": 38.64732944533694}]}
{"instance_id": "7ce6dc0f1f24", "generation_result": [{"code": "def post(self, request)\n\t\n    self.model = get_image_model()\n    self.form = self.get_creation_form()\n\n    if self.request.POST.get(\"select_format\"):\n        return self.render_select_format_response(self.image, self.form)\n\n    if self.form.is_valid():\n        self.image = self.save_form(self.form)\n\n        duplicate_image = find_image_duplicates(\n            self.image, self.request.user, self.permission_policy\n        ).first()\n\n        if duplicate_image:\n            return self.render_duplicate_found_response(\n                request, self.image, duplicate_image\n            )\n\n        if self.request.GET.get(\"select_format\"):\n            return self.render_select_format_response(self.image, self.form)\n        else:\n            return self.get_chosen_response(self.image)\n\n    else:\n        return self.get_reshow_creation_form_response()\n\n", "CodeBleu_score": 41.61789777515874}, {"code": "def post(self, request)\n\t\n    self.model = get_image_model()\n    self.form = self.get_creation_form()\n    if self.form.is_valid():\n        image = self.save_form(self.form)\n        if self.request.GET.get(\"select_format\"):\n            return self.render_select_format_response(image, self.form)\n        else:\n            return self.get_chosen_response(image)\n    else:\n        return self.get_reshow_creation_form_response()\n\n", "CodeBleu_score": 27.510049415936738}, {"code": "def post(self, request)\n\t\n    self.model = get_image_model()\n    self.form = self.get_creation_form()\n    if self.form.is_valid():\n        new_image = self.save_form(self.form)\n        if self.request.GET.get(\"select_format\"):\n            return self.render_select_format_response(new_image, self.form)\n        else:\n            return self.get_chosen_response(new_image)\n    else:\n        return self.get_reshow_creation_form_response()\n\n", "CodeBleu_score": 24.658965772377368}]}
{"instance_id": "2ee66e343cd1", "generation_result": [{"code": "def _annotate_queryset(self, pages)\n\t\n    pages = pages.prefetch_related(\"content_type\", \"site_root\")\n    if self.request.user.has_perm(\"wagtailadmin.access_admin\"):\n        pages = pages.filter(live=True)\n    elif self.request.user.has_perm(\"wagtailadmin.view_draft\"):\n        pages = pages.filter(live=False)\n    else:\n        pages = pages.none()\n    if WORKFLOW_ENABLED:\n        pages = pages.prefetch_related(\"workflow_states\")\n    pages = pages.defer(\"body\")\n    pages = pages.annotate(root_state=Subquery(Page.objects.filter(id=OuterRef(\"site_root_id\")).values(\"state\")[:1]))\n    pages = pages.annotate(\n        approved_schedule=Subquery(\n            ApprovedSchedule.objects.filter(page_id=OuterRef(\"id\"), approved_go_live_at__lte=timezone.now()).values(\"approved_go_live_at\")[:1]\n        )\n    )\n    return pages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "CodeBleu_score": 45.056083537327375}, {"code": "def _annotate_queryset(self, pages)\n\t\n    from django.contrib.contenttypes.models import ContentType\n    from wagtail.core.models import Page\n    from wagtail.core.models import Site\n    from wagtail.core.query import PageQuerySet\n    from wagtail.core.workflows import get_workflows_for_model\n    from wagtail.core.workflows import Workflow\n    from wagtail.core.workflows import WorkflowState\n    from wagtail.core.workflows import WorkflowTask\n    from wagtail.core.workflows import WorkflowTaskState\n    from wagtail.core.workflows import WorkflowTransition\n    from wagtail.core.workflows import WorkflowTransitionTemporaryState\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateManager\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.core.workflows import WorkflowTransitionTemporaryStateQuerySet\n    from wagtail.", "CodeBleu_score": 5.158121030127254}, {"code": "def _annotate_queryset(self, pages)\n\t\n    if not self.request.user.has_perm(\"wagtailcore.explore_root\"):\n        pages = pages.none()\n    else:\n        pages = pages.select_related(\"content_type\", \"site_root\")\n        if getattr(settings, \"WAGTAIL_I18N_ENABLED\", False):\n            pages = pages.prefetch_related(\"translations\")\n        if getattr(settings, \"WAGTAIL_WORKFLOW_ENABLED\", False):\n            pages = pages.prefetch_related(\"workflow_states\")\n        if getattr(settings, \"WAGTAIL_SCHEDULING_ENABLED\", False):\n            pages = pages.prefetch_related(\"approved_schedule\")\n        pages = pages.defer_streamfield_references()\n        pages = pages.annotate(site_root_state=models.Case(models.When(site_root=models.OuterRef(\"site_root\"), then=models.Value(\"site_root\")), models.When(site_root__isnull=True, then=models.Value(\"site_root_not_set\")), output_field=models.CharField()))\n        pages = pages.annotate(approved_schedule_state=models.Case(models.When(approved_schedule__isnull=False, then=models.Value(\"scheduled\")), models.When(approved_schedule__isnull=True, then=models.Value(\"not_scheduled\")), output_field=models.CharField()))\n    return pages\n\n", "CodeBleu_score": 43.60840319662857}]}
{"instance_id": "970bf123b037", "generation_result": [{"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        queryset = self.filter_autocomplete(queryset, self.query_string)\n    if self.ordering is None:\n        queryset = queryset.order_by(\"-relevance\")\n    return queryset\n\n", "CodeBleu_score": 52.654845292071116}, {"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        queryset = queryset.autocomplete(self.query_string)\n        if not self.ordering:\n            queryset = queryset.order_by(\"-relevance\")\n    return queryset\n\n", "CodeBleu_score": 56.02390432436619}, {"code": "def search_queryset(self, queryset)\n\t\n    if self.is_searching:\n        queryset = queryset.filter(\n            Q(name__icontains=self.query_string)\n            | Q(description__icontains=self.query_string)\n        )\n        queryset = queryset.order_by(\"-relevance\")\n    else:\n        queryset = queryset.order_by(self.ordering)\n    return queryset\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "CodeBleu_score": 46.44882982523388}]}
{"instance_id": "b2058bd51dfa", "generation_result": [{"code": "def user_can_access_snippets(user)\n\t\n    for model in get_snippet_models():\n        if user.has_perm(model._meta.app_label + \".change\"):\n            return True\n    return False\n\n", "CodeBleu_score": 24.32340397602111}, {"code": "def user_can_access_snippets(user)\n\t\n    for model in get_snippet_models():\n        if user.has_perm(\n            \"{}.add_{}\".format(model._meta.app_label, model._meta.model_name)\n        ) or user.has_perm(\n            \"{}.change_{}\".format(model._meta.app_label, model._meta.model_name)\n        ) or user.has_perm(\n            \"{}.delete_{}\".format(model._meta.app_label, model._meta.model_name)\n        ) or user.has_perm(\n            \"{}.view_{}\".format(model._meta.app_label, model._meta.model_name)\n        ):\n            return True\n    return False\n\n", "CodeBleu_score": 38.20603155356212}, {"code": "def user_can_access_snippets(user)\n\t\n    for model in get_snippet_models():\n        permission_label = get_permission_label(model._meta.app_label, model._meta.model_name)\n        if user.has_perm(permission_label):\n            return True\n    return False\n\n", "CodeBleu_score": 33.92354895002851}]}
{"instance_id": "bf09fb693900", "generation_result": [{"code": "def get_auth_backends(self, request)\n\t\n    auth_backends = []\n\n    for name, url in settings.LOGIN_URLS.items():\n        params = {}\n\n        if 'next' in request.GET:\n            params['next'] = request.GET['next']\n\n        if name == 'saml':\n            # Generate separate entries for each IDP\n            for idp in settings.SAML_IDPS:\n                idp_params = params.copy()\n                idp_params['idp'] = idp['name']\n                auth_backends.append(\n                    self.gen_auth_data(f'{name} ({idp[\"name\"]})', url, idp_params)\n                )\n        else:\n            auth_backends.append(self.gen_auth_data(name, url, params))\n\n    return auth_backends\n\n", "CodeBleu_score": 40.96716330521289}, {"code": "def get_auth_backends(self, request)\n\t\n    backends = []\n    for name, backend in settings.AUTHENTICATION_BACKENDS:\n        if name == 'saml2':\n            # SAML backends with multiple identity providers\n            for idp in backend.get_idp_list():\n                params = {\n                    'backend': name,\n                    'idp': idp['entity_id'],\n                    'next': request.GET.get('next', ''),\n                }\n                display_name = f'{backend.get_display_name()} ({idp[\"name\"]})'\n                backends.append(self.gen_auth_data(name, backend.get_login_url(), params))\n        else:\n            # Other backends\n            params = {\n                'backend': name,\n                'next': request.GET.get('next', ''),\n            }\n            backends.append(self.gen_auth_data(name, backend.get_login_url(), params))\n    return backends\n\n", "CodeBleu_score": 32.15009038163138}, {"code": "def get_auth_backends(self, request)\n\t\n    auth_backends = []\n    for name, backend in settings.AUTHENTICATION_BACKENDS:\n        url = reverse('social:begin', args=[name])\n        params = {\n            'next': request.GET.get('next', '')\n        }\n\n        # For SAML backends with multiple identity providers, generate separate entries for each IDP\n        if name == 'saml':\n            for idp in settings.SAML_IDP_METADATA:\n                idp_params = params.copy()\n                idp_params['idp'] = idp['idp_name']\n                auth_backends.append(self.gen_auth_data(name, url, idp_params))\n        else:\n            auth_backends.append(self.gen_auth_data(name, url, params))\n\n    return auth_backends\n\n", "CodeBleu_score": 42.9663802954292}]}
{"instance_id": "ea59163b25cc", "generation_result": [{"code": "def as_sql(self, qn, connection)\n\t\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s @> %s' % (lhs, rhs), params\n\n\n\n\n", "CodeBleu_score": 61.022275663242574}, {"code": "def as_sql(self, qn, connection)\n\t\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s @> %s' % (lhs, rhs), params\n\n", "CodeBleu_score": 61.022275663242574}, {"code": "def as_sql(self, qn, connection)\n\t\n    lhs, lhs_params = self.process_lhs(qn, connection)\n    rhs, rhs_params = self.process_rhs(qn, connection)\n    params = lhs_params + rhs_params\n    return '%s @> %s' % (lhs, rhs), params\n\n", "CodeBleu_score": 61.022275663242574}]}
{"instance_id": "6658ddec6820", "generation_result": [{"code": "def get_model_urls(app_label, model_name)\n\t\n    from django.apps import apps\n    from django.urls import path\n    from django.views.generic import RedirectView\n    model = apps.get_model(app_label, model_name)\n    view_configs = model._meta.view_configs\n    if not view_configs:\n        raise ValueError(\"No views are registered for model '%s.%s'.\" % (app_label, model_name))\n    paths = []\n    for view_config in view_configs:\n        view_class = view_config.view_class\n        if isinstance(view_class, str):\n            view_class = import_string(view_class)\n        if not issubclass(view_class, View):\n            raise ValueError(\"View class '%s' is not a subclass of 'django.views.generic.View'.\" % view_class.__name__)\n        if view_config.name == 'default':\n            paths.append(path('', view_class.as_view(), name='%s_%s_list' % (app_label, model_name)))\n        else:\n            paths.append(path('%s/' % view_config.name, view_class.as_view(), name='%s_%s_%s' % (app_label, model_name, view_config.name)))\n    return paths\n\n", "CodeBleu_score": 26.56548105089311}, {"code": "def get_model_urls(app_label, model_name)\n\t\n    from django.urls import URLPattern, URLResolver\n    from django.urls.resolvers import RegexPattern\n    from django.utils.module_loading import import_string\n    from django.utils.regex_helper import normalize\n    from django.views.generic import View\n\n    def _get_view_from_string(view_path):\n        if \".\" not in view_path:\n            raise ValueError(\n                f\"Cannot import '{view_path}'. \"\n                \"Please provide a full Python path to the view.\"\n            )\n        view_module, view_name = view_path.rsplit(\".\", 1)\n        view = import_string(view_module)\n        if hasattr(view, \"as_view\"):\n            view = view.as_view()\n        elif isinstance(view, type) and issubclass(view, View):\n            view = view()\n        return view\n\n    def _get_view_from_dict(view_dict):\n        if \"view\" not in view_dict:\n            raise ValueError(\"No 'view' key in view dictionary\")\n        view = view_dict[\"view\"]\n        if isinstance(view, str):\n            view = _get_view_from_string(view)\n        elif not callable(view):\n            raise ValueError(\"View must be a callable\")\n        return view\n\n    def _get_view_from_path(view_path):\n        if callable(view_path):\n            return view_path\n        elif isinstance(view_path, str):\n            return _get_view_from_string(view_path)\n        elif isinstance(view_path, dict):\n            return _get_view_from_dict(view_path)\n        else:\n            raise ValueError(\"Invalid view path\")\n\n    def _get_view_kwargs(view_path):\n        if isinstance(view_path, dict):\n            return view_path.get(\"kwargs\", {})\n        return {}\n\n    def _get_view_name(view_path):\n        if isinstance(view_path, dict):\n            return view_path.get(\"name\", \"\")\n", "CodeBleu_score": 25.899741571570704}, {"code": "def get_model_urls(app_label, model_name)\n\t\n    from django.urls import path\n    from django.views.generic import View\n    from django.utils.module_loading import import_string\n    from django.urls.resolvers import URLPattern\n    from django.urls.resolvers import URLResolver\n    from django.urls.resolvers import RoutePattern\n    from django.urls.resolvers import RegexPattern\n    from django.urls.resolvers import ResolverMatch\n    from django.urls.resolvers import RegexURLPattern\n    from django.urls.resolvers import RegexURLResolver\n    from django.urls.resolvers import LocaleRegexURLResolver\n    from django.urls.resolvers import URLResolver as DjangoURLResolver\n    from django.urls.resolvers import RegexURLResolver as DjangoRegexURLResolver\n    from django.urls.resolvers import LocaleRegexURLResolver as DjangoLocaleRegexURLResolver\n    from django.urls.resolvers import URLResolver as DjangoURLResolver\n    from django.urls.resolvers import RegexURLResolver as DjangoRegexURLResolver\n    from django.urls.resolvers import LocaleRegexURLResolver as DjangoLocaleRegexURLResolver\n    from django.urls.resolvers import URLResolver as DjangoURLResolver\n    from django.urls.resolvers import RegexURLResolver as DjangoRegexURLResolver\n    from django.urls.resolvers import LocaleRegexURLResolver as DjangoLocaleRegexURLResolver\n    from django.urls.resolvers import URLResolver as DjangoURLResolver\n    from django.urls.resolvers import RegexURLResolver as DjangoRegexURLResolver\n    from django.urls.resolvers import LocaleRegexURLResolver as DjangoLocaleRegexURLResolver\n    from django.urls.resolvers import URLResolver as DjangoURLResolver\n    from django.urls.resolvers import RegexURLResolver as DjangoRegexURLResolver\n    from django.urls.resolvers import LocaleRegexURLResolver as DjangoLocaleRegexURLResolver\n    from django.urls.", "CodeBleu_score": 5.825248006631886}]}
{"instance_id": "9f4c69dfe312", "generation_result": [{"code": "def run_validators(instance, validators)\n\t\n    request = get_request()\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_class = import_string(validator)\n        elif isinstance(validator, dict):\n            validator_class = CustomValidator(**validator)\n        else:\n            raise ImproperlyConfigured(\n                \"Validators must be strings or dictionaries\"\n            )\n        if not issubclass(validator_class, CustomValidator):\n            raise ImproperlyConfigured(\n                \"Validator must be a subclass of CustomValidator\"\n            )\n        validator_class(instance, request)\n\n\n\n", "CodeBleu_score": 30.11058345581028}, {"code": "def run_validators(instance, validators)\n\t\n    request = instance.request\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_class = import_string(validator)\n            validator_instance = validator_class()\n        elif isinstance(validator, dict):\n            validator_instance = CustomValidator(**validator)\n        else:\n            raise ImproperlyConfigured(\n                'Validator must be a subclass of CustomValidator or a dictionary.'\n            )\n        validator_instance.apply_validator(instance, request)", "CodeBleu_score": 30.275116122122714}, {"code": "def run_validators(instance, validators)\n\t\n    request = instance.request\n    for validator in validators:\n        if isinstance(validator, str):\n            validator_class = import_string(validator)\n        elif isinstance(validator, dict):\n            validator_class = CustomValidator\n            validator = validator_class(**validator)\n        elif not issubclass(validator, CustomValidator):\n            raise ImproperlyConfigured(\n                f\"{validator} is not a subclass of CustomValidator\"\n            )\n        validator.apply_to_instance(instance, request)\n\n\n\n", "CodeBleu_score": 31.002042357519162}]}
{"instance_id": "0b2ff7fe76f6", "generation_result": [{"code": "export function playMedia(destiny){\n\t    const panel = document.getElementById(destiny);\n    if (!panel) {\n        console.warn(`Panel with ID ${destiny} not found`);\n        return;\n    }\n\n    const videoElements = panel.querySelectorAll('video[data-autoplay]');\n    videoElements.forEach(element => {\n        if (element.play) {\n            element.play();\n        }\n    });\n\n    const audioElements = panel.querySelectorAll('audio[data-autoplay]');\n    audioElements.forEach(element => {\n        if (element.play) {\n            element.play();\n        }\n    });\n\n    const youtubeIframes = panel.querySelectorAll('iframe[data-autoplay]');\n    youtubeIframes.forEach(element => {\n        if (element.src.includes('youtube.com/embed')) {\n            element.onload = () => {\n                playYoutube(element);\n            };\n        }\n    });\n}", "CodeBleu_score": 41.33220515759051}, {"code": "export function playMedia(destiny){\n\t    const panel = document.getElementById(destiny);\n    const media = panel.querySelectorAll('[data-autoplay]');\n\n    media.forEach(element => {\n        if (element.tagName === 'VIDEO' || element.tagName === 'AUDIO') {\n            element.play();\n        } else if (element.tagName === 'IFRAME' && element.src.includes('youtube.com')) {\n            element.onload = () => {\n                playYoutube(element);\n            };\n        }\n    });\n}", "CodeBleu_score": 36.64808627715266}, {"code": "export function playMedia(destiny){\n\t    const panel = document.querySelector(`#${destiny}`);\n    const videoElements = panel.querySelectorAll('[data-autoplay]');\n    videoElements.forEach((element) => {\n        if (element.tagName === 'VIDEO' || element.tagName === 'AUDIO') {\n            element.play();\n        } else if (element.tagName === 'IFRAME') {\n            const src = element.getAttribute('src');\n            if (src.includes('youtube.com')) {\n                element.onload = () => {\n                    playYoutube(element);\n                };\n            }\n        }\n    });\n}", "CodeBleu_score": 40.39173406683293}]}
{"instance_id": "12d28719c647", "generation_result": [{"code": "export function stopMedia(destiny){\n\t  const targetPanel = getSlideOrSection(destiny);\n  if (!targetPanel) return;\n  const mediaElements = targetPanel.querySelectorAll('video, audio');\n  mediaElements.forEach((mediaElement) => {\n    if (!mediaElement.dataset.keepplaying) {\n      mediaElement.pause();\n    }\n  });\n  const youtubeIframes = targetPanel.querySelectorAll(\n    'iframe[src*=\"youtube.com\"]'\n  );\n  youtubeIframes.forEach((iframe) => {\n    if (!iframe.dataset.keepplaying) {\n      const videoId = iframe.src.split('/').pop();\n      const message = {\n        event: 'command',\n        func: 'pauseVideo',\n        args: [],\n      };\n      iframe.contentWindow.postMessage(\n        JSON.stringify(message),\n        'https://www.youtube.com'\n      );\n    }\n  });\n}", "CodeBleu_score": 41.60952700110903}, {"code": "export function stopMedia(destiny){\n\t  const panel = getSlideOrSection(destiny);\n\n  if (panel) {\n    const mediaElements = panel.querySelectorAll(\"video, audio\");\n    const iframes = panel.querySelectorAll(\"iframe\");\n\n    mediaElements.forEach((element) => {\n      if (!element.hasAttribute(\"data-keepplaying\")) {\n        element.pause();\n      }\n    });\n\n    iframes.forEach((iframe) => {\n      if (iframe.src.includes(\"youtube.com/embed/\")) {\n        if (!iframe.hasAttribute(\"data-keepplaying\")) {\n          const iframeDocument = iframe.contentWindow.document;\n          iframeDocument.postMessage(\n            '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\n            \"*\"\n          );\n        }\n      }\n    });\n  }\n}", "CodeBleu_score": 47.42354401915505}, {"code": "export function stopMedia(destiny){\n\t  let target = getSlideOrSection(destiny);\n  let videos = target.querySelectorAll(\"video\");\n  let audios = target.querySelectorAll(\"audio\");\n  let youtubes = target.querySelectorAll(\"iframe[src*='youtube.com']\");\n\n  videos.forEach((video) => {\n    if (!video.hasAttribute(\"data-keepplaying\")) {\n      video.pause();\n    }\n  });\n\n  audios.forEach((audio) => {\n    if (!audio.hasAttribute(\"data-keepplaying\")) {\n      audio.pause();\n    }\n  });\n\n  youtubes.forEach((youtube) => {\n    if (!youtube.hasAttribute(\"data-keepplaying\")) {\n      let iframe = youtube.contentWindow;\n      iframe.postMessage(\n        '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\n        \"*\"\n      );\n    }\n  });\n}", "CodeBleu_score": 43.13206279462685}]}
{"instance_id": "e0d58d76f87e", "generation_result": [{"code": "export function createSlideArrows(section){\n\t  const slideWrapper = section.querySelector('.slide-wrapper');\n  const prevArrow = document.createElement('div');\n  const nextArrow = document.createElement('div');\n\n  prevArrow.classList.add('arrow', 'arrow-prev');\n  nextArrow.classList.add('arrow', 'arrow-next');\n\n  if (!section.config.loopHorizontal) {\n    prevArrow.classList.add('arrow-disabled');\n  }\n\n  prevArrow.innerHTML = arrowHTML;\n  nextArrow.innerHTML = arrowHTML;\n\n  slideWrapper.appendChild(prevArrow);\n  slideWrapper.appendChild(nextArrow);\n\n  const arrowColor = section.config.arrowColor;\n  const arrowColorHover = section.config.arrowColorHover;\n  const arrowColorDisabled = section.config.arrowColorDisabled;\n\n  if (arrowColor) {\n    prevArrow.style.color = arrowColor;\n    nextArrow.style.color = arrowColor;\n  }\n\n  if (arrowColorHover) {\n    prevArrow.style.setProperty('--arrow-color-hover', arrowColorHover);\n    nextArrow.style.setProperty('--arrow-color-hover', arrowColorHover);\n  }\n\n  if (arrowColorDisabled) {\n    prevArrow.style.setProperty('--arrow-color-disabled', arrowColorDisabled);\n    nextArrow.style.setProperty('--arrow-color-disabled', arrowColorDisabled);\n  }\n}", "CodeBleu_score": 25.301480638242612}, {"code": "export function createSlideArrows(section){\n\t  const { slideWrapper, slideConfig } = section;\n\n  const prevArrow = document.createElement(\"div\");\n  prevArrow.classList.add(\"slide-arrow\", \"slide-prev\");\n  prevArrow.innerHTML = slideConfig.arrows.prev;\n  slideWrapper.append(prevArrow);\n\n  const nextArrow = document.createElement(\"div\");\n  nextArrow.classList.add(\"slide-arrow\", \"slide-next\");\n  nextArrow.innerHTML = slideConfig.arrows.next;\n  slideWrapper.append(nextArrow);\n\n  if (slideConfig.horizontalLoop === false) {\n    prevArrow.classList.add(\"slide-arrow--hidden\");\n  }\n\n  const arrowColor = slideConfig.arrows.color;\n  if (arrowColor) {\n    prevArrow.style.color = arrowColor;\n    nextArrow.style.color = arrowColor;\n  }\n}", "CodeBleu_score": 20.712116037576077}, {"code": "export function createSlideArrows(section){\n\t  const { slideWrapper, slideConfig } = section;\n  const { arrowColor, horizontalLoop } = slideConfig;\n\n  const arrowTemplate = (className, arrowDirection) => `\n    <div class=\"slide-arrow ${className}\">\n      <svg class=\"arrow-${arrowDirection}\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M25 16L9 31M25 16L9 1\" stroke=\"${arrowColor}\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n    </div>\n  `;\n\n  const prevArrow = arrowTemplate('slide-arrow-prev', 'left');\n  const nextArrow = arrowTemplate('slide-arrow-next', 'right');\n\n  slideWrapper.insertAdjacentHTML('beforeend', prevArrow);\n  slideWrapper.insertAdjacentHTML('beforeend', nextArrow);\n\n  const prevArrowElement = slideWrapper.querySelector('.slide-arrow-prev');\n  const nextArrowElement = slideWrapper.querySelector('.slide-arrow-next');\n\n  prevArrowElement.style.color = arrowColor;\n  nextArrowElement.style.color = arrowColor;\n\n  if (!horizontalLoop) {\n    prevArrowElement.style.display = 'none';\n  }\n}", "CodeBleu_score": 22.158886096393164}]}
{"instance_id": "09898985b216", "generation_result": [{"code": "function slideArrowHandler(){\n\t  const section = this.closest(\"section\");\n  const isPrev = this.classList.contains(SLIDES_PREV);\n  const isNext = this.classList.contains(SLIDES_NEXT);\n\n  if (isPrev && !state.leftScroll) {\n    state.leftScroll = true;\n    state.rightScroll = false;\n    section.dispatchEvent(new CustomEvent(MOVE_SLIDE_LEFT));\n  } else if (isNext && !state.rightScroll) {\n    state.leftScroll = false;\n    state.rightScroll = true;\n    section.dispatchEvent(new CustomEvent(MOVE_SLIDE_RIGHT));\n  }\n}", "CodeBleu_score": 30.012914295744487}, {"code": "function slideArrowHandler(){\n\t    const closestSection = this.closest('.slides');\n    if (this.classList.contains(SLIDES_PREV)) {\n        if (state.leftScrollAllowed) {\n            state.leftScrollAllowed = false;\n            state.rightScrollAllowed = true;\n            closestSection.dispatchEvent(new CustomEvent('moveSlideLeft'));\n        }\n    } else {\n        if (state.rightScrollAllowed) {\n            state.leftScrollAllowed = true;\n            state.rightScrollAllowed = false;\n            closestSection.dispatchEvent(new CustomEvent('moveSlideRight'));\n        }\n    }\n}", "CodeBleu_score": 34.77686875978767}, {"code": "function slideArrowHandler(){\n\t  const section = this.closest(\"section\");\n  const isPrev = this.classList.contains(SLIDES_PREV);\n\n  if (isPrev && !state.isLeftScrollDisabled) {\n    state.isLeftScrollDisabled = true;\n    triggerCustomEvent(MOVE_SLIDE_LEFT, { section });\n  } else if (!isPrev && !state.isRightScrollDisabled) {\n    state.isRightScrollDisabled = true;\n    triggerCustomEvent(MOVE_SLIDE_RIGHT, { section });\n  }\n}", "CodeBleu_score": 29.587057661554354}]}
{"instance_id": "69ef3030fb15", "generation_result": [{"code": "export function addSlidesNavigation(section){\n\t  const { slides, slidesNavigation, slidesNavigationPosition } = section.dataset;\n  const slidesNavigationContainer = document.createElement(\"div\");\n  slidesNavigationContainer.setAttribute(\n    \"class\",\n    `glide__bullets glide__bullets--${slidesNavigationPosition}`\n  );\n  slidesNavigationContainer.setAttribute(\"data-glide-el\", \"controls[nav]\");\n  section.append(slidesNavigationContainer);\n\n  for (let i = 0; i < slides; i++) {\n    const slidesNavigationItem = document.createElement(\"button\");\n    i === 0 && slidesNavigationItem.classList.add(\"glide__bullet--active\");\n    slidesNavigationItem.setAttribute(\"data-glide-dir\", `=${i}`);\n    slidesNavigationContainer.append(slidesNavigationItem);\n  }\n}", "CodeBleu_score": 21.452076476125505}, {"code": "export function addSlidesNavigation(section){\n\t  const slides = section.querySelectorAll('.slide');\n  const navigation = document.createElement('div');\n  navigation.classList.add('slides-navigation');\n  section.appendChild(navigation);\n\n  const config = {\n    position: 'bottom-right',\n    color: 'white',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  };\n\n  const position = config.position.split('-');\n  const verticalPosition = position[0];\n  const horizontalPosition = position[1];\n\n  navigation.style.position = 'absolute';\n  navigation.style.backgroundColor = config.backgroundColor;\n  navigation.style.color = config.color;\n\n  if (verticalPosition === 'top') {\n    navigation.style.top = '0';\n  } else {\n    navigation.style.bottom = '0';\n  }\n\n  if (horizontalPosition === 'left') {\n    navigation.style.left = '0';\n  } else {\n    navigation.style.right = '0';\n  }\n\n  slides.forEach((slide, index) => {\n    const bullet = document.createElement('div');\n    bullet.classList.add('slides-navigation-bullet');\n    bullet.addEventListener('click', () => {\n      section.querySelector('.slide.active').classList.remove('active');\n      slide.classList.add('active');\n      updateNavigation(index);\n    });\n    navigation.appendChild(bullet);\n  });\n\n  updateNavigation(0);\n\n  function updateNavigation(activeIndex) {\n    const bullets = navigation.querySelectorAll('.slides-navigation-bullet');\n    bullets.forEach((bullet, index) => {\n      if (index === activeIndex) {\n        bullet.classList.add('active');\n      } else {\n        bullet.classList.remove('active');\n      }\n    });\n  }\n}", "CodeBleu_score": 24.194569000651033}, {"code": "export function addSlidesNavigation(section){\n\t", "CodeBleu_score": 0.2614893410616341}]}
{"instance_id": "d86cd1fd918a", "generation_result": [{"code": "function menuItemsHandler(e){\n\t  const anchor = e.currentTarget.getAttribute('href');\n  if (anchor && anchor !== '#' && anchor.indexOf('#') > -1) {\n    e.preventDefault();\n    this.setState({\n      scrollTrigger: 'menu',\n    });\n    if (this.props.menuExists && this.props.anchorsAreLocked) {\n      this.props.onMenuClick(anchor);\n    }\n  }\n}", "CodeBleu_score": 37.51155813268671}, {"code": "function menuItemsHandler(e){\n\t  const menu = this.$refs.menu;\n  const anchor = e.target.dataset.anchor;\n\n  if (menu) {\n    if (menu.isLocked || !anchor) {\n      e.preventDefault();\n      this.$emit(\"onMenuClick\", anchor);\n    }\n  }\n}", "CodeBleu_score": 28.723670068678643}, {"code": "function menuItemsHandler(e){\n\t  const anchor = e.target.getAttribute('data-anchor');\n\n  if (!anchor) {\n    return;\n  }\n\n  if (this.menuExists && this.anchorsLocked) {\n    e.preventDefault();\n    this.$emit('onMenuClick', anchor);\n  }\n}", "CodeBleu_score": 30.66212891329525}]}
{"instance_id": "19fb16a46144", "generation_result": [{"code": "export function setScrolling(element, val){\n\t  const autoScroll = this.autoScroll;\n  const scrollbar = this.scrollbar;\n  const isWindow = element === window;\n  const isWrapper = element.classList.contains(SLIDES_WRAPPER);\n\n  if (autoScroll && !scrollbar && !isWindow && isWrapper) {\n    element.scrollLeft = val;\n  } else {\n    element.scrollTo(val, 0);\n  }\n}", "CodeBleu_score": 28.189241904303852}, {"code": "export function setScrolling(element, val){\n\t  const options = this.options;\n  const isAutoScrolling = this.isAutoScrolling;\n  const hasScrollbar = this.hasScrollbar;\n  if (isAutoScrolling || hasScrollbar) {\n    if (element !== window && element.classList.contains(options.classes.SLIDES_WRAPPER)) {\n      element.scrollLeft = val;\n    } else {\n      element.scrollTo(val, 0);\n    }\n  } else if (element !== window) {\n    element.style.top = `${val}px`;\n  }\n}", "CodeBleu_score": 30.800729277593362}, {"code": "export function setScrolling(element, val){\n\t  const { autoScroll, scrollbar } = this.options;\n  if (autoScroll && !scrollbar) {\n    if (element !== this.window && element.classList.contains(this.classes.SLIDES_WRAPPER)) {\n      element.scrollLeft = val;\n    } else {\n      element.scrollTo(val, 0);\n    }\n  } else {\n    element.style.top = `${val}px`;\n  }\n}", "CodeBleu_score": 28.301315715012432}]}
{"instance_id": "09a10e1f1af9", "generation_result": [{"code": "function activateMenuElement(name){\n\t    let menuOptions = document.querySelectorAll('[data-menuanchor]');\n    if (menuOptions.length > 0) {\n        menuOptions.forEach(function (option) {\n            if (option.getAttribute('data-menuanchor') === name) {\n                let activeMenu = document.querySelector('[data-menuanchor].active');\n                if (activeMenu) {\n                    activeMenu.classList.remove('active');\n                }\n                option.classList.add('active');\n            }\n        });\n    }\n}", "CodeBleu_score": 32.10523676409909}, {"code": "function activateMenuElement(name){\n\t  const menuOptions = document.querySelectorAll('.menu-option');\n  const menuOptionsArray = Array.from(menuOptions);\n\n  if (menuOptionsArray.length > 0 && name) {\n    const activeMenuOption = document.querySelector('.menu-option.active');\n    if (activeMenuOption) {\n      activeMenuOption.classList.remove('active');\n    }\n\n    const newActiveMenuOption = document.querySelector(`.menu-option[data-menuanchor=\"${name}\"]`);\n    if (newActiveMenuOption) {\n      newActiveMenuOption.classList.add('active');\n    }\n  }\n}", "CodeBleu_score": 26.310722968657878}, {"code": "function activateMenuElement(name){\n\t  const menuOptions = document.querySelectorAll(\".menu-option\");\n\n  if (!menuOptions || menuOptions.length === 0) {\n    return;\n  }\n\n  menuOptions.forEach((option) => {\n    const anchor = option.getAttribute(\"data-menuanchor\");\n\n    if (anchor === name) {\n      option.classList.add(\"active\");\n    } else {\n      option.classList.remove(\"active\");\n    }\n  });\n}", "CodeBleu_score": 27.61074171620984}]}
{"instance_id": "4556a956fd7c", "generation_result": [{"code": "export function lazyLoadOthers(){\n\t    if (!state.lazyLoad) return;\n\n    if (state.autoHeight || (state.responsive && state.responsiveAutoHeight)) {\n        var sections = document.querySelectorAll('[data-section]');\n\n        for (var i = 0; i < sections.length; i++) {\n            var section = sections[i];\n            var sectionId = section.getAttribute('data-section');\n\n            if (state.activeSection !== sectionId && isSectionInViewport(section)) {\n                state.activeSection = sectionId;\n                lazyLoadSection(sectionId);\n            }\n        }\n    }\n}", "CodeBleu_score": 28.61568348598631}, {"code": "export function lazyLoadOthers(){\n\t    if (!state.lazyLoad) {\n        return;\n    }\n\n    if (state.autoHeight || state.responsiveAutoHeight) {\n        for (var i = 0; i < state.sections.length; i++) {\n            var section = state.sections[i];\n            if (section.isActive || section.isInViewport) {\n                continue;\n            }\n\n            if (isSectionInViewport(section.element)) {\n                section.isInViewport = true;\n                section.isActive = true;\n                section.element.style.height = 'auto';\n                section.element.style.overflow = 'visible';\n                section.element.style.visibility = 'visible';\n                state.activeSection = section;\n                state.activeSectionIndex = i;\n                state.currentSectionIndex = i;\n                section.element.dispatchEvent(new Event('scrollActive'));\n                section.element.dispatchEvent(new Event('scrollActiveSection'));\n                section.element.dispatchEvent(new Event('scrollActiveSectionIndex'));\n                section.element.dispatchEvent(new Event('scrollCurrentSection'));\n                section.element.dispatchEvent(new Event('scrollCurrentSectionIndex'));\n                break;\n            }\n        }\n    }\n}", "CodeBleu_score": 14.589075587543904}, {"code": "export function lazyLoadOthers(){\n\t    if (state.lazyLoading && (state.hasAutoHeight || state.responsiveAutoHeight)) {\n        state.sections.forEach(function (section) {\n            if (!section.isActive && isSectionInViewport(section.el)) {\n                section.isActive = true;\n                section.el.classList.add('active');\n            }\n        });\n    }\n}", "CodeBleu_score": 19.28240956605345}]}
{"instance_id": "a4324e094376", "generation_result": [{"code": "function keepSlidesPosition(){\n\t    const activeSlides = getActiveSlides();\n    activeSlides.forEach(slide => {\n        silentLandscapeScroll(slide, 'internal');\n    });\n}", "CodeBleu_score": 24.89220306884321}, {"code": "function keepSlidesPosition(){\n\t    var activeSlides = getActiveSlides();\n    activeSlides.forEach(function (slide) {\n        silentLandscapeScroll(slide, 'internal');\n    });\n}", "CodeBleu_score": 29.577807644304222}, {"code": "function keepSlidesPosition(){\n\t    const activeSlides = getActiveSlides();\n    activeSlides.forEach((slide) => {\n        silentLandscapeScroll(slide, 'internal');\n    });\n}", "CodeBleu_score": 24.924933144423832}]}
{"instance_id": "9eb664182655", "generation_result": [{"code": "export function updateStructuralState(){\n\t    const sections = getSections(state.container);\n    const visibleSections = sections.filter(isVisible);\n    const sectionPanels = visibleSections.map((section, index) => {\n        return new SectionPanel(section, index);\n    });\n    const slides = getSlides(visibleSections);\n    const slidePanels = slides.map((slide, index) => {\n        return new SlidePanel(slide, index);\n    });\n    const prevActiveSectionIndex = getPrevActivePanelIndex(state.activeSection);\n    const prevActiveSlideIndex = getPrevActivePanelIndex(state.activeSlide);\n    state.sections = sectionPanels;\n    state.slides = slidePanels;\n    state.activeSectionIndex = sectionPanels.length > 0 ? 0 : null;\n    state.activeSlideIndex = slidePanels.length > 0 ? 0 : null;\n    state.prevActiveSectionIndex = prevActiveSectionIndex;\n    state.prevActiveSlideIndex = prevActiveSlideIndex;\n}", "CodeBleu_score": 38.94749925417481}, {"code": "export function updateStructuralState(){\n\t    // Get all section items\n    const sectionItems = getSectionItems(state.container);\n\n    // Filter visible sections\n    const visibleSections = sectionItems.filter(item => isVisible(item));\n\n    // Create SectionPanel objects for each visible section\n    const sections = visibleSections.map((item, index) => {\n        const section = new SectionPanel(item, index);\n        section.update();\n        return section;\n    });\n\n    // Gather slides from visible sections\n    const slides = sections.reduce((acc, section) => acc.concat(section.slides), []);\n\n    // Update state\n    state.update({\n        numberOfSections: sections.length,\n        numberOfSlides: slides.length,\n        sections,\n        slides,\n        prevActiveSectionIndex: getPrevActivePanelIndex(state.activeSection),\n        prevActiveSlideIndex: getPrevActivePanelIndex(state.activeSlide),\n    });\n}", "CodeBleu_score": 36.75189794630547}, {"code": "export function updateStructuralState(){\n\t    const sectionItems = getSectionItems(container);\n    const visibleSections = sectionItems.filter(section => isVisible(section));\n    const panels = visibleSections.map(section => new SectionPanel(section));\n    const slides = panels.flatMap(panel => panel.slides);\n    state.numSections = visibleSections.length;\n    state.numSlides = slides.length;\n    state.sections = panels;\n    state.slides = slides;\n    state.panels = panels.flatMap(panel => panel.panels);\n    state.prevActiveSectionIndex = state.activeSection ? state.activeSection.index() : null;\n    state.prevActiveSlideIndex = state.activeSlide ? state.activeSlide.index() : null;\n}", "CodeBleu_score": 33.49940374081872}]}
{"instance_id": "2b3c1077db45", "generation_result": [{"code": "function performHorizontalMove(slides, v, fireCallback){\n\t", "CodeBleu_score": 1.522250845899262}, {"code": "function performHorizontalMove(slides, v, fireCallback){\n\t    if(getOptions().css3){\n        //3D CSS3\n        setState({\n            translate: -v.destiny.x,\n            slideMoving: true\n        });\n\n        //waiting for the slide to move\n        setTimeout(function(){\n            //moving the slides\n            setState({\n                translate: 0,\n                slideMoving: false\n            });\n\n            //if the site is not just resizing and readjusting the slides\n            if(!v.localIsResizing){\n                if(utils.isFunction( getOptions().afterSlideLoad )){\n                    fireCallback('afterSlideLoad', v);\n                }\n\n                //needs to be inside the condition to prevent problems with continuousVertical and scrollHorizontally\n                //and to prevent double scroll right after a windows resize\n                setState({canScroll: true});\n\n                playMedia(v.destiny);\n\n                EventEmitter.emit(events.afterSlideLoads, v);\n            }\n\n            //letting them slide again\n            setState({slideMoving: false});\n        }, getOptions().css3Easing * 1000);\n    }else{\n        //2D\n        slides.scrollTo(v.destiny.x, 0);\n\n        //if the site is not just resizing and readjusting the slides\n        if(!v.localIsResizing){\n            if(utils.isFunction( getOptions().afterSlideLoad )){\n                fireCallback('afterSlideLoad', v);\n            }\n\n            //needs to be inside the condition to prevent problems with continuousVertical and scrollHorizontally\n            //and to prevent double scroll right after a windows resize\n            setState({canScroll: true});\n\n            playMedia(v.destiny);\n\n            EventEmitter.emit(events.afterSlideLoads, v);\n        }\n\n        //letting them slide again\n        setState({slideMoving: false});\n    }\n}", "CodeBleu_score": 32.58091140958332}, {"code": "function performHorizontalMove(slides, v, fireCallback){\n\t", "CodeBleu_score": 1.522250845899262}]}
{"instance_id": "82491a251576", "generation_result": [{"code": "buildLink (name: string, params: Record<string, any>): string{\n\t    const queryString = Object.keys(params)\n        .sort()\n        .map(key => `${key}=${encodeURIComponent(params[key])}`)\n        .join('&');\n    return `${name}?${queryString}`;\n}", "CodeBleu_score": 42.9994386616213}, {"code": "buildLink (name: string, params: Record<string, any>): string{\n\t  const query = Object.keys(params)\n    .sort()\n    .map(k => `${k}=${encodeURIComponent(params[k])}`)\n    .join('&')\n  return `${name}${query ? `?${query}` : ''}`\n}", "CodeBleu_score": 42.79690670935845}, {"code": "buildLink (name: string, params: Record<string, any>): string{\n\t  const queryString = Object.keys(params)\n    .sort()\n    .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n    .join('&')\n    .replace(/&$/, '')\n\n  return `${name}?${queryString}`\n}", "CodeBleu_score": 45.25699363539763}]}
{"instance_id": "89f175570176", "generation_result": [{"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\t  const isObject = shouldBeObject(options)\n  if (!isObject.res) {\n    const res = { errMsg: `showLoading${isObject.msg}` }\n    console.error(res.errMsg)\n    return Promise.reject(res)\n  }\n\n  let { title = '', mask = false, success, fail, complete } = options || {} // eslint-disable-line\n\n  return showToast({\n    title,\n    icon: 'loading',\n    mask,\n    duration: 0,\n    success,\n    fail,\n    complete\n  })\n}", "CodeBleu_score": 82.97636884065551}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\t  const isObject = shouldBeObject(options)\n  if (!isObject.res) {\n    const res = { errMsg: `showLoading${isObject.msg}` }\n    console.error(res.errMsg)\n    return Promise.reject(res)\n  }\n\n  let { title = '', mask = false, success, fail, complete } = options || {} // eslint-disable-line\n\n  return showToast({\n    title,\n    icon: 'loading',\n    mask,\n    duration: 0,\n    success,\n    fail,\n    complete\n  })\n}", "CodeBleu_score": 82.97636884065551}, {"code": "function showLoading (options: Taro.showLoading.Option): Promise<TaroGeneral.CallbackResult> {\n\t  const isObject = shouldBeObject(options)\n  if (!isObject.res) {\n    const res = { errMsg: `showLoading${isObject.msg}` }\n    console.error(res.errMsg)\n    return Promise.reject(res)\n  }\n\n  let { title = '', mask = false, success, fail, complete } = options || {} // eslint-disable-line\n\n  return showToast({\n    title,\n    icon: 'loading',\n    mask,\n    duration: 0,\n    success,\n    fail,\n    complete\n  })\n}", "CodeBleu_score": 82.97636884065551}]}
{"instance_id": "7d41757a0645", "generation_result": [{"code": "export function HomepageTweets(){\n\t    return (\n        <div className=\"container\">\n            <h2 className=\"text-center m-4\">Home</h2>\n            <div className=\"row\">\n                <Tweet tweet={TweetList[0]} />\n                <Tweet tweet={TweetList[1]} />\n            </div>\n        </div>\n    );\n}", "CodeBleu_score": 58.72307614809975}, {"code": "export function HomepageTweets(){\n\t    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h2>Tweets</h2>\n                </div>\n            </div>\n            <div className=\"row\">\n                {TweetList.map((tweetObj) => {\n                    return (\n                        <Tweet\n                            name={tweetObj.name}\n                            username={tweetObj.username}\n                            date={tweetObj.date}\n                            message={tweetObj.message}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    );\n}", "CodeBleu_score": 50.29638784088868}, {"code": "export function HomepageTweets(){\n\t    return (\n        <div className=\"container\">\n            <h1 className=\"text-center\">Tweets</h1>\n            <div className=\"row\">\n                {TweetList.map((tweet, index) => (\n                    <Tweet\n                        key={index}\n                        name={tweet.name}\n                        handle={tweet.handle}\n                        image={tweet.image}\n                        text={tweet.text}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}", "CodeBleu_score": 55.05136126312512}]}
