{"instance_id": "47ee1dae200b", "generation_result": [{"code": "public static void PreloadDll(string dllName){\n\t#if NETSTANDARD2_0 || NETSTANDARD2_1 || NETCOREAPP2_0 || NETCOREAPP2_1 || NETCOREAPP3_0 || NETCOREAPP3_1 || NETCOREAPP5_0 || NETCOREAPP5_0_OR_GREATER || NET6_0 || NET6_0_OR_GREATER || NET7_0 || NET7_0_OR_GREATER\n\n#if NETSTANDARD2_0 || NETSTANDARD2_1 || NETCOREAPP2_0 || NETCOREAPP2_1 || NETCOREAPP3_0 || NETCOREAPP3_1 || NETCOREAPP5_0 || NETCOREAPP5_0_OR_GREATER || NET6_0 || NET6_0_OR_GREATER || NET7_0 || NET7_0_OR_GREATER\n            var dllDirectory = GetDirectedDllDirectory();\n            var dllPath = Path.Combine(dllDirectory, dllName);\n            if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows)) {\n                NativeMethods.LoadLibrary(dllPath);\n            } else {\n                NativeMethods.dlopen(dllPath, NativeMethods.RTLD_NOW);\n            }\n#else\n            var dllDirectory = GetDirectedDllDirectory();\n            var dllPath = Path.Combine(dllDirectory, dllName);\n            NativeMethods.dlopen(dllPath, NativeMethods.RTLD_NOW);\n#endif\n\n#else\n\n#if NETCOREAPP3_0 || NETCOREAPP3_1 || NETCOREAPP5_0 || NETCOREAPP5_0_OR_GREATER || NET6_0 || NET6_0_OR_GREATER || NET7_0 || NET7_0_OR_GREATER\n            var dllDirectory = GetDirectedDllDirectory();\n            var dllPath = Path.Combine(dllDirectory, dllName);\n            NativeMethods.LoadLibrary(dllPath);\n#else\n            var dllDirectory = GetDirectedDllDirectory();\n            var dllPath = Path.Combine(dllDirectory, dllName);\n            NativeMethods.dlopen(dllPath, NativeMethods.RTLD_NOW);\n#endif\n\n#endif\n        }", "CodeBleu_score": 37.27621667292702}, {"code": "public static void PreloadDll(string dllName){\n\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Windows)) {\n\t\tWin32.LoadDll(dllName);\n\t} else {\n\t\tPosix.LoadDll(dllName);\n\t}\n}", "CodeBleu_score": 24.156394968502166}, {"code": "public static void PreloadDll(string dllName){\n\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Windows)) {\n\nWin32.LoadDll(dllName);\n\n} else {\n\nPosix.LoadDll(dllName);\n\n}\n\n}", "CodeBleu_score": 23.786897447196758}]}
{"instance_id": "2073a8291d05", "generation_result": [{"code": "private void LoadAssetsFromMemory(FileReader reader, string originalPath, string unityVersion = null){\n\t\tif (assetsFileReaders.Contains(originalPath)) {\n\t\tLogger.Error(\"File \" + originalPath + \" already loaded\");\n\t\treturn;\n\t}\n\tif (assetsFileList.Contains(originalPath)) {\n\t\tLogger.Error(\"File \" + originalPath + \" already loaded\");\n\t\treturn;\n\t}\n\tassetsFileReaders.Add(originalPath, reader);\n\tvar assetsFile = new SerializedFile(reader, originalPath);\n\tif (assetsFile.IsVersionStripped) {\n\t\tif (string.IsNullOrEmpty(unityVersion)) {\n\t\t\tthrow new Exception(\"The Unity version has been stripped, please set the version in the options\");\n\t\t}\n\t\tassetsFile.SetVersion(unityVersion);\n\t}\n\tassetsFileList.Add(originalPath, assetsFile);\n}", "CodeBleu_score": 40.511243462509114}, {"code": "private void LoadAssetsFromMemory(FileReader reader, string originalPath, string unityVersion = null){\n\tSerializedFile assetsFile;\nif (assetsFileList.Contains(originalPath))\n{\nLogger.Error(\"File {0} has already been loaded\", originalPath);\nreturn;\n}\nif (unityVersion!= null)\n{\nassetsFile = new SerializedFile(originalPath, reader, unityVersion);\n}\nelse\n{\nassetsFile = new SerializedFile(originalPath, reader);\n}\nCheckStrippedVersion(assetsFile);\nassetsFileList.Add(originalPath);\nLogger.Info(\"Loaded {0}\", originalPath);\n}", "CodeBleu_score": 30.827858696721687}, {"code": "private void LoadAssetsFromMemory(FileReader reader, string originalPath, string unityVersion = null){\n\t\tif (this.loadedAssetFiles.Contains(originalPath)) {\n\t\tLogger.Info(\"Skipping asset file \" + originalPath + \" as it has already been loaded.\");\n\t\treturn;\n\t}\n\tvar assetsFile = new SerializedFile(reader, originalPath);\n\tif (assetsFile.IsVersionStripped && string.IsNullOrEmpty(unityVersion)) {\n\t\tthrow new Exception(\"The Unity version has been stripped, please set the version in the options\");\n\t}\n\tif (!string.IsNullOrEmpty(unityVersion)) {\n\t\tassetsFile.SetVersion(unityVersion);\n\t}\n\tthis.loadedAssetFiles.Add(originalPath);\n\tthis.assetsFileList.Add(assetsFile);\n\tthis.assetsFileListHash.Add(assetsFile.GetHash(), assetsFile);\n}", "CodeBleu_score": 37.25645451348989}]}
{"instance_id": "5dacc6a26301", "generation_result": [{"code": "public ImportedFrame FindFrameByPath(string path){\n\t", "CodeBleu_score": 2.034882990523014}, {"code": "public ImportedFrame FindFrameByPath(string path){\n\tImportedFrame frame = null;\nif (Path.EndsWith(path)) {\nframe = this;\n}\nelse {\nforeach (ImportedFrame child in children) {\nframe = child.FindFrameByPath(path);\nif (frame!= null) {\nbreak;\n}\n}\n}\nreturn frame;\n}", "CodeBleu_score": 36.95709346314286}, {"code": "public ImportedFrame FindFrameByPath(string path){\n\t\tstring name = Path.Substring(Path.LastIndexOf(\"/\") + 1);\n\treturn FindChilds(name).FirstOrDefault(f => f.Path == path);\n}", "CodeBleu_score": 26.431352659814767}]}
{"instance_id": "c20b04c4ad37", "generation_result": [{"code": "public static FileReader DecompressGZip(FileReader reader){\n\t\tvar ms = new MemoryStream();\n\tvar gs = new GZipStream(ms, CompressionMode.Decompress);\n\treader.CopyTo(gs);\n\tgs.Close();\n\tms.Seek(0, SeekOrigin.Begin);\n\treturn new FileReader(ms);\n}", "CodeBleu_score": 25.51762072763031}, {"code": "public static FileReader DecompressGZip(FileReader reader){\n\t\tMemoryStream ms = new MemoryStream();\n\tGZipStream gz = new GZipStream(reader.BaseStream, CompressionMode.Decompress);\n\tgz.CopyTo(ms);\n\tgz.Close();\n\tms.Position = 0;\n\treturn new FileReader(ms);\n}", "CodeBleu_score": 41.01202051053941}, {"code": "public static FileReader DecompressGZip(FileReader reader){\n\t\tMemoryStream ms = new MemoryStream();\n\tGZipStream gz = new GZipStream(reader.BaseStream, CompressionMode.Decompress);\n\tgz.CopyTo(ms);\n\tgz.Close();\n\tms.Seek(0, SeekOrigin.Begin);\n\treturn new FileReader(ms);\n}", "CodeBleu_score": 37.062147688968665}]}
{"instance_id": "11ce5c7b009d", "generation_result": [{"code": "public void ParseStrings(SwitchForm[] switchForms, string[] commandStrings){\n\t\tParseStrings(switchForms, commandStrings, null);\n}", "CodeBleu_score": 16.93988777593802}, {"code": "public void ParseStrings(SwitchForm[] switchForms, string[] commandStrings){\n\t\tParseStrings(switchForms, commandStrings, null);\n}", "CodeBleu_score": 16.93988777593802}, {"code": "public void ParseStrings(SwitchForm[] switchForms, string[] commandStrings){\n\t\tParseString(commandStrings, switchForms);\n}", "CodeBleu_score": 10.67227122847273}]}
{"instance_id": "b8da2d0a3f76", "generation_result": [{"code": "public Texture2DConverter(Texture2D m_Texture2D){\n\t\t// set the texture\n\ttexture2D = m_Texture2D;\n\n\t// set the image data\n\timageData = texture2D.GetRawTextureData();\n\n\t// set the width\n\twidth = texture2D.width;\n\n\t// set the height\n\theight = texture2D.height;\n\n\t// set the texture format\n\ttextureFormat = texture2D.format;\n\n\t// set the version\n\tversion = texture2D.version;\n\n\t// set the platform\n\tplatform = texture2D.graphicsFormat;\n\n\t// set the output size\n\toutputSize = texture2D.outputSize;\n}", "CodeBleu_score": 42.57287309632577}, {"code": "public Texture2DConverter(Texture2D m_Texture2D){\n\t\tm_Texture2D = m_Texture2D;\n\tm_ImageData = m_Texture2D.GetRawTextureData();\n\tm_Width = m_Texture2D.width;\n\tm_Height = m_Texture2D.height;\n\tm_TextureFormat = m_Texture2D.format;\n\tm_Version = m_Texture2D.version;\n\tm_Platform = m_Texture2D.platform;\n\tm_OutputSize = m_Texture2D.outputSize;\n}", "CodeBleu_score": 49.95014589104595}, {"code": "public Texture2DConverter(Texture2D m_Texture2D){\n\t\t// Extract and set image data\n\tm_ImageData = m_Texture2D.GetRawTextureData();\n\t// Extract and set width\n\tm_Width = m_Texture2D.width;\n\t// Extract and set height\n\tm_Height = m_Texture2D.height;\n\t// Extract and set texture format\n\tm_TextureFormat = m_Texture2D.format;\n\t// Extract and set version\n\tm_Version = m_Texture2D.version;\n\t// Extract and set platform\n\tm_Platform = m_Texture2D.platform;\n\t// Extract and set output size\n\tm_OutputSize = m_Texture2D.outputSize;\n}", "CodeBleu_score": 45.620284450704155}]}
{"instance_id": "4d1412b550a3", "generation_result": [{"code": "private static string CollectActiveNames(SerializedProperty sp, List<string> result){\n\t\tresult.Clear();\n\tfor (int i = 0; i < sp.arraySize; i++) {\n\t\tif (sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"m_IsActive\").boolValue) {\n\t\t\tresult.Add(sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"m_Name\").stringValue);\n\t\t}\n\t}\n\tif (result.Count == 0) {\n\t\treturn \"Nothing\";\n\t}\n\telse {\n\t\tStringBuilder s_Sb = new StringBuilder();\n\t\tfor (int i = 0; i < result.Count; i++) {\n\t\t\ts_Sb.Append(result[i]);\n\t\t\tif (i!= result.Count - 1) {\n\t\t\t\ts_Sb.Append(\", \");\n\t\t\t}\n\t\t}\n\t\treturn s_Sb.ToString();\n\t}\n}", "CodeBleu_score": 45.74890835745477}, {"code": "private static string CollectActiveNames(SerializedProperty sp, List<string> result){\n\t\tresult.Clear();\n\tfor (int i = 0; i < sp.arraySize; i++) {\n\t\tif (sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"active\").boolValue) {\n\t\t\tresult.Add(sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"name\").stringValue);\n\t\t}\n\t}\n\tif (result.Count == 0) {\n\t\treturn \"Nothing\";\n\t} else {\n\t\treturn string.Join(\", \", result.ToArray());\n\t}\n}", "CodeBleu_score": 36.446184169776224}, {"code": "private static string CollectActiveNames(SerializedProperty sp, List<string> result){\n\t\tresult.Clear();\n\tfor (int i = 0; i < sp.arraySize; i++) {\n\t\tif (sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"m_IsActive\").boolValue) {\n\t\t\tresult.Add(sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"m_Name\").stringValue);\n\t\t}\n\t}\n\tif (result.Count == 0) {\n\t\treturn \"Nothing\";\n\t}\n\telse {\n\t\tStringBuilder s_Sb = new StringBuilder();\n\t\tforeach (string name in result) {\n\t\t\ts_Sb.Append(name);\n\t\t\ts_Sb.Append(\", \");\n\t\t}\n\t\treturn s_Sb.ToString();\n\t}\n}", "CodeBleu_score": 49.82948158315986}]}
{"instance_id": "5014bde74f8b", "generation_result": [{"code": "private static void AddMenu(GenericMenu menu, SerializedProperty sp, ShaderProperty prop, bool add){\n\t", "CodeBleu_score": 4.975552625378207}, {"code": "private static void AddMenu(GenericMenu menu, SerializedProperty sp, ShaderProperty prop, bool add){\n\t\tif (add) {\n\t\tif (!s_ActiveNames.Contains(prop.name)) {\n\t\t\tmenu.AddItem(new GUIContent(prop.name), false, () => {\n\t\t\t\ts_ActiveNames.Add(prop.name);\n\t\t\t\tsp.serializedObject.ApplyModifiedProperties();\n\t\t\t});\n\t\t}\n\t} else {\n\t\tif (s_ActiveNames.Contains(prop.name)) {\n\t\t\tmenu.AddItem(new GUIContent(prop.name), false, () => {\n\t\t\t\ts_ActiveNames.Remove(prop.name);\n\t\t\t\tsp.serializedObject.ApplyModifiedProperties();\n\t\t\t});\n\t\t}\n\t}\n}", "CodeBleu_score": 26.17152732321667}, {"code": "private static void AddMenu(GenericMenu menu, SerializedProperty sp, ShaderProperty prop, bool add){\n\t\tif (add && s_ActiveNames.Contains(prop.name))\n\t\treturn;\n\n\tstring name = prop.name;\n\tif (add) {\n\t\ts_ActiveNames.Add(name);\n\t\tsp.InsertArrayElementAtIndex(sp.arraySize);\n\t\tsp.GetArrayElementAtIndex(sp.arraySize - 1).stringValue = name;\n\t}\n\telse {\n\t\ts_ActiveNames.Remove(name);\n\t\tint index = s_ActiveNames.IndexOf(name);\n\t\tif (index!= -1) {\n\t\t\tsp.DeleteArrayElementAtIndex(index);\n\t\t}\n\t}\n\n\tmenu.AddItem(new GUIContent(prop.displayName), false, () => {\n\t\tsp.serializedObject.ApplyModifiedProperties();\n\t\tsp.serializedObject.Update();\n\t\tsp.serializedObject.ApplyModifiedProperties();\n\t});\n}", "CodeBleu_score": 43.16612659600357}]}
{"instance_id": "20e390481814", "generation_result": [{"code": "private static bool DrawFloatOrVector3Field(SerializedProperty sp, bool showXyz){\n\tbool isVector3 = false;\nfloat x = 0;\nfloat y = 0;\nfloat z = 0;\nif (showXyz) {\nisVector3 = true;\nx = sp.vector3Value.x;\ny = sp.vector3Value.y;\nz = sp.vector3Value.z;\n} else {\nisVector3 = false;\nx = sp.floatValue;\n}\nEditorGUI.BeginChangeCheck();\nGUILayout.BeginHorizontal();\nif (isVector3) {\nshowXyz = GUILayout.Toggle(showXyz, \"Show XYZ\", GUILayout.Width(60));\n} else {\nshowXyz = GUILayout.Toggle(showXyz, \"Show X\", GUILayout.Width(60));\n}\nif (isVector3) {\nx = EditorGUILayout.FloatField(\"X\", x);\ny = EditorGUILayout.FloatField(\"Y\", y);\nz = EditorGUILayout.FloatField(\"Z\", z);\n} else {\nx = EditorGUILayout.FloatField(\"X\", x);\n}\nif (EditorGUI.EndChangeCheck()) {\nif (isVector3) {\nsp.vector3Value = new Vector3(x, y, z);\n} else {\nsp.floatValue = x;\n}\n}\nGUILayout.EndHorizontal();\nreturn isVector3;\n}", "CodeBleu_score": 36.919402243411255}, {"code": "private static bool DrawFloatOrVector3Field(SerializedProperty sp, bool showXyz){\n\tif (EditorGUI.EndChangeCheck()) {\nreturn true;\n}\nif (showXyz) {\nif (sp.propertyType == SerializedPropertyType.Vector3) {\nEditorGUI.BeginChangeCheck();\nEditorGUILayout.BeginHorizontal();\nEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"x\"), new GUIContent(\"X\"));\nEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"y\"), new GUIContent(\"Y\"));\nEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"z\"), new GUIContent(\"Z\"));\nEditorGUILayout.EndHorizontal();\nif (EditorGUI.EndChangeCheck()) {\nreturn true;\n}\n} else {\nEditorGUI.BeginChangeCheck();\nEditorGUILayout.PropertyField(sp, new GUIContent(\"X\"));\nif (EditorGUI.EndChangeCheck()) {\nreturn true;\n}\n}\n} else {\nif (sp.propertyType == SerializedPropertyType.Vector3) {\nEditorGUI.BeginChangeCheck();\nEditorGUILayout.BeginHorizontal();\nEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"x\"), new GUIContent(\"X\"));\nEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"y\"), new GUIContent(\"Y\"));\nEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"z\"), new GUIContent(\"Z\"));\nEditorGUILayout.EndHorizontal();\nif (EditorGUI.EndChangeCheck()) {\nreturn true;\n}\n} else {\nEditorGUI.BeginChangeCheck();\nEditorGUILayout.PropertyField(sp, new GUIContent(\"X\"));\nif (EditorGUI.EndChangeCheck()) {\nreturn true;\n}\n}\n}\nreturn false;\n}", "CodeBleu_score": 28.139298731895696}, {"code": "private static bool DrawFloatOrVector3Field(SerializedProperty sp, bool showXyz){\n\t\tbool toggled = false;\n\tif (EditorGUI.EndChangeCheck()) {\n\t\ttoggled = true;\n\t}\n\tif (showXyz) {\n\t\tEditorGUI.BeginChangeCheck();\n\t\tEditorGUILayout.BeginHorizontal();\n\t\tEditorGUILayout.PropertyField(sp, GUIContent.none, GUILayout.Width(100));\n\t\tEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"x\"), GUIContent.none, GUILayout.Width(100));\n\t\tEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"y\"), GUIContent.none, GUILayout.Width(100));\n\t\tEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"z\"), GUIContent.none, GUILayout.Width(100));\n\t\tEditorGUILayout.EndHorizontal();\n\t\tif (EditorGUI.EndChangeCheck()) {\n\t\t\ttoggled = true;\n\t\t}\n\t} else {\n\t\tEditorGUI.BeginChangeCheck();\n\t\tEditorGUILayout.BeginHorizontal();\n\t\tEditorGUILayout.PropertyField(sp, GUIContent.none, GUILayout.Width(100));\n\t\tEditorGUILayout.PropertyField(sp.FindPropertyRelative(\"x\"), GUIContent.none, GUILayout.Width(100));\n\t\tEditorGUILayout.EndHorizontal();\n\t\tif (EditorGUI.EndChangeCheck()) {\n\t\t\ttoggled = true;\n\t\t}\n\t}\n\tif (toggled) {\n\t\tif (Mathf.Approximately(sp.FindPropertyRelative(\"x\").floatValue, sp.FindPropertyRelative(\"y\").floatValue) && Mathf.Approximately(sp.FindPropertyRelative(\"x\").floatValue, sp.FindPropertyRelative(\"z\").floatValue)) {\n\t\t\tshowXyz = true;\n\t\t} else {\n\t\t\tshowXyz = false;\n\t\t}\n\t}\n\tif (GUILayout.Toggle(showXyz, \"Show XYZ\")) {\n\t\tshowXyz = true;\n\t} else {\n\t\tshowXyz = false;\n\t}\n\treturn showXyz;\n}", "CodeBleu_score": 35.40631119625937}]}
{"instance_id": "c3587cbcda7e", "generation_result": [{"code": "public static Material Add(Material baseMat, Texture texture, int id, int props){\n\tMaterial _ret_ = default(Material);\n\nreturn _ret_;\n\n}", "CodeBleu_score": 5.378559644058312}, {"code": "public static Material Add(Material baseMat, Texture texture, int id, int props){\n\t", "CodeBleu_score": 4.0916924613467}, {"code": "public static Material Add(Material baseMat, Texture texture, int id, int props){\n\tMaterial temp_material;\ntemp_material = new Material(baseMat);\ntemp_material.SetTexture(\"_MainTex\", texture);\ntemp_material.SetInt(\"_ID\", id);\ntemp_material.SetInt(\"_Properties\", props);\nreturn temp_material;\n}", "CodeBleu_score": 15.367892830015913}]}
{"instance_id": "a35149bc8b8b", "generation_result": [{"code": "public static void Remove(Material customMat){\n\t\tif (customMat == null) {\n\t\treturn;\n\t}\n\tfor (int i = 0; i < s_Entries.Count; ++i) {\n\t\tif (s_Entries[i].m_Material == customMat) {\n\t\t\tif (s_Entries[i].m_Count > 0) {\n\t\t\t\t--s_Entries[i].m_Count;\n\t\t\t}\n\t\t\tif (s_Entries[i].m_Count == 0) {\n\t\t\t\tMaterial.DestroyImmediate(s_Entries[i].m_Material);\n\t\t\t\ts_Entries[i].m_Material = null;\n\t\t\t\ts_Entries[i].m_Count = 0;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}", "CodeBleu_score": 38.17939349362939}, {"code": "public static void Remove(Material customMat){\n\t\tif(customMat == null) {\n\t\tDebug.LogWarning(\"Material is null, cannot remove.\");\n\t\treturn;\n\t}\n\tif(s_Entries.Count == 0) {\n\t\tDebug.LogWarning(\"Material list is empty, cannot remove.\");\n\t\treturn;\n\t}\n\tint i = 0;\n\twhile(i < s_Entries.Count) {\n\t\tif(s_Entries[i].material == customMat) {\n\t\t\ts_Entries[i].count--;\n\t\t\tif(s_Entries[i].count <= 0) {\n\t\t\t\ts_Entries[i].material = null;\n\t\t\t\ts_Entries[i].count = 0;\n\t\t\t\ts_Entries[i].gameObject = null;\n\t\t\t\ts_Entries.RemoveAt(i);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ti++;\n\t\t}\n\t}\n}", "CodeBleu_score": 29.245973601454388}, {"code": "public static void Remove(Material customMat){\n\t\tif(customMat == null) {\n\t\treturn;\n\t}\n\tif(s_Entries.Count == 0) {\n\t\treturn;\n\t}\n\tfor(int i = 0; i < s_Entries.Count; i++) {\n\t\tif(s_Entries[i].material == customMat) {\n\t\t\ts_Entries[i].count--;\n\t\t\tif(s_Entries[i].count == 0) {\n\t\t\t\tif(s_Entries[i].material!= null) {\n\t\t\t\t\ts_Entries[i].material.DestroyImmediate();\n\t\t\t\t}\n\t\t\t\ts_Entries.RemoveAt(i);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 31.046302650696255}]}
{"instance_id": "892bbee52ab9", "generation_result": [{"code": "private void RefreshParticles(GameObject root){\n\t\tParticleSystem[] ps = root.GetComponentsInChildren<ParticleSystem>();\n\tfor (int i = ps.Length - 1; i >= 0; i--) {\n\t\tParticleSystem p = ps[i];\n\t\tif (p.GetComponent<UIParticle>()!= this) {\n\t\t\tps[i] = null;\n\t\t}\n\t}\n\tfor (int i = ps.Length - 1; i >= 0; i--) {\n\t\tif (ps[i]!= null) {\n\t\t\tRefreshParticles(ps[i].gameObject);\n\t\t}\n\t}\n}", "CodeBleu_score": 24.21259883355503}, {"code": "private void RefreshParticles(GameObject root){\n\t\tif (root == null)\n\t\treturn;\n\tParticleSystem[] ps = root.GetComponentsInChildren<ParticleSystem>();\n\tList<ParticleSystem> list = new List<ParticleSystem>();\n\tfor (int i = 0; i < ps.Length; i++) {\n\t\tParticleSystem p = ps[i];\n\t\tif (p.GetComponent<UIParticle>() == this) {\n\t\t\tif (p.GetComponent<Renderer>()!= null) {\n\t\t\t\tif (p.GetComponent<Renderer>().sharedMaterial!= null) {\n\t\t\t\t\tif (p.GetComponent<Renderer>().sharedMaterial.HasProperty(\"_MainTex\")) {\n\t\t\t\t\t\tTexture tex = p.GetComponent<Renderer>().sharedMaterial.GetTexture(\"_MainTex\");\n\t\t\t\t\t\tif (tex!= null) {\n\t\t\t\t\t\t\tp.renderer.sharedMaterial.SetTexture(\"_MainTex\", tex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist.Add(p);\n\t\t}\n\t}\n\tps = list.ToArray();\n\tfor (int i = 0; i < ps.Length; i++) {\n\t\tParticleSystem p = ps[i];\n\t\tif (p.GetComponent<UIParticle>()!= this) {\n\t\t\tp.gameObject.SetActive(false);\n\t\t}\n\t}\n\tfor (int i = 0; i < ps.Length; i++) {\n\t\tParticleSystem p = ps[i];\n\t\tif (p.GetComponent<UIParticle>() == this) {\n\t\t\tp.gameObject.SetActive(true);\n\t\t}\n\t}\n\tRefreshParticles(root.transform.parent.gameObject);\n}", "CodeBleu_score": 35.75286143234738}, {"code": "private void RefreshParticles(GameObject root){\n\t\tList<ParticleSystem> systems = new List<ParticleSystem>();\n\tGetComponentsInChildren(systems);\n\tfor (int i = systems.Count - 1; i >= 0; i--) {\n\t\tParticleSystem ps = systems[i];\n\t\tif (ps.GetComponentInParent<UIParticle>()!= this) {\n\t\t\tsystems.RemoveAt(i);\n\t\t} else {\n\t\t\tif (ps.renderer.material.HasProperty(\"_MainTex\")) {\n\t\t\t\tTexture2D tex = ps.renderer.material.GetTexture(\"_MainTex\") as Texture2D;\n\t\t\t\tif (tex!= null) {\n\t\t\t\t\tif (tex.width!= texWidth || tex.height!= texHeight) {\n\t\t\t\t\t\ttexWidth = tex.width;\n\t\t\t\t\t\ttexHeight = tex.height;\n\t\t\t\t\t\tps.renderer.material.SetTextureScale(\"_MainTex\", new Vector2(1.0f / texWidth, 1.0f / texHeight));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tRefreshParticles(systems);\n}", "CodeBleu_score": 36.94228988246003}]}
{"instance_id": "d6b082e37770", "generation_result": [{"code": "private void RegisterColorSwapManagers(ContainerBuilder containerBuilder){\n\ttAssembly = Assembly.GetExecutingAssembly();\ncontainerBuilder\n               .RegisterAssemblyTypes(currentAssembly)\n               .AssignableTo<IColorSwapManager>()\n               .As<IColorSwapManager>()\n               .SingleInstance();\n}", "CodeBleu_score": 72.07562624697272}, {"code": "private void RegisterColorSwapManagers(ContainerBuilder containerBuilder){\n\tuilder.RegisterAssemblyTypes(Assembly.GetExecutingAssembly()).AssignableTo<IColorSwapManager>().As<IColorSwapManager>().SingleInstance();\n}", "CodeBleu_score": 39.74331149492908}, {"code": "private void RegisterColorSwapManagers(ContainerBuilder containerBuilder){\n\tntAssembly = Assembly.GetExecutingAssembly();\n\tcontainerBuilder\n\t\t.RegisterAssemblyTypes(currentAssembly)\n\t\t.AssignableTo<IColorSwapManager>()\n\t\t.As<IColorSwapManager>()\n\t\t.SingleInstance();\n}", "CodeBleu_score": 71.42067758732742}]}
{"instance_id": "2359d72977a4", "generation_result": [{"code": " public async Task ConnectAsync(string ipAddress, int port){\n\t\t// Set the IP address and port\n\tthis.ipAddress = ipAddress;\n\tthis.port = port;\n\n\t// Wait for the serializer to initialize\n\tawait this.serializer.InitializeAsync();\n\n\t// Initiate a reservation negotiation using the current state\n\tawait this.NegotiateReservationAsync();\n}", "CodeBleu_score": 34.386848812552685}, {"code": " public async Task ConnectAsync(string ipAddress, int port){\n\t\tawait Serializer.InitializeAsync();\n\tawait this.ConnectAsync(ipAddress, port);\n}", "CodeBleu_score": 23.00678544964736}, {"code": " public async Task ConnectAsync(string ipAddress, int port){\n\t", "CodeBleu_score": 10.25692062020006}]}
{"instance_id": "151a27d718b1", "generation_result": [{"code": "public void UpdateConnectionState(IMultiplayerSessionConnectionState sessionConnectionState){\n\tValidate.NotNull(sessionConnectionState);\nLog.Debug($\"Transition from {CurrentState.CurrentStage} to {sessionConnectionState.CurrentStage}\");\nConnectionStateChanged?.Invoke(sessionConnectionState);\nif (sessionConnectionState.CurrentStage == MultiplayerSessionConnectionState.SESSION_RESERVED) {\nLog.Debug($\"Reserved session by player {sessionConnectionState.PlayerName}\");\n}\n}", "CodeBleu_score": 38.0140258229969}, {"code": "public void UpdateConnectionState(IMultiplayerSessionConnectionState sessionConnectionState){\n\t", "CodeBleu_score": 1.3969615207900739}, {"code": "public void UpdateConnectionState(IMultiplayerSessionConnectionState sessionConnectionState){\n\t", "CodeBleu_score": 1.3969615207900739}]}
{"instance_id": "7f7717307d6a", "generation_result": [{"code": "public async Task StartAsync(string ipAddress, int serverPort){\n\t\t// Initialize and start the client\n\tclient = new LiteNetLibClient();\n\tclient.Start();\n\n\t// Connect to the server\n\tawait Task.Run(() => client.Connect(ipAddress, serverPort, \"nitrox\"));\n\n\t// Wait for the connection event for up to 2000 milliseconds\n\tawait Task.Delay(2000);\n\n\t// Reset the connection event\n\tconnectedEvent.Reset();\n}", "CodeBleu_score": 43.04128940277307}, {"code": "public async Task StartAsync(string ipAddress, int serverPort){\n\t\tif (client == null) {\n\t\tclient = new LiteNetLibClient();\n\t}\n\n\tconnectedEvent.Reset();\n\n\tawait Task.Run(() => {\n\t\tclient.Start();\n\t\tclient.Connect(ipAddress, serverPort, \"nitrox\");\n\t}).ConfigureAwait(false);\n\n\tclient.Connect\n\tclient.Start\n\n\tawait Task.Run(() => {\n\t\tclient.Connect(ipAddress, serverPort, \"nitrox\");\n\t}).ConfigureAwait(false);\n\n\tclient.Connect\n\tclient.Start\n}", "CodeBleu_score": 59.51091275637276}, {"code": "public async Task StartAsync(string ipAddress, int serverPort){\n\t\n// Create a new LiteNetLibClient object\nvar client = new LiteNetLibClient();\n\n// Create a new ManualResetEvent object\nvar connectedEvent = new ManualResetEvent(false);\n\n// Set the client's OnConnected event handler to a delegate that sets the connectedEvent object to signaled\nclient.OnConnected += (sender, args) => connectedEvent.Set();\n\n// Start the client\nclient.Start();\n\n// Connect the client to the server using the specified IP address and port\nawait client.ConnectAsync(ipAddress, serverPort, \"nitrox\");\n\n// Wait for the connection event to be signaled for up to 2000 milliseconds\nconnectedEvent.WaitOne(2000);\n\n// Reset the connection event\nconnectedEvent.Reset();\n\n}", "CodeBleu_score": 53.17663611235398}]}
{"instance_id": "eeb95434f1eb", "generation_result": [{"code": "public void StartFireSuppression(NitroxId id){\n\t\tCyclops cyclops = Cyclops.FindCyclops(id);\n\tif (cyclops!= null) {\n\t\tCyclopsFireSuppressionSystemButton fireSuppressionButton = cyclops.GetComponentInChildren<CyclopsFireSuppressionSystemButton>();\n\t\tif (fireSuppressionButton!= null) {\n\t\t\tfireSuppressionButton.StartCooldown();\n\t\t\tStartCoroutine(StartFireSuppressionSystem(fireSuppressionButton.subFire));\n\t\t}\n\t}\n}", "CodeBleu_score": 35.97343050994628}, {"code": "public void StartFireSuppression(NitroxId id){\n\t\tCyclops cyclops = GetCyclopsFromNitroxId(id);\n\tif (cyclops == null) {\n\t\treturn;\n\t}\n\tCyclopsFireSuppressionSystemButton fireSuppButton = cyclops.GetComponentInChildren<CyclopsFireSuppressionSystemButton>();\n\tif (fireSuppButton == null) {\n\t\treturn;\n\t}\n\tStartCoroutine(StartFireSuppressionSystem(fireSuppButton.subFire));\n\tfireSuppButton.StartCooldown();\n}", "CodeBleu_score": 34.77808872614081}, {"code": "public void StartFireSuppression(NitroxId id){\n\t\tCyclops cyclops = GetCyclops(id);\n\tif (cyclops == null) {\n\t\treturn;\n\t}\n\tCyclopsFireSuppressionSystemButton fireSuppressionButton = cyclops.GetComponentInChildren<CyclopsFireSuppressionSystemButton>();\n\tif (fireSuppressionButton == null) {\n\t\treturn;\n\t}\n\tStartCoroutine(StartFireSuppression(fireSuppressionButton));\n\tfireSuppressionButton.StartCooldown();\n}", "CodeBleu_score": 29.585121541362025}]}
{"instance_id": "a23a043559c6", "generation_result": [{"code": "public void OnDamagePointRepaired(SubRoot subRoot, CyclopsDamagePoint damagePoint, float repairAmount){\n\t\tif (subRoot.TryGetIdOrWarn(out int subRootId)) {\n\t\tif (damagePoint.TryGetIdOrWarn(out int damagePointId)) {\n\t\t\tvar repairPacket = new CyclopsDamagePointRepairedPacket(subRootId, damagePointId, repairAmount);\n\t\t\tpacketSender.Send(repairPacket);\n\t\t}\n\t}\n}", "CodeBleu_score": 30.998293846787995}, {"code": "public void OnDamagePointRepaired(SubRoot subRoot, CyclopsDamagePoint damagePoint, float repairAmount){\n\t\tif (!subRoot.TryGetIdOrWarn(out var subRootId)) return;\n\tif (!damagePoint.TryGetIdOrWarn(out var damagePointId)) return;\n\tvar repairPacket = new CyclopsRepairPacket(subRootId, damagePointId, repairAmount);\n\tpacketSender.Send(repairPacket);\n}", "CodeBleu_score": 31.121041673540795}, {"code": "public void OnDamagePointRepaired(SubRoot subRoot, CyclopsDamagePoint damagePoint, float repairAmount){\n\t", "CodeBleu_score": 9.740564948536866}]}
{"instance_id": "dfb3586de856", "generation_result": [{"code": "private void BroadcastDamageState(SubRoot subRoot, Optional<DamageInfo> info){\n\t\tif (!subRoot.TryGetIdOrWarn(out NitroxId subRootId)) {\n\t\treturn;\n\t}\n\tif (subRoot.health.health <= 0) {\n\t\treturn;\n\t}\n\tCyclopsDamageInfoData infoData = null;\n\tif (info.hasValue) {\n\t\tinfoData = new CyclopsDamageInfoData(info.value.damage, info.value.damageType, info.value.damageSource);\n\t}\n\tIEnumerable<int> activeDamagePoints = GetActiveDamagePoints(subRoot);\n\tIEnumerable<CyclopsFireData> activeRoomFires = GetActiveRoomFires(subRoot.GetComponent<SubFire>());\n\tCyclopsDamage packet = new CyclopsDamage(subRootId, infoData, activeDamagePoints, activeRoomFires);\n\tpacketSender.Send(packet);\n}", "CodeBleu_score": 42.544162907793094}, {"code": "private void BroadcastDamageState(SubRoot subRoot, Optional<DamageInfo> info){\n\t\tif (!subRoot.TryGetIdOrWarn(out NitroxId subRootId)) {\n\t\treturn;\n\t}\n\n\tif (subRoot.GetComponent<LiveMixin>().health.currentHealth <= 0) {\n\t\treturn;\n\t}\n\n\tCyclopsDamageInfoData damageInfo;\n\tif (info.HasValue) {\n\t\tdamageInfo = new CyclopsDamageInfoData(info.Value.damage, info.Value.damageType, info.Value.position);\n\t} else {\n\t\tdamageInfo = new CyclopsDamageInfoData(0, DamageType.None, Vector3.zero);\n\t}\n\n\tList<int> activeDamagePoints = GetActiveDamagePoints(subRoot).ToList();\n\tList<CyclopsFireData> activeRoomFires = GetActiveRoomFires(subRoot.GetComponent<SubFire>()).ToList();\n\n\tCyclopsDamage packet = new CyclopsDamage(subRootId, damageInfo, activeDamagePoints, activeRoomFires);\n\tpacketSender.Send(packet);\n}", "CodeBleu_score": 54.5810566126136}, {"code": "private void BroadcastDamageState(SubRoot subRoot, Optional<DamageInfo> info){\n\t\tif (!subRoot.TryGetIdOrWarn(out NitroxId subRootId)) {\n\t\treturn;\n\t}\n\n\tif (subRoot.health < 1) {\n\t\treturn;\n\t}\n\n\tCyclopsDamageInfoData damageInfoData = null;\n\tif (info.HasValue) {\n\t\tdamageInfoData = new CyclopsDamageInfoData(subRootId, info.Value);\n\t}\n\n\tIEnumerable<int> activeDamagePoints = GetActiveDamagePoints(subRoot);\n\tIEnumerable<CyclopsFireData> activeRoomFires = GetActiveRoomFires(subRoot.GetComponent<SubFire>()).ToArray();\n\n\tCyclopsDamage packet = new CyclopsDamage(subRootId, damageInfoData, activeDamagePoints, activeRoomFires);\n\tpacketSender.Send(packet);\n}", "CodeBleu_score": 39.07353659371257}]}
{"instance_id": "03223c10109f", "generation_result": [{"code": "public void CleanupExistingEntities(List<Entity> dirtyEntities){\n\t\tforeach (Entity entity in dirtyEntities) {\n\t\tRemoveEntityHierarchy(entity);\n\t\tGameObject gameObject = NitroxEntity.GetObjectFrom(entity.Id);\n\t\tif (gameObject!= null) {\n\t\t\tUnityEngine.Object.Destroy(gameObject);\n\t\t}\n\t}\n}", "CodeBleu_score": 58.90349805040543}, {"code": "public void CleanupExistingEntities(List<Entity> dirtyEntities){\n\t\tforeach (Entity entity in dirtyEntities) {\n\t\tRemoveEntityHierarchy(entity);\n\n\t\tGameObject go = GetObjectFrom(entity.Id);\n\t\tif (go!= null) {\n\t\t\tUnityEngine.Object.Destroy(go);\n\t\t}\n\t}\n}", "CodeBleu_score": 50.46969287672849}, {"code": "public void CleanupExistingEntities(List<Entity> dirtyEntities){\n\t\tforeach (Entity entity in dirtyEntities) {\n\t\tRemoveEntityHierarchy(entity);\n\t\tGameObject go = GetObjectFrom(entity.Id);\n\t\tif (go!= null) {\n\t\t\tUnityEngine.Object.Destroy(go);\n\t\t}\n\t}\n}", "CodeBleu_score": 50.46969287672849}]}
{"instance_id": "990abe8e473e", "generation_result": [{"code": "private void AddPendingParentEntity(Entity entity){\n\t\tif (!pendingParentEntitiesByParentId.ContainsKey(entity.ParentId)) {\n\t\tpendingParentEntitiesByParentId.Add(entity.ParentId, new List<Entity>());\n\t}\n\tpendingParentEntitiesByParentId[entity.ParentId].Add(entity);\n}", "CodeBleu_score": 33.076651198602875}, {"code": "private void AddPendingParentEntity(Entity entity){\n\t\tif (pendingParentEntitiesByParentId.ContainsKey(entity.ParentId)) {\n\t\tpendingParentEntitiesByParentId[entity.ParentId].Add(entity);\n\t} else {\n\t\tList<Entity> pendingEntities = new List<Entity>();\n\t\tpendingEntities.Add(entity);\n\t\tpendingParentEntitiesByParentId.Add(entity.ParentId, pendingEntities);\n\t}\n}", "CodeBleu_score": 39.15713735626633}, {"code": "private void AddPendingParentEntity(Entity entity){\n\t\tif (pendingParentEntitiesByParentId.ContainsKey(entity.ParentId)) {\n\t\tpendingParentEntitiesByParentId[entity.ParentId].Add(entity);\n\t} else {\n\t\tpendingParentEntitiesByParentId.Add(entity.ParentId, new List<Entity>() { entity });\n\t}\n}", "CodeBleu_score": 27.50909405279235}]}
{"instance_id": "a885fbb1f085", "generation_result": [{"code": "public void BroadcastClawUse(ExosuitClawArm clawArm, float cooldown){\n\t\tif (clawArm.GetGameObject().TryGetIdOrWarn(out NitroxId id)) {\n\t\tExosuitClawActionPacket packet = new(id, cooldown);\n\t\tpacketSender.Send(packet);\n\t}\n}", "CodeBleu_score": 10.818904783869277}, {"code": "public void BroadcastClawUse(ExosuitClawArm clawArm, float cooldown){\n\t\tif (clawArm.GetGameObject().TryGetIdOrWarn(out NitroxId id)) {\n\t\tExosuitArmActionPacket packet = new(TechType.None, id, ExosuitArmAction.START_USE_TOOL, null, null);\n\t\tif (cooldown == PickupCooldown) {\n\t\t\tpacket.ArmAction = ExosuitArmAction.START_USE_TOOL;\n\t\t} else if (cooldown == PunchCooldown) {\n\t\t\tpacket.ArmAction = ExosuitArmAction.ALT_HIT;\n\t\t} else {\n\t\t\tLog.Error($\"Unknown cooldown time {cooldown} for claw {clawArm.GetGameObject().name}\");\n\t\t}\n\t\tpacketSender.Send(packet);\n\t}\n}", "CodeBleu_score": 46.292368649217885}, {"code": "public void BroadcastClawUse(ExosuitClawArm clawArm, float cooldown){\n\t\tif (cooldown <= pickupCooldown) {\n\t\tBroadcastArmAction(clawArm.TechType, clawArm, ExosuitArmAction.START_USE_TOOL, null, null);\n\t} else if (cooldown <= punchCooldown) {\n\t\tBroadcastArmAction(clawArm.TechType, clawArm, ExosuitArmAction.ALT_HIT, null, null);\n\t} else {\n\t\tLog.Error($\"ExosuitClawArm cooldown {cooldown} is not within the pickup or punch cooldowns.\");\n\t}\n}", "CodeBleu_score": 34.499931491066825}]}
{"instance_id": "e390441c8dc2", "generation_result": [{"code": "public void BroadcastBatteryAdd(GameObject gameObject, GameObject parent, TechType techType){\n\t// \n// // Metadata.\n// \n// Metadata metadata = entityMetadataManager.Extract(gameObject);\n// if (metadata.IsNull) {\n// return;\n// }\n// \n// // InstalledBatteryEntity.\n// \n// InstalledBatteryEntity entity = new InstalledBatteryEntity(techType, gameObject.TryGetIdOrWarn(), parent.TryGetIdOrWarn());\n// \n// // Packet.\n// \n// packetSender.Send(new EntitySpawnedByClient(entity));\n}", "CodeBleu_score": 12.073998608536533}, {"code": "public void BroadcastBatteryAdd(GameObject gameObject, GameObject parent, TechType techType){\n\t\t// TODO: Implement\n}", "CodeBleu_score": 12.073998608536533}, {"code": "public void BroadcastBatteryAdd(GameObject gameObject, GameObject parent, TechType techType){\n\t\n// Metadata.\nvar entityMetadataManager = new EntityMetadataManager(gameObject);\nvar metadata = entityMetadataManager.Extract();\n\n// Try to get the ID of the game object and its parent.\nvar gameObjectId = gameObject.TryGetIdOrWarn();\nvar parentId = parent.TryGetIdOrWarn();\n\n// Create an InstalledBatteryEntity.\nvar batteryEntity = new InstalledBatteryEntity(techType, metadata, gameObjectId, parentId);\n\n// Send an EntitySpawnedByClient packet.\npacketSender.Send(new EntitySpawnedByClient(batteryEntity));\n}", "CodeBleu_score": 33.1027466881394}]}
{"instance_id": "a87b772a8e5a", "generation_result": [{"code": "public void PickedUp(GameObject gameObject, TechType techType){\n\t\tif (gameObject == null) {\n\t\treturn;\n\t}\n\n\t// Stop entity position broadcasting\n\tEntityPositionBroadcaster.StopWatchingEntity(gameObject);\n\n\t// Convert to inventory item entity\n\tInventoryItemEntity inventoryItemEntity = ConvertToInventoryItemEntity(gameObject, entityMetadataManager);\n\n\t// Mark as spawned\n\tentities.MarkAsSpawned(inventoryItemEntity);\n\n\t// Log pickup event\n\tLog.Debug($\"[Items] Picked up {inventoryItemEntity.ClassId} {inventoryItemEntity.TechType} {inventoryItemEntity.Id}.\");\n\n\t// Create a pickup item packet\n\tPacketSender packetSender = new PacketSender(player.GetNetworkChannel());\n\tpacketSender.Send(new PickupItem(inventoryItemEntity.Id, player.GetNitroxId(), inventoryItemEntity.ChildEntities, inventoryItemEntity.TechType, inventoryItemEntity.Metadata.OrNull()));\n\n\t// Reset picking up object\n\tPickingUpObject = null;\n}", "CodeBleu_score": 40.49316247211483}, {"code": "public void PickedUp(GameObject gameObject, TechType techType){\n\t\tPickingUpObject = gameObject;\n\tRemoveAnyRemoteControl(gameObject);\n\tif (!NitroxEntity.TryGetNitroxId(gameObject, out NitroxId itemId)) {\n\t\titemId = NitroxEntity.GenerateNewId();\n\t}\n\tEntityPositionBroadcaster.StopWatchingEntity(gameObject);\n\tInventoryItemEntity inventoryItemEntity = ConvertToInventoryItemEntity(gameObject, EntityMetadataManager);\n\tentities.MarkAsSpawned(inventoryItemEntity);\n\tLog.Debug($\"Picked up {techType} with id {itemId}\");\n\tpacketSender.Send(new PickupItem(itemId, techType.ToDto(), inventoryItemEntity.ChildEntities));\n\tPickingUpObject = null;\n}", "CodeBleu_score": 52.99807259716742}, {"code": "public void PickedUp(GameObject gameObject, TechType techType){\n\t\tthis.PickingUpObject = gameObject;\n\tthis.RemoveAnyRemoteControl(gameObject);\n\tif (!gameObject.TryGetNitroxId(out NitroxId id)) {\n\t\tid = NitroxEntity.GenerateNewId();\n\t}\n\tthis.StopWatchingEntity(id);\n\tInventoryItemEntity inventoryItemEntity = NitroxEntity.ConvertToInventoryItemEntity(gameObject, this.EntityMetadataManager);\n\tinventoryItemEntity.Spawned = true;\n\tLog.Debug($\"Picked up {techType} {id}\");\n\tPacketSender.Send(new PickupItem(inventoryItemEntity));\n\tthis.PickingUpObject = null;\n}", "CodeBleu_score": 44.35522845350254}]}
{"instance_id": "b6d1e68114e1", "generation_result": [{"code": "public static InventoryItemEntity ConvertToInventoryItemEntity(GameObject gameObject, EntityMetadataManager entityMetadataManager){\n\troxId id = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\tTechType techType = gameObject.GetComponent<TechTag>().type;\n\tstring classId = gameObject.GetComponent<PrefabIdentifier>().classId;\n\tTechTag techTag = gameObject.GetComponent<TechTag>();\n\tTechType techType = (techTag)? techTag.type : TechType.None;\n\tNitroxId playerId = Player.main.GetComponent<NitroxPlayer>().Id;\n\tOptional<EntityMetadata> metadata = entityMetadataManager.Extract(gameObject);\n\tBatteryChildEntityHelper.TryPopulateInstalledBattery(gameObject, playerId, entityMetadataManager);\n\tList<Entity> children = GetPrefabChildren(gameObject, id, entityMetadataManager).ToList();\n\treturn new InventoryItemEntity(id, techType, classId, metadata.Value, children, playerId);\n}", "CodeBleu_score": 57.56096249664734}, {"code": "public static InventoryItemEntity ConvertToInventoryItemEntity(GameObject gameObject, EntityMetadataManager entityMetadataManager){\n\troxId id = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\tstring classId = gameObject.GetComponent<PrefabIdentifier>().classId;\n\tTechType techType = gameObject.GetComponent<TechTag>().type;\n\tOptional<EntityMetadata> metadata = entityMetadataManager.Extract(gameObject);\n\tList<Entity> children = GetPrefabChildren(gameObject, id, entityMetadataManager).ToList();\n\tNitroxId playerId = Player.main.GetComponent<Player>().GetNitroxId();\n\treturn new InventoryItemEntity(id, classId, techType.ToDto(), metadata.Value, children, playerId);\n}", "CodeBleu_score": 48.10593519264498}, {"code": "public static InventoryItemEntity ConvertToInventoryItemEntity(GameObject gameObject, EntityMetadataManager entityMetadataManager){\n\troxId id = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\tTechType techType = gameObject.RequireComponent<TechTag>().type;\n\tTechType techType = gameObject.RequireComponent<TechTag>().type;\n\tstring classId = gameObject.GetComponent<PrefabIdentifier>().classId;\n\tEntityMetadata metadata = entityMetadataManager.Extract(gameObject).Value;\n\tList<Entity> children = GetPrefabChildren(gameObject, id, entityMetadataManager).ToList();\n\tNitroxId playerId = Player.main.TryGetNitroxId();\n\treturn new InventoryItemEntity(id, techType, classId, metadata, children, playerId);\n}", "CodeBleu_score": 52.87958220462219}]}
{"instance_id": "e416d51a7af7", "generation_result": [{"code": "public LocalPlayer(IMultiplayerSession multiplayerSession, IPacketSender packetSender, ThrottledPacketSender throttledPacketSender){\n\t\tthis.multiplayerSession = multiplayerSession;\n\tthis.packetSender = packetSender;\n\tthis.throttledPacketSender = throttledPacketSender;\n\tthis.playerModel = new PlayerModel(this);\n\tthis.bodyPrototype = new PlayerBodyPrototype(this);\n\tthis.permissions = new PlayerPermissions();\n}", "CodeBleu_score": 38.98999767299172}, {"code": "public LocalPlayer(IMultiplayerSession multiplayerSession, IPacketSender packetSender, ThrottledPacketSender throttledPacketSender){\n\t", "CodeBleu_score": 2.6268543678398504}, {"code": "public LocalPlayer(IMultiplayerSession multiplayerSession, IPacketSender packetSender, ThrottledPacketSender throttledPacketSender){\n\t", "CodeBleu_score": 2.6268543678398504}]}
{"instance_id": "def56af985df", "generation_result": [{"code": "private GameObject CreateBodyPrototype{\n\t\tget {\n\t\tif (player.head.GetComponent<MeshRenderer>().shadowCastingMode == UnityEngine.Rendering.ShadowCastingMode.On) {\n\t\t\tplayer.head.GetComponent<MeshRenderer>().shadowCastingMode = UnityEngine.Rendering.ShadowCastingMode.Off;\n\t\t}\n\t\tGameObject clone = Instantiate(player.body);\n\t\tclone.SetActive(false);\n\t\tclone.name = \"RemotePlayerPrototype\";\n\t\tclone.transform.Find(\"Hand\").gameObject.SetActive(false);\n\t\treturn clone;\n\t}\n}", "CodeBleu_score": 29.680709563789314}, {"code": "private GameObject CreateBodyPrototype{\n\t\tget {\n\t\tif (head.activeSelf) {\n\t\t\thead.SetActive(false);\n\t\t}\n\t\tGameObject clone = Instantiate(bodyPrototype);\n\t\tclone.GetComponent<MeshRenderer>().shadowCastingMode = UnityEngine.Rendering.ShadowCastingMode.Off;\n\t\tclone.name = \"RemotePlayerPrototype\";\n\t\tclone.SetActive(false);\n\t\tif (clone.transform.Find(\"Hand\")) {\n\t\t\tDestroyImmediate(clone.transform.Find(\"Hand\").gameObject);\n\t\t}\n\t\treturn clone;\n\t}\n}", "CodeBleu_score": 28.779259729696292}, {"code": "private GameObject CreateBodyPrototype{\n\t\tget {\n\t\tif (bodyPrototype == null) {\n\t\t\thead.GetComponent<MeshRenderer>().shadowCastingMode = UnityEngine.Rendering.ShadowCastingMode.On;\n\t\t\tbodyPrototype = Instantiate(body);\n\t\t\tbodyPrototype.SetActive(false);\n\t\t\tbodyPrototype.name = \"RemotePlayerPrototype\";\n\t\t\tif (hand!= null) {\n\t\t\t\tDestroy(hand.gameObject);\n\t\t\t}\n\t\t}\n\t\treturn bodyPrototype;\n\t}\n}", "CodeBleu_score": 25.159980867845043}]}
{"instance_id": "e9bd7f669aed", "generation_result": [{"code": "void ICacheable.Save(BinaryWriter bw){\n\t\tbw.Write(this.GetType().AssemblyQualifiedName);\n\tbw.Write(this.Location);\n\tthis.Metadata.Save(bw);\n\tbw.Write(this.Processes.Count);\n\tforeach(ProcessInfo pi in this.Processes) {\n\t\tpi.Save(bw);\n\t}\n\tbw.Write(this.Dependencies.Count);\n\tforeach(BepInDependency bd in this.Dependencies) {\n\t\tbd.Save(bw);\n\t}\n\tbw.Write(this.Incompatibilities.Count);\n\tforeach(BepInIncompatibility bii in this.Incompatibilities) {\n\t\tbii.Save(bw);\n\t}\n\tbw.Write(this.TargettedBepInExVersion.ToString());\n}", "CodeBleu_score": 29.702169201603475}, {"code": "void ICacheable.Save(BinaryWriter bw){\n\t\tbw.Write(typeof(T).FullName);\n\tbw.Write(Location);\n\tbw.Write(Metadata.Version.ToString());\n\tbw.Write(Processes.Count);\n\tforeach (var process in Processes) {\n\t\tbw.Write(process.Name);\n\t\tbw.Write(process.Version.ToString());\n\t}\n\tbw.Write(Dependencies.Count);\n\tforeach (var dependency in Dependencies) {\n\t\t((ICacheable) dependency).Save(bw);\n\t}\n\tbw.Write(Incompatibilities.Count);\n\tforeach (var incompatibility in Incompatibilities) {\n\t\t((ICacheable) incompatibility).Save(bw);\n\t}\n\tbw.Write(TargettedBepInExVersion.ToString());\n}", "CodeBleu_score": 53.41196345082584}, {"code": "void ICacheable.Save(BinaryWriter bw){\n\t\tbw.Write(GetType().Name);\n\tbw.Write(Location);\n\t((ICacheable) Metadata).Save(bw);\n\tbw.Write(Processes.Count);\n\tforeach (var process in Processes) {\n\t\t((ICacheable) process).Save(bw);\n\t}\n\tbw.Write(Dependencies.Count);\n\tforeach (var dependency in Dependencies) {\n\t\t((ICacheable) dependency).Save(bw);\n\t}\n\tbw.Write(Incompatibilities.Count);\n\tforeach (var incompatibility in Incompatibilities) {\n\t\t((ICacheable) incompatibility).Save(bw);\n\t}\n\tbw.Write(TargettedBepInExVersion);\n}", "CodeBleu_score": 45.44271791186232}]}
{"instance_id": "a7e51620987d", "generation_result": [{"code": "public override BasePlugin LoadPlugin(PluginInfo pluginInfo, Assembly pluginAssembly){\n\t\tType pluginType = pluginAssembly.GetType(pluginInfo.TypeName);\n\tBasePlugin pluginInstance = (BasePlugin)Activator.CreateInstance(pluginType);\n\tpluginInstance.Load?.Invoke();\n\tpluginInstance.Load();\n\treturn pluginInstance;\n}", "CodeBleu_score": 62.04976697321063}, {"code": "public override BasePlugin LoadPlugin(PluginInfo pluginInfo, Assembly pluginAssembly){\n\t\tType pluginType = pluginAssembly.GetType(pluginInfo.PluginType);\n\tBasePlugin pluginInstance = (BasePlugin)Activator.CreateInstance(pluginType);\n\tPluginLoad?.Invoke(pluginInstance);\n\tpluginInstance.Load();\n\treturn pluginInstance;\n}", "CodeBleu_score": 56.606508047375414}, {"code": "public override BasePlugin LoadPlugin(PluginInfo pluginInfo, Assembly pluginAssembly){\n\t\tType pluginType = pluginAssembly.GetType(pluginInfo.PluginType);\n\tBasePlugin pluginInstance = (BasePlugin)Activator.CreateInstance(pluginType);\n\tpluginInstance.PluginLoad?.Invoke(pluginInstance);\n\tpluginInstance.Load(pluginInfo);\n\treturn pluginInstance;\n}", "CodeBleu_score": 57.26708177962925}]}
{"instance_id": "0925dc086c01", "generation_result": [{"code": "public MethodBase GenerateTrampoline(MethodBase signature = null){\n\t\tif (TrampolineMethod!= null) return TrampolineMethod;\n\tPrepare();\n\treturn GenerateNativeProxy(TrampolinePtr, signature);\n}", "CodeBleu_score": 30.19147302547408}, {"code": "public MethodBase GenerateTrampoline(MethodBase signature = null){\n\t\tif (TrampolineMethod == null) {\n\t\tPrepare();\n\t\tif (signature == null) {\n\t\t\tTrampolineMethod = GenerateNativeProxy();\n\t\t} else {\n\t\t\tTrampolineMethod = GenerateNativeProxy(signature);\n\t\t}\n\t}\n\treturn TrampolineMethod;\n}", "CodeBleu_score": 57.56402426969146}, {"code": "public MethodBase GenerateTrampoline(MethodBase signature = null){\n\t\tif (TrampolineMethod == null) {\n\t\tPrepare();\n\t\tif (signature!= null) {\n\t\t\tTrampolineMethod = NativeDetourHelper.GenerateNativeProxy(TrampolinePtr, signature);\n\t\t} else {\n\t\t\tTrampolineMethod = NativeDetourHelper.GenerateNativeProxy(TrampolinePtr);\n\t\t}\n\t}\n\treturn TrampolineMethod;\n}", "CodeBleu_score": 69.15205721155377}]}
{"instance_id": "cfab5c23610e", "generation_result": [{"code": "private static Dictionary<string, string> LoadLanguageInternal(string code){\n\t\tvar stream = Assembly.GetExecutingAssembly().GetManifestResourceStream($\"LocalizationLoader.Resources.{code}.json\");\n\tif (stream == null) throw new NullReferenceException($\"Language file for {code} not found.\");\n\ttry {\n\t\treturn JsonSerializer.Deserialize<Dictionary<string, string>>(stream);\n\t} catch (JsonException) {\n\t\tthrow;\n\t}\n}", "CodeBleu_score": 25.30880757139378}, {"code": "private static Dictionary<string, string> LoadLanguageInternal(string code){\n\t\tStream stream = typeof(LocalizationLoader).Assembly.GetManifestResourceStream($\"LocalizationLoader.lang.{code}.json\");\n\tif (stream == null) {\n\t\tthrow new NullReferenceException($\"Could not find language file for code {code}\");\n\t}\n\treturn JsonSerializer.Deserialize<Dictionary<string, string>>(stream);\n}", "CodeBleu_score": 28.3762528009171}, {"code": "private static Dictionary<string, string> LoadLanguageInternal(string code){\n\t\tvar stream = typeof(LocalizationLoader).Assembly.GetManifestResourceStream($\"LocalizationLoader.lang.{code}.json\");\n\tif (stream == null) {\n\t\tthrow new NullReferenceException($\"Language file not found for language code {code}\");\n\t}\n\ttry {\n\t\treturn JsonSerializer.Deserialize<Dictionary<string, string>>(stream);\n\t}\n\tcatch (JsonException) {\n\t\tthrow;\n\t}\n}", "CodeBleu_score": 26.849720967019376}]}
{"instance_id": "9978bd31d199", "generation_result": [{"code": "private int GenerateCodeForExpressionsInFormattedText(IList<IParseTree> nodes){\n\t\tint expressionCount = 0;\n\tforeach (var node in nodes) {\n\t\tif (node is ParserRuleContext) {\n\t\t\texpressionCount += ((ParserRuleContext)node).ChildCount;\n\t\t}\n\t}\n\treturn expressionCount;\n}", "CodeBleu_score": 47.782649422288124}, {"code": "private int GenerateCodeForExpressionsInFormattedText(IList<IParseTree> nodes){\n\t\tint count = 0;\n\tforeach (IParseTree node in nodes) {\n\t\tif (node is ParserRuleContext) {\n\t\t\tcount++;\n\t\t\tthis.Visit(node);\n\t\t}\n\t}\n\treturn count;\n}", "CodeBleu_score": 35.02806831084363}, {"code": "private int GenerateCodeForExpressionsInFormattedText(IList<IParseTree> nodes){\n\tint count = 0;\nforeach (IParseTree node in nodes) {\nif (node is ParserRuleContext) {\ncount++;\n}\n}\nreturn count;\n}", "CodeBleu_score": 28.974164668737128}]}
{"instance_id": "8f9bf9ee575a", "generation_result": [{"code": "public override int VisitLine_statement(YarnSpinnerParser.Line_statementContext context){\n\tthis.GenerateCodeForExpressionsInFormattedText(context.formatted_text());\nstring lineIDTag = Compiler.GetLineIDTag(context);\nif (lineIDTag == null)\nthrow new InvalidOperationException(\"Could not find line ID tag in line statement.\");\nthis.Emit(Opcode.RunLine, lineIDTag, context.formatted_text().expression().Length);\nreturn 0;\n}", "CodeBleu_score": 52.13240637257219}, {"code": "public override int VisitLine_statement(YarnSpinnerParser.Line_statementContext context){\n\t//line 114 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\nif (context.line_formatted_text()!= null) {\n//line 115 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\nthis.GenerateCodeForExpressionsInFormattedText(context.line_formatted_text());\n//line 116 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\n}\n//line 117 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\nvar lineID = Compiler.GetLineIDTag(context.line_id());\n//line 118 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\nif (lineID == null) {\n//line 119 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\nthrow new InvalidOperationException(\"Line ID tag not found.\");\n//line 120 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\n}\n//line 121 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\nthis.Emit(OpCode.RunLine, lineID.Value, context.expression_count().GetText());\n//line 122 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\nreturn 0;\n//line 123 \"C:\\\\Users\\\\\\\\Desktop\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner\\\\YarnSpinner.g4\"\n}", "CodeBleu_score": 56.50193492443354}, {"code": "public override int VisitLine_statement(YarnSpinnerParser.Line_statementContext context){\n\tint lineID = this.GetLineID(context.line_formatted_text());\nint expressionCount = this.GenerateCodeForExpressionsInFormattedText(context.line_formatted_text());\nif (lineID == -1) {\nthrow new InvalidOperationException(\"No line ID found in line statement.\");\n}\nthis.Emit(YarnSpinner.Opcode.RunLine);\nthis.Emit(lineID);\nthis.Emit(expressionCount);\nreturn 0;\n}", "CodeBleu_score": 37.98680993033671}]}
{"instance_id": "b70d033fed9c", "generation_result": [{"code": "private static IEnumerable<Diagnostic> UnknownCommands(YarnFileData yarnFile){\n\t", "CodeBleu_score": 1.9737119786745916}, {"code": "private static IEnumerable<Diagnostic> UnknownCommands(YarnFileData yarnFile){\n\t", "CodeBleu_score": 1.9737119786745916}, {"code": "private static IEnumerable<Diagnostic> UnknownCommands(YarnFileData yarnFile){\n\t\tvar diagnostics = new List<Diagnostic>();\n\tforeach (var commandReference in yarnFile.CommandReferences) {\n\t\tif (!yarnFile.KnownCommands.Contains(commandReference.Command)) {\n\t\t\tvar diagnostic = Diagnostic.Create(\n\t\t\t\tDiagnosticDescriptors.UnknownCommand,\n\t\t\t\tcommandReference.ParametersRange.Start.Location,\n\t\t\t\tcommandReference.Command,\n\t\t\t\tcommandReference.CommandReferenceRange.Start.Delta,\n\t\t\t\tcommandReference.CommandReferenceRange.End.Delta\n\t\t\t);\n\t\t\tdiagnostics.Add(diagnostic);\n\t\t}\n\t}\n\treturn diagnostics;\n}", "CodeBleu_score": 23.684212203572525}]}
{"instance_id": "9a072876f358", "generation_result": [{"code": "public CodeActionRegistrationOptions GetRegistrationOptions(CodeActionCapability capability, ClientCapabilities clientCapabilities){\n\t\treturn new CodeActionRegistrationOptions {\n\t\tDocumentSelector = new DocumentSelector(new[] {\n\t\t\tnew DocumentFilter {\n\t\t\t\tLanguage = \"yarn\",\n\t\t\t\tScheme = \"file\"\n\t\t\t}\n\t\t}),\n\t\tResolveProvider = false,\n\t\tCodeActionKinds = new[] {\n\t\t\tCodeActionKind.QuickFix\n\t\t}\n\t};\n}", "CodeBleu_score": 53.95559210394213}, {"code": "public CodeActionRegistrationOptions GetRegistrationOptions(CodeActionCapability capability, ClientCapabilities clientCapabilities){\n\t", "CodeBleu_score": 6.910749887959125}, {"code": "public CodeActionRegistrationOptions GetRegistrationOptions(CodeActionCapability capability, ClientCapabilities clientCapabilities){\n\t\tvar documentSelector = new DocumentSelector(new [] {\n\t\tnew DocumentFilter() {\n\t\t\tLanguage = \"yarn\",\n\t\t\tScheme = \"file\",\n\t\t\tPattern = \"**/*.yarn\"\n\t\t}\n\t});\n\tvar registrationOptions = new CodeActionRegistrationOptions() {\n\t\tDocumentSelector = documentSelector,\n\t\tProviderRegistrationOptions = new CodeActionProviderOptions() {\n\t\t\tResolveProvider = false,\n\t\t\tCodeActionKinds = new [] {\n\t\t\t\tCodeActionKind.QuickFix\n\t\t\t}\n\t\t}\n\t};\n\treturn registrationOptions;\n}", "CodeBleu_score": 32.91906446140822}]}
{"instance_id": "7b61df32aee3", "generation_result": [{"code": "public bool TryGetValue<T>(string variableName, out T result){\n\t\tif (this.variables.TryGetValue(variableName, out object foundValue)) {\n\t\tif (foundValue.GetType().IsAssignableFrom(typeof(T))) {\n\t\t\tresult = (T)foundValue;\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthrow new ArgumentException($\"The type of the variable {variableName} is incompatible with the type {typeof(T)}.\");\n\t\t}\n\t} else {\n\t\tresult = default;\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 57.07350092707699}, {"code": "public bool TryGetValue<T>(string variableName, out T result){\n\t\tif (this.variables.TryGetValue(variableName, out var foundValue)) {\n\t\tif (foundValue.GetType() == typeof(T)) {\n\t\t\tresult = (T)foundValue;\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthrow new ArgumentException($\"The variable {variableName} is of type {foundValue.GetType()} and cannot be converted to type {typeof(T)}.\");\n\t\t}\n\t}\n\telse {\n\t\tresult = default(T);\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 61.7441337972213}, {"code": "public bool TryGetValue<T>(string variableName, out T result){\n\t\tobject foundValue;\n\tif (this.variables.TryGetValue(variableName, out foundValue)) {\n\t\tif (foundValue.GetType().IsAssignableFrom(typeof(T))) {\n\t\t\tresult = (T)foundValue;\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthrow new ArgumentException(string.Format(\"The variable {0} has type {1}, which is not compatible with the type {2}.\", variableName, foundValue.GetType().Name, typeof(T).Name));\n\t\t}\n\t} else {\n\t\tresult = default(T);\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 61.16098475960467}]}
{"instance_id": "7201488347ef", "generation_result": [{"code": "public Dialogue(Yarn.IVariableStorage variableStorage){\n\t\tthis.VariableStorage = variableStorage;\n\tthis.Library = new Library();\n\tthis.VirtualMachine = new VirtualMachine();\n\tthis.VirtualMachine.SetVariableStorage(variableStorage);\n\tthis.VirtualMachine.RegisterFunction(nameof(GetNodeVisitCount), new GetNodeVisitCount(this));\n\tthis.VirtualMachine.RegisterFunction(nameof(IsNodeVisited), new IsNodeVisited(this));\n\tthis.Library.ImportLibrary(new StandardLibrary());\n\tthis.LineParser = new LineParser();\n\tthis.LineParser.RegisterMarkerProcessor(new SelectMarkerProcessor());\n\tthis.LineParser.RegisterMarkerProcessor(new PluralMarkerProcessor());\n\tthis.LineParser.RegisterMarkerProcessor(new OrdinalMarkerProcessor());\n}", "CodeBleu_score": 32.03514728192414}, {"code": "public Dialogue(Yarn.IVariableStorage variableStorage){\n\t\tLibrary = new Library();\n\tVirtualMachine = new VirtualMachine(Library);\n\tLibrary.ImportLibrary(new StandardLibrary());\n\tRegisterFunction(nameof(GetNodeVisitCount), GetNodeVisitCount);\n\tRegisterFunction(nameof(IsNodeVisited), IsNodeVisited);\n\tlineParser = new LineParser();\n\tlineParser.RegisterMarkerProcessor(new SelectMarkerProcessor());\n\tlineParser.RegisterMarkerProcessor(new PluralMarkerProcessor());\n\tlineParser.RegisterMarkerProcessor(new OrdinalMarkerProcessor());\n}", "CodeBleu_score": 31.927212613957366}, {"code": "public Dialogue(Yarn.IVariableStorage variableStorage){\n\t\tthis.VariableStorage = variableStorage;\n\tthis.Library = new Library();\n\tthis.VirtualMachine = new VirtualMachine();\n\tthis.Library.ImportLibrary(new StandardLibrary());\n\tthis.Library.RegisterFunction(\"get_node_visit_count\", GetNodeVisitCount);\n\tthis.Library.RegisterFunction(\"is_node_visited\", IsNodeVisited);\n\tthis.LineParser = new LineParser();\n\tthis.LineParser.RegisterMarkerProcessor(new SelectMarkerProcessor());\n\tthis.LineParser.RegisterMarkerProcessor(new PluralMarkerProcessor());\n\tthis.LineParser.RegisterMarkerProcessor(new OrdinalMarkerProcessor());\n}", "CodeBleu_score": 30.802257352127615}]}
{"instance_id": "59b7b5a9c34a", "generation_result": [{"code": "public int FindUniqueID(string UniqueID){\n\t\tint result = -1;\n\tif (!string.IsNullOrEmpty(UniqueID)) {\n\t\tfor (int i = 0; i < m_LoopListBankData.Count; i++) {\n\t\t\tif (m_LoopListBankData[i].UniqueID == UniqueID) {\n\t\t\t\tresult = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}", "CodeBleu_score": 52.3237816163622}, {"code": "public int FindUniqueID(string UniqueID){\n\t\tif (string.IsNullOrEmpty(UniqueID)) return -1;\n\tfor (int i = 0; i < m_LoopListBankData.Count; i++) {\n\t\tif (m_LoopListBankData[i].UniqueID == UniqueID) return i;\n\t}\n\treturn -1;\n}", "CodeBleu_score": 56.30587026468354}, {"code": "public int FindUniqueID(string UniqueID){\n\t\tif (string.IsNullOrEmpty(UniqueID)) return -1;\n\tfor (int i = 0; i < LoopListBankData.Count; i++) {\n\t\tif (LoopListBankData[i].UniqueID == UniqueID) return i;\n\t}\n\treturn -1;\n}", "CodeBleu_score": 55.53069365932583}]}
{"instance_id": "2b85606238aa", "generation_result": [{"code": "public void AddContent(object newContent){\n\t\tLoopListBankData newLoopListBankData = new LoopListBankData();\n\tnewLoopListBankData.m_Content = newContent;\n\tnewLoopListBankData.m_ID = System.Guid.NewGuid().ToString();\n\tm_LoopListBankDataList.Add(newLoopListBankData);\n}", "CodeBleu_score": 58.975190577271654}, {"code": "public void AddContent(object newContent){\n\t\tLoopListBankData newLoopListBankData = new LoopListBankData();\n\tnewLoopListBankData.Content = newContent;\n\tnewLoopListBankData.ID = System.Guid.NewGuid().ToString();\n\tm_LoopListBankDataList.Add(newLoopListBankData);\n}", "CodeBleu_score": 59.41674068854811}, {"code": "public void AddContent(object newContent){\n\t\tLoopListBankData newItem = new LoopListBankData();\n\tnewItem.Content = newContent;\n\tnewItem.ID = System.Guid.NewGuid().ToString();\n\tm_LoopListBankDataList.Add(newItem);\n}", "CodeBleu_score": 57.1983271115287}]}
{"instance_id": "34e593106991", "generation_result": [{"code": "public virtual void ScrollCellIndex(int idx, object content, string ClickUniqueID = \"\", object ClickObject = null){\n\t", "CodeBleu_score": 10.244596408321145}, {"code": "public virtual void ScrollCellIndex(int idx, object content, string ClickUniqueID = \"\", object ClickObject = null){\n\t\tm_IndexID = idx;\n\tm_Content = content;\n\tif (m_IsUpdateGameObjectName) {\n\t\tthis.gameObject.name = m_Prefab.name + \" \" + idx.ToString();\n\t}\n\tif (ClickUniqueID!= \"\") {\n\t\tm_ClickUniqueID = ClickUniqueID;\n\t\tm_ClickObject = ClickObject;\n\t}\n}", "CodeBleu_score": 56.58851544490757}, {"code": "public virtual void ScrollCellIndex(int idx, object content, string ClickUniqueID = \"\", object ClickObject = null){\n\t\tif (m_IndexID == idx) {\n\t\treturn;\n\t}\n\tm_IndexID = idx;\n\tm_Content = content;\n\tif (m_IsUpdateGameObjectName) {\n\t\tgameObject.name = string.Format(\"{0} [{1}]\", m_Prefab.name, idx);\n\t}\n\tif (m_IsUpdateGameObjectName && m_IsUpdateContent) {\n\t\tm_ContentText.text = string.Format(\"{0} [{1}]\", m_Content.ToString(), idx);\n\t}\n\tif (m_IsUpdateContent) {\n\t\tm_ContentText.text = m_Content.ToString();\n\t}\n\tif (m_IsUpdateClickUniqueID) {\n\t\tm_ClickUniqueID = ClickUniqueID;\n\t}\n\tif (m_IsUpdateClickObject) {\n\t\tm_ClickObject = ClickObject;\n\t}\n}", "CodeBleu_score": 55.612184578861346}]}
{"instance_id": "6b6a6cc329cc", "generation_result": [{"code": "private void OnButtonAddDataClickk(){\n\t\tint numToAdd = 0;\n\tif (int.TryParse(m_InputFieldAddData.text, out numToAdd) && numToAdd > 0) {\n\t\tfor (int i = 0; i < numToAdd; i++) {\n\t\t\tm_ListBank.AddContent(Random.Range(0, 10));\n\t\t}\n\t\tm_LoopScrollRect.RefreshCells();\n\t}\n}", "CodeBleu_score": 32.92926248071608}, {"code": "private void OnButtonAddDataClickk(){\n\t\tint numToAdd = 0;\n\tif (int.TryParse(m_InputFieldAddData.text, out numToAdd)) {\n\t\tif (numToAdd > 0) {\n\t\t\tfor (int i = 0; i < numToAdd; i++) {\n\t\t\t\tm_ListBank.AddContent(Random.Range(0, 10));\n\t\t\t}\n\t\t\tm_LoopScrollRect.RefreshCells();\n\t\t}\n\t}\n}", "CodeBleu_score": 30.683499357555817}, {"code": "private void OnButtonAddDataClickk(){\n\t\tint numToAdd = 0;\n\tif (int.TryParse(m_InputFieldAddData.text, out numToAdd) && numToAdd > 0) {\n\t\tfor (int i = 0; i < numToAdd; i++) {\n\t\t\tm_ListBank.AddContent(Random.Range(0, 10));\n\t\t}\n\t\tm_LoopScrollRect.RefreshCells();\n\t}\n}", "CodeBleu_score": 32.92926248071608}]}
{"instance_id": "209961c9eb8e", "generation_result": [{"code": "protected override void ClearTempPool(){\n\t\tif (m_Content == null) {\n\t\treturn;\n\t}\n\tif (m_Content.childCount!= m_NumItems) {\n\t\tDebug.LogError(\"ClearTempPool() called on a content pool that does not have the expected number of children!\");\n\t\treturn;\n\t}\n\tif (m_StartIndex > 0) {\n\t\tm_PrefabSource.ReturnObject(m_Content.GetChild(m_StartIndex - 1));\n\t\tm_StartIndex = 0;\n\t}\n\tif (m_EndIndex < m_NumItems - 1) {\n\t\tm_PrefabSource.ReturnObject(m_Content.GetChild(m_EndIndex + 1));\n\t\tm_EndIndex = m_NumItems - 1;\n\t}\n}", "CodeBleu_score": 32.90711428468388}, {"code": "protected override void ClearTempPool(){\n\t\n}", "CodeBleu_score": 1.2759667216965314}, {"code": "protected override void ClearTempPool(){\n\t\n}", "CodeBleu_score": 1.2759667216965314}]}
{"instance_id": "c6bb290de2b3", "generation_result": [{"code": "public void AnticipateScale(Vector3 newScale){\n\t\n}", "CodeBleu_score": 2.0649604624249824}, {"code": "public void AnticipateScale(Vector3 newScale){\n\t\n}", "CodeBleu_score": 2.0649604624249824}, {"code": "public void AnticipateScale(Vector3 newScale){\n\t\n}", "CodeBleu_score": 2.0649604624249824}]}
{"instance_id": "d67d3c80dd00", "generation_result": [{"code": "private void FlushMessages(){\n\tm_SendTriggerUpdates.Clear\nm_NetworkAnimator.SendParametersUpdateClientRpc\nm_SendParameterUpdates.Clear\nm_NetworkAnimator.SendAnimTriggerServerRpc\nm_SendAnimationUpdates.Clear\nm_NetworkAnimator.SendAnimStateClientRpc\n}", "CodeBleu_score": 4.469972533540806}, {"code": "private void FlushMessages(){\n\t", "CodeBleu_score": 0.843141799522195}, {"code": "private void FlushMessages(){\n\t\tif (m_SendTriggerUpdates.Count > 0) {\n\t\tm_NetworkAnimator.SendAnimTriggerServerRpc(m_SendTriggerUpdates);\n\t\tm_SendTriggerUpdates.Clear();\n\t}\n\tif (m_SendParameterUpdates.Count > 0) {\n\t\tm_NetworkAnimator.SendParametersUpdateServerRpc(m_SendParameterUpdates);\n\t\tm_SendParameterUpdates.Clear();\n\t}\n\tif (m_SendAnimationUpdates.Count > 0) {\n\t\tm_NetworkAnimator.SendAnimationUpdateServerRpc(m_SendAnimationUpdates);\n\t\tm_SendAnimationUpdates.Clear();\n\t}\n}", "CodeBleu_score": 27.658528041416563}]}
{"instance_id": "0632b2f27d22", "generation_result": [{"code": "public void NetworkUpdate(NetworkUpdateStage updateStage){\n\t\nif (updateStage == NetworkUpdateStage.PreUpdate)\n{\nif (m_NetworkAnimator.IsOwner || m_NetworkAnimator.IsServerAuthoritative)\n{\nFlushMessages();\n}\n\nm_NetworkAnimator.ProcessParameterUpdates();\nm_NetworkAnimator.CheckForAnimatorChanges();\n}\nelse if (updateStage == NetworkUpdateStage.PostUpdate)\n{\nif (m_NetworkAnimator.IsOwner || m_NetworkAnimator.IsServerAuthoritative)\n{\nm_NetworkAnimator.SendAnimStateServerRpc(m_NetworkAnimator.m_CurrentState);\n}\n\nif (m_NetworkAnimator.IsServerAuthoritative)\n{\nm_NetworkAnimator.SendParametersUpdateServerRpc(m_NetworkAnimator.m_Parameters);\n}\n}\n\n}", "CodeBleu_score": 33.68529079197929}, {"code": "public void NetworkUpdate(NetworkUpdateStage updateStage){\n\t\nif (updateStage == NetworkUpdateStage.PreUpdate) {\n\nif (m_NetworkAnimator.IsServerAuthoritative || m_NetworkAnimator.IsOwner) {\nFlushMessages();\n}\n\nm_NetworkAnimator.UpdateParameters();\nm_NetworkAnimator.CheckForAnimatorChanges();\n}\n\nif (updateStage == NetworkUpdateStage.PostUpdate) {\n\nm_NetworkAnimator.CheckForTriggerEvents();\n}\n}", "CodeBleu_score": 26.61160741082912}, {"code": "public void NetworkUpdate(NetworkUpdateStage updateStage){\n\t\tif (updateStage == NetworkUpdateStage.PreUpdate) {\n\t\tFlushMessages ();\n\t\tm_NetworkAnimator.ProcessParameterUpdates ();\n\t\tm_NetworkAnimator.CheckForAnimatorChanges ();\n\t}\n}", "CodeBleu_score": 13.599986039166811}]}
{"instance_id": "d78874b65b32", "generation_result": [{"code": "private void UpdateOwnershipAuthority(){\n\t\n}", "CodeBleu_score": 2.3840384578957123}, {"code": "private void UpdateOwnershipAuthority(){\n\t\tif (isServer &&!isLocalPlayer) {\n\t\tif (isOwnedByLocalPlayer) {\n\t\t\tif (isOwnedByServer) {\n\t\t\t\tSetOwnership(isOwnedByServer);\n\t\t\t} else {\n\t\t\t\tSetOwnership(isOwnedByLocalPlayer);\n\t\t\t}\n\t\t} else {\n\t\t\tSetOwnership(isOwnedByServer);\n\t\t}\n\t}\n}", "CodeBleu_score": 10.165547765903499}, {"code": "private void UpdateOwnershipAuthority(){\n\t\t// If the object is owned by the local player, set the authority to local authority and disable interpolation.\n\tif (isOwnedByLocalPlayer) {\n\t\t// Set the authority to local authority.\n\t\tSetOwnership(true, true);\n\t}\n\t// If the object is owned by a remote player, set the authority to remote authority and enable interpolation.\n\telse if (isOwnedByRemotePlayer) {\n\t\t// Set the authority to remote authority.\n\t\tSetOwnership(false, true);\n\t}\n\t// If the object is not owned by a player, set the authority to none and disable interpolation.\n\telse {\n\t\t// Set the authority to none.\n\t\tSetOwnership(false, false);\n\t}\n}", "CodeBleu_score": 5.267020198433293}]}
{"instance_id": "304fe1278db9", "generation_result": [{"code": "public static void DecompressQuaternion(ref Quaternion quaternion, uint compressed){\n\t", "CodeBleu_score": 2.8253030377269566}, {"code": "public static void DecompressQuaternion(ref Quaternion quaternion, uint compressed){\n\t", "CodeBleu_score": 2.8253030377269566}, {"code": "public static void DecompressQuaternion(ref Quaternion quaternion, uint compressed){\n\t", "CodeBleu_score": 2.8253030377269566}]}
{"instance_id": "452b860a7dde", "generation_result": [{"code": "static void GenerateCLRBindingByAnalysis(){\n\t", "CodeBleu_score": 1.092067877948932}, {"code": "static void GenerateCLRBindingByAnalysis(){\n\t", "CodeBleu_score": 1.092067877948932}, {"code": "static void GenerateCLRBindingByAnalysis(){\n\t\tvar assemblyName = \"Assembly-CSharp\";\n\tvar domain = AppDomain.CurrentDomain;\n\tvar assembly = domain.Load(assemblyName);\n\tILRuntime.Runtime.CLRBinding.BindingCodeGenerator.GenerateBindingCode(assembly, \"Assets/Dependencies/ILRuntime/Generated\");\n\tILRuntime.Runtime.CLRBinding.BindingCodeGenerator.GenerateCrossBindingCode(assembly, \"Assets/Dependencies/ILRuntime/Generated\");\n\tILRuntime.Runtime.Generated.CLRBindings.Initialize(domain);\n}", "CodeBleu_score": 20.15934440318223}]}
{"instance_id": "b8990031b636", "generation_result": [{"code": "public override void OnInspectorGUI(){\n\t\tserializedObject.Update();\n\tEditorGUI.BeginDisabledGroup(Application.isPlaying &&!IsPrefabInHierarchy());\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperInfo\"));\n\tEditorGUILayout.LabelField(\"Config Count: \" + m_ConfigHelperInfo.Count.ToString());\n\tEditorGUILayout.LabelField(\"Cached Bytes Size: \" + m_ConfigHelperInfo.CachedBytesSize.ToString());\n\tEditorGUI.EndDisabledGroup();\n\tserializedObject.ApplyModifiedProperties();\n\tRepaint();\n}", "CodeBleu_score": 39.391296236766394}, {"code": "public override void OnInspectorGUI(){\n\t\tserializedObject.Update();\n\tEditorGUI.BeginDisabledGroup(Application.isPlaying &&!IsPrefabInHierarchy());\n\tEditorGUILayout.LabelField(\"Config Count: \" + m_ConfigHelperInfo.ConfigCount.ToString());\n\tEditorGUILayout.LabelField(\"Cached Bytes Size: \" + m_ConfigHelperInfo.CachedBytesSize.ToString());\n\tEditorGUI.EndDisabledGroup();\n\tserializedObject.ApplyModifiedProperties();\n\tRepaint();\n}", "CodeBleu_score": 36.14744137396343}, {"code": "public override void OnInspectorGUI(){\n\t\tserializedObject.Update();\n\tEditorGUI.BeginDisabledGroup(Application.isPlaying &&!IsPrefabInHierarchy());\n\tEditorGUILayout.LabelField(\"Config Count: \" + t.Count.ToString());\n\tEditorGUILayout.LabelField(\"Cached Bytes Size: \" + t.CachedBytesSize.ToString());\n\tEditorGUI.EndDisabledGroup();\n\tserializedObject.ApplyModifiedProperties();\n\tRepaint();\n}", "CodeBleu_score": 35.004375662782216}]}
{"instance_id": "6453adc2daa8", "generation_result": [{"code": "public static void DefaultScenes(){\n\t\tHashSet<string> defaultSceneNames = new HashSet<string>() {\n\t\t\"Assets/Scenes/Main.unity\",\n\t\t\"Assets/Scenes/Menu.unity\",\n\t\t\"Assets/Scenes/Level.unity\"\n\t};\n\tList<EditorBuildSettingsScene> defaultScenes = new List<EditorBuildSettingsScene>();\n\tforeach (string sceneName in defaultSceneNames) {\n\t\tdefaultScenes.Add(new EditorBuildSettingsScene(sceneName, true));\n\t}\n\tEditorBuildSettings.scenes = defaultScenes.ToArray();\n\tDebug.Log(\"Scenes set to default\");\n}", "CodeBleu_score": 54.15995648704979}, {"code": "public static void DefaultScenes(){\n\t\tHashSet<string> defaultSceneNames = new HashSet<string> {\n\t\t\"Assets/Scenes/MainMenu.unity\",\n\t\t\"Assets/Scenes/Game.unity\",\n\t\t\"Assets/Scenes/GameOver.unity\"\n\t};\n\tList<EditorBuildSettingsScene> defaultScenes = new List<EditorBuildSettingsScene>();\n\tforeach (string sceneName in defaultSceneNames) {\n\t\tdefaultScenes.Add(new EditorBuildSettingsScene(sceneName, true));\n\t}\n\tEditorBuildSettings.scenes = defaultScenes.ToArray();\n\tDebug.Log(\"Scenes set to default.\");\n}", "CodeBleu_score": 54.21714352354303}, {"code": "public static void DefaultScenes(){\n\t", "CodeBleu_score": 1.3756526078371607}]}
{"instance_id": "e199f1a42526", "generation_result": [{"code": "public void Draw(){\n\t\t// Draw the popup menu for selecting the helper type.\n\tEditorGUILayout.BeginHorizontal();\n\tGUILayout.FlexibleSpace();\n\tm_SelectedHelperIndex = EditorGUILayout.Popup(m_SelectedHelperIndex, m_HelperNames);\n\tGUILayout.FlexibleSpace();\n\tEditorGUILayout.EndHorizontal();\n\n\t// If no helper type is selected, display a field for a custom helper.\n\tif (m_SelectedHelperIndex == 0) {\n\t\tGUILayout.BeginHorizontal();\n\t\tGUILayout.FlexibleSpace();\n\t\tm_CustomHelper = EditorGUILayout.ObjectField(m_CustomHelper, typeof(Component), true) as Component;\n\t\tGUILayout.FlexibleSpace();\n\t\tGUILayout.EndHorizontal();\n\n\t\t// Show an error message if the custom helper is not set.\n\t\tif (m_CustomHelper == null) {\n\t\t\tEditorGUILayout.HelpBox(\"You need to set a custom helper.\", MessageType.Error);\n\t\t}\n\t}\n}", "CodeBleu_score": 37.230964471607585}, {"code": "public void Draw(){\n\t\t// Draw the popup menu.\n\tint selectedIndex = DrawPopup(m_HelperTypeIndex);\n\tif (selectedIndex!= m_HelperTypeIndex)\n\t{\n\t\t// The selected index has changed.\n\t\tm_HelperTypeIndex = selectedIndex;\n\t\tm_HelperType = (HelperType)selectedIndex;\n\t}\n\telse\n\t{\n\t\t// The selected index has not changed.\n\t\t// Draw the helper type field.\n\t\tEditorGUI.BeginChangeCheck();\n\t\tm_HelperType = (HelperType)EditorGUILayout.EnumPopup(m_HelperType);\n\t\tif (EditorGUI.EndChangeCheck())\n\t\t{\n\t\t\t// The helper type has changed.\n\t\t\tm_HelperTypeIndex = (int)m_HelperType;\n\t\t}\n\t}\n\t// Draw the helper field.\n\tswitch (m_HelperType)\n\t{\n\t\tcase HelperType.Custom:\n\t\t\tEditorGUI.BeginChangeCheck();\n\t\t\tm_CustomHelper = EditorGUILayout.ObjectField(m_CustomHelper, typeof(GameObject), true) as GameObject;\n\t\t\tif (EditorGUI.EndChangeCheck())\n\t\t\t{\n\t\t\t\t// The custom helper has changed.\n\t\t\t\tif (m_CustomHelper == null)\n\t\t\t\t{\n\t\t\t\t\t// The custom helper is not set.\n\t\t\t\t\tm_HelperType = HelperType.None;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase HelperType.None:\n\t\t\tEditorGUILayout.HelpBox(\"No helper selected.\", MessageType.Error);\n\t\t\tbreak;\n\t}\n}", "CodeBleu_score": 38.46899633224034}, {"code": "public void Draw(){\n\t\n}", "CodeBleu_score": 0.8386193950343431}]}
{"instance_id": "957e0aaa6f72", "generation_result": [{"code": "public static void DisableAllLogs(){\n\t", "CodeBleu_score": 2.9649991162360623}, {"code": "public static void DisableAllLogs(){\n\t\n}", "CodeBleu_score": 3.1444638427661897}, {"code": "public static void DisableAllLogs(){\n\t\n}", "CodeBleu_score": 3.1444638427661897}]}
{"instance_id": "8a544c3d9513", "generation_result": [{"code": "public static GameFrameworkComponent GetComponent(Type type){\n\t\n}", "CodeBleu_score": 3.532359924083866}, {"code": "public static GameFrameworkComponent GetComponent(Type type){\n\t\tthrow new NotImplementedException(\"This function, GetComponent, is not implemented in this version of Unity.\");\n}", "CodeBleu_score": 4.757591343349549}, {"code": "public static GameFrameworkComponent GetComponent(Type type){\n\t\treturn default(GameFrameworkComponent);\n}", "CodeBleu_score": 3.915091670100279}]}
{"instance_id": "ec304512c0e4", "generation_result": [{"code": "public static void Shutdown(ShutdownType shutdownType){\n\t\tLog.Info\n\tif (s_BaseComponent) {\n\t\ts_BaseComponent.Shutdown\n\t}\n\ts_GameFrameworkComponents.Clear\n\tswitch (shutdownType) {\n\t\tcase ShutdownType.Restart:\n\t\t\tSceneManager.LoadScene\n\t\t\tbreak\n\t\tcase ShutdownType.Quit:\n\t\t\tApplication.Quit\n\t\t\tbreak\n\t\tcase ShutdownType.None:\n\t\t\tbreak\n\t}\n}", "CodeBleu_score": 14.884369745461775}, {"code": "public static void Shutdown(ShutdownType shutdownType){\n\t\tif (s_GameFramework!= null) {\n\t\tLog.Info(\"Shutdown\");\n\t\tif (s_GameFramework.GetComponent<BaseComponent>()!= null) {\n\t\t\ts_GameFramework.GetComponent<BaseComponent>().Shutdown();\n\t\t}\n\t\ts_GameFrameworkComponents.Clear();\n\t}\n\tswitch (shutdownType) {\n\tcase ShutdownType.Restart:\n\t\tSceneManager.LoadScene(SceneManager.GetActiveScene().name);\n\t\tbreak;\n\tcase ShutdownType.Quit:\n\t\tApplication.Quit();\n\t\tbreak;\n\t}\n}", "CodeBleu_score": 26.76418240917006}, {"code": "public static void Shutdown(ShutdownType shutdownType){\n\t\tif (s_GameFrameworkComponents == null) {\n\t\treturn;\n\t}\n\tLog.Info(\"GameFramework\", \"Shutting down Game Framework...\");\n\tif (s_BaseComponent!= null) {\n\t\ts_BaseComponent.Shutdown();\n\t}\n\ts_GameFrameworkComponents.Clear();\n\tswitch (shutdownType) {\n\t\tcase ShutdownType.Restart:\n\t\t\tSceneManager.LoadScene(SceneManager.GetActiveScene().name);\n\t\t\tbreak;\n\t\tcase ShutdownType.Quit:\n\t\t\tApplication.Quit();\n\t\t\tbreak;\n\t\tcase ShutdownType.None:\n\t\t\tbreak;\n\t}\n}", "CodeBleu_score": 26.530665254438425}]}
{"instance_id": "5c78a1d4f59d", "generation_result": [{"code": "protected override void Awake(){\n\t\tbase.Awake();\n\tif (this.m_ConfigManager == null) {\n\t\tLog.Fatal(\"Config manager is invalid.\");\n\t}\n\tthis.m_ConfigManager.OnReadSuccess += new EventHandler<GameFrameworkEventArgs>(this.OnReadSuccess);\n\tthis.m_ConfigManager.OnReadFailure += new EventHandler<GameFrameworkEventArgs>(this.OnReadFailure);\n\tif (this.m_UpdateConfig) {\n\t\tthis.m_ConfigManager.UpdateConfig += new EventHandler<GameFrameworkEventArgs>(this.OnUpdateConfig);\n\t}\n\tif (this.m_UpdateDependencyAsset) {\n\t\tthis.m_ConfigManager.UpdateDependencyAsset += new EventHandler<GameFrameworkEventArgs>(this.OnUpdateDependencyAsset);\n\t}\n}", "CodeBleu_score": 37.9655887808567}, {"code": "protected override void Awake(){\n\t\tbase.Awake();\n\tif (GameFrameworkEntry.GetModule<IConfigManager>() == null) {\n\t\tLog.Fatal(\"ConfigManager is invalid.\");\n\t}\n\tthis.m_ConfigManager = GameFrameworkEntry.GetModule<IConfigManager>();\n\tthis.m_ConfigManager.AddLoadDataSuccessListener(new DataLoadSuccessCallback(this.OnLoadDataSuccess));\n\tthis.m_ConfigManager.AddLoadDataFailureListener(new DataLoadFailureCallback(this.OnLoadDataFailure));\n\tif (this.m_LoadConfigAsset) {\n\t\tthis.m_ConfigManager.AddUpdateConfigAssetEvent(new UpdateConfigAssetCallback(this.OnUpdateConfigAsset));\n\t\tthis.m_ConfigManager.AddDependencyAssetEvent(new DependencyAssetCallback(this.OnDependencyAsset));\n\t}\n}", "CodeBleu_score": 34.96730716786937}, {"code": "protected override void Awake(){\n\t\tbase.Awake();\n\tIConfigManager configManager = GameFrameworkEntry.GetModule<IConfigManager>();\n\tif (configManager == null) {\n\t\tLog.Fatal(\"Config manager is invalid.\");\n\t\treturn;\n\t}\n\tconfigManager.Init(this);\n\tconfigManager.OnReadDataSuccess += OnReadDataSuccess;\n\tconfigManager.OnReadDataFailure += OnReadDataFailure;\n\tif (m_UpdateConfigAsset && m_UpdateConfigAsset.Length > 0) {\n\t\tconfigManager.OnUpdateConfigAsset += OnUpdateConfigAsset;\n\t\tconfigManager.OnDependencyAsset += OnDependencyAsset;\n\t}\n}", "CodeBleu_score": 45.81634013566569}]}
{"instance_id": "fbb36ff9d552", "generation_result": [{"code": "public override bool ReadData(IConfigManager configManager, string configAssetName, object configAsset, object userData){\n\t\tif (configAsset is TextAsset) {\n\t\tTextAsset textAsset = configAsset as TextAsset;\n\t\tif (configAssetName.EndsWith(\".bytes\")) {\n\t\t\treturn ParseBytes(configManager, textAsset.bytes, userData);\n\t\t} else {\n\t\t\treturn ParseText(configManager, textAsset.text, userData);\n\t\t}\n\t} else {\n\t\tLog.Warning(\"Asset '\" + configAssetName + \"' is not a TextAsset. Cannot parse configuration data.\");\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 58.620484529566355}, {"code": "public override bool ReadData(IConfigManager configManager, string configAssetName, object configAsset, object userData){\n\t\tif (configAsset is TextAsset) {\n\t\tTextAsset textAsset = configAsset as TextAsset;\n\t\tif (configAssetName.EndsWith(\".bytes\")) {\n\t\t\treturn ParseBytes(configManager, configAssetName, textAsset.bytes, userData);\n\t\t} else {\n\t\t\treturn ParseText(configManager, configAssetName, textAsset.text, userData);\n\t\t}\n\t} else {\n\t\tLog.Warning(\"Invalid config asset type for \" + configAssetName + \".\");\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 59.14814430844555}, {"code": "public override bool ReadData(IConfigManager configManager, string configAssetName, object configAsset, object userData){\n\t\tif (configAsset is TextAsset) {\n\t\tTextAsset textAsset = configAsset as TextAsset;\n\t\tif (configAssetName.EndsWith(\".bytes\")) {\n\t\t\treturn ReadData(configManager, textAsset.bytes, userData);\n\t\t}\n\t\treturn ReadData(configManager, textAsset.text, userData);\n\t}\n\tLog.Warning(\"Could not parse config asset \" + configAssetName + \" because it is not a TextAsset.\");\n\treturn false;\n}", "CodeBleu_score": 52.933075706510635}]}
{"instance_id": "84d744c480ca", "generation_result": [{"code": "public override bool ParseData(IConfigManager configManager, byte[] configBytes, int startIndex, int length, object userData){\n\t\ttry {\n\t\tusing (MemoryStream memoryStream = new MemoryStream(configBytes, startIndex, length)) {\n\t\t\tusing (BinaryReader binaryReader = new BinaryReader(memoryStream)) {\n\t\t\t\twhile (binaryReader.BaseStream.Position < binaryReader.BaseStream.Length) {\n\t\t\t\t\tstring configName = binaryReader.ReadString();\n\t\t\t\t\tstring configValue = binaryReader.ReadString();\n\t\t\t\t\tif (!configManager.AddConfig(configName, configValue)) {\n\t\t\t\t\t\tLog.Warning($\"ConfigManager: Failed to add config \\\"{configName}\\\" with value \\\"{configValue}\\\"\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (Exception e) {\n\t\tLog.Warning($\"ConfigManager: Failed to parse config data: {e.Message}\");\n\t\treturn false;\n\t}\n\treturn true;\n}", "CodeBleu_score": 61.74275841759421}, {"code": "public override bool ParseData(IConfigManager configManager, byte[] configBytes, int startIndex, int length, object userData){\n\t\tif (configBytes == null) {\n\t\treturn false;\n\t}\n\tif (configManager == null) {\n\t\treturn false;\n\t}\n\tif (startIndex < 0) {\n\t\treturn false;\n\t}\n\tif (length < 0) {\n\t\treturn false;\n\t}\n\tif (configBytes.Length < startIndex + length) {\n\t\treturn false;\n\t}\n\tif (userData == null) {\n\t\treturn false;\n\t}\n\ttry {\n\t\tusing (MemoryStream memoryStream = new MemoryStream(configBytes, startIndex, length)) {\n\t\t\tusing (BinaryReader binaryReader = new BinaryReader(memoryStream)) {\n\t\t\t\twhile (binaryReader.BaseStream.Position < binaryReader.BaseStream.Length) {\n\t\t\t\t\tstring configName = binaryReader.ReadString();\n\t\t\t\t\tstring configValue = binaryReader.ReadString();\n\t\t\t\t\tif (configManager.AddConfig(configName, configValue)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tLog.Warning(\"Failed to add config \" + configName + \" with value \" + configValue + \" to config manager \" + configManager.name + \".\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcatch (Exception ex) {\n\t\tLog.Warning(\"Exception occurred while parsing configuration data: \" + ex.Message);\n\t\treturn false;\n\t}\n\treturn true;\n}", "CodeBleu_score": 60.786339969312685}, {"code": "public override bool ParseData(IConfigManager configManager, byte[] configBytes, int startIndex, int length, object userData){\n\t\ttry {\n\t\tusing (MemoryStream memoryStream = new MemoryStream(configBytes, startIndex, length)) {\n\t\t\tusing (BinaryReader binaryReader = new BinaryReader(memoryStream)) {\n\t\t\t\twhile (binaryReader.BaseStream.Position < binaryReader.BaseStream.Length) {\n\t\t\t\t\tstring configName = binaryReader.ReadString();\n\t\t\t\t\tif (configManager.AddConfig(configName, binaryReader.ReadDouble())) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tLog.Warning($\"Failed to add config {configName} to config manager {configManager.Name}.\");\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (Exception ex) {\n\t\tLog.Warning($\"Failed to parse configuration data from config manager {configManager.Name}. Exception: {ex}\");\n\t\treturn false;\n\t}\n\treturn true;\n}", "CodeBleu_score": 57.80977817231548}]}
{"instance_id": "298bb6fa19a4", "generation_result": [{"code": "public override void ReleaseDataAsset(IConfigManager configManager, object configAsset){\n\t\tif (configAsset == null) {\n\t\treturn;\n\t}\n\tif (m_ResourceComponent == null) {\n\t\treturn;\n\t}\n\tm_ResourceComponent.UnloadAsset(configAsset);\n}", "CodeBleu_score": 44.693345355238876}, {"code": "public override void ReleaseDataAsset(IConfigManager configManager, object configAsset){\n\t\tif (m_ResourceComponent!= null) {\n\t\tm_ResourceComponent.UnloadAsset(configAsset);\n\t}\n}", "CodeBleu_score": 57.67894418603683}, {"code": "public override void ReleaseDataAsset(IConfigManager configManager, object configAsset){\n\t\tif (configManager!= null && configAsset!= null) {\n\t\tm_ResourceComponent.UnloadAsset(configAsset);\n\t}\n}", "CodeBleu_score": 68.21551786734463}]}
{"instance_id": "fa2003d95e36", "generation_result": [{"code": " public static ActiveSceneChangedEventArgs Create(Scene lastActiveScene, Scene activeScene){\n\t\n//\n// Current behaviour:\n//\tif (configManager == null)\n//\t\treturn null;\n//\n//\tif (configManager.configAsset == null)\n//\t\treturn null;\n//\n//\tif (configManager.configAsset.resourceComponent == null)\n//\t\treturn null;\n//\n//\tconfigManager.configAsset.resourceComponent.UnloadAsset();\n//\n//\treturn new ActiveSceneChangedEventArgs(lastActiveScene, activeScene);\n//\n\nvar ___new_value = new ActiveSceneChangedEventArgs(lastActiveScene, activeScene);\n\nreturn ___new_value;\n}", "CodeBleu_score": 15.302398530785583}, {"code": " public static ActiveSceneChangedEventArgs Create(Scene lastActiveScene, Scene activeScene){\n\t#if UNITY_EDITOR\n if (lastActiveScene == null) { throw new System.ArgumentNullException(\"lastActiveScene\"); }\n if (activeScene == null) { throw new System.ArgumentNullException(\"activeScene\"); }\n#endif\n ActiveSceneChangedEventArgs ret = new ActiveSceneChangedEventArgs(lastActiveScene, activeScene);\n UnityEditor.AssetDatabase.AddObjectToAsset(ret, lastActiveScene);\n UnityEditor.AssetDatabase.AddObjectToAsset(ret, activeScene);\n UnityEditor.AssetDatabase.SaveAssets();\n return ret;\n}", "CodeBleu_score": 33.046372560222956}, {"code": " public static ActiveSceneChangedEventArgs Create(Scene lastActiveScene, Scene activeScene){\n\t\n//\n// Current line 144, Column 42\n//\nthrow new NotImplementedException();\n\n}", "CodeBleu_score": 9.435829181423431}]}
{"instance_id": "aba13f34251c", "generation_result": [{"code": "public void LoadScene(string sceneAssetName, int priority, object userData){\n\t\tif (string.IsNullOrEmpty(sceneAssetName)) {\n\t\tLog.Error(\"Scene asset name is null or empty.\");\n\t\treturn;\n\t}\n\tif (!sceneAssetName.StartsWith(\"Assets/\")) {\n\t\tLog.Error(\"Scene asset name does not start with \\\"Assets/\\\".\");\n\t\treturn;\n\t}\n\tif (!sceneAssetName.EndsWith(\".unity\")) {\n\t\tLog.Error(\"Scene asset name does not end with \\\".unity\\\".\");\n\t\treturn;\n\t}\n\tm_SceneManager.LoadScene(sceneAssetName, priority, userData);\n}", "CodeBleu_score": 63.73793098900823}, {"code": "public void LoadScene(string sceneAssetName, int priority, object userData){\n\t\tif (string.IsNullOrEmpty(sceneAssetName)) {\n\t\tLog.Error(\"Scene asset name cannot be null or empty.\");\n\t\treturn;\n\t}\n\tif (!sceneAssetName.StartsWith(\"Assets/\") ||!sceneAssetName.EndsWith(\".unity\")) {\n\t\tLog.Error(\"Scene asset name must start with \\\"Assets/\\\" and end with \\\".unity\\\".\");\n\t\treturn;\n\t}\n\tm_SceneManager.LoadScene(sceneAssetName, priority, userData);\n}", "CodeBleu_score": 61.826249479874264}, {"code": "public void LoadScene(string sceneAssetName, int priority, object userData){\n\t\tif (string.IsNullOrEmpty(sceneAssetName)) {\n\t\tLog.Error(\"Scene asset name is null or empty.\");\n\t\treturn;\n\t}\n\tif (!sceneAssetName.StartsWith(\"Assets/\") ||!sceneAssetName.EndsWith(\".unity\")) {\n\t\tLog.Error(\"Scene asset name is not valid. It must start with \\\"Assets/\\\" and end with \\\".unity\\\".\");\n\t\treturn;\n\t}\n\tm_SceneManager.LoadScene(sceneAssetName, priority, userData);\n}", "CodeBleu_score": 64.07598082526043}]}
{"instance_id": "3fe99fba3ce8", "generation_result": [{"code": "void FBinariesPatchFeatureModule::StartupModule(){\n\t\tIModularFeatures::Get().OnModularFeatureRegistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureRegistered);\n\tIModularFeatures::Get().OnModularFeatureUnregistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureUnregistered);\n\n\t// Append registered feature implementations to the binaries patch feature enumerations\n\tfor (auto& Feature : IModularFeatures::Get().GetModularFeatureImplementations<IBinariesDiffPatchFeature>()) {\n\t\tFBinariesPatchFeatureModule::EnumerateFeatureNames.Add(Feature->GetFeatureName());\n\t}\n}", "CodeBleu_score": 44.52374967606925}, {"code": "void FBinariesPatchFeatureModule::StartupModule(){\n\t\t// This code will execute after your module is loaded into memory; the exact timing is specified in the.uplugin file per-module\n\tIModularFeatures::Get().OnModularFeatureRegistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureRegistered);\n\tIModularFeatures::Get().OnModularFeatureUnregistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureUnregistered);\n\tIModularFeatures::Get().GetModularFeatureImplementations<IBinariesDiffPatchFeature>(BinariesDiffPatchFeatureImplementations);\n\tfor (const auto& Feature : BinariesDiffPatchFeatureImplementations) {\n\t\tFString FeatureName = Feature->GetFeatureName();\n\t\tif (FeatureName.IsEmpty()) {\n\t\t\tcontinue;\n\t\t}\n\t\tFBinariesPatchFeatureModule::Get().BinariesDiffPatchFeatureNames.Add(FeatureName);\n\t}\n}", "CodeBleu_score": 52.10921667167544}, {"code": "void FBinariesPatchFeatureModule::StartupModule(){\n\t\t// Retrieve registered feature implementations and append their names to the binaries patch feature enumerations.\n\tIModularFeatures::Get().GetModularFeatureImplementations<IBinariesDiffPatchFeature>(BinariesDiffPatchFeatureImplementations);\n\tfor (auto& BinariesDiffPatchFeatureImplementation : BinariesDiffPatchFeatureImplementations) {\n\t\tBinariesDiffPatchFeatureNames.Add(BinariesDiffPatchFeatureImplementation->GetFeatureName());\n\t}\n\n\t// Set up callbacks for when modular features are registered or unregistered.\n\tIModularFeatures::Get().OnModularFeatureRegistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureRegistered);\n\tIModularFeatures::Get().OnModularFeatureUnregistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureUnregistered);\n}", "CodeBleu_score": 52.774567153050725}]}
{"instance_id": "c702cc0f74b5", "generation_result": [{"code": "TArray<FString> CommandletHelper::ParserPatchConfigByCommandline(const FString& Commandline,const FString& Token){\n\t\tTArray<FString> Result;\n\tif (Commandline.IsEmpty()) {\n\t\treturn Result;\n\t}\n\n\tTMap<FString, FString> CommandlineMap = CommandletHelper::GetCommandLineParamsMap(Commandline);\n\tif (CommandlineMap.Contains(Token)) {\n\t\tTArray<FString> ValueArray;\n\t\tCommandlineMap[Token].ParseIntoArray(ValueArray, TEXT(\",\"), true);\n\t\tResult = ValueArray;\n\t}\n\treturn Result;\n}", "CodeBleu_score": 57.39296167623343}, {"code": "TArray<FString> CommandletHelper::ParserPatchConfigByCommandline(const FString& Commandline,const FString& Token){\n\t", "CodeBleu_score": 9.464279801391635}, {"code": "TArray<FString> CommandletHelper::ParserPatchConfigByCommandline(const FString& Commandline,const FString& Token){\n\t\tTArray<FString> Result;\n\tTMap<FString, FString> CommandLineMap = TMap<FString, FString>();\n\tCommandLineMap = FCommandLine::Parse(Commandline);\n\tif (CommandLineMap.Contains(Token)) {\n\t\tFString Value = CommandLineMap[Token];\n\t\tTArray<FString> Values = Value.ParseIntoArray(TEXT(\",\"), false);\n\t\tResult = Values;\n\t}\n\treturn Result;\n}", "CodeBleu_score": 56.46454585780331}]}
{"instance_id": "6a6382275b1d", "generation_result": [{"code": "bool CommandletHelper::IsCookCommandlet(){\n\t\tif (IsRunningCommandlet()) {\n\t\tFString CommandletName = GetCommandletName();\n\t\treturn!CommandletName.IsEmpty() && CommandletName.Equals(TEXT(\"cook\"), ESearchCase::IgnoreCase);\n\t}\n\treturn false;\n}", "CodeBleu_score": 25.60963218684395}, {"code": "bool CommandletHelper::IsCookCommandlet(){\n\t\tif (!IsRunningCommandlet()) {\n\t\treturn false;\n\t}\n\tFString CommandletName = GetCommandletArg();\n\tif (CommandletName.IsEmpty()) {\n\t\treturn false;\n\t}\n\treturn CommandletName.Equals(\"cook\", ESearchCase::IgnoreCase);\n}", "CodeBleu_score": 21.66303478215373}, {"code": "bool CommandletHelper::IsCookCommandlet(){\n\t\tbool bIsCookCommandlet = false;\n\tif (IsRunningCommandlet()) {\n\t\tFString CommandletName = GetCommandletArg(TEXT(\"Commandlet\"));\n\t\tif (!CommandletName.IsEmpty()) {\n\t\t\tbIsCookCommandlet = CommandletName.Equals(TEXT(\"Cook\"), ESearchCase::IgnoreCase);\n\t\t}\n\t}\n\treturn bIsCookCommandlet;\n}", "CodeBleu_score": 55.149331940119616}]}
{"instance_id": "6888ed47b6be", "generation_result": [{"code": "void UHotPatcherCommandletBase::Update(const FString& Params){\n\t\tFString CommandletName = FCommandLine::Get()->GetCommandletName();\n\tif (UHotPatcherSettings::Get()->bCountServerless) {\n\t\tFCountServerlessWrapper::MakeCurrentProject(CommandletName);\n\t\tFCountServerlessWrapper::MakeServerRequestInfo(CommandletName);\n\t\tFCountServerlessWrapper::MakeShareable();\n\t\tFCountServerlessWrapper::Get()->Init();\n\t}\n}", "CodeBleu_score": 20.25977156176139}, {"code": "void UHotPatcherCommandletBase::Update(const FString& Params){\n\t\tFCountServerlessWrapper::MakeCurrentProject();\n\tFCountServerlessWrapper::MakeServerRequestInfo();\n\tFCountServerlessWrapper::MakeShareable();\n\tFCountServerlessWrapper::Counter->Init();\n\tFString CommandletName = FParse::Token(FCommandLine::Get(), true);\n\tif (FCountServerlessWrapper::Counter->IsEnabled()) {\n\t\tFCountServerlessWrapper::Counter->Init(FCountServerlessWrapper::Counter->GetServerRequestInfo(), FCountServerlessWrapper::Counter->GetCurrentProject(), CommandletName);\n\t\tFCountServerlessWrapper::Counter->Process();\n\t}\n}", "CodeBleu_score": 23.918570159377396}, {"code": "void UHotPatcherCommandletBase::Update(const FString& Params){\n\t\t// Get the commandlet name from the command line\n\tFString CommandletName;\n\tif (FParse::Value(FCommandLine::Get(), TEXT(\"Commandlet=\"), CommandletName)) {\n\t\t// Get the settings\n\t\tconst UHotPatcherSettings* Settings = GetDefault<UHotPatcherSettings>();\n\t\t// Check if serverless counting is enabled\n\t\tif (Settings->EnableServerlessCounter) {\n\t\t\t// Initialize the counter\n\t\t\tFCountServerlessWrapper::MakeCurrentProject(CommandletName);\n\t\t\t// Process the counter\n\t\t\tFCountServerlessWrapper::ProcessCounter();\n\t\t}\n\t}\n}", "CodeBleu_score": 27.18311369355268}]}
{"instance_id": "c467af995f29", "generation_result": [{"code": "bool UFlibHotCookerHelper::IsAppleMetalPlatform(ITargetPlatform* TargetPlatform){\n\t\tSCOPED_NAMED_EVENT_TEXT(TEXT(\"FlibHotCookerHelper::IsAppleMetalPlatform\"), FColor::Yellow);\n\tif (!TargetPlatform) {\n\t\treturn false;\n\t}\n\tFString PlatformName = TargetPlatform->PlatformName();\n\treturn PlatformName.StartsWith(TEXT(\"IOS\"), ESearchCase::IgnoreCase) || PlatformName.StartsWith(TEXT(\"Mac\"), ESearchCase::IgnoreCase) || PlatformName.StartsWith(TEXT(\"TVOS\"), ESearchCase::IgnoreCase);\n}", "CodeBleu_score": 39.85124226419837}, {"code": "bool UFlibHotCookerHelper::IsAppleMetalPlatform(ITargetPlatform* TargetPlatform){\n\t\tif (TargetPlatform == nullptr) {\n\t\treturn false;\n\t}\n\tFString PlatformName = TargetPlatform->PlatformName();\n\treturn PlatformName.StartsWith(TEXT(\"IOS\"), ESearchCase::IgnoreCase)\n\t\t|| PlatformName.StartsWith(TEXT(\"Mac\"), ESearchCase::IgnoreCase)\n\t\t|| PlatformName.StartsWith(TEXT(\"TVOS\"), ESearchCase::IgnoreCase);\n}", "CodeBleu_score": 38.47815295969742}, {"code": "bool UFlibHotCookerHelper::IsAppleMetalPlatform(ITargetPlatform* TargetPlatform){\n\t\treturn TargetPlatform->PlatformName().StartsWith(TEXT(\"IOS\"), ESearchCase::IgnoreCase)\n\t\t|| TargetPlatform->PlatformName().StartsWith(TEXT(\"Mac\"), ESearchCase::IgnoreCase)\n\t\t|| TargetPlatform->PlatformName().StartsWith(TEXT(\"TVOS\"), ESearchCase::IgnoreCase);\n}", "CodeBleu_score": 33.414630375601895}]}
{"instance_id": "3df342b1c6f8", "generation_result": [{"code": "void FFreezePackageTracker::NotifyUObjectCreated(const UObjectBase* Object, int32 Index){\n\t\tif (Object == nullptr) {\n\t\treturn;\n\t}\n\n\tconst UObject* ObjectOuter = Object->GetOuter();\n\tif (ObjectOuter == nullptr) {\n\t\treturn;\n\t}\n\n\tif (IsAlwayPostLoadClasses(ObjectOuter->GetOutermost(), ObjectOuter)) {\n\t\treturn;\n\t}\n\n\tconst FName ObjectPathName = ObjectOuter->GetPathName();\n\tif (CookerAssetsSet.Contains(ObjectPathName) || AllAssetsSet.Contains(ObjectPathName)) {\n\t\tif (FreezeObjects.Contains(ObjectOuter)) {\n\t\t\tFreezeObjects.Remove(ObjectOuter);\n\t\t}\n\t\tPackageObjectsMap.FindOrAdd(ObjectOuter->GetOutermost()).Add(ObjectOuter);\n\t\tObjectOuter->ClearFlags(RF_NeedPostLoad | RF_NeedPostLoadSubobjects);\n\t}\n}", "CodeBleu_score": 49.67142821685324}, {"code": "void FFreezePackageTracker::NotifyUObjectCreated(const UObjectBase* Object, int32 Index){\n\t\tif (!Object) {\n\t\treturn;\n\t}\n\n\tconst UObject* ObjectOuter = Object->GetOutermost();\n\tif (!ObjectOuter) {\n\t\treturn;\n\t}\n\n\tFName ObjectPathName = ObjectOuter->GetPathName();\n\tif (ObjectPathName.IsNone()) {\n\t\treturn;\n\t}\n\n\tconst bool bIsCookerAsset = CookerAssetsSet.Contains(ObjectPathName);\n\tconst bool bIsAllAsset = AllAssetsSet.Contains(ObjectPathName);\n\tconst bool bAlwaysPostLoad = IsAlwayPostLoadClasses(ObjectOuter, Object);\n\n\tif (bIsAllAsset &&!bAlwaysPostLoad) {\n\t\tPackageObjectsMap.FindOrAdd(ObjectPathName).Add(Object);\n\t\tFreezeObjects.Add(Object);\n\t}\n\telse if (bIsAllAsset && bAlwaysPostLoad) {\n\t\tPackageObjectsMap.FindOrAdd(ObjectPathName).Add(Object);\n\t}\n\telse if (bIsCookerAsset) {\n\t\tPackageObjectsMap.FindOrAdd(ObjectPathName).Add(Object);\n\t}\n\telse {\n\t\treturn;\n\t}\n\n\tObject->ClearFlags(RF_NeedPostLoad | RF_NeedPostLoadSubobjects);\n}", "CodeBleu_score": 43.10809697113345}, {"code": "void FFreezePackageTracker::NotifyUObjectCreated(const UObjectBase* Object, int32 Index){\n\t\tif (Object) {\n\t\tUObject* ObjectOuter = Object->GetOutermost();\n\t\tif (ObjectOuter) {\n\t\t\tif (CookerAssetsSet.Contains(ObjectOuter)) {\n\t\t\t\tif (AllAssetsSet.Contains(ObjectOuter) &&!IsAlwayPostLoadClasses(ObjectOuter, Object)) {\n\t\t\t\t\tPackageObjectsMap.FindOrAdd(ObjectOuter->GetPathName()).Add(Object);\n\t\t\t\t\tFreezeObjects.Add(Object);\n\t\t\t\t\tObject->ClearFlags(RF_NeedPostLoad | RF_NeedPostLoadSubobjects);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 38.1847817447136}]}
{"instance_id": "fac8b2878c3c", "generation_result": [{"code": "void FHotPatcherPackageWriter::CollectForSaveBulkData(FRecord& Record, FCommitContext& Context)\n{{\n\t\tFRecordBulkDataRecord BulkRecord;\n\tif (Record.GetRecordType() == FRecordBulkDataRecord::RecordType)\n\t{\n\t\tBulkRecord = Record.CastTo<FRecordBulkDataRecord>();\n\t}\n\telse\n\t{\n\t\treturn;\n\t}\n\tif (BulkRecord.Info.Flags.bIsExport)\n\t{\n\t\tif (BulkRecord.Info.Flags.bIsSidecar)\n\t\t{\n\t\t\tif (Context.ExportsBuffers.Contains(BulkRecord.Info.MultiOutputIndex))\n\t\t\t{\n\t\t\t\tContext.ExportsBuffers[BulkRecord.Info.MultiOutputIndex].Add(BulkRecord.Data);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tContext.ExportsBuffers.Emplace(BulkRecord.Info.MultiOutputIndex, BulkRecord.Data);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Context.OutputFiles.Contains(BulkRecord.Info.MultiOutputIndex))\n\t\t\t{\n\t\t\t\tContext.OutputFiles[BulkRecord.Info.MultiOutputIndex].Buffer = BulkRecord.Data;\n\t\t\t\tContext.OutputFiles[BulkRecord.Info.MultiOutputIndex].Regions = BulkRecord.Regions;\n\t\t\t\tContext.OutputFiles[BulkRecord.Info.MultiOutputIndex].Flags = BulkRecord.Info.Flags;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tContext.OutputFiles.Emplace(BulkRecord.Info.MultiOutputIndex, FOutputFileEntry(BulkRecord.Data, BulkRecord.Regions, BulkRecord.Info.Flags));\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (BulkRecord.Info.Flags.bIsHashContribution)\n\t\t{\n\t\t\tContext.HashContribution.Add(BulkRecord.Data);\n\t\t}\n\t}\n}", "CodeBleu_score": 39.69677105849196}, {"code": "void FHotPatcherPackageWriter::CollectForSaveBulkData(FRecord& Record, FCommitContext& Context)\n{{\n\t\tfor (const FBulkRecord& BulkRecord : Record.BulkRecords)\n\t{\n\t\tif (BulkRecord.Info.BulkDataType == EBulkDataType::Export)\n\t\t{\n\t\t\tContext.ExportsBuffers.Emplace_GetRef(BulkRecord.Info.MultiOutputIndex, FCompositeBuffer());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tFOutputFiles& OutputFiles = Context.OutputFiles;\n\t\t\tif (!OutputFiles.Contains(BulkRecord.Info.MultiOutputIndex))\n\t\t\t{\n\t\t\t\tOutputFiles.Emplace_GetRef(BulkRecord.Info.MultiOutputIndex, FOutputFile());\n\t\t\t}\n\t\t\tFOutputFile& OutputFile = OutputFiles[BulkRecord.Info.MultiOutputIndex];\n\t\t\tOutputFile.Buffer = BulkRecord.Buffer;\n\t\t\tOutputFile.Regions = BulkRecord.Regions;\n\t\t\tOutputFile.Flags |= BulkRecord.Flags;\n\t\t\tOutputFile.Hash.Add(BulkRecord.Hash);\n\t\t}\n\t}\n}", "CodeBleu_score": 50.55320714992663}, {"code": "void FHotPatcherPackageWriter::CollectForSaveBulkData(FRecord& Record, FCommitContext& Context)\n{{\n\t\tFRecordBulkDataRecord BulkRecord;\n\tif (Record.TryGetBulkDataRecord(BulkRecord))\n\t{\n\t\tif (BulkRecord.Info.BulkDataType == EBulkDataType::Export)\n\t\t{\n\t\t\tContext.ExportsBuffers[BulkRecord.Info.MultiOutputIndex].Add(BulkRecord.Info.Buffer);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tFPackageWriterOutputFile& OutputFile = Context.OutputFiles.Emplace_GetRef();\n\t\t\tOutputFile.FileName = BulkRecord.Info.FileName;\n\t\t\tOutputFile.Buffer = BulkRecord.Info.Buffer;\n\t\t\tOutputFile.Regions = BulkRecord.Info.Regions;\n\t\t\tOutputFile.Flags = BulkRecord.Info.Flags;\n\t\t}\n\t}\n}", "CodeBleu_score": 47.51143647381272}]}
{"instance_id": "bf46051105c9", "generation_result": [{"code": "void FHotPatcherPackageWriter::CollectForSaveExportsFooter(FRecord& Record, FCommitContext& Context){\n\t\tif (Context.ExportsBuffers[Package.Info.MultiOutputIndex].Num() > 0) {\n\t\tif (Context.ExportsBuffers[Package.Info.MultiOutputIndex].Last().GetRegion().GetEndOffset() == 0) {\n\t\t\t// If the last buffer has a zero end offset, it means the diff is not completed yet.\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Add the footer to the export buffers.\n\tFSharedBuffer FooterBuffer;\n\tFooterBuffer.Add(FFileRegion(FPackageFileTag(Package.Info.Tag, FPackageFileTag::Footer), 0, 0));\n\tContext.ExportsBuffers[Package.Info.MultiOutputIndex].Add(FooterBuffer);\n}", "CodeBleu_score": 44.947025433975476}, {"code": "void FHotPatcherPackageWriter::CollectForSaveExportsFooter(FRecord& Record, FCommitContext& Context){\n\t", "CodeBleu_score": 4.951469825088823}, {"code": "void FHotPatcherPackageWriter::CollectForSaveExportsFooter(FRecord& Record, FCommitContext& Context){\n\t\tif (Context.ExportsBuffers[Package.Info.MultiOutputIndex].Num() > 0) {\n\t\tif (Context.ExportsBuffers[Package.Info.MultiOutputIndex].Last().GetEnd() == Context.ExportsBuffers[Package.Info.MultiOutputIndex].Last().GetStart() + 1) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tFSharedBuffer FooterBuffer(FRecord::FooterTag, 0);\n\tFooterBuffer.Add(FFileRegion(FRecord::FooterTag, 0, 0));\n\tContext.ExportsBuffers[Package.Info.MultiOutputIndex].Add(FooterBuffer);\n}", "CodeBleu_score": 44.04920432069224}]}
{"instance_id": "c0966eddf1ee", "generation_result": [{"code": "void UGDCharacterMovementComponent::FGDSavedMove::SetMoveFor(ACharacter * Character, float InDeltaTime, FVector const & NewAccel, FNetworkPredictionData_Client_Character & ClientData){\n\t\tSuper::SetMoveFor(Character, InDeltaTime, NewAccel, ClientData);\n\tUGDCharacterMovementComponent * CharacterMovement = Cast<UGDCharacterMovementComponent>(Character->GetCharacterMovement());\n\tif (CharacterMovement) {\n\t\tClientData.MoveForSaved.bSavedSprint = bSavedSprint;\n\t\tClientData.MoveForSaved.bSavedADS = bSavedADS;\n\t}\n}", "CodeBleu_score": 69.40003446509049}, {"code": "void UGDCharacterMovementComponent::FGDSavedMove::SetMoveFor(ACharacter * Character, float InDeltaTime, FVector const & NewAccel, FNetworkPredictionData_Client_Character & ClientData){\n\t\tSuper::SetMoveFor(Character, InDeltaTime, NewAccel, ClientData);\n\tUGDCharacterMovementComponent * CharacterMovement = Cast<UGDCharacterMovementComponent>(Character->GetCharacterMovement());\n\tif (CharacterMovement) {\n\t\tCharacterMovement->SetSprinting(bWantsToSprint);\n\t\tCharacterMovement->SetAimingDownSights(bWantsToAimDownSights);\n\t}\n}", "CodeBleu_score": 73.7264283802623}, {"code": "void UGDCharacterMovementComponent::FGDSavedMove::SetMoveFor(ACharacter * Character, float InDeltaTime, FVector const & NewAccel, FNetworkPredictionData_Client_Character & ClientData){\n\t\tSuper::SetMoveFor(Character, InDeltaTime, NewAccel, ClientData);\n\tUGDCharacterMovementComponent * CharacterMovement = Cast<UGDCharacterMovementComponent>(Character->GetCharacterMovement());\n\tif (CharacterMovement) {\n\t\tMove.bSavedMove_Sprint = bSavedMove_Sprint;\n\t\tMove.bSavedMove_AimDownSights = bSavedMove_AimDownSights;\n\t}\n}", "CodeBleu_score": 68.91072679924213}]}
{"instance_id": "f73106356e9d", "generation_result": [{"code": "UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::ListenForAttributeChange(UAbilitySystemComponent* AbilitySystemComponent, FGameplayAttribute Attribute){\n\t\tUAsyncTaskAttributeChanged* NewAsyncTask = NewObject<UAsyncTaskAttributeChanged>();\n\tNewAsyncTask->Init(AbilitySystemComponent, Attribute);\n\treturn NewAsyncTask;\n}", "CodeBleu_score": 25.13524890788964}, {"code": "UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::ListenForAttributeChange(UAbilitySystemComponent* AbilitySystemComponent, FGameplayAttribute Attribute){\n\t\tif (!AbilitySystemComponent ||!AbilitySystemComponent->IsValidLowLevel()) {\n\t\treturn nullptr;\n\t}\n\tif (!Attribute.IsValid()) {\n\t\treturn nullptr;\n\t}\n\tUAsyncTaskAttributeChanged* NewTask = NewObject<UAsyncTaskAttributeChanged>();\n\tNewTask->AbilitySystemComponent = AbilitySystemComponent;\n\tNewTask->Attribute = Attribute;\n\tNewTask->RemoveFromRoot();\n\tAbilitySystemComponent->GetGameplayAttributeValueChangeDelegate(Attribute).AddUObject(NewTask, &UAsyncTaskAttributeChanged::OnAttributeChanged);\n\treturn NewTask;\n}", "CodeBleu_score": 61.059209920877144}, {"code": "UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::ListenForAttributeChange(UAbilitySystemComponent* AbilitySystemComponent, FGameplayAttribute Attribute){\n\t\tUAsyncTaskAttributeChanged* NewAsyncTask = NewObject<UAsyncTaskAttributeChanged>();\n\tNewAsyncTask->Init(AbilitySystemComponent, Attribute);\n\treturn NewAsyncTask;\n}", "CodeBleu_score": 25.13524890788964}]}
{"instance_id": "a581424c2b31", "generation_result": [{"code": "void UAsyncTaskCooldownChanged::EndTask(){\n\t\tif (IsValid()) {\n\t\tASC->OnActiveGameplayEffectAddedDelegateToSelf.RemoveAll(this);\n\t\tASC->RegisterGameplayTagEvent(CooldownTag, EGameplayTagEventType::NewOrRemoved).RemoveAll(this);\n\t\tIsValid = false;\n\t\tSetReadyToDestroy();\n\t\tMarkAsGarbage();\n\t}\n}", "CodeBleu_score": 40.887313517373954}, {"code": "void UAsyncTaskCooldownChanged::EndTask(){\n\t\tif (ASC == NULL) {\n\t\treturn;\n\t}\n\tASC->OnActiveGameplayEffectAddedDelegateToSelf.RemoveAll(this);\n\tASC->RegisterGameplayTagEvent(CooldownTag, EGameplayTagEventType::NewOrRemoved).RemoveAll(this);\n\tIsValid = false;\n\tSetReadyToDestroy();\n\tMarkAsGarbage();\n}", "CodeBleu_score": 37.83439602084331}, {"code": "void UAsyncTaskCooldownChanged::EndTask(){\n\t\tif (ASC!= nullptr) {\n\t\tASC->OnActiveGameplayEffectAddedDelegateToSelf.RemoveAll(this);\n\t\tASC->RegisterGameplayTagEvent(CooldownTag, EGameplayTagEventType::NewOrRemoved).RemoveAll(this);\n\t}\n\tSetReadyToDestroy();\n\tMarkAsGarbage();\n}", "CodeBleu_score": 39.74152139119661}]}
{"instance_id": "5029df3a2033", "generation_result": [{"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tFGameplayTagContainer GrantedTags = EffectRemoved.Spec.GrantedTags;\n\tFGameplayTagContainer AssetTags = EffectRemoved.Spec.AssetTags;\n\n\tif (GrantedTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnEffectStackChanged.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeType::Removed, EffectRemoved.StackCount);\n\t}\n\n\tif (AssetTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnEffectStackChanged.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeType::Removed, EffectRemoved.StackCount);\n\t}\n}", "CodeBleu_score": 53.952376262536525}, {"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tif (EffectRemoved.Spec.HasTagExact(EffectGameplayTag))\n\t{\n\t\tOnEffectRemoved.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeReason::Removed);\n\t}\n\tif (EffectRemoved.AssetTags.HasTagExact(EffectGameplayTag))\n\t{\n\t\tOnEffectRemoved.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeReason::Removed);\n\t}\n\tif (EffectRemoved.GrantedTags.HasTagExact(EffectGameplayTag))\n\t{\n\t\tOnEffectRemoved.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeReason::Removed);\n\t}\n\tif (EffectRemoved.GetAllAssetTags().HasTagExact(EffectGameplayTag))\n\t{\n\t\tOnEffectRemoved.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeReason::Removed);\n\t}\n\tif (EffectRemoved.GetAllGrantedTags().HasTagExact(EffectGameplayTag))\n\t{\n\t\tOnEffectRemoved.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeReason::Removed);\n\t}\n}", "CodeBleu_score": 47.072761138698574}, {"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"Effect Removed\"));\n\tFGameplayTagContainer GrantedTags;\n\tFGameplayTagContainer AssetTags;\n\tEffectRemoved.GetAllAssetTags(AssetTags);\n\tEffectRemoved.GetAllGrantedTags(GrantedTags);\n\tif (GrantedTags.HasTagExact(EffectTag)) {\n\t\tOnEffectRemoved.Broadcast(EffectTag, EffectRemoved.GetHandle(), AssetTags, GrantedTags);\n\t}\n}", "CodeBleu_score": 55.57993306027922}]}
{"instance_id": "cb1d2823d203", "generation_result": [{"code": "UAsyncTaskEffectStackChanged * UAsyncTaskEffectStackChanged::ListenForGameplayEffectStackChange(UAbilitySystemComponent * AbilitySystemComponent, FGameplayTag InEffectGameplayTag){\n\t\tif (AbilitySystemComponent == nullptr ||!AbilitySystemComponent->IsValidLowLevel() ||!InEffectGameplayTag.IsValid()) {\n\t\treturn nullptr;\n\t}\n\tUAsyncTaskEffectStackChanged * Task = NewObject<UAsyncTaskEffectStackChanged>();\n\tTask->AbilitySystemComponent = AbilitySystemComponent;\n\tTask->EffectGameplayTag = InEffectGameplayTag;\n\tTask->AbilitySystemComponent->OnActiveGameplayEffectAddedDelegateToSelf.AddUObject(Task, &UAsyncTaskEffectStackChanged::OnGameplayEffectAdded);\n\tTask->AbilitySystemComponent->OnAnyGameplayEffectRemovedDelegate.AddUObject(Task, &UAsyncTaskEffectStackChanged::OnGameplayEffectRemoved);\n\treturn Task;\n}", "CodeBleu_score": 52.70339509051137}, {"code": "UAsyncTaskEffectStackChanged * UAsyncTaskEffectStackChanged::ListenForGameplayEffectStackChange(UAbilitySystemComponent * AbilitySystemComponent, FGameplayTag InEffectGameplayTag){\n\t\tif (!AbilitySystemComponent) {\n\t\treturn nullptr;\n\t}\n\tif (!InEffectGameplayTag.IsValid()) {\n\t\treturn nullptr;\n\t}\n\tUAsyncTaskEffectStackChanged * NewObject = NewObject<UAsyncTaskEffectStackChanged>();\n\tNewObject->AbilitySystemComponent = AbilitySystemComponent;\n\tNewObject->EffectGameplayTag = InEffectGameplayTag;\n\tAbilitySystemComponent->OnActiveGameplayEffectAddedDelegateToSelf.AddUObject(NewObject, &UAsyncTaskEffectStackChanged::OnGameplayEffectAdded);\n\tAbilitySystemComponent->OnActiveGameplayEffectRemovedDelegate.AddUObject(NewObject, &UAsyncTaskEffectStackChanged::OnGameplayEffectRemoved);\n\treturn NewObject;\n}", "CodeBleu_score": 51.99524992445808}, {"code": "UAsyncTaskEffectStackChanged * UAsyncTaskEffectStackChanged::ListenForGameplayEffectStackChange(UAbilitySystemComponent * AbilitySystemComponent, FGameplayTag InEffectGameplayTag){\n\t\t// If the AbilitySystemComponent is invalid, end the task and return null.\n\tif (!AbilitySystemComponent) {\n\t\tEndTask();\n\t\treturn nullptr;\n\t}\n\n\t// If the EffectGameplayTag is invalid, end the task and return null.\n\tif (!InEffectGameplayTag.IsValid()) {\n\t\tEndTask();\n\t\treturn nullptr;\n\t}\n\n\t// Create the UAsyncTaskEffectStackChanged object and initialize it.\n\tUAsyncTaskEffectStackChanged * Task = NewObject<UAsyncTaskEffectStackChanged>();\n\tTask->Initialize(AbilitySystemComponent, InEffectGameplayTag);\n\n\t// Register callbacks for when gameplay effects are added or removed.\n\tTask->AbilitySystemComponent->OnAnyGameplayEffectAddedDelegateToSelf.AddUObject(Task, &UAsyncTaskEffectStackChanged::OnAnyGameplayEffectAddedDelegate);\n\tTask->AbilitySystemComponent->OnAnyGameplayEffectRemovedDelegate.AddUObject(Task, &UAsyncTaskEffectStackChanged::OnAnyGameplayEffectRemovedDelegate);\n\n\t// Return the UAsyncTaskEffectStackChanged object.\n\treturn Task;\n}", "CodeBleu_score": 48.257112526711296}]}
{"instance_id": "6659c2592e93", "generation_result": [{"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tif (EffectRemoved.GrantedTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeReason::Removed, 0);\n\t}\n\tif (EffectRemoved.AssetTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChangeReason::Removed, 0);\n\t}\n}", "CodeBleu_score": 51.58342450563629}, {"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tif (EffectRemoved.GrantedTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.EffectHandle, EGameplayEffectStackChange::Remove);\n\t}\n\tif (EffectRemoved.AssetTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.EffectHandle, EGameplayEffectStackChange::Remove);\n\t}\n}", "CodeBleu_score": 50.623401903507116}, {"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\t// Retrieve asset and granted tags from removed effect\n\tUGameplayEffect * Asset = EffectRemoved.Asset;\n\tFGameplayTagContainer GrantedTags = EffectRemoved.Spec.GrantedTags;\n\n\t// Broadcast stack change event if either tag container has the specified EffectGameplayTag\n\tif (GrantedTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectHandle, EGameplayEffectStackChangeReason::Removed, Asset, GrantedTags);\n\t}\n\tif (AssetTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectHandle, EGameplayEffectStackChangeReason::Removed, Asset, AssetTags);\n\t}\n}", "CodeBleu_score": 52.632955509527605}]}
{"instance_id": "a8f7dcc3f1fa", "generation_result": [{"code": "void UGDGameplayAbility::OnAvatarSet(const FGameplayAbilityActorInfo * ActorInfo, const FGameplayAbilitySpec & Spec){\n\t\tSuper::OnAvatarSet(ActorInfo, Spec);\n\tif (ActivateAbilityOnGranted) {\n\t\tActorInfo->AbilitySystemComponent->TryActivateAbility(Spec.Handle);\n\t}\n}", "CodeBleu_score": 78.03507864084543}, {"code": "void UGDGameplayAbility::OnAvatarSet(const FGameplayAbilityActorInfo * ActorInfo, const FGameplayAbilitySpec & Spec){\n\t\tSuper::OnAvatarSet(ActorInfo, Spec);\n\tif (ActorInfo->AbilitySystemComponent && bActivateAbilityOnGranted) {\n\t\tActorInfo->AbilitySystemComponent->TryActivateAbility(Spec.Handle);\n\t}\n}", "CodeBleu_score": 67.46897437701995}, {"code": "void UGDGameplayAbility::OnAvatarSet(const FGameplayAbilityActorInfo * ActorInfo, const FGameplayAbilitySpec & Spec){\n\t\tSuper::OnAvatarSet(ActorInfo, Spec);\n\n\tif (ActorInfo->AbilitySystemComponent && Spec.Ability->AbilityTags.IsValid() && Spec.Ability->AbilityTags.HasTag(FGameplayTag::RequestActivateAbility))\n\t{\n\t\tActorInfo->AbilitySystemComponent->TryActivateAbility(Spec.Ability);\n\t}\n}", "CodeBleu_score": 60.62470755035201}]}
{"instance_id": "72a7ce4b848c", "generation_result": [{"code": "void UGDAT_PlayMontageAndWaitForEvent::OnMontageEnded(UAnimMontage* Montage, bool bInterrupted){\n\t\tif (!bInterrupted && ShouldBroadcastAbilityTaskDelegates()) {\n\t\tOnCompleted.Broadcast(FGameplayTag::RequestGameplayTag(\"OnCompleted\"), FGameplayEventData());\n\t}\n\tEndTask();\n}", "CodeBleu_score": 59.979562450677214}, {"code": "void UGDAT_PlayMontageAndWaitForEvent::OnMontageEnded(UAnimMontage* Montage, bool bInterrupted){\n\t\tif (!bInterrupted && ShouldBroadcastAbilityTaskDelegates()) {\n\t\tOnCompleted.Broadcast();\n\t}\n\tEndTask();\n}", "CodeBleu_score": 54.99217967057442}, {"code": "void UGDAT_PlayMontageAndWaitForEvent::OnMontageEnded(UAnimMontage* Montage, bool bInterrupted){\n\t\t// Broadcast the OnCompleted event with default gameplay tag and event data\n\tif (!bInterrupted && ShouldBroadcastAbilityTaskDelegates()) {\n\t\tOnCompleted.Broadcast(FGameplayTag(), FGameplayEventData());\n\t}\n\n\t// End the task\n\tEndTask();\n}", "CodeBleu_score": 70.19539616603258}]}
{"instance_id": "cc1cdd579bd4", "generation_result": [{"code": "void UGDAT_PlayMontageAndWaitForEvent::OnDestroy(bool AbilityEnded){\n\t\t// Remove the cancellation handler from the ability\n\tAbility->OnGameplayAbilityCancelled.Remove(OnGameplayAbilityCancelledDelegateHandle);\n\n\t// Stop playing the montage if the ability has ended and the stop flag is set\n\tif (AbilityEnded && StopPlayingMontage)\n\t{\n\t\tStopPlayingMontage();\n\t}\n\n\t// Remove the event tag container delegate from the ability system component, if valid\n\tif (AbilitySystemComponent.IsValid())\n\t{\n\t\tAbilitySystemComponent->RemoveGameplayEventTagContainerDelegate(OnGameplayEventTagContainerDelegateHandle);\n\t}\n\n\tSuper::OnDestroy(AbilityEnded);\n}", "CodeBleu_score": 67.05080053108546}, {"code": "void UGDAT_PlayMontageAndWaitForEvent::OnDestroy(bool AbilityEnded){\n\t\tSuper::OnDestroy(AbilityEnded);\n\n\tif (AbilityEnded) {\n\t\tif (StopPlayingMontage()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (AbilitySystemComponent.IsValid()) {\n\t\tAbilitySystemComponent->RemoveGameplayEventTagContainerDelegate(FGameplayTagContainer(), FGameplayTagContainer(), FGameplayTagContainer(), OnGameplayEventTagContainerDelegateHandle);\n\t}\n}", "CodeBleu_score": 58.85848780080622}, {"code": "void UGDAT_PlayMontageAndWaitForEvent::OnDestroy(bool AbilityEnded){\n\t\tif (AbilityEnded && StopOnAbilityEnd)\n\t{\n\t\tStopPlayingMontage();\n\t}\n\n\tif (AbilitySystemComponent.IsValid())\n\t{\n\t\tAbilitySystemComponent->RemoveGameplayEventTagContainerDelegate(FGameplayTagContainer::EmptyContainer, EventTagContainerDelegate);\n\t}\n\n\tSuper::OnDestroy(AbilityEnded);\n}", "CodeBleu_score": 56.80342867097884}]}
{"instance_id": "5932070df16f", "generation_result": [{"code": "bool UGDAT_PlayMontageAndWaitForEvent::StopPlayingMontage(){\n\t\t//auto _p0 = UGDAT_PlayMontageAndWaitForEvent::StopPlayingMontage();\n\tif (AbilitySystemComponent->IsValid() && AbilitySystemComponent->GetCurrentMontage()!= nullptr) {\n\t\tAbilitySystemComponent->CurrentMontageStop();\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 18.26559323614}, {"code": "bool UGDAT_PlayMontageAndWaitForEvent::StopPlayingMontage(){\n\t", "CodeBleu_score": 1.039744802907657}, {"code": "bool UGDAT_PlayMontageAndWaitForEvent::StopPlayingMontage(){\n\t\t// 0\n\tif (!IsValid(AbilitySystemComponent)) {\n\t\treturn false;\n\t}\n\t// 1\n\tif (AbilitySystemComponent->GetCurrentMontage()!= NULL) {\n\t\treturn false;\n\t}\n\t// 2\n\tif (!IsValid(ActorInfo)) {\n\t\treturn false;\n\t}\n\t// 3\n\tif (!IsValid(ActorInfo->GetAnimInstance())) {\n\t\treturn false;\n\t}\n\t// 4\n\tif (!IsValid(AbilitySystemComponent->GetAnimatingAbility())) {\n\t\treturn false;\n\t}\n\t// 5\n\tAbilitySystemComponent->CurrentMontageStop();\n\t// 6\n\treturn true;\n}", "CodeBleu_score": 35.34763066740706}]}
{"instance_id": "7049be7f0c75", "generation_result": [{"code": "void USBTService_CheckAttackRange::TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds){\n\t\tSuper::TickNode(OwnerComp, NodeMemory, DeltaSeconds);\n\n\tAActor* TargetActor = Cast<AActor>(BlackBoardComp->GetValueAsObject(TargetKey.SelectedKeyName));\n\tif (TargetActor) {\n\t\tfloat DistanceToTarget = FVector::Distance(GetActorLocation(), TargetActor->GetActorLocation());\n\t\tif (DistanceToTarget <= AttackRange) {\n\t\t\tif (MyController->LineOfSightTo(TargetActor, SightDistance)) {\n\t\t\t\tBlackBoardComp->SetValueAsBool(InRangeKey.SelectedKeyName, true);\n\t\t\t\tBlackBoardComp->SetValueAsBool(VisibleKey.SelectedKeyName, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBlackBoardComp->SetValueAsBool(InRangeKey.SelectedKeyName, true);\n\t\t\t\tBlackBoardComp->SetValueAsBool(VisibleKey.SelectedKeyName, false);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tBlackBoardComp->SetValueAsBool(InRangeKey.SelectedKeyName, false);\n\t\t\tBlackBoardComp->SetValueAsBool(VisibleKey.SelectedKeyName, false);\n\t\t}\n\t}\n}", "CodeBleu_score": 48.50132029101873}, {"code": "void USBTService_CheckAttackRange::TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds){\n\t\tSuper::TickNode(OwnerComp, NodeMemory, DeltaSeconds);\n\n\t// Get the target actor from the blackboard\n\tAActor* TargetActor = Cast<AActor>(BlackBoardComp->GetValueAsObject(FName(\"TargetActor\")));\n\n\tif (TargetActor) {\n\t\t// Calculate the distance to the target\n\t\tFVector TargetLocation = TargetActor->GetActorLocation();\n\t\tFVector AIActorLocation = OwnerComp.GetAIOwner()->GetPawn()->GetActorLocation();\n\t\tfloat DistanceToTarget = FVector::Distance(AIActorLocation, TargetLocation);\n\n\t\t// Check if the target is within the maximum attack range\n\t\tif (DistanceToTarget <= MaxAttackRange) {\n\t\t\t// Check for line of sight to the target\n\t\t\tbool IsTargetVisible = MyController->LineOfSightTo(TargetActor, TargetActor->GetActorLocation(), false, EyeConeAngle, false);\n\n\t\t\t// Store the result in the blackboard\n\t\t\tBlackBoardComp->SetValueAsBool(FName(\"IsTargetVisible\"), IsTargetVisible);\n\t\t}\n\t}\n}", "CodeBleu_score": 49.902656184801856}, {"code": "void USBTService_CheckAttackRange::TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds){\n\t\tSuper::TickNode(OwnerComp, NodeMemory, DeltaSeconds);\n\n\t// Get the AI controller\n\tAController* MyController = OwnerComp.GetAIOwner();\n\tif (MyController == nullptr) {\n\t\treturn;\n\t}\n\n\t// Get the blackboard component\n\tUBlackboardComponent* BlackBoardComp = MyController->GetBlackboardComponent();\n\tif (BlackBoardComp == nullptr) {\n\t\treturn;\n\t}\n\n\t// Get the target actor from the blackboard\n\tAActor* TargetActor = Cast<AActor>(BlackBoardComp->GetValueAsObject(BlackboardKey.SelectedKeyName));\n\tif (TargetActor == nullptr) {\n\t\treturn;\n\t}\n\n\t// Calculate the distance to the target actor\n\tFVector MyLocation = MyController->GetPawn()->GetActorLocation();\n\tfloat DistanceToTarget = FVector::Distance(MyLocation, TargetActor->GetActorLocation());\n\n\t// Check if the target is within range\n\tbool bInRange = DistanceToTarget <= MaxAttackRange;\n\n\t// Check for line of sight to the target\n\tbool bInLOS = MyController->LineOfSightTo(TargetActor, MyController->GetPawn()->GetActorLocation(), EyeHeight, false);\n\n\t// Store the result in the blackboard\n\tBlackBoardComp->SetValueAsBool(BlackboardKey.SelectedKeyName, bInRange && bInLOS);\n}", "CodeBleu_score": 57.48971962251942}]}
{"instance_id": "031bd0ec3e3c", "generation_result": [{"code": "EBTNodeResult::Type USBTTask_HealSelf::ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory){\n\t\tauto Pawn = OwnerComp.GetAIOwner()->GetPawn();\n\tif (!ensure(Pawn)) {\n\t\treturn EBTNodeResult::Failed;\n\t}\n\tauto AttributeComp = Pawn->FindComponentByClass<UAttributeComponent>();\n\tif (!ensure(AttributeComp)) {\n\t\treturn EBTNodeResult::Failed;\n\t}\n\tAttributeComp->ApplyHealthChange(AttributeComp->GetHealthMax());\n\treturn EBTNodeResult::Succeeded;\n}", "CodeBleu_score": 53.533424906472185}, {"code": "EBTNodeResult::Type USBTTask_HealSelf::ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory){\n\t\tauto Pawn = OwnerComp.GetAIOwner()->GetPawn();\n\tif (Pawn) {\n\t\tauto AttributeComp = Pawn->FindComponentByClass<UAttributeComponent>();\n\t\tif (AttributeComp) {\n\t\t\tAttributeComp->ApplyHealthChange(AttributeComp->GetHealthMax());\n\t\t}\n\t}\n\treturn EBTNodeResult::Succeeded;\n}", "CodeBleu_score": 62.60552968030492}, {"code": "EBTNodeResult::Type USBTTask_HealSelf::ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory){\n\t\tPawn = OwnerComp.GetAIOwner()->GetPawn();\n\tif (Pawn) {\n\t\tAttributeComp = Pawn->FindComponentByClass<UAttributeComponent>();\n\t\tif (AttributeComp) {\n\t\t\tAttributeComp->ApplyHealthChange(AttributeComp->GetHealthMax());\n\t\t}\n\t}\n\treturn EBTNodeResult::Succeeded;\n}", "CodeBleu_score": 62.33520472848184}]}
{"instance_id": "6cd6e778e91b", "generation_result": [{"code": "void USProjectileMovementComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tGetWorld()->GetSubsystem<USTickablesSubsystem>()->RegisterComponent(this);\n}", "CodeBleu_score": 40.30073290366272}, {"code": "void USProjectileMovementComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tGetWorld()->GetSubsystem<USTickablesSubsystem>()->RegisterComponent(this);\n}", "CodeBleu_score": 40.30073290366272}, {"code": "void USProjectileMovementComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tGetWorld()->GetSubsystem<USTickablesSubsystem>()->RegisterComponent(this);\n}", "CodeBleu_score": 40.30073290366272}]}
{"instance_id": "e90ff27c7f16", "generation_result": [{"code": "void USProjectileMovementComponent::EndPlay(const EEndPlayReason::Type EndPlayReason){\n\t\tSuper::EndPlay(EndPlayReason);\n\tGetWorld()->GetSubsystem<USTickablesSubsystem>()->DeRegisterComponent(this);\n}", "CodeBleu_score": 46.412719084192446}, {"code": "void USProjectileMovementComponent::EndPlay(const EEndPlayReason::Type EndPlayReason){\n\t\tSuper::EndPlay(EndPlayReason);\n\n\tUSTickablesSubsystem* Tickables = GetWorld()->GetSubsystem<USTickablesSubsystem>();\n\tTickables->DeRegisterComponent(this);\n}", "CodeBleu_score": 81.971458108573}, {"code": "void USProjectileMovementComponent::EndPlay(const EEndPlayReason::Type EndPlayReason){\n\t\tSuper::EndPlay(EndPlayReason);\n\tUSTickablesSubsystem* Tickables = GetWorld()->GetSubsystem<USTickablesSubsystem>();\n\tTickables->DeRegisterComponent(this);\n}", "CodeBleu_score": 81.971458108573}]}
{"instance_id": "be3e542c07ea", "generation_result": [{"code": "void USSignificanceComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\n\tif (bManagingSignificance) {\n\t\tif (GetOwner()->Implements<USSignificanceInterface>()) {\n\t\t\tRegisterWithManager();\n\t\t} else {\n\t\t\tUE_LOG(LogTemp, Warning, TEXT(\"Significance component %s does not implement the USSignificanceInterface, it will not manage significance\"), *GetOwner()->GetName());\n\t\t}\n\t}\n\n\t// TODO: This is a hack to get the particle system components to update their significance immediately.\n\t// We should probably be doing this in the manager, but this is a hack for now.\n\tfor (auto ParticleSystemComponent : GetOwner()->GetComponents<UParticleSystemComponent>()) {\n\t\tParticleSystemComponent->SetSignificanceUpdateFrequency(0.0f);\n\t\tParticleSystemComponent->SetSignificanceUpdateFrequency(1.0f);\n\t}\n}", "CodeBleu_score": 43.16590329319002}, {"code": "void USSignificanceComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tif (bManagingSignificance) {\n\t\tif (GetOwner()->Implements<USSignificanceInterface>()) {\n\t\t\tRegisterWithManager();\n\t\t} else {\n\t\t\tGetWorld()->GetTimerManager().SetTimerForNextTick(FTimerDelegate::CreateUObject(this, &USSignificanceComponent::RegisterWithManager));\n\t\t}\n\t}\n\tif (GetOwner()->GetComponents<UParticleSystemComponent>()) {\n\t\tGetOwner()->GetComponents<UParticleSystemComponent>()->ForEach(\n\t\t\t[this](UParticleSystemComponent* ParticleSystem) {\n\t\t\t\tParticleSystem->OnSystemFinished.AddDynamic(this, &USSignificanceComponent::OnParticleSystemFinished);\n\t\t\t\tParticleSystem->OnSystemFinished.AddDynamic(this, &USSignificanceComponent::OnParticleSystemFinished);\n\t\t\t});\n\t}\n}", "CodeBleu_score": 56.586799290745745}, {"code": "void USSignificanceComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\n\t// If managing significance is enabled, check if the owner implements the significance interface.\n\tif (bManagingSignificance) {\n\t\tif (GetOwner()->Implements<USSignificanceInterface>()) {\n\t\t\tRegisterWithManager();\n\t\t}\n\t}\n\n\t// If we are waiting one frame, schedule ourselves for the next tick.\n\tif (bWaitOneFrame) {\n\t\tGetWorld()->GetTimerManager().SetTimerForNextTick(this);\n\t}\n\n\t// Manage particle significance for any particle system components owned by the actor.\n\tfor (UParticleSystemComponent* Comp : GetOwner()->GetComponents<UParticleSystemComponent>()) {\n\t\tComp->SetManagingSignificance(true);\n\t}\n}", "CodeBleu_score": 46.74883777502929}]}
{"instance_id": "77824b6415d0", "generation_result": [{"code": "void USSignificanceComponent::RegisterWithManager(){\n\t// Get the significance manager from the world\n\tUWorld* World = GetWorld();\n\tif (!World) {\n\t\treturn;\n\t}\n\tUSignificanceManager* SignificanceManager = World->GetManagerByClass(USignificanceManager::StaticClass());\n\tif (!SignificanceManager) {\n\t\treturn;\n\t}\n\n\t// Define the lambda functions for calculating significance and handling post-significance updates\n\tauto CalculateSignificance = [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, const FTransform& Viewpoint) -> float {\n\t\treturn CalcSignificance(ObjectInfo, Viewpoint);\n\t};\n\tauto PostSignificanceUpdate = [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, float OldSignificance, float Significance, bool bFinal) {\n\t\tPostSignificanceUpdate(ObjectInfo, OldSignificance, Significance, bFinal);\n\t};\n\n\t// Register the significance component with the manager using the owner's class name as the tag and specifying the lambda functions for significance calculation and updates\n\tSignificanceManager->RegisterObject(GetOwner()->GetClass()->GetFName(), CalculateSignificance, PostSignificanceUpdate);\n}", "CodeBleu_score": 70.97213884157667}, {"code": "void USSignificanceComponent::RegisterWithManager(){\n\t// Get the significance manager from the world\n\tUSignificanceManager* SignificanceManager = GetWorld()->GetManager<USignificanceManager>();\n\tif (!SignificanceManager)\n\t{\n\t\tUE_LOG(LogGame, Error, TEXT(\"SignificanceManager not found in world\"));\n\t\treturn;\n\t}\n\n\t// Calculate significance\n\tauto CalculateSignificance = [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, const FTransform& Viewpoint) -> float\n\t{\n\t\treturn CalcSignificance(ObjectInfo, Viewpoint);\n\t};\n\n\t// Handle post-significance updates\n\tauto PostSignificanceUpdate = [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, float OldSignificance, float Significance, bool bFinal)\n\t{\n\t\tPostSignificanceUpdate(ObjectInfo, OldSignificance, Significance, bFinal);\n\t};\n\n\t// Register the component with the manager using the owner's class name as the tag and specifying the lambda functions for significance calculation and updates\n\tSignificanceManager->RegisterObject(this, GetOwner()->GetClass()->GetFName(), CalculateSignificance, PostSignificanceUpdate);\n}", "CodeBleu_score": 71.02987506457166}, {"code": "void USSignificanceComponent::RegisterWithManager(){\n\t// Get the significance manager from the world\n\tUWorld* World = GetWorld();\n\tif (!World) {\n\t\treturn;\n\t}\n\tUSignificanceManager* SignificanceManager = World->GetGameInstance()->GetSignificanceManager();\n\tif (!SignificanceManager) {\n\t\treturn;\n\t}\n\n\t// Define the lambda functions for calculating significance and handling post-significance updates\n\tauto CalculateSignificance = [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, const FTransform& Viewpoint) -> float {\n\t\treturn CalcSignificance(ObjectInfo, Viewpoint);\n\t};\n\tauto PostSignificanceUpdate = [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, float OldSignificance, float Significance, bool bFinal) {\n\t\tPostSignificanceUpdate(ObjectInfo, OldSignificance, Significance, bFinal);\n\t};\n\n\t// Register the significance component with the significance manager using the owner's class name as the tag and specifying the lambda functions for significance calculation and updates\n\tSignificanceManager->RegisterObject(this, CalculateSignificance, PostSignificanceUpdate);\n}", "CodeBleu_score": 69.89869924112178}]}
{"instance_id": "dca342410d64", "generation_result": [{"code": "bool USActorPoolingSubsystem::ReleaseToPool(AActor* Actor){\n\t\tSCOPED_NAMED_EVENT(USActorPoolingSubsystem, ReleaseToPool);\n\n\tif (Actor->IsPoolingEnabled()) {\n\t\tUSActorPoolingSubsystem* PoolingSubsystem = Actor->GetWorld()->GetSubsystem<USActorPoolingSubsystem>();\n\t\tif (PoolingSubsystem) {\n\t\t\tPoolingSubsystem->ReleaseToPool_Internal(Actor);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tActor->Destroy();\n\treturn false;\n}", "CodeBleu_score": 60.144388256184335}, {"code": "bool USActorPoolingSubsystem::ReleaseToPool(AActor* Actor){\n\t\tSCOPED_NAMED_EVENT(USActorPoolingSubsystem::ReleaseToPool, FColor::Purple);\n\tif (Actor == nullptr) {\n\t\treturn false;\n\t}\n\tif (Actor->GetWorld()->GetSubsystem<USActorPoolingSubsystem>()!= nullptr) {\n\t\tActor->GetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool_Internal(Actor);\n\t\treturn true;\n\t}\n\telse {\n\t\tActor->Destroy();\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 50.28918474055095}, {"code": "bool USActorPoolingSubsystem::ReleaseToPool(AActor* Actor){\n\t\tSCOPED_NAMED_EVENT(USActorPoolingSubsystem::ReleaseToPool, FColor::Purple);\n\tif (Actor) {\n\t\tif (Actor->GetWorld()->GetSubsystem<USActorPoolingSubsystem>()) {\n\t\t\tActor->GetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool_Internal(Actor);\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tActor->Destroy();\n\t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 50.67992399355754}]}
{"instance_id": "5c285130f782", "generation_result": [{"code": "void USActorPoolingSubsystem::PrimeActorPool(TSubclassOf<AActor> ActorClass, int32 Amount){\n\t\tSCOPED_NAMED_EVENT(USActorPoolingSubsystem_PrimeActorPool, FColor::Purple);\n\tUE_LOG(LogActorPoolingSubsystem, Log, TEXT(\"PrimeActorPool: %s\"), *ActorClass->GetName());\n\n\t// Spawn the actors and release them to the pool\n\tfor (int32 i = 0; i < Amount; i++) {\n\t\tSpawnActorFromPool(ActorClass, FActorSpawnParameters());\n\t}\n}", "CodeBleu_score": 35.813859599750856}, {"code": "void USActorPoolingSubsystem::PrimeActorPool(TSubclassOf<AActor> ActorClass, int32 Amount){\n\t\tSCOPED_NAMED_EVENT(USActorPoolingSubsystem_PrimeActorPool, TEXT(\"USActorPoolingSubsystem::PrimeActorPool\"));\n\tUE_LOG(LogActorPooling, Log, TEXT(\"PrimeActorPool: %s\"), *ActorClass->GetName());\n\tfor (int32 i = 0; i < Amount; i++) {\n\t\tAActor* NewActor = GetWorld()->SpawnActor<AActor>(ActorClass);\n\t\tif (NewActor) {\n\t\t\tReleaseToPool(NewActor);\n\t\t}\n\t}\n}", "CodeBleu_score": 50.58567319504822}, {"code": "void USActorPoolingSubsystem::PrimeActorPool(TSubclassOf<AActor> ActorClass, int32 Amount){\n\t\tSCOPED_NAMED_EVENT(USActorPoolingSubsystem_PrimeActorPool, TEXT(\"USActorPoolingSubsystem::PrimeActorPool\"));\n\tUE_LOG(LogActorPoolingSubsystem, Log, TEXT(\"Starting actor pool for %s\"), *ActorClass->GetName());\n\n\tfor (int32 i = 0; i < Amount; i++) {\n\t\tAActor* SpawnedActor = GetWorld()->SpawnActor<AActor>(ActorClass);\n\t\tif (SpawnedActor) {\n\t\t\tReleaseActorToPool(SpawnedActor);\n\t\t}\n\t}\n}", "CodeBleu_score": 50.33012968421746}]}
{"instance_id": "43c013653d6d", "generation_result": [{"code": "void USLoadingScreenSubsystem::BeginLoadingScreen(const FString& MapName){\n\t\tif (GetMoviePlayer()) {\n\t\tFLoadingScreenAttributes* LoadingScreenAttributes = new FLoadingScreenAttributes();\n\t\tLoadingScreenAttributes->bAutoCompleteWhenLoadingCompletes = true;\n\t\tLoadingScreenAttributes->WidgetLoadingScreen = FLoadingScreenAttributes::NewTestLoadingScreenWidget();\n\t\tGetMoviePlayer()->SetupLoadingScreen(*LoadingScreenAttributes);\n\t\tGetMoviePlayer()->PlayMovie(MapName);\n\t}\n}", "CodeBleu_score": 49.959324098055866}, {"code": "void USLoadingScreenSubsystem::BeginLoadingScreen(const FString& MapName){\n\t\tFLoadingScreenAttributes LoadingScreenAttributes;\n\tLoadingScreenAttributes.bAutoCompleteWhenLoadingCompletes = true;\n\tLoadingScreenAttributes.WidgetLoadingScreen = FLoadingScreenAttributes::NewTestLoadingScreenWidget;\n\tGetMoviePlayer()->SetupLoadingScreen(LoadingScreenAttributes);\n\tGetMoviePlayer()->PlayMovie(MapName);\n}", "CodeBleu_score": 50.191233955046066}, {"code": "void USLoadingScreenSubsystem::BeginLoadingScreen(const FString& MapName){\n\t\tFLoadingScreenAttributes LoadingScreenAttributes;\n\tLoadingScreenAttributes.bAutoCompleteWhenLoadingCompletes = true;\n\tLoadingScreenAttributes.WidgetLoadingScreen = FLoadingScreenAttributes::NewTestLoadingScreenWidget;\n\tGetMoviePlayer()->SetupLoadingScreen(LoadingScreenAttributes);\n}", "CodeBleu_score": 60.27576862418273}]}
{"instance_id": "a6979eb925a5", "generation_result": [{"code": "void USAction::StartAction_Implementation(AActor* Instigator){\n\t\tUE_LOG(LogTemp, Log, TEXT(\"Starting action %s\"), *GetName());\n\tGetOwningComponent()->ActiveGameplayTags.AppendTags(GrantedTags);\n\tGetOwningComponent()->UpdateReplicatedData();\n\tif (GetOwningComponent()->GetOwnerRole() == ROLE_Authority) {\n\t\tStartTime = GetWorld()->GetTimeSeconds();\n\t}\n\tGetOwningComponent()->OnActionStarted.Broadcast();\n}", "CodeBleu_score": 39.311243346695655}, {"code": "void USAction::StartAction_Implementation(AActor* Instigator){\n\t", "CodeBleu_score": 2.8878179675041573}, {"code": "void USAction::StartAction_Implementation(AActor* Instigator){\n\t\tUE_LOG(LogTemp, Log, TEXT(\"Starting action %s\"), *GetName());\n\tComp->ActiveGameplayTags.AppendTags(Tags);\n\tComp->UpdateRepData();\n\n\tif (Role == ENetRole::ROLE_Authority) {\n\t\tStartTime = GetWorld()->GetTimeSeconds();\n\t}\n\n\tComp->OnActionStarted.Broadcast();\n}", "CodeBleu_score": 31.09873256891347}]}
{"instance_id": "bdec7bf3e2d7", "generation_result": [{"code": "float USActionEffect::GetTimeRemaining() const{\n\t\tif (auto GS = GetWorld()->GetGameState<AGameStateBase>()) {\n\t\treturn GS->GetServerWorldTimeSeconds() - GetWorld()->TimeSeconds;\n\t}\n\treturn GetDuration();\n}", "CodeBleu_score": 48.39483784825547}, {"code": "float USActionEffect::GetTimeRemaining() const{\n\t\tif (auto GS = GetWorld()->GetGameState<AGameStateBase>()) {\n\t\treturn GS->GetServerWorldTimeSeconds() - GetStartTime();\n\t}\n\treturn GetDuration();\n}", "CodeBleu_score": 39.8959835331232}, {"code": "float USActionEffect::GetTimeRemaining() const{\n\t\tauto* World = GetWorld();\n\tif (World) {\n\t\treturn World->GetGameState<AGameStateBase>()->GetServerWorldTimeSeconds() - StartTime;\n\t}\n\treturn Duration;\n}", "CodeBleu_score": 37.416032958769186}]}
{"instance_id": "db3a7508643b", "generation_result": [{"code": "void USInteractionComponent::ServerInteract_Implementation(AActor* InFocus){\n\t\tif (InFocus) {\n\t\tAPawn* OwnerPawn = Cast<APawn>(GetOwner());\n\t\tif (OwnerPawn) {\n\t\t\tOwnerPawn->ServerInteract(InFocus);\n\t\t}\n\t}\n\telse {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"No actor specified in ServerInteract_Implementation\"));\n\t}\n}", "CodeBleu_score": 49.58827081615297}, {"code": "void USInteractionComponent::ServerInteract_Implementation(AActor* InFocus){\n\t\t// If the actor is null, display a debug message.\n\tif (InFocus == nullptr) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"ServerInteract: Actor is null!\"));\n\t\treturn;\n\t}\n\n\t// Retrieve the owning pawn.\n\tAPawn* OwningPawn = Cast<APawn>(GetOwner());\n\tif (OwningPawn == nullptr) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"ServerInteract: Owning Pawn is null!\"));\n\t\treturn;\n\t}\n\n\t// Call the Interact method on the focus actor using the pawn.\n\tInFocus->Interact(OwningPawn);\n}", "CodeBleu_score": 58.54328283189929}, {"code": "void USInteractionComponent::ServerInteract_Implementation(AActor* InFocus){\n\t\tif (InFocus) {\n\t\tAPawn* OwningPawn = Cast<APawn>(GetOwner());\n\t\tif (OwningPawn) {\n\t\t\tOwningPawn->ServerInteract(InFocus);\n\t\t}\n\t} else {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"No focus actor specified for interaction.\"));\n\t}\n}", "CodeBleu_score": 49.694229845453734}]}
{"instance_id": "e6a5224079e6", "generation_result": [{"code": "bool USGameplayFunctionLibrary::ApplyDamage(AActor* DamageCauser, AActor* TargetActor, float DamageAmount){\n\t\t// Get the target actor's attribute component.\n\tUAttributeComponent* TargetAttributeComponent = TargetActor->FindComponentByClass<UAttributeComponent>();\n\tif (TargetAttributeComponent) {\n\t\t// Apply a negative health change to the target actor.\n\t\tTargetAttributeComponent->ApplyHealthChange(-DamageAmount);\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 50.980163471494855}, {"code": "bool USGameplayFunctionLibrary::ApplyDamage(AActor* DamageCauser, AActor* TargetActor, float DamageAmount){\n\t\t// Retrieve the attribute component of the target actor.\n\tUAttributeComponent* AttributeComp = TargetActor->FindComponentByClass<UAttributeComponent>();\n\tif (AttributeComp) {\n\t\t// Apply the negative health change equal to the damage amount.\n\t\tAttributeComp->ApplyHealthChange(-DamageAmount);\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 55.65730393492476}, {"code": "bool USGameplayFunctionLibrary::ApplyDamage(AActor* DamageCauser, AActor* TargetActor, float DamageAmount){\n\t\tif (!DamageCauser ||!TargetActor) {\n\t\treturn false;\n\t}\n\n\tUHealthComponent* HealthComp = TargetActor->FindComponentByClass<UHealthComponent>();\n\tif (!HealthComp) {\n\t\treturn false;\n\t}\n\n\tHealthComp->ApplyHealthChange(-DamageAmount);\n\treturn true;\n}", "CodeBleu_score": 51.915008760143756}]}
{"instance_id": "084a7501fc08", "generation_result": [{"code": "bool ASPlayerState::UpdatePersonalRecord(float NewTime){\n\t\tif (NewTime < PersonalRecord) {\n\t\treturn false;\n\t}\n\tPersonalRecord = NewTime;\n\tOnPersonalRecordChanged.Broadcast();\n\treturn true;\n}", "CodeBleu_score": 40.523153532373286}, {"code": "bool ASPlayerState::UpdatePersonalRecord(float NewTime){\n\t\tif (NewTime > PersonalRecordTime) {\n\t\tPersonalRecordTime = NewTime;\n\t\tOnRecordTimeChanged.Broadcast(NewTime);\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 51.769139311942645}, {"code": "bool ASPlayerState::UpdatePersonalRecord(float NewTime){\n\t\tif (NewTime > PersonalRecordTime) {\n\t\tPersonalRecordTime = NewTime;\n\t\tOnRecordTimeChanged.Broadcast(NewTime);\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 51.769139311942645}]}
{"instance_id": "8e0ccc856566", "generation_result": [{"code": "void ASPowerup_HealthPotion::Interact_Implementation(APawn* InstigatorPawn){\n\t\tif (IsValid(InstigatorPawn) && InstigatorPawn->HasAuthority()) {\n\t\tUSAttributeComponent* AttributeComp = InstigatorPawn->GetAttributeComponent();\n\t\tif (IsValid(AttributeComp) &&!AttributeComp->IsFullHealth()) {\n\t\t\tif (AttributeComp->GetCredits() >= RequiredCredits) {\n\t\t\t\tAttributeComp->RemoveCredits(RequiredCredits);\n\t\t\t\tAttributeComp->ApplyHealthChange(HealthChange);\n\t\t\t\tHideAndCooldownPowerup(InstigatorPawn);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 56.940128227006525}, {"code": "void ASPowerup_HealthPotion::Interact_Implementation(APawn* InstigatorPawn){\n\t\tif (IsValid(InstigatorPawn) && InstigatorPawn->HasAuthority()) {\n\t\tUAttributeComponent* AttributeComp = InstigatorPawn->GetAttributeComponent();\n\t\tif (AttributeComp) {\n\t\t\tif (AttributeComp->IsFullHealth()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (InstigatorPawn->GetPlayerState<ASPlayerState>()->RemoveCredits(Cost)) {\n\t\t\t\tAttributeComp->ApplyHealthChange(HealthChange);\n\t\t\t\tHideAndCooldownPowerup(InstigatorPawn);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 46.03154302016309}, {"code": "void ASPowerup_HealthPotion::Interact_Implementation(APawn* InstigatorPawn){\n\t\t// Check if the instigator pawn is valid\n\tif (IsValid(InstigatorPawn)) {\n\t\t// Get the attribute component from the pawn\n\t\tUAttributeComponent* AttributeComp = InstigatorPawn->FindComponentByClass<UAttributeComponent>();\n\n\t\t// Check if the attribute component exists\n\t\tif (AttributeComp) {\n\t\t\t// Check if the pawn is not at full health\n\t\t\tif (!AttributeComp->IsFullHealth()) {\n\t\t\t\t// Get the player state from the pawn\n\t\t\t\tASPlayerState* PlayerState = InstigatorPawn->GetPlayerState<ASPlayerState>();\n\n\t\t\t\t// Check if the player state exists\n\t\t\t\tif (PlayerState) {\n\t\t\t\t\t// Check if the player state can remove the required credits\n\t\t\t\t\tif (PlayerState->RemoveCredits(RequiredCredits)) {\n\t\t\t\t\t\t// Apply a health change to the pawn\n\t\t\t\t\t\tAttributeComp->ApplyHealthChange(HealthChange);\n\n\t\t\t\t\t\t// Trigger the power-up cooldown\n\t\t\t\t\t\tHideAndCooldownPowerup();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 52.44082402467429}]}
{"instance_id": "39a680859a89", "generation_result": [{"code": "void ASProjectileBase::Explode_Implementation(){\n\t\t//Spawn Impact Effect\n\tUGameplayStatics::SpawnEmitterAtLocation(GetWorld(), ImpactEffect, GetActorLocation());\n\n\t//Play Impact Sound\n\tUGameplayStatics::PlaySoundAtLocation(this, ImpactSound, GetActorLocation());\n\n\t//Play Camera Shake\n\tUGameplayStatics::PlayWorldCameraShake(GetWorld(), ImpactShake, GetActorLocation(), GetImpactShakeOuterRadius(), GetImpactShakeInnerRadius());\n\n\t//Release to Pool\n\tGetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool(this);\n}", "CodeBleu_score": 60.720738324560585}, {"code": "void ASProjectileBase::Explode_Implementation(){\n\t\t// Spawn impact visual effect\n\tUGameplayStatics::SpawnEmitterAtLocation(GetWorld(), ImpactEffect, GetActorLocation());\n\n\t// Play impact sound\n\tUGameplayStatics::PlaySoundAtLocation(GetWorld(), ImpactSound, GetActorLocation());\n\n\t// Trigger camera shake\n\tUGameplayStatics::PlayWorldCameraShake(GetWorld(), ImpactShake, GetActorLocation(), GetImpactShakeOuterRadius(), GetImpactShakeInnerRadius());\n\n\t// Release to pool\n\tGetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool(this);\n}", "CodeBleu_score": 58.15187114195833}, {"code": "void ASProjectileBase::Explode_Implementation(){\n\t\t// Spawn impact visual effect at projectile location\n\tUGameplayStatics::SpawnEmitterAtLocation(this, ImpactEffect, GetActorLocation());\n\n\t// Play impact sound\n\tUGameplayStatics::PlaySoundAtLocation(this, ImpactSound, GetActorLocation());\n\n\t// Trigger camera shake\n\tUGameplayStatics::PlayWorldCameraShake(this, ImpactShake, GetActorLocation(), GetImpactShakeOuterRadius(), GetImpactShakeInnerRadius());\n\n\t// Release projectile to pool\n\tGetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool(this);\n}", "CodeBleu_score": 57.323632652158686}]}
{"instance_id": "a95c41c6d7b5", "generation_result": [{"code": "FPlayerSaveData* USSaveGame::GetPlayerData(APlayerState* PlayerState){\n\t\tif (PlayerState == nullptr) {\n\t\treturn nullptr;\n\t}\n\tif (PlayerState->GetWorld()->IsPlayInEditor()) {\n\t\tUE_LOG(LogSaveGame, Warning, TEXT(\"GetPlayerData called in Play-In-Editor (PIE) mode. Returning first saved player data if available.\"));\n\t\tif (SavedPlayers.Num() > 0) {\n\t\t\treturn SavedPlayers[0];\n\t\t}\n\t\treturn nullptr;\n\t}\n\telse {\n\t\tFString PlayerUniqueId = PlayerState->GetUniqueId().ToString();\n\t\tfor (int i = 0; i < SavedPlayers.Num(); i++) {\n\t\t\tif (SavedPlayers[i]->PlayerUniqueId == PlayerUniqueId) {\n\t\t\t\treturn SavedPlayers[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 61.16764578990337}, {"code": "FPlayerSaveData* USSaveGame::GetPlayerData(APlayerState* PlayerState){\n\t\tif (PlayerState == nullptr) {\n\t\treturn nullptr;\n\t}\n\tif (GEngine->IsPlayInEditorGame()) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"GetPlayerData: Play-In-Editor (PIE) mode detected. Returning first saved player entry.\"));\n\t\tif (SavedPlayers.Num() > 0) {\n\t\t\treturn SavedPlayers[0];\n\t\t}\n\t\treturn nullptr;\n\t}\n\treturn SavedPlayers.FindByPredicate([&](FPlayerSaveData* PlayerData) {\n\t\treturn PlayerData->GetUniqueId() == PlayerState->GetUniqueId();\n\t});\n}", "CodeBleu_score": 49.504297895000605}, {"code": "FPlayerSaveData* USSaveGame::GetPlayerData(APlayerState* PlayerState){\n\t\tif (PlayerState == nullptr) {\n\t\treturn nullptr;\n\t}\n\tif (GEngine->IsPlayInEditorGame()) {\n\t\tUE_LOG(LogSaveGame, Warning, TEXT(\"GetPlayerData: Play-In-Editor (PIE) mode detected. Returning first saved player entry.\"));\n\t\tif (SavedPlayers.Num() > 0) {\n\t\t\treturn SavedPlayers[0];\n\t\t}\n\t\telse {\n\t\t\treturn nullptr;\n\t\t}\n\t}\n\telse {\n\t\tFString PlayerUniqueId = PlayerState->GetUniqueId().ToString();\n\t\tint32 Index = SavedPlayers.FindByPredicate([&](FPlayerSaveData* SavedPlayer) {\n\t\t\treturn SavedPlayer->PlayerUniqueId == PlayerUniqueId;\n\t\t});\n\t\tif (Index!= INDEX_NONE) {\n\t\t\treturn SavedPlayers[Index];\n\t\t}\n\t\telse {\n\t\t\treturn nullptr;\n\t\t}\n\t}\n}", "CodeBleu_score": 57.5162060083096}]}
{"instance_id": "58a03c087c47", "generation_result": [{"code": "void USSaveGameSubsystem::HandleStartingNewPlayer(AController* NewPlayer){\n\t\tauto NewPlayerState = NewPlayer->GetPlayerState<ASPlayerState>();\n\tif (NewPlayerState) {\n\t\tNewPlayerState->LoadPlayerState();\n\t}\n}", "CodeBleu_score": 56.367043457249046}, {"code": "void USSaveGameSubsystem::HandleStartingNewPlayer(AController* NewPlayer){\n\t\tauto PS = NewPlayer->GetPlayerState<ASPlayerState>();\n\tif (PS) {\n\t\tPS->LoadPlayerState();\n\t}\n}", "CodeBleu_score": 59.31360147562136}, {"code": "void USSaveGameSubsystem::HandleStartingNewPlayer(AController* NewPlayer){\n\t\tif (NewPlayer->PlayerState) {\n\t\tASPlayerState* PS = Cast<ASPlayerState>(NewPlayer->PlayerState);\n\t\tif (PS) {\n\t\t\tPS->LoadPlayerState();\n\t\t}\n\t}\n}", "CodeBleu_score": 57.12244049675553}]}
{"instance_id": "c5bd4c059b71", "generation_result": [{"code": "void USSaveGameSubsystem::WriteSaveGame(){\n\t\t// Clear existing saved player and actor data in CurrentSaveGame\n\tCurrentSaveGame->SavedPlayers.Empty();\n\tCurrentSaveGame->SavedActors.Empty();\n\n\t// Get the game state\n\tASGameState* GS = GetWorld()->GetGameState();\n\n\t// Save player data for each player in the game state\n\tfor (int i = 0; i < GS->PlayerArray.Num(); i++) {\n\t\tCurrentSaveGame->SavedPlayers.Add(GS->PlayerArray[i]);\n\t}\n\n\t// Iterate through all actors in the world, saving those that implement a specific interface\n\tTArray<AActor*> Actors;\n\tGetWorld()->GetActors(Actors);\n\tfor (AActor* Actor : Actors) {\n\t\tif (Actor->Implements<USGameplayInterface>()) {\n\t\t\tCurrentSaveGame->SavedActors.Add(Actor);\n\t\t}\n\t}\n\n\t// Write the save game to a slot\n\tUGameplayStatics::SaveGameToSlot(CurrentSaveGame, SaveSlotName, 0);\n\n\t// Broadcast an event to signal the save is complete\n\tOnSaveGameWritten.Broadcast();\n}", "CodeBleu_score": 39.09933938001593}, {"code": "void USSaveGameSubsystem::WriteSaveGame(){\n\t\tCurrentSaveGame->SavedPlayers.Empty();\n\tCurrentSaveGame->SavedActors.Empty();\n\tGetWorld()->GetGameState()->GetPlayerArray(PS->PlayerArray);\n\tfor (int i = 0; i < PS->PlayerArray.Num(); i++) {\n\t\tPS->SavePlayerState(PS->PlayerArray[i], CurrentSaveGame->SavedPlayers);\n\t}\n\tfor (TActorIterator<AActor> ActorItr(GetWorld()); ActorItr; ++ActorItr) {\n\t\tif (ActorItr->Implements<USGameplayInterface>()) {\n\t\t\tActorItr->GetFName();\n\t\t\tActorItr->GetWorld();\n\t\t\tActorItr->Serialize(ActorItr->GetActorTransform());\n\t\t\tCurrentSaveGame->SavedActors.Add(*ActorItr);\n\t\t}\n\t}\n\tCurrentSaveGame->SaveGame();\n\tOnSaveGameWritten.Broadcast();\n}", "CodeBleu_score": 35.221112602092816}, {"code": "void USSaveGameSubsystem::WriteSaveGame(){\n\t\t// Clear existing saved player and actor data in CurrentSaveGame\n\tCurrentSaveGame->SavedPlayers.Empty();\n\tCurrentSaveGame->SavedActors.Empty();\n\n\t// Retrieve the game state and save player data for each player in the game state\n\tASGameState* GameState = GetWorld()->GetGameState<ASGameState>();\n\tfor (int32 PlayerIndex = 0; PlayerIndex < GameState->PlayerArray.Num(); PlayerIndex++)\n\t{\n\t\tAPlayerState* PlayerState = GameState->PlayerArray[PlayerIndex];\n\t\tif (PlayerState!= nullptr)\n\t\t{\n\t\t\tCurrentSaveGame->SavedPlayers.Add(PlayerState);\n\t\t}\n\t}\n\n\t// Iterate through all actors in the world, saving those that implement a specific interface\n\tTArray<AActor*> Actors;\n\tUGameplayStatics::GetAllActorsOfClass(GetWorld(), AActor::StaticClass(), Actors);\n\tfor (AActor* Actor : Actors)\n\t{\n\t\tif (Actor->Implements<USGameplayInterface>())\n\t\t{\n\t\t\tCurrentSaveGame->SavedActors.Add(Actor);\n\t\t}\n\t}\n\n\t// Serialize the actor data\n\tfor (int32 ActorIndex = 0; ActorIndex < CurrentSaveGame->SavedActors.Num(); ActorIndex++)\n\t{\n\t\tAActor* Actor = CurrentSaveGame->SavedActors[ActorIndex];\n\t\tFString ActorName = Actor->GetFName().ToString();\n\t\tFTransform ActorTransform = Actor->GetActorTransform();\n\t\tFActorSavedData ActorData = FActorSavedData(ActorName, ActorTransform);\n\t\tActorData.Serialize(Actor->GetWorld(), Actor);\n\t\tCurrentSaveGame->SavedActorData.Add(ActorData);\n\t}\n\n\t// Write the save game to a slot\n\tUGameplayStatics::SaveGameToSlot(CurrentSaveGame, SaveSlotName, UserIndex);\n\n\t// Broadcast an event to signal the save is complete\n\tOnSaveGameWritten.Broadcast();\n}", "CodeBleu_score": 51.66978836688627}]}
{"instance_id": "0d7043a0bff0", "generation_result": [{"code": "void FrameworkConfig::draw_themes(){\n\t\tImGui::Begin(\"Theme\");\n\tImGui::Text(\"Theme\");\n\tImGui::Text(\"Font Size\");\n\tImGui::SliderFloat(\"##font_size\", &m_font_size->value, 10.0f, 20.0f);\n\tImGui::Text(\"Current Theme\");\n\tImGui::Text(m_theme->name.c_str());\n\tImGui::End();\n\tif (ImGui::BeginCombo(\"##theme\", m_theme->name.c_str())) {\n\t\tfor (int i = 0; i < m_themes.size(); i++) {\n\t\t\tif (ImGui::Selectable(m_themes[i]->name.c_str())) {\n\t\t\t\tm_theme = m_themes[i];\n\t\t\t\tm_font_size->value = m_theme->font_size;\n\t\t\t\tg_framework->set_font_size(m_theme->font_size);\n\t\t\t}\n\t\t}\n\t\tImGui::EndCombo();\n\t}\n}", "CodeBleu_score": 43.244120941059236}, {"code": "void FrameworkConfig::draw_themes(){\n\t\tImGui::Begin(\"Theme\");\n\tImGui::Text(\"Select a theme:\");\n\tImGui::Separator();\n\tImGui::Text(\"Default\");\n\tImGui::Text(\"Dark\");\n\tImGui::Text(\"Light\");\n\tImGui::Text(\"Classic\");\n\tImGui::Separator();\n\tImGui::Text(\"Font Size:\");\n\tImGui::SliderFloat(\"##fontsize\", &g_framework->m_font_size, 10, 40);\n\tImGui::End();\n\tif (g_framework->m_font_size!= m_font_size->value) {\n\t\tg_framework->set_font_size(m_font_size->value);\n\t}\n}", "CodeBleu_score": 43.45859481461036}, {"code": "void FrameworkConfig::draw_themes(){\n\t\tImGui::Begin(\"Themes\");\n\tif (ImGui::Button(\"Default\")) {\n\t\tset_theme(Theme::Default);\n\t}\n\tif (ImGui::Button(\"Dark\")) {\n\t\tset_theme(Theme::Dark);\n\t}\n\tif (ImGui::Button(\"Light\")) {\n\t\tset_theme(Theme::Light);\n\t}\n\tif (ImGui::Button(\"Classic\")) {\n\t\tset_theme(Theme::Classic);\n\t}\n\tImGui::End();\n}", "CodeBleu_score": 37.01971196188995}]}
{"instance_id": "e7f81d1dee95", "generation_result": [{"code": "void FrameworkConfig::draw_main() {\n\t\tImGui::Text(\"Menu key\");\n\tImGui::SameLine();\n\tImGui::Text(\"Show cursor key\");\n\tImGui::SameLine();\n\tImGui::Text(\"Remember menu state\");\n\tImGui::SameLine();\n\tImGui::Text(\"L3 + R3 toggle\");\n\tImGui::SameLine();\n\tImGui::Text(\"Always show cursor\");\n\tImGui::SameLine();\n\tImGui::Text(\"Log level\");\n\tImGui::Separator();\n\n\tImGui::PushItemWidth(100);\n\tm_menu_key->draw();\n\tImGui::SameLine();\n\tm_show_cursor_key->draw();\n\tImGui::SameLine();\n\tm_remember_menu_state->draw();\n\tImGui::SameLine();\n\tm_l3_r3_long_press->draw();\n\tImGui::SameLine();\n\tm_always_show_cursor->draw();\n\tImGui::SameLine();\n\tm_log_level->draw();\n\tImGui::PopItemWidth();\n\n\tif (m_log_level->value!= m_log_level->last_value) {\n\t\tspdlog::set_level(static_cast<spdlog::level::level_enum>(m_log_level->value));\n\t\tm_log_level->last_value = m_log_level->value;\n\t}\n}", "CodeBleu_score": 52.22334877932511}, {"code": "void FrameworkConfig::draw_main() {\n\t\tImGui::Text(\"Main\");\n\tImGui::Separator();\n\tm_menu_key->draw();\n\tm_show_cursor_key->draw();\n\tm_remember_menu_state->draw();\n\tm_enable_l3_r3_toggle->draw();\n\tm_always_show_cursor->draw();\n\tm_log_level->draw();\n\tif (m_log_level->value >= 0 && m_log_level->value <= 5) {\n\t\tspdlog::set_level(static_cast<spdlog::level::level_enum>(m_log_level->value));\n\t}\n}", "CodeBleu_score": 50.32954299654845}, {"code": "void FrameworkConfig::draw_main() {\n\t\tImGui::Text(\"Main Settings\");\n\tImGui::Separator();\n\tm_menu_key->draw();\n\tm_show_cursor_key->draw();\n\tm_remember_menu_state->draw();\n\tm_enable_l3_r3_toggle->draw();\n\tm_always_show_cursor->draw();\n\tm_log_level->draw();\n\tif (m_log_level->value > spdlog::level::trace && m_log_level->value < spdlog::level::off) {\n\t\tspdlog::set_level(spdlog::level::level_enum(m_log_level->value));\n\t}\n}", "CodeBleu_score": 50.37349720695246}]}
{"instance_id": "83fa7f401579", "generation_result": [{"code": "bool FOSMFile::LoadOpenStreetMapFile( FString& OSMFilePath, const bool bIsFilePathActuallyTextBuffer, FFeedbackContext* FeedbackContext ){\n\t\tif ( bIsFilePathActuallyTextBuffer ) {\n\t\t// Load the file contents into a string buffer.\n\t\tFString FileContents;\n\t\tif (!FFileHelper::LoadFileToString( FileContents, *OSMFilePath ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Parse the file contents.\n\t\treturn ParseXmlFile( FileContents, FeedbackContext );\n\t} else {\n\t\t// Parse the file.\n\t\treturn ParseXmlFile( OSMFilePath, FeedbackContext );\n\t}\n}", "CodeBleu_score": 22.13857216191299}, {"code": "bool FOSMFile::LoadOpenStreetMapFile( FString& OSMFilePath, const bool bIsFilePathActuallyTextBuffer, FFeedbackContext* FeedbackContext ){\n\t", "CodeBleu_score": 4.471675108827625}, {"code": "bool FOSMFile::LoadOpenStreetMapFile( FString& OSMFilePath, const bool bIsFilePathActuallyTextBuffer, FFeedbackContext* FeedbackContext ){\n\t", "CodeBleu_score": 4.471675108827625}]}
{"instance_id": "7349d775edf6", "generation_result": [{"code": "void UStreetMapActorFactory::PostSpawnActor(UObject* Asset, AActor* NewActor){\n\t\tSuper::PostSpawnActor(Asset, NewActor);\n\n\tif (UStreetMap* StreetMapAsset = Cast<UStreetMap>(Asset)) {\n\t\tAStreetMapActor* NewStreetMapActor = Cast<AStreetMapActor>(NewActor);\n\t\tUStreetMapComponent* NewStreetMapComponent = NewStreetMapActor->GetStreetMapComponent();\n\t\tNewStreetMapComponent->SetStreetMap(StreetMapAsset);\n\t}\n}", "CodeBleu_score": 78.46412960960843}, {"code": "void UStreetMapActorFactory::PostSpawnActor(UObject* Asset, AActor* NewActor){\n\t\tSuper::PostSpawnActor(Asset, NewActor);\n\tif (UStreetMap* NewStreetMap = Cast<UStreetMap>(Asset)) {\n\t\tAStreetMapActor* NewStreetMapActor = Cast<AStreetMapActor>(NewActor);\n\t\tif (NewStreetMapActor) {\n\t\t\tUStreetMapComponent* NewStreetMapComponent = NewStreetMapActor->GetStreetMapComponent();\n\t\t\tif (NewStreetMapComponent) {\n\t\t\t\tNewStreetMapComponent->SetStreetMap(NewStreetMap);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 70.86059058798786}, {"code": "void UStreetMapActorFactory::PostSpawnActor(UObject* Asset, AActor* NewActor){\n\t\tSuper::PostSpawnActor(Asset, NewActor);\n\tif (Cast<UStreetMap>(Asset)) {\n\t\tCastChecked<AStreetMapActor>(NewActor)->GetStreetMapComponent()->SetStreetMap(Cast<UStreetMap>(Asset));\n\t}\n}", "CodeBleu_score": 45.62686999566588}]}
{"instance_id": "f160ac6d0353", "generation_result": [{"code": "FReply FStreetMapComponentDetails::OnBuildMeshClicked(){\n\tif (StreetMapComponentPtr!= nullptr) {\n\t\tStreetMapComponentPtr->BuildMesh();\n\t\tRefreshDetails();\n\t}\n\treturn FReply::Handled();\n}", "CodeBleu_score": 78.4375498581354}, {"code": "FReply FStreetMapComponentDetails::OnBuildMeshClicked(){\n\tif (StreetMapComponentPtr!= nullptr) {\n\t\tStreetMapComponentPtr->BuildMesh();\n\t\tRefreshDetails();\n\t}\n\treturn FReply::Handled();\n}", "CodeBleu_score": 78.4375498581354}, {"code": "FReply FStreetMapComponentDetails::OnBuildMeshClicked(){\n\tif(SelectedStreetMapComponent!= nullptr)\n\t{\n\t\tSelectedStreetMapComponent->BuildMesh();\n\t\tRefreshDetails();\n\t}\n\treturn FReply::Handled();\n}", "CodeBleu_score": 88.89071565531717}]}
{"instance_id": "b23f1f2b29fa", "generation_result": [{"code": "void FStreetMapImportingModule::StartupModule(){\n\t\t// This code will execute after your module is loaded into memory; the exact timing is specified in the.uplugin file per-module\n\tFAssetToolsModule& AssetToolsModule = FModuleManager::LoadModuleChecked<FAssetToolsModule>( \"AssetTools\" );\n\tFStreetMapStyle::Initialize();\n\tFStreetMapStyle::ReloadTextures();\n\tAssetToolsModule.RegisterAssetTypeActions( MakeShareable( new FStreetMapAssetTypeActions ) );\n\tFPropertyEditorModule& PropertyModule = FModuleManager::LoadModuleChecked<FPropertyEditorModule>( \"PropertyEditor\" );\n\tPropertyModule.NotifyCustomizationModuleChanged();\n}", "CodeBleu_score": 51.86313996726012}, {"code": "void FStreetMapImportingModule::StartupModule(){\n\t", "CodeBleu_score": 2.567136019397305}, {"code": "void FStreetMapImportingModule::StartupModule(){\n\t\t// This code will execute after your module is loaded into memory; the exact timing is specified in the.uplugin file per-module\n\tFAssetToolsModule& AssetToolsModule = FModuleManager::LoadModuleChecked<FAssetToolsModule>( TEXT( \"AssetTools\" ) );\n\tFStreetMapStyle::Initialize();\n\tFStreetMapStyle::ReloadTextures();\n\tAssetToolsModule.RegisterAssetTypeActions( MakeShareable( new FStreetMapAssetTypeActions ) );\n\tFPropertyEditorModule& PropertyModule = FModuleManager::LoadModuleChecked<FPropertyEditorModule>( TEXT( \"PropertyEditor\" ) );\n\tPropertyModule.NotifyCustomizationModuleChanged();\n}", "CodeBleu_score": 50.05411534556905}]}
{"instance_id": "1da549fe84e3", "generation_result": [{"code": "FPrimitiveSceneProxy* UStreetMapComponent::CreateSceneProxy(){\n\t\tif (StreetMapSceneProxy == nullptr) {\n\t\tStreetMapSceneProxy = NewObject<FStreetMapSceneProxy>(this);\n\t}\n\tif (StreetMapSceneProxy->HasValidMesh()) {\n\t\tStreetMapSceneProxy->Init(Vertices, Indices);\n\t}\n\treturn StreetMapSceneProxy;\n}", "CodeBleu_score": 56.55586890270878}, {"code": "FPrimitiveSceneProxy* UStreetMapComponent::CreateSceneProxy(){\n\t", "CodeBleu_score": 4.065762368848736}, {"code": "FPrimitiveSceneProxy* UStreetMapComponent::CreateSceneProxy(){\n\t\tFPrimitiveSceneProxy* SceneProxy = nullptr;\n\tif (HasValidMesh()) {\n\t\tSceneProxy = new FStreetMapSceneProxy(this);\n\t}\n\treturn SceneProxy;\n}", "CodeBleu_score": 45.87630735005164}]}
{"instance_id": "d0ee3b2e023e", "generation_result": [{"code": "void AARCharacter::OnAbility01Ready(FAFAbilitySpec Spec, FAFAbilitySpecHandle ServerHandle, FAFAbilitySpecHandle ClientHandle){\n\t\tTestAbility01Handle = ServerHandle;\n\tInputIds.Add(Ability01InputID);\n\tAbilities->BindAbilityToInputIDs(ServerHandle, InputIds);\n}", "CodeBleu_score": 57.497179390964334}, {"code": "void AARCharacter::OnAbility01Ready(FAFAbilitySpec Spec, FAFAbilitySpecHandle ServerHandle, FAFAbilitySpecHandle ClientHandle){\n\t\tTestAbility01Handle = ServerHandle;\n\tInputIds.Add(FAFIInputID(0));\n\tAbilities->BindAbilityToInputIDs(ServerHandle, InputIds);\n}", "CodeBleu_score": 56.60703384353292}, {"code": "void AARCharacter::OnAbility01Ready(FAFAbilitySpec Spec, FAFAbilitySpecHandle ServerHandle, FAFAbilitySpecHandle ClientHandle){\n\t\tTestAbility01Handle = ServerHandle;\n\tTArray<uint8> InputIds;\n\tInputIds.Add(EInputId::Ability01);\n\tAbilities->BindAbilityToInputIDs(ServerHandle, InputIds);\n}", "CodeBleu_score": 78.57836422658926}]}
{"instance_id": "e62f1b2cd4bd", "generation_result": [{"code": "void AARCharacter::MoveForward(float Value){\n\t\tif (Value!= 0.0f) {\n\t\tconst FRotator Rotation = Controller->GetControlRotation();\n\t\tconst FRotator YawRotation(0, Rotation.Yaw, 0);\n\t\tconst FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);\n\t\tAddMovementInput(Direction, Value);\n\t}\n}", "CodeBleu_score": 77.36640298887461}, {"code": "void AARCharacter::MoveForward(float Value){\n\t\tif ((Controller!= nullptr) && (Value!= 0.0f)) {\n\t\tconst FRotator Rotation = Controller->GetControlRotation();\n\t\tconst FRotator YawRotation(0, Rotation.Yaw, 0);\n\n\t\tconst FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);\n\t\tAddMovementInput(Direction, Value);\n\t}\n}", "CodeBleu_score": 90.970267309374}, {"code": "void AARCharacter::MoveForward(float Value){\n\t\tif (Value!= 0.0f) {\n\t\tconst FRotator Rotation = Controller->GetControlRotation();\n\t\tconst FRotator YawRotation(0, Rotation.Yaw, 0);\n\n\t\tconst FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);\n\t\tAddMovementInput(Direction, Value);\n\t}\n}", "CodeBleu_score": 77.36640298887461}]}
{"instance_id": "a77cdc67ee00", "generation_result": [{"code": "FVector AARCharacter::GetMainWeaponSocket(const FName& Socket) const{\n\t\tif (MainWeaponMeshComponent == nullptr) {\n\t\treturn GetMesh()->GetSocketLocation(Socket);\n\t}\n\telse {\n\t\treturn MainWeaponMeshComponent->GetSocketLocation(Socket);\n\t}\n}", "CodeBleu_score": 49.64021862275725}, {"code": "FVector AARCharacter::GetMainWeaponSocket(const FName& Socket) const{\n\t\treturn GetMesh()->GetSocketLocation(Socket);\n}", "CodeBleu_score": 22.632879148101686}, {"code": "FVector AARCharacter::GetMainWeaponSocket(const FName& Socket) const{\n\t\tif (!MainWeaponMeshComponent) {\n\t\treturn GetMesh()->GetSocketLocation(Socket);\n\t}\n\treturn MainWeaponMeshComponent->GetSocketLocation(Socket);\n}", "CodeBleu_score": 50.56679114336908}]}
{"instance_id": "f021203f736a", "generation_result": [{"code": "void AAREnemySpawner::OnEnemyKilled(AARAICharacter* InEnemy){\n\t\tSpawnedEnemies.Remove(InEnemy);\n\tif (SpawnedEnemies.Num() < MinNumToSpawn) {\n\t\tSetupSpawner();\n\t}\n}", "CodeBleu_score": 59.49819313940421}, {"code": "void AAREnemySpawner::OnEnemyKilled(AARAICharacter* InEnemy){\n\t\tif (InEnemy) {\n\t\tSpawnedEnemies.Remove(InEnemy);\n\t\tSpawnedEnemies.Num();\n\t\tif (SpawnedEnemies.Num() < MinNumEnemies) {\n\t\t\tSetupSpawner();\n\t\t}\n\t}\n}", "CodeBleu_score": 68.16237724258222}, {"code": "void AAREnemySpawner::OnEnemyKilled(AARAICharacter* InEnemy){\n\t\tif (InEnemy)\n\t{\n\t\tSpawnedEnemies.Remove(InEnemy);\n\t\tSpawnedEnemies.Num();\n\t\tif (SpawnedEnemies.Num() < MinNumEnemies)\n\t\t{\n\t\t\tSetupSpawner();\n\t\t}\n\t}\n}", "CodeBleu_score": 67.6951037251021}]}
{"instance_id": "dbab72cb539f", "generation_result": [{"code": "FString AARGameSession::ApproveLogin(const FString& Options){\n\t\tFString Result = Super::ApproveLogin(Options);\n\tTArray<FString> ParsedOptions;\n\tif (Options.ParseIntoArray(ParsedOptions, TEXT(\"PlayerId=\"), 0) && ParsedOptions.Num() > 0) {\n\t\tint32 PlayerId = FCString::Atoi(*ParsedOptions[0]);\n\t\tif (PlayerId > 0) {\n\t\t\t// PlayerId is valid, so set the player ID property for the player\n\t\t\tUARPlayerController* PlayerController = Cast<UARPlayerController>(Result);\n\t\t\tif (PlayerController) {\n\t\t\t\tPlayerController->SetPlayerId(PlayerId);\n\t\t\t}\n\t\t}\n\t}\n\treturn Result;\n}", "CodeBleu_score": 47.79916373561004}, {"code": "FString AARGameSession::ApproveLogin(const FString& Options){\n\t", "CodeBleu_score": 4.493996550900141}, {"code": "FString AARGameSession::ApproveLogin(const FString& Options){\n\t\tFString Result = Super::ApproveLogin(Options);\n\tTArray<FString> OptionsArray;\n\tOptions.ParseIntoArray(OptionsArray, TEXT(\",\"), true);\n\tfor (int32 i = 0; i < OptionsArray.Num(); i++) {\n\t\tif (OptionsArray[i].StartsWith(TEXT(\"PlayerId=\"))) {\n\t\t\tPlayerId = OptionsArray[i].RightChop(9);\n\t\t}\n\t}\n\treturn Result;\n}", "CodeBleu_score": 50.139570976366834}]}
{"instance_id": "85ea02df92a5", "generation_result": [{"code": "void UARRegisterView::OnRegisterClicked(){\n\t\tFString UserName = UserNameBox->GetText().ToString();\n\tFString DisplayName = DisplayNameBox->GetText().ToString();\n\tFString Password = PasswordBox->GetText().ToString();\n\n\tif (UserName.Len() == 0 || DisplayName.Len() == 0 || Password.Len() == 0) {\n\t\tWarrningText->SetText(FText::FromString(\"All fields are required!\"));\n\t\treturn;\n\t}\n\n\tRegisterButton->SetVisibility(ESlateVisibility::Hidden);\n\tGetOwningPlayer()->GetGameInstance<UARGameInstance>()->RegisterNewPlayer(UserName, DisplayName, Password);\n}", "CodeBleu_score": 54.751064708493026}, {"code": "void UARRegisterView::OnRegisterClicked(){\n\t\t// Get the username, display name, and password from the input fields\n\tFString Username = UserNameBox->GetText().ToString();\n\tFString DisplayName = DisplayNameBox->GetText().ToString();\n\tFString Password = PasswordBox->GetText().ToString();\n\n\t// Check if any of the fields are empty\n\tif (Username.Len() == 0 || DisplayName.Len() == 0 || Password.Len() == 0) {\n\t\t// Display a warning message if any of the fields are empty\n\t\tWarrningText->SetText(FText::FromString(\"Please fill in all fields.\"));\n\t\treturn;\n\t}\n\n\t// Hide the register button and show the loading spinner\n\tRegisterButton->SetVisibility(ESlateVisibility::Hidden);\n\tLoadingSpinner->SetVisibility(ESlateVisibility::Visible);\n\n\t// Call the RegisterNewPlayer method from the game instance to register the new player\n\tUARGameInstance* GI = Cast<UARGameInstance>(GetOwningPlayer()->GetGameInstance());\n\tif (GI) {\n\t\tGI->RegisterNewPlayer(Username, DisplayName, Password);\n\t}\n}", "CodeBleu_score": 63.19082590341686}, {"code": "void UARRegisterView::OnRegisterClicked(){\n\t\t// Retrieve the username, display name, and password from the input fields\n\tFString Username = UserNameBox->GetText().ToString();\n\tFString DisplayName = DisplayNameBox->GetText().ToString();\n\tFString Password = PasswordBox->GetText().ToString();\n\n\t// Check if any of the fields are empty\n\tif (Username.Len() == 0 || DisplayName.Len() == 0 || Password.Len() == 0) {\n\t\tWarrningText->SetText(FText::FromString(\"Please fill in all the fields.\"));\n\t\treturn;\n\t}\n\n\t// Hide the register button and show the loading spinner\n\tRegisterButton->SetVisibility(ESlateVisibility::Hidden);\n\tLoadingSpinner->SetVisibility(ESlateVisibility::Visible);\n\n\t// Call the RegisterNewPlayer method from the game instance to register the new player\n\tUARGameInstance* GI = Cast<UARGameInstance>(GetOwningPlayer()->GetGameInstance());\n\tif (GI) {\n\t\tGI->RegisterNewPlayer(Username, DisplayName, Password);\n\t}\n}", "CodeBleu_score": 63.23170950855577}]}
{"instance_id": "b33bb5886dd9", "generation_result": [{"code": "void AARHUD::OnEnemyDamageCaused(const FAFAttributeChangedData& InMod){\n\t\tif (InMod.Attribute == EAFAttribute::Damage) {\n\t\tAActor* TargetActor = InMod.TargetActor.Get();\n\t\tif (TargetActor) {\n\t\t\tFVector2D ScreenLocation;\n\t\t\tUGameplayStatics::ProjectWorldToScreen(this, TargetActor->GetActorLocation(), ScreenLocation);\n\t\t\tFloatingCombatText->SetInfo(InMod.Value, ScreenLocation);\n\t\t}\n\t}\n}", "CodeBleu_score": 34.87274827306506}, {"code": "void AARHUD::OnEnemyDamageCaused(const FAFAttributeChangedData& InMod){\n\t\tif (InMod.TargetActor.IsValid()) {\n\t\tFVector2D ScreenLocation;\n\t\tUGameplayStatics::ProjectWorldToScreen(GetWorld(), InMod.TargetActor.Get()->GetActorLocation(), ScreenLocation);\n\t\tFloatingCombatText->SetInfo(InMod.Value, ScreenLocation);\n\t}\n}", "CodeBleu_score": 28.532942537975924}, {"code": "void AARHUD::OnEnemyDamageCaused(const FAFAttributeChangedData& InMod){\n\t\tif (InMod.TargetActor == nullptr) {\n\t\treturn;\n\t}\n\tFHitResult EnemyHitResult;\n\tFVector2D ScreenLocation;\n\tUGameplayStatics::ProjectWorldToScreen(this, InMod.TargetActor->GetActorLocation(), ScreenLocation, EnemyHitResult);\n\tFloatingCombatText->SetInfo(InMod.Attribute, ScreenLocation);\n}", "CodeBleu_score": 32.77880654783731}]}
{"instance_id": "177d36e7e076", "generation_result": [{"code": "void UARItemWeapon::AddMagazineUpgrade(class UARMagazineUpgradeItem* InMagazineUpgrade){\n\t\tif (AbilityInstance) {\n\t\tUARWeaponInventoryComponent* WeaponComponent = Cast<UARWeaponInventoryComponent>(AbilityInstance->GetOwner());\n\t\tif (WeaponComponent) {\n\t\t\tAARCharacter* Character = Cast<AARCharacter>(WeaponComponent->GetOwner());\n\t\t\tif (Character && Character->HasAuthority()) {\n\t\t\t\tUARMagazineUpgradeItem* NewMagazineUpgrade = DuplicateObject<UARMagazineUpgradeItem>(InMagazineUpgrade);\n\t\t\t\tNewMagazineUpgrade->UpgradeValue = NewMagazineUpgrade->UpgradeValue + WeaponComponent->MagazineUpgradeValue;\n\t\t\t\tWeaponComponent->MagazineUpgradeValue = NewMagazineUpgrade->UpgradeValue;\n\t\t\t\tWeaponComponent->ApplyUpgradeEffect(NewMagazineUpgrade);\n\t\t\t\tOnMagazineUpdateAdded();\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 51.03489030057443}, {"code": "void UARItemWeapon::AddMagazineUpgrade(class UARMagazineUpgradeItem* InMagazineUpgrade){\n\t\tif (IsValid(AbilityInstance)) {\n\t\tUARWeaponInventoryComponent* WeaponComponent = Cast<UARWeaponInventoryComponent>(AbilityInstance->GetOwner()->GetComponentByClass(UARWeaponInventoryComponent::StaticClass()));\n\t\tAARCharacter* Character = Cast<AARCharacter>(AbilityInstance->GetOwner());\n\t\tif (IsValid(WeaponComponent) && IsValid(Character) && Character->HasAuthority()) {\n\t\t\tUARMagazineUpgradeItem* MagazineUpgrade = DuplicateObject<UARMagazineUpgradeItem>(InMagazineUpgrade);\n\t\t\tif (IsValid(MagazineUpgrade)) {\n\t\t\t\tWeaponComponent->AddMagazineUpgrade(MagazineUpgrade);\n\t\t\t\tAbilityInstance->AddMagazineUpgrade(MagazineUpgrade);\n\t\t\t\tMagazineUpgrade->ApplyUpgradeEffect(AbilityInstance);\n\t\t\t}\n\t\t}\n\t\tOnMagazineUpdateAdded();\n\t}\n}", "CodeBleu_score": 51.26469071638845}, {"code": "void UARItemWeapon::AddMagazineUpgrade(class UARMagazineUpgradeItem* InMagazineUpgrade){\n\t\tif (AbilityInstance == nullptr) {\n\t\treturn;\n\t}\n\n\tUARWeaponInventoryComponent* WeaponComponent = Cast<UARWeaponInventoryComponent>(AbilityInstance->GetOwner());\n\tif (WeaponComponent == nullptr) {\n\t\treturn;\n\t}\n\n\tUARMagazineUpgradeItem* MagazineUpgrade = DuplicateObject<UARMagazineUpgradeItem>(InMagazineUpgrade, AbilityInstance);\n\tif (AbilityInstance->GetOwningActorFromActorInfo()!= nullptr && AbilityInstance->GetOwningActorFromActorInfo()->HasAuthority()) {\n\t\tif (MagazineUpgrade->GetUpgradeValue() > 0) {\n\t\t\tWeaponComponent->AddMagazineUpgrade(MagazineUpgrade);\n\t\t}\n\t\telse {\n\t\t\tWeaponComponent->RemoveMagazineUpgrade(MagazineUpgrade);\n\t\t}\n\t\tOnMagazineUpdateAdded();\n\t}\n}", "CodeBleu_score": 49.510199751636186}]}
{"instance_id": "404276da398b", "generation_result": [{"code": "void UARWeaponInventoryComponent::OnWeaponReady(TSoftClassPtr<UARWeaponAbilityBase> InAbilityTag, int8 LocalIndex){\n\t\tAARCharacter* Character = Cast<AARCharacter>(GetOwner());\n\tif (!Character)\n\t\treturn;\n\n\tUAbilitySystemComponent* AbilityComp = Character->GetAbilityComp();\n\tif (!AbilityComp)\n\t\treturn;\n\n\tUARItemWeapon* ItemWeapon = GetItem<UARItemWeapon>(LocalIndex);\n\tif (!ItemWeapon)\n\t\treturn;\n\n\tUGAAbilityBase* Ability = AbilityComp->BP_GetAbilityByHandle(InAbilityTag.ToSoftObjectPath());\n\tif (!Ability)\n\t\treturn;\n\n\tSetAbilityToItem(LocalIndex, Ability);\n}", "CodeBleu_score": 64.76700945733462}, {"code": "void UARWeaponInventoryComponent::OnWeaponReady(TSoftClassPtr<UARWeaponAbilityBase> InAbilityTag, int8 LocalIndex){\n\t\tAARCharacter* Character = Cast<AARCharacter>(GetOwner());\n\tif (!Character)\n\t\treturn;\n\n\tUARAbilityComponent* AbilityComp = Character->GetAbilityComp();\n\tif (!AbilityComp)\n\t\treturn;\n\n\tUGAAbilityBase* Ability = AbilityComp->BP_GetAbilityByHandle(InAbilityTag, LocalIndex);\n\tif (!Ability)\n\t\treturn;\n\n\tSetAbilityToItem(LocalIndex, Ability);\n}", "CodeBleu_score": 66.5875409060401}, {"code": "void UARWeaponInventoryComponent::OnWeaponReady(TSoftClassPtr<UARWeaponAbilityBase> InAbilityTag, int8 LocalIndex){\n\t\tAARCharacter* Character = Cast<AARCharacter>(GetOwner());\n\n\tif (!Character)\n\t\treturn;\n\n\tUARAbilityComponent* AbilityComp = Character->GetAbilityComp();\n\n\tif (!AbilityComp)\n\t\treturn;\n\n\tUGAAbilityBase* Ability = AbilityComp->BP_GetAbilityByHandle(InAbilityTag, LocalIndex);\n\n\tif (!Ability)\n\t\treturn;\n\n\tSetAbilityToItem(LocalIndex, Ability);\n}", "CodeBleu_score": 66.5875409060401}]}
{"instance_id": "2e97aab98981", "generation_result": [{"code": "void UARWeaponInventoryComponent::OnItemRemoved(uint8 LocalIndex){\n\t\tif (AARCharacter* Character = Cast<AARCharacter>(POwner)) {\n\t\tFARWeaponRPC Data;\n\t\tData.Weapon = \"\";\n\t\t//Data.SocketName = \"\";\n\t\tData.Position = FVector(0, 0, 0);\n\t\tData.Rotation = FRotator(0, 0, 0);\n\t\tData.AttachSlot = static_cast<EARWeaponPosition>(LocalIndex);\n\t\tSetWeapon(Data, GroupToComponent[LocalIndex]);\n\t\tif (LocalIndex == CurrentWeaponIndex) {\n\t\t\tServerHolster(Data);\n\t\t}\n\t}\n}", "CodeBleu_score": 71.4389651331862}, {"code": "void UARWeaponInventoryComponent::OnItemRemoved(uint8 LocalIndex){\n\t\tif (AARCharacter* Character = Cast<AARCharacter>(POwner)) {\n\t\tFARWeaponRPC Data;\n\t\tData.Weapon = \"None\";\n\t\tData.Position = FVector(0, 0, 0);\n\t\tData.Rotation = FRotator(0, 0, 0);\n\t\tData.AttachSlot = static_cast<EARWeaponPosition>(LocalIndex);\n\t\tSetWeapon(Data, GroupToComponent[LocalIndex]);\n\t\tif (LocalIndex == CurrentWeaponIndex) {\n\t\t\tCurrentWeaponIndex = -1;\n\t\t\tUnequip(LocalIndex);\n\t\t}\n\t}\n}", "CodeBleu_score": 72.87707345060238}, {"code": "void UARWeaponInventoryComponent::OnItemRemoved(uint8 LocalIndex){\n\t\tif (AARCharacter* Character = Cast<AARCharacter>(POwner)) {\n\t\tFARWeaponRPC Data;\n\t\tData.Weapon = \"\";\n\t\tData.Position = FVector(0, 0, 0);\n\t\tData.Rotation = FRotator(0, 0, 0);\n\t\tData.AttachSlot = static_cast<EARWeaponPosition>(LocalIndex);\n\t\tSetWeapon(Data, GroupToComponent[LocalIndex]);\n\t\tif (CurrentWeaponIndex == LocalIndex) {\n\t\t\tCurrentWeaponIndex = -1;\n\t\t\tServerHolster(Data);\n\t\t\tUnequip(LocalIndex);\n\t\t}\n\t}\n}", "CodeBleu_score": 67.57487249814032}]}
{"instance_id": "13cc35e5ecac", "generation_result": [{"code": "void FAsyncLoadingScreenModule::ShutdownModule(){\n\t\tif (FModuleManager::Get().IsModuleLoaded(\"MoviePlayer\")) {\n\t\tFMoviePlayerModule& MoviePlayerModule = FModuleManager::LoadModuleChecked<FMoviePlayerModule>(\"MoviePlayer\");\n\t\tMoviePlayerModule.GetMoviePlayer()->OnPrepareLoadingScreen().RemoveAll(this);\n\t}\n}", "CodeBleu_score": 17.990556324590806}, {"code": "void FAsyncLoadingScreenModule::ShutdownModule(){\n\t\tif (IsRunningDedicatedServer()) {\n\t\tGetMoviePlayer()->OnPrepareLoadingScreen().RemoveAll(this);\n\t}\n}", "CodeBleu_score": 51.80171130328096}, {"code": "void FAsyncLoadingScreenModule::ShutdownModule(){\n\t\tif (!IsRunningDedicatedServer()) {\n\t\tGetMoviePlayer()->OnPrepareLoadingScreen().RemoveAll(this);\n\t}\n}", "CodeBleu_score": 72.1566962303026}]}
{"instance_id": "2ee3ac60a8f3", "generation_result": [{"code": "void FAsyncLoadingScreenModule::PreSetupLoadingScreen(){\n\t\tUE_LOG(AsyncLoadingScreen, Log, TEXT(\"PreSetupLoadingScreen\"));\n\tUAsyncLoadingScreenLibrary::SetIsEnableLoadingScreen(false);\n\tif (GetDefault<ULoadingScreenSettings>()->bEnabled) {\n\t\tUAsyncLoadingScreenLibrary::SetIsEnableLoadingScreen(true);\n\t\tSetupLoadingScreen(GetDefault<ULoadingScreenSettings>()->GetSettings());\n\t}\n}", "CodeBleu_score": 53.39147776596985}, {"code": "void FAsyncLoadingScreenModule::PreSetupLoadingScreen(){\n\t\tUE_LOG(AsyncLoadingScreen, Log, TEXT(\"PreSetupLoadingScreen\"));\n\tif (UAsyncLoadingScreenLibrary::GetIsEnableLoadingScreen()) {\n\t\tconst ULoadingScreenSettings* Settings = GetDefault<ULoadingScreenSettings>();\n\t\tUAsyncLoadingScreenLibrary::SetIsEnableLoadingScreen(false);\n\t\tSetupLoadingScreen(Settings->Default);\n\t}\n}", "CodeBleu_score": 59.06087231730538}, {"code": "void FAsyncLoadingScreenModule::PreSetupLoadingScreen(){\n\t\tUE_LOG(AsyncLoadingScreen, Log, TEXT(\"PreSetupLoadingScreen\"));\n\tif (UAsyncLoadingScreenLibrary::GetIsEnableLoadingScreen()) {\n\t\tconst ULoadingScreenSettings* Settings = GetDefault<ULoadingScreenSettings>();\n\t\tUAsyncLoadingScreenLibrary::SetIsStartup(false);\n\t\tSetupLoadingScreen(Settings->Default);\n\t}\n}", "CodeBleu_score": 58.133515283495385}]}
{"instance_id": "c095588f550c", "generation_result": [{"code": "void FAsyncLoadingScreenModule::LoadBackgroundImages(){\n\t\tStartupBackgroundImages.Empty();\n\tDefaultBackgroundImages.Empty();\n\tULoadingScreenSettings* LoadingScreenSettings = Cast<ULoadingScreenSettings>(GEngine->GetGameViewport()->GetWorld()->GetGameInstance()->GetDefaultObject(ULoadingScreenSettings::StaticClass(), false));\n\tif (LoadingScreenSettings) {\n\t\tfor (UTexture2D* Image : LoadingScreenSettings->StartupImages) {\n\t\t\tif (Image) {\n\t\t\t\tStartupBackgroundImages.Add(Image);\n\t\t\t}\n\t\t}\n\t\tfor (UTexture2D* Image : LoadingScreenSettings->DefaultImages) {\n\t\t\tif (Image) {\n\t\t\t\tDefaultBackgroundImages.Add(Image);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 47.04175443892442}, {"code": "void FAsyncLoadingScreenModule::LoadBackgroundImages(){\n\t\tStartupBackgroundImages.Empty();\n\tDefaultBackgroundImages.Empty();\n\n\tULoadingScreenSettings* Settings = GetDefault<ULoadingScreenSettings>();\n\n\tfor (int i = 0; i < Settings->StartupBackgroundImages.Num(); i++) {\n\t\tUTexture2D* Image = Cast<UTexture2D>(Settings->StartupBackgroundImages[i]);\n\t\tif (Image!= nullptr) {\n\t\t\tStartupBackgroundImages.Add(Image);\n\t\t}\n\t}\n\n\tfor (int i = 0; i < Settings->DefaultBackgroundImages.Num(); i++) {\n\t\tUTexture2D* Image = Cast<UTexture2D>(Settings->DefaultBackgroundImages[i]);\n\t\tif (Image!= nullptr) {\n\t\t\tDefaultBackgroundImages.Add(Image);\n\t\t}\n\t}\n}", "CodeBleu_score": 57.21579044827361}, {"code": "void FAsyncLoadingScreenModule::LoadBackgroundImages(){\n\t\t// Remove all existing background images\n\tRemoveAllBackgroundImages();\n\n\t// Retrieve the loading screen settings\n\tULoadingScreenSettings* LoadingScreenSettings = GetDefault<ULoadingScreenSettings>();\n\n\t// Load and add images for the startup loading screen\n\tfor (UTexture2D* StartupBackgroundImage : LoadingScreenSettings->StartupBackgroundImages) {\n\t\tStartupBackgroundImages.Add(StartupBackgroundImage);\n\t}\n\n\t// Load and add images for the default loading screen\n\tfor (UTexture2D* DefaultBackgroundImage : LoadingScreenSettings->DefaultBackgroundImages) {\n\t\tDefaultBackgroundImages.Add(DefaultBackgroundImage);\n\t}\n}", "CodeBleu_score": 40.42339625760937}]}
{"instance_id": "4ffd56e2a326", "generation_result": [{"code": "EActiveTimerReturnType SLoadingCompleteText::AnimateText(double InCurrentTime, float InDeltaTime){\n\t\tif (CurrentTime < 0.0f) {\n\t\tCurrentTime = 0.0f;\n\t\tbReverse = false;\n\t}\n\n\tif (CurrentTime > 1.0f) {\n\t\tCurrentTime = 1.0f;\n\t\tbReverse = true;\n\t}\n\n\tif (bReverse) {\n\t\tCurrentTime -= (InDeltaTime * AnimationSpeed);\n\t} else {\n\t\tCurrentTime += (InDeltaTime * AnimationSpeed);\n\t}\n\n\treturn EActiveTimerReturnType::Continue;\n}", "CodeBleu_score": 29.812042764366133}, {"code": "EActiveTimerReturnType SLoadingCompleteText::AnimateText(double InCurrentTime, float InDeltaTime){\n\t\t// If the text is invisible, don't animate it.\n\tif (Text->IsVisible() == false) {\n\t\treturn EActiveTimerReturnType::Continue;\n\t}\n\n\t// If the text is not pulsing, don't animate it.\n\tif (bIsPulsing == false) {\n\t\treturn EActiveTimerReturnType::Continue;\n\t}\n\n\t// Calculate the current alpha value based on the elapsed time and animation speed.\n\tfloat CurrentAlpha = FMath::Lerp(MinAlpha, MaxAlpha, FMath::Sin(InCurrentTime * Speed));\n\n\t// Set the text's alpha value.\n\tText->SetOpacity(CurrentAlpha);\n\n\t// Check if the animation should continue.\n\tif (CurrentAlpha >= MinAlpha && CurrentAlpha <= MaxAlpha) {\n\t\treturn EActiveTimerReturnType::Continue;\n\t}\n\telse {\n\t\treturn EActiveTimerReturnType::Stop;\n\t}\n}", "CodeBleu_score": 34.76239438478852}, {"code": "EActiveTimerReturnType SLoadingCompleteText::AnimateText(double InCurrentTime, float InDeltaTime){\n\t\tif (InCurrentTime < 0.0) {\n\t\treturn EActiveTimerReturnType::Continue;\n\t}\n\tif (InCurrentTime > 0.0) {\n\t\tfloat Alpha = FMath::Clamp(FMath::Sin(InCurrentTime * 2.0 * PI * 1.0) * 0.5 + 0.5, 0.0f, 1.0f);\n\t\tif (Alpha >= 1.0f) {\n\t\t\treturn EActiveTimerReturnType::Stop;\n\t\t}\n\t\tif (Alpha <= 0.0f) {\n\t\t\treturn EActiveTimerReturnType::Continue;\n\t\t}\n\t\tText->SetOpacity(Alpha);\n\t}\n\treturn EActiveTimerReturnType::Continue;\n}", "CodeBleu_score": 21.22801298144859}]}
{"instance_id": "7420af124c78", "generation_result": [{"code": "bool FRaceAwaiter::await_ready(){\n\t\tData->Lock.lock();\n\tbool result = (Data->Index!= -1);\n\tData->Lock.unlock();\n\treturn result;\n}", "CodeBleu_score": 51.91953265712086}, {"code": "bool FRaceAwaiter::await_ready(){\n\t\tData->Lock.lock();\n\tbool ready = (Data->Index!= -1);\n\tData->Lock.unlock();\n\treturn ready;\n}", "CodeBleu_score": 51.633872011640555}, {"code": "bool FRaceAwaiter::await_ready(){\n\t\tData->Lock.lock();\n\tif (Data->Index!= -1) {\n\t\tData->Lock.unlock();\n\t\treturn true;\n\t}\n\tData->Lock.unlock();\n\treturn false;\n}", "CodeBleu_score": 71.12623234489106}]}
{"instance_id": "fab9fe81573a", "generation_result": [{"code": "bool ShouldResumeFindPath(void* State, bool bCleanup){\n\t\tFFindPathSharedPtr* This = static_cast<FFindPathSharedPtr*>(State);\n\tif (This->NS1.Get()!= nullptr) {\n\t\tif (bCleanup) {\n\t\t\tThis->NS1->AbortAsyncFindPathRequest();\n\t\t\tThis->NS1.Reset();\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}", "CodeBleu_score": 34.298555980653724}, {"code": "bool ShouldResumeFindPath(void* State, bool bCleanup){\n\t\treturn static_cast<FPathFollowingComponent*>(State)->ShouldResumeFindPath(bCleanup);\n}", "CodeBleu_score": 17.394887073259103}, {"code": "bool ShouldResumeFindPath(void* State, bool bCleanup){\n\t\treturn static_cast<FFindPathSharedPtr*>(State)->ShouldResumeFindPath(bCleanup);\n}", "CodeBleu_score": 17.582694454562294}]}
{"instance_id": "0656af2cb3eb", "generation_result": [{"code": "void AudioListener2D::_notification(int p_what){\n\tswitch (p_what) {\n\t\tcase NOTIFICATION_ENTER_TREE: {\n\t\t\tif (!is_part_of_edited_scene()) {\n\t\t\t\tif (current) {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t\tcase NOTIFICATION_EXIT_TREE: {\n\t\t\tif (!is_part_of_edited_scene()) {\n\t\t\t\tif (current) {\n\t\t\t\t\tclear_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t}\n}", "CodeBleu_score": 62.58530262354858}, {"code": "void AudioListener2D::_notification(int p_what){\n\tswitch (p_what) {\n\t\tcase NOTIFICATION_ENTER_TREE: {\n\t\t\tif (is_inside_tree() &&!is_part_of_edited_scene()) {\n\t\t\t\tif (current &&!is_current()) {\n\t\t\t\t\tclear_current();\n\t\t\t\t} else if (!current && is_current()) {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t\tcase NOTIFICATION_EXIT_TREE: {\n\t\t\tif (is_inside_tree() &&!is_part_of_edited_scene()) {\n\t\t\t\tif (current) {\n\t\t\t\t\tclear_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t\tcase NOTIFICATION_VISIBILITY_CHANGED: {\n\t\t\tif (is_inside_tree() &&!is_part_of_edited_scene()) {\n\t\t\t\tif (current &&!is_current()) {\n\t\t\t\t\tclear_current();\n\t\t\t\t} else if (!current && is_current()) {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t\tcase NOTIFICATION_INTERNAL_PROCESS: {\n\t\t\tif (is_inside_tree() &&!is_part_of_edited_scene()) {\n\t\t\t\tif (current &&!is_current()) {\n\t\t\t\t\tclear_current();\n\t\t\t\t} else if (!current && is_current()) {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t}\n}", "CodeBleu_score": 57.010729370040224}, {"code": "void AudioListener2D::_notification(int p_what){\n\tswitch (p_what) {\n\t\tcase NOTIFICATION_ENTER_TREE: {\n\t\t\tif (!is_part_of_edited_scene()) {\n\t\t\t\tif (current) {\n\t\t\t\t\tif (get_viewport()->get_audio_listener_2d()!= this) {\n\t\t\t\t\t\tcurrent = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t\tcase NOTIFICATION_EXIT_TREE: {\n\t\t\tif (!is_part_of_edited_scene()) {\n\t\t\t\tif (current) {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t\tcase NOTIFICATION_INTERNAL_PROCESS: {\n\t\t\tif (is_inside_tree() &&!is_part_of_edited_scene()) {\n\t\t\t\tif (current) {\n\t\t\t\t\tif (get_viewport()->get_audio_listener_2d()!= this) {\n\t\t\t\t\t\tcurrent = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t}\n}", "CodeBleu_score": 65.8824444191697}]}
{"instance_id": "9aadd2c91e67", "generation_result": [{"code": "void AudioDriverDummy::mix_audio(int p_frames, int32_t *p_buffer){\n\tif (active.is_set()) {\n\t\tERR_FAIL_COND(p_frames < 0);\n\t\tERR_FAIL_COND(p_buffer == nullptr);\n\n\t\tlock();\n\n\t\tint32_t *write_ptr = p_buffer;\n\t\tint32_t *end = p_buffer + p_frames * 2;\n\t\twhile (write_ptr < end) {\n\t\t\tint32_t frames = MIN(end - write_ptr, AUDIO_BUFFER_FRAMES);\n\t\t\tmix_audio_internal(frames, write_ptr);\n\t\t\twrite_ptr += frames * 2;\n\t\t}\n\n\t\tunlock();\n\t}\n}", "CodeBleu_score": 34.230944219114576}, {"code": "void AudioDriverDummy::mix_audio(int p_frames, int32_t *p_buffer){\n\tif (active.is_set()) {\n\t\tERR_FAIL_COND(thread_active);\n\t\tlock();\n\t\tmix_audio_internal(p_frames, p_buffer);\n\t\tunlock();\n\t} else {\n\t\tmix_audio_internal(p_frames, p_buffer);\n\t}\n}", "CodeBleu_score": 18.53526408264175}, {"code": "void AudioDriverDummy::mix_audio(int p_frames, int32_t *p_buffer){\n\tERR_FAIL_COND(p_frames < 0);\n\tERR_FAIL_COND(p_buffer == nullptr);\n\n\tif (active.is_set()) {\n\t\tif (active.thread_id == Thread::get_caller_id()) {\n\t\t\t// We're already mixing audio, so just copy the frames.\n\t\t\t// This is the case when the audio driver is using threads, which is not supported.\n\t\t\tfor (int i = 0; i < p_frames; i++) {\n\t\t\t\tp_buffer[i] = 0;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Lock the mutex and set the active thread.\n\tlock();\n\tactive.thread_id = Thread::get_caller_id();\n\n\t// Process audio frames in chunks.\n\tint32_t *buffer = p_buffer;\n\twhile (p_frames > 0) {\n\t\t// Process frames.\n\t\tint frames_to_process = MIN(p_frames, MAX_FRAMES_PER_PROCESS);\n\t\taudio_server_process(frames_to_process, buffer, false);\n\n\t\t// Copy the processed frames.\n\t\tfor (int i = 0; i < frames_to_process; i++) {\n\t\t\tbuffer[i] = processed_buffer[i];\n\t\t}\n\n\t\t// Update the buffer.\n\t\tbuffer += frames_to_process;\n\t\tp_frames -= frames_to_process;\n\t}\n\n\t// Unlock the mutex.\n\tunlock();\n}", "CodeBleu_score": 51.76016979024494}]}
{"instance_id": "56df08c77b69", "generation_result": [{"code": "void GodotArea2D::compute_gravity(const Vector2 &p_position, Vector2 &r_gravity) const{\n\t\tif (is_gravity_point()) {\n\t\tr_gravity = get_gravity_vector();\n\t\tr_gravity *= (1.0 / (p_position - get_gravity_point_unit_distance()).length_squared());\n\t} else {\n\t\tr_gravity = get_gravity_vector();\n\t}\n}", "CodeBleu_score": 25.05974237085095}, {"code": "void GodotArea2D::compute_gravity(const Vector2 &p_position, Vector2 &r_gravity) const{\n\t\tif (is_gravity_point()) {\n\t\tconst float dist = p_position.distance_squared_to(get_gravity_point_unit_distance());\n\t\tr_gravity = -get_gravity() * (1.0 / (dist * dist));\n\t} else {\n\t\tr_gravity = get_gravity_vector();\n\t}\n}", "CodeBleu_score": 27.024804593530888}, {"code": "void GodotArea2D::compute_gravity(const Vector2 &p_position, Vector2 &r_gravity) const{\n\t\tERR_FAIL_COND(p_position.is_zero_approx());\n\n\tif (gravity_point) {\n\t\tVector2 point_to_pos = p_position - gravity_point;\n\t\tfloat distance = point_to_pos.length();\n\t\tr_gravity = gravity * (1.0 / (distance * distance));\n\t} else {\n\t\tr_gravity = gravity;\n\t}\n}", "CodeBleu_score": 27.62188929494766}]}
{"instance_id": "f8c60f8d0caa", "generation_result": [{"code": "void GodotBody2D::wakeup_neighbours(){\n\t\tif (is_active) {\n\t\treturn;\n\t}\n\tif (mode == MODE_RIGID) {\n\t\tfor (int i = 0; i < constraints.size(); i++) {\n\t\t\tif (constraints[i]->get_other_body(this)!= nullptr) {\n\t\t\t\tif (constraints[i]->get_other_body(this)->is_active == false) {\n\t\t\t\t\tconstraints[i]->get_other_body(this)->set_active(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 32.06459196761769}, {"code": "void GodotBody2D::wakeup_neighbours(){\n\t\tfor (int i = 0; i < constraints.size(); i++) {\n\t\tif (constraints[i]->get_body_a()->is_active()) {\n\t\t\tconstraints[i]->get_body_b()->set_active(true);\n\t\t} else if (constraints[i]->get_body_b()->is_active()) {\n\t\t\tconstraints[i]->get_body_a()->set_active(true);\n\t\t}\n\t}\n}", "CodeBleu_score": 28.04231410986312}, {"code": "void GodotBody2D::wakeup_neighbours(){\n\t\tif (is_active) {\n\t\treturn;\n\t}\n\tfor (int i = 0; i < constraints.size(); i++) {\n\t\tif (constraints[i]->get_body_a()->is_active) {\n\t\t\tconstraints[i]->get_body_a()->wakeup();\n\t\t}\n\t\tif (constraints[i]->get_body_b()->is_active) {\n\t\t\tconstraints[i]->get_body_b()->wakeup();\n\t\t}\n\t}\n}", "CodeBleu_score": 30.21824018021916}]}
{"instance_id": "0c6f6c00da9a", "generation_result": [{"code": "void GodotArea3D::_queue_monitor_update() {\n\t\tif (space.is_valid()) {\n\t\tif (!space->area_add_to_monitor_query_list(this)) {\n\t\t\tspace->area_add_to_monitor_query_list(this);\n\t\t}\n\t}\n}", "CodeBleu_score": 35.449599037389234}, {"code": "void GodotArea3D::_queue_monitor_update() {\n\t\tif (get_space()) {\n\t\tif (!get_space()->area_add_to_monitor_query_list(this)) {\n\t\t\tget_space()->area_add_to_monitor_query_list(this);\n\t\t}\n\t}\n}", "CodeBleu_score": 38.54468152286951}, {"code": "void GodotArea3D::_queue_monitor_update() {\n\t\tif (get_space()->is_valid()) {\n\t\tget_space()->area_add_to_monitor_query_list(this);\n\t}\n}", "CodeBleu_score": 33.9359672536526}]}
{"instance_id": "efc39df0e3a3", "generation_result": [{"code": "void GodotBody3D::_update_transform_dependent(){\n\t\tERR_FAIL_COND(body.is_null());\n\tERR_FAIL_COND(body->get_mode() == PhysicsDirectBodyState::MODE_STATIC);\n\tERR_FAIL_COND(body->get_mode() == PhysicsDirectBodyState::MODE_KINEMATIC);\n\tERR_FAIL_COND(body->get_mode() == PhysicsDirectBodyState::MODE_RIGID);\n\tERR_FAIL_COND(body->get_mode() == PhysicsDirectBodyState::MODE_CHARACTER);\n\n\t// Update the center of mass and principal axes.\n\tVector3 center_of_mass = body->get_center_of_mass();\n\tVector3 principal_axis[3];\n\treal_t principal_mass[3];\n\tbody->get_principal_inertia(principal_axis, principal_mass);\n\n\t// Transform the inverse inertia with the principal axes.\n\tMatrix3 inv_inertia = body->get_inverse_inertia();\n\tinv_inertia.xform(principal_axis[0]);\n\tinv_inertia.xform(principal_axis[1]);\n\tinv_inertia.xform(principal_axis[2]);\n\n\t// Update the inverse inertia.\n\tbody->set_inverse_inertia(inv_inertia);\n\n\t// Update the center of mass.\n\tbody->set_center_of_mass(center_of_mass);\n\n\t// Update the transform.\n\tbody->set_transform(get_transform());\n}", "CodeBleu_score": 38.504643592606044}, {"code": "void GodotBody3D::_update_transform_dependent(){\n\t\tERR_FAIL_COND(!is_inside_tree());\n\n\tif (transform_changed) {\n\t\ttransform_changed = false;\n\n\t\tif (is_inside_tree()) {\n\t\t\t// Update the center of mass and principal inertia axes.\n\t\t\tVector3 com = get_center_of_mass();\n\t\t\tcom = get_transform().xform(com);\n\t\t\tset_center_of_mass(com);\n\n\t\t\tVector3 axes[3];\n\t\t\tget_principal_inertia_axes(axes);\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\taxes[i] = get_transform().xform(axes[i]);\n\t\t\t}\n\t\t\tset_principal_inertia_axes(axes);\n\t\t}\n\n\t\t// Update the inertia tensor.\n\t\tupdate_inertia();\n\t}\n}", "CodeBleu_score": 42.698862789039275}, {"code": "void GodotBody3D::_update_transform_dependent(){\n\t\tif (is_disabled()) {\n\t\treturn;\n\t}\n\tif (is_transform_dirty()) {\n\t\t_update_transform();\n\t}\n\n\tif (is_shape_dirty()) {\n\t\t_update_shape();\n\t}\n\n\tif (is_shape_dirty() || is_transform_dirty()) {\n\t\t_update_center_of_mass();\n\t}\n\n\tif (is_shape_dirty()) {\n\t\t_update_inertia();\n\t}\n\n\tif (is_shape_dirty() || is_transform_dirty()) {\n\t\t_update_principal_inertia_axes();\n\t}\n}", "CodeBleu_score": 20.903014150617448}]}
{"instance_id": "aebafb4094a1", "generation_result": [{"code": "void AudioDriver::audio_server_process(int p_frames, int32_t *p_buffer, bool p_update_mix_time) {\n\t\tif (p_update_mix_time) {\n\t\tupdate_mix_time(p_frames);\n\t}\n\n\tif (AudioServer::get_singleton()) {\n\t\tAudioServer::get_singleton()->process_audio(p_frames, p_buffer);\n\t}\n}", "CodeBleu_score": 90.03011251855698}, {"code": "void AudioDriver::audio_server_process(int p_frames, int32_t *p_buffer, bool p_update_mix_time) {\n\t\tAudioServer *as = AudioServer::get_singleton();\n\tif (!as) {\n\t\treturn;\n\t}\n\tas->process_audio_server(p_frames, p_buffer, p_update_mix_time);\n}", "CodeBleu_score": 47.377789228550164}, {"code": "void AudioDriver::audio_server_process(int p_frames, int32_t *p_buffer, bool p_update_mix_time) {\n\t\tif (p_update_mix_time) {\n\t\tupdate_mix_time(p_frames);\n\t}\n\tAudioServer *as = AudioServer::get_singleton();\n\tif (as) {\n\t\tas->_driver_process(p_frames, p_buffer);\n\t}\n}", "CodeBleu_score": 74.62244051359154}]}
{"instance_id": "160bb23e8010", "generation_result": [{"code": "void CameraServer::remove_feed(const Ref<CameraFeed> &p_feed){\n\tERR_FAIL_COND(p_feed.is_null());\n\n\tfor (int i = 0; i < feeds.size(); i++) {\n\t\tif (feeds[i] == p_feed) {\n\t\t\tfeeds.remove_at(i);\n\t\t\temit_signal(SNAME(\"feed_removed\"), p_feed->get_id());\n\t\t\treturn;\n\t\t}\n\t}\n}", "CodeBleu_score": 49.24959349976008}, {"code": "void CameraServer::remove_feed(const Ref<CameraFeed> &p_feed){\n\tif (feeds.contains(p_feed)) {\n\t\tfeeds.erase(p_feed);\n\t\temit_signal(SNAME(\"feed_removed\"), p_feed->get_id());\n\t}\n}", "CodeBleu_score": 22.790227467281333}, {"code": "void CameraServer::remove_feed(const Ref<CameraFeed> &p_feed){\n\tERR_FAIL_COND(!p_feed.is_valid());\n\n\tfor (int i = 0; i < feeds.size(); i++) {\n\t\tif (p_feed->get_id() == feeds[i]->get_id()) {\n\t\t\tfeeds.remove_at(i);\n\t\t\temit_signal(SNAME(\"feed_removed\"), p_feed->get_id());\n\t\t\treturn;\n\t\t}\n\t}\n\n\tERR_PRINT(\"Feed not found!\");\n}", "CodeBleu_score": 48.02568945732415}]}
{"instance_id": "bef3cf110c45", "generation_result": [{"code": "EaseRateAction* EaseRateAction::create(ActionInterval* action, float rate){\n\t\tCCASSERT(action!= NULL, \"Action must be non-NULL\");\n\tEaseRateAction* ret = new EaseRateAction();\n\tif (ret && ret->initWithAction(action, rate)) {\n\t\tret->autorelease();\n\t\treturn ret;\n\t}\n\tCC_SAFE_DELETE(ret);\n\treturn NULL;\n}", "CodeBleu_score": 56.068622907956886}, {"code": "EaseRateAction* EaseRateAction::create(ActionInterval* action, float rate){\n\t\tCCAssert(action!= NULL, \"Action must not be null\");\n\tEaseRateAction* ret = new EaseRateAction();\n\tif (ret && ret->initWithAction(action, rate)) {\n\t\tret->autorelease();\n\t} else {\n\t\tCC_SAFE_DELETE(ret);\n\t}\n\treturn ret;\n}", "CodeBleu_score": 53.76516986891555}, {"code": "EaseRateAction* EaseRateAction::create(ActionInterval* action, float rate){\n\t\tCCASSERT(action!= NULL, \"Action must be non-null\");\n\tEaseRateAction* ret = new EaseRateAction();\n\tif (ret && ret->initWithAction(action, rate)) {\n\t\tret->autorelease();\n\t\treturn ret;\n\t}\n\tCC_SAFE_DELETE(ret);\n\treturn NULL;\n}", "CodeBleu_score": 56.21694070522638}]}
{"instance_id": "97fc6f86ad54", "generation_result": [{"code": "Node* findChildByNameRecursively(Node* node, const std::string &childName){\n\t\tif (node->getName() == childName) {\n\t\treturn node;\n\t}\n\tfor (auto child : node->getChildren()) {\n\t\tNode* found = findChildByNameRecursively(child, childName);\n\t\tif (found!= nullptr) {\n\t\t\treturn found;\n\t\t}\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 48.93074159117503}, {"code": "Node* findChildByNameRecursively(Node* node, const std::string &childName){\n\t\tif (node->getName() == childName) {\n\t\treturn node;\n\t}\n\tfor (auto child : node->getChildren()) {\n\t\tNode* foundNode = findChildByNameRecursively(child, childName);\n\t\tif (foundNode!= nullptr) {\n\t\t\treturn foundNode;\n\t\t}\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 50.129032297671486}, {"code": "Node* findChildByNameRecursively(Node* node, const std::string &childName){\n\t\tif (node->getName() == childName) {\n\t\treturn node;\n\t}\n\tfor (Node* child : node->getChildren()) {\n\t\tNode* result = findChildByNameRecursively(child, childName);\n\t\tif (result!= nullptr) {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 48.49292468076716}]}
{"instance_id": "5fcbe1fedcd2", "generation_result": [{"code": "void Animate3D::removeFromMap(){\n\t\t// Remove from fade-in map\n\ts_fadeInAnimates.erase(s_fadeInAnimates.find(this));\n\n\t// Remove from fade-out map\n\ts_fadeOutAnimates.erase(s_fadeOutAnimates.find(this));\n\n\t// Remove from running map\n\ts_runningAnimates.erase(s_runningAnimates.find(this));\n}", "CodeBleu_score": 14.879973710303068}, {"code": "void Animate3D::removeFromMap(){\n\t\t// Check to see if the target exists\n\tif (target) {\n\t\t// If it does, erase it from the fade-in map\n\t\ts_fadeInAnimates.erase(target);\n\t\t// Erase it from the fade-out map\n\t\ts_fadeOutAnimates.erase(target);\n\t\t// Erase it from the running animation map\n\t\ts_runningAnimates.erase(target);\n\t}\n}", "CodeBleu_score": 17.406562196183298}, {"code": "void Animate3D::removeFromMap(){\n\t\tif (m_target) {\n\t\ts_runningAnimates.erase(s_runningAnimates.find(m_target));\n\t\ts_fadeInAnimates.erase(s_fadeInAnimates.find(m_target));\n\t\ts_fadeOutAnimates.erase(s_fadeOutAnimates.find(m_target));\n\t}\n}", "CodeBleu_score": 25.939200955006868}]}
{"instance_id": "db8d394f7bc4", "generation_result": [{"code": "Animation3D* Animation3D::create(const std::string& fileName, const std::string& animationName){\n\t\tAnimation3D* animation = new (std::nothrow) Animation3D();\n\tif (animation && animation->initWithFile(fileName, animationName)) {\n\t\tanimation->autorelease();\n\t\treturn animation;\n\t}\n\tCC_SAFE_DELETE(animation);\n\treturn nullptr;\n}", "CodeBleu_score": 32.14531127925923}, {"code": "Animation3D* Animation3D::create(const std::string& fileName, const std::string& animationName){\n\t", "CodeBleu_score": 6.477180559844727}, {"code": "Animation3D* Animation3D::create(const std::string& fileName, const std::string& animationName){\n\t\tAnimation3D* animation = Animation3DCache::getInstance()->getAnimation(fileName, animationName);\n\tif (!animation) {\n\t\tanimation = new (std::nothrow) Animation3D();\n\t\tif (animation && animation->initWithFile(fileName, animationName)) {\n\t\t\tanimation->autorelease();\n\t\t} else {\n\t\t\tCC_SAFE_DELETE(animation);\n\t\t}\n\t}\n\treturn animation;\n}", "CodeBleu_score": 47.871088858250886}]}
{"instance_id": "cdf28d98d3ff", "generation_result": [{"code": "void Animation3DCache::removeUnusedAnimation(){\n\t\tstd::map<std::string, Animation3D *>::iterator itor;\n\tfor (itor = _animations.begin(); itor!= _animations.end(); itor++) {\n\t\tif (itor->second->getReferenceCount() == 1) {\n\t\t\tdelete itor->second;\n\t\t\t_animations.erase(itor);\n\t\t}\n\t}\n}", "CodeBleu_score": 61.12699803079711}, {"code": "void Animation3DCache::removeUnusedAnimation(){\n\t\tAnimation3DCache::AnimationCache::iterator itor = _animations.begin();\n\twhile (itor!= _animations.end()) {\n\t\tif (itor->second->getReferenceCount() == 1) {\n\t\t\t_animations.erase(itor++);\n\t\t} else {\n\t\t\t++itor;\n\t\t}\n\t}\n}", "CodeBleu_score": 55.527023659198925}, {"code": "void Animation3DCache::removeUnusedAnimation(){\n\t\tfor (std::map<std::string, Animation3D*>::iterator itor = _animations.begin(); itor!= _animations.end();) {\n\t\tif (itor->second->getReferenceCount() == 1) {\n\t\t\t_animations.erase(itor++);\n\t\t} else {\n\t\t\t++itor;\n\t\t}\n\t}\n}", "CodeBleu_score": 56.60126959841231}]}
{"instance_id": "de7926871eb8", "generation_result": [{"code": "BillBoard* BillBoard::createWithTexture(Texture2D *texture, Mode mode){\n\t\tBillBoard *billboard = new (std::nothrow) BillBoard();\n\tif (billboard && billboard->initWithTexture(texture, mode)) {\n\t\tbillboard->autorelease();\n\t\treturn billboard;\n\t}\n\tCC_SAFE_DELETE(billboard);\n\treturn nullptr;\n}", "CodeBleu_score": 75.81205887196573}, {"code": "BillBoard* BillBoard::createWithTexture(Texture2D *texture, Mode mode){\n\t\tBillBoard *billboard = new (std::nothrow) BillBoard();\n\tif (billboard && billboard->initWithTexture(texture, mode)) {\n\t\tbillboard->autorelease();\n\t\treturn billboard;\n\t}\n\tCC_SAFE_DELETE(billboard);\n\treturn nullptr;\n}", "CodeBleu_score": 75.81205887196573}, {"code": "BillBoard* BillBoard::createWithTexture(Texture2D *texture, Mode mode){\n\t\tBillBoard *billboard = new (std::nothrow) BillBoard();\n\tif (billboard && billboard->initWithTexture(texture, mode)) {\n\t\tbillboard->autorelease();\n\t\treturn billboard;\n\t}\n\tCC_SAFE_DELETE(billboard);\n\treturn nullptr;\n}", "CodeBleu_score": 75.81205887196573}]}
{"instance_id": "eef1c2206d68", "generation_result": [{"code": "bool Bundle3D::load(const std::string& path){\n\tth.empty()) {\n\t\treturn false;\n\t}\n\n\tif (_path == path) {\n\t\treturn true;\n\t}\n\n\tif (!path.empty() && _path.empty()) {\n\t\t_path = path;\n\t\t_modelPath = \"\";\n\t\t_version = \"\";\n\t\t_references = nullptr;\n\t\t_referenceCount = 0;\n\t\t_binaryBuffer.clear();\n\t\t_jsonBuffer.clear();\n\n\t\t// Determine file extension\n\t\tstd::string extension = FileUtils::getInstance()->getFileExtension(path);\n\t\tif (extension == \"c3t\") {\n\t\t\treturn loadJson(path);\n\t\t} else if (extension == \"c3b\") {\n\t\t\treturn loadBinary(path);\n\t\t} else {\n\t\t\tCCLOG(\"warning: Invalid file extension: %s\", extension.c_str());\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn false;\n}", "CodeBleu_score": 49.307063672004034}, {"code": "bool Bundle3D::load(const std::string& path){\n\tth.empty()) {\n\t\tclear();\n\t\tCCLOG(\"warning: Empty path.\");\n\t\treturn false;\n\t}\n\n\tif (_path == path) {\n\t\tCCLOG(\"warning: Already loaded.\");\n\t\treturn true;\n\t}\n\n\tif (_path.empty()) {\n\t\tgetModelRelativePath(path);\n\t}\n\n\t// Check file extension\n\tstd::string extension = FileUtils::getInstance()->getFileExtension(path);\n\tif (extension == \"c3t\") {\n\t\treturn loadJson(path);\n\t} else if (extension == \"c3b\") {\n\t\treturn loadBinary(path);\n\t} else {\n\t\tclear();\n\t\tCCLOG(\"warning: Invalid format: %s\", path.c_str());\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 50.78937945922908}, {"code": "bool Bundle3D::load(const std::string& path){\n\tth.empty() || _path == path) {\n\t\treturn true;\n\t}\n\tclear();\n\t_path = path;\n\tif (FileUtils::getInstance()->isFileExist(_path)) {\n\t\tstd::string extension = FileUtils::getInstance()->getFileExtension(_path);\n\t\tif (extension == \"c3t\") {\n\t\t\tif (!loadJson(_path)) {\n\t\t\t\tclear();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (extension == \"c3b\") {\n\t\t\tif (!loadBinary(_path)) {\n\t\t\t\tclear();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tCCLOG(\"warning: Invalid file extension: %s\", extension.c_str());\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\telse {\n\t\tCCLOG(\"warning: File not found: %s\", _path.c_str());\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 43.269354863401745}]}
{"instance_id": "37b6acea681e", "generation_result": [{"code": "bool Bundle3D::loadSkinData(const std::string& /*id*/, SkinData* skindata){\n\t\tresetSkinData(skindata);\n\tif (isBinary()) {\n\t\treturn loadSkinDataBinary(skindata);\n\t}\n\telse {\n\t\treturn loadSkinDataJson(skindata);\n\t}\n}", "CodeBleu_score": 75.14032845375785}, {"code": "bool Bundle3D::loadSkinData(const std::string& /*id*/, SkinData* skindata){\n\t\tif (skindata == NULL) {\n\t\treturn false;\n\t}\n\n\tskindata->resetData();\n\tif (isBinary()) {\n\t\treturn loadSkinDataBinary(skindata);\n\t} else {\n\t\treturn loadSkinDataJson(skindata);\n\t}\n}", "CodeBleu_score": 79.5230448805269}, {"code": "bool Bundle3D::loadSkinData(const std::string& /*id*/, SkinData* skindata){\n\t\tskindata->resetData();\n\tif (isBinary()) {\n\t\treturn loadSkinDataBinary(skindata);\n\t} else {\n\t\treturn loadSkinDataJson(skindata);\n\t}\n}", "CodeBleu_score": 80.55783016271381}]}
{"instance_id": "97449825e4ef", "generation_result": [{"code": "size_t AudioDecoder::fileRead(void* ptr, size_t size, size_t nmemb, void* datasource){\n\t\t// TODO: Implement this function\n\t// TODO: Make sure to update the file position after reading data\n\t// TODO: Make sure to return the number of bytes read\n\treturn 0;\n}", "CodeBleu_score": 5.042137070178243}, {"code": "size_t AudioDecoder::fileRead(void* ptr, size_t size, size_t nmemb, void* datasource){\n\t\tauto thiz = static_cast<AudioDecoder*>(datasource);\n\n\tsize_t bytesToRead = std::min(thiz->_fileData.getSize() - thiz->_fileData.getPosition(), size * nmemb);\n\tif (bytesToRead > 0) {\n\t\tmemcpy(ptr, thiz->_fileData.getBytes() + thiz->_fileData.getPosition(), bytesToRead);\n\t\tthiz->_fileData.setPosition(thiz->_fileData.getPosition() + bytesToRead);\n\t}\n\treturn bytesToRead;\n}", "CodeBleu_score": 54.88772250611164}, {"code": "size_t AudioDecoder::fileRead(void* ptr, size_t size, size_t nmemb, void* datasource){\n\t\tAudioDecoder* thiz = (AudioDecoder*)datasource;\n\tsize_t bytesToRead = thiz->_fileData.getSize() - thiz->_fileData.getPosition();\n\tif (bytesToRead < size * nmemb) {\n\t\tsize_t bytesRead = bytesToRead;\n\t\tmemcpy(ptr, thiz->_fileData.getBytes() + thiz->_fileData.getPosition(), bytesToRead);\n\t\tthiz->_fileData.setPosition(thiz->_fileData.getPosition() + bytesToRead);\n\t\treturn bytesRead / size;\n\t} else {\n\t\tmemcpy(ptr, thiz->_fileData.getBytes() + thiz->_fileData.getPosition(), size * nmemb);\n\t\tthiz->_fileData.setPosition(thiz->_fileData.getPosition() + size * nmemb);\n\t\treturn nmemb;\n\t}\n}", "CodeBleu_score": 52.16853803616598}]}
{"instance_id": "0f4db164ba5d", "generation_result": [{"code": "AudioDecoder::AudioDecoder()\n        : _fileCurrPos(0), _sampleRate(-1){\n\t\tpcmBuffer = std::make_shared<std::vector<char>>(4096);\n}", "CodeBleu_score": 22.260165638696982}, {"code": "AudioDecoder::AudioDecoder()\n        : _fileCurrPos(0), _sampleRate(-1){\n\t\t_pcmBuffer = std::make_shared<std::vector<char>>();\n\t_pcmBuffer->reserve(4096);\n}", "CodeBleu_score": 45.76869405574416}, {"code": "AudioDecoder::AudioDecoder()\n        : _fileCurrPos(0), _sampleRate(-1){\n\t\t_pcmBuffer = std::make_shared<std::vector<char>>(4096);\n}", "CodeBleu_score": 21.84595977507128}]}
{"instance_id": "0f88663615c6", "generation_result": [{"code": "static cocos2d::network::DownloaderAndroid* _findDownloaderAndroid(int id){\n\t\tcocos2d::network::DownloaderAndroid* pDownloader = nullptr;\n\tstd::lock_guard<std::mutex> lock(sDownloaderMapMutex);\n\tauto it = sDownloaderMap.find(id);\n\tif (it!= sDownloaderMap.end()) {\n\t\tpDownloader = it->second;\n\t}\n\treturn pDownloader;\n}", "CodeBleu_score": 58.22282143081541}, {"code": "static cocos2d::network::DownloaderAndroid* _findDownloaderAndroid(int id){\n\t\tcocos2d::network::DownloaderAndroid* ret = nullptr;\n\tsDownloaderMapMutex.lock();\n\tauto it = sDownloaderMap.find(id);\n\tif (it!= sDownloaderMap.end()) {\n\t\tret = it->second;\n\t}\n\tsDownloaderMapMutex.unlock();\n\treturn ret;\n}", "CodeBleu_score": 51.86685027539914}, {"code": "static cocos2d::network::DownloaderAndroid* _findDownloaderAndroid(int id){\n\t\tsDownloaderMap.lock();\n\tauto it = sDownloaderMap.find(id);\n\tsDownloaderMap.unlock();\n\tif (it!= sDownloaderMap.end()) {\n\t\treturn it->second;\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 53.39989892623231}]}
{"instance_id": "a5aafaaa944c", "generation_result": [{"code": "function M.playMusic(filename, isLoop)\n\t\tcc.SimpleAudioEngine:getInstance():playMusic(filename, isLoop)", "CodeBleu_score": 30.627005567523202}, {"code": "function M.playMusic(filename, isLoop)\n\t\tcc.SimpleAudioEngine:getInstance():playMusic(filename, isLoop)", "CodeBleu_score": 30.627005567523202}, {"code": "function M.playMusic(filename, isLoop)\n\t\tcc.SimpleAudioEngine:getInstance():playMusic(filename, isLoop)", "CodeBleu_score": 30.627005567523202}]}
{"instance_id": "16f2ad4bb4e8", "generation_result": [{"code": "function ccs.TriggerObj:detect()\n\t\tlocal detect = self._detect\n\tif not detect then\n\t\treturn true\n\tend\n\tif not self._enabled then\n\t\treturn false\n\tend\n\tlocal conditions = self._conditions\n\tlocal count = table.getn(conditions)\n\tif count == 0 then\n\t\treturn true\n\tend\n\tfor i = 1, count do\n\t\tlocal condition = conditions[i]\n\t\tif not condition:detect() then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true", "CodeBleu_score": 36.913768756909334}, {"code": "function ccs.TriggerObj:detect()\n\t\tlocal result = true\n\tif self.enabled then\n\t\tfor i,v in ipairs(self.conditions) do\n\t\t\tresult = result and v:detect()\n\t\tend\n\tend\n\treturn result", "CodeBleu_score": 27.29212512444076}, {"code": "function ccs.TriggerObj:detect()\n\t\tlocal obj = self\n\tlocal table = obj.table\n\tlocal detect = obj.detect\n\tlocal result = true\n\tlocal conditions = table.conditions\n\tlocal n = table.getn\n\tlocal i\n\tif n(conditions) == 0 then\n\t\treturn true\n\tend\n\tfor i=1,n(conditions) do\n\t\tresult = result and detect(conditions[i])\n\tend\n\treturn result", "CodeBleu_score": 42.60006127651684}]}
{"instance_id": "e73b10418cb6", "generation_result": [{"code": "function ccs.TriggerObj:removeAll()\n\t\tlocal obj = self\n\tlocal conditions = obj.conditions\n\tlocal actions = obj.actions\n\tlocal i = 1\n\twhile i <= conditions.getn(conditions) do\n\t\tlocal condition = conditions[i]\n\t\tif condition.removeAll ~= nil then\n\t\t\tcondition:removeAll()\n\t\tend\n\t\ti = i + 1\n\tend\n\ti = 1\n\twhile i <= actions.getn(actions) do\n\t\tlocal action = actions[i]\n\t\tif action.removeAll ~= nil then\n\t\t\taction:removeAll()\n\t\tend\n\t\ti = i + 1\n\tend\n\tconditions.clear(conditions)\n\tactions.clear(actions)", "CodeBleu_score": 36.33583912129485}, {"code": "function ccs.TriggerObj:removeAll()\n\t\tlocal obj = self;\n\tlocal conditions = obj.conditions;\n\tlocal actions = obj.actions;\n\tfor i = 1, conditions.getn(conditions) do\n\t\tlocal condition = conditions[i];\n\t\tif condition.removeAll then\n\t\t\tcondition:removeAll();\n\t\tend\n\tend\n\tfor i = 1, actions.getn(actions) do\n\t\tlocal action = actions[i];\n\t\tif action.removeAll then\n\t\t\taction:removeAll();\n\t\tend\n\tend\n\tconditions.clear(conditions);\n\tactions.clear(actions);", "CodeBleu_score": 35.84435267286787}, {"code": "function ccs.TriggerObj:removeAll()\n\t\tif self.conditions then\n\t\tfor i,v in ipairs(self.conditions) do\n\t\t\tif v.removeAll then\n\t\t\t\tv:removeAll()\n\t\t\tend\n\t\tend\n\tend\n\tif self.actions then\n\t\tfor i,v in ipairs(self.actions) do\n\t\t\tif v.removeAll then\n\t\t\t\tv:removeAll()\n\t\t\tend\n\t\tend\n\tend\n\tself.conditions = {}\n\tself.actions = {}", "CodeBleu_score": 39.10117391435427}]}
{"instance_id": "d5a1333d794d", "generation_result": [{"code": "function BasicCollider:hurtEffect(target)\n\t\tlocal hurtEffect = cc.Sprite3D:create(\"hurt.c3b\")\n\tlocal animation = cc.Animation3D:create(\"hurt.c3b\")\n\thurtEffect:setCameraMask(cc.CameraFlag.USER1)\n\thurtEffect:setScale(0.5)\n\thurtEffect:setPosition3D(cc.V3(0,0,0))\n\thurtEffect:runAction(cc.Animate:create(animation))\n\thurtEffect:runAction(cc.Sequence:create(cc.DelayTime:create(1), cc.RemoveSelf:create()))\n\ttarget:addChild(hurtEffect, 10)", "CodeBleu_score": 58.42311806877625}, {"code": "function BasicCollider:hurtEffect(target)\n\t\tlocal hurtEffect = cc.Sprite3D:create(\"hurt.c3b\")\n\thurtEffect:setCameraMask(cc.CameraFlag.USER2)\n\thurtEffect:setScale(0.5)\n\thurtEffect:setPosition3D(cc.V3(0, 0, 0))\n\thurtEffect:runAction(cc.Sequence:create(cc.Animate:create(animationCache:getAnimation(\"hurtAnimation\")), cc.RemoveSelf:create()))\n\ttarget:addChild(hurtEffect)", "CodeBleu_score": 57.20061675907008}, {"code": "function BasicCollider:hurtEffect(target)\n\t\tlocal hurtEffect = cc.Sprite3D:create(\"hurt.c3b\")\n\tlocal animation = cc.AnimationCache:getInstance():getAnimation(\"hurtAnimation\")\n\tlocal animationState = cc.Animation3D:create(\"hurtAnimation.c3b\")\n\thurtEffect:setScale(0.5)\n\thurtEffect:setPosition3D(cc.V3(0, 0, 0))\n\thurtEffect:runAction(cc.Sequence:create(cc.Animate:create(animation), cc.RemoveSelf:create()))\n\thurtEffect:setCameraMask(cc.CameraFlag.USER1)\n\ttarget:addChild(hurtEffect)", "CodeBleu_score": 58.431460675034764}]}
{"instance_id": "f478d7e70ea6", "generation_result": [{"code": "function MageNormalAttack:onTimeOut()\n\t\tself.part1:stopSystem()\n\tself.part2:stopSystem()\n\tlocal sequence = cc.Sequence:create(cc.DelayTime:create(0.2), cc.CallFunc:create(function()\n\t\tlocal particle = cc.ParticleSystemQuad:create(\"particles/attack_magic.plist\")\n\t\tparticle:setPosition(self.sp:getPosition())\n\t\tself:addChild(particle)\n\t\tparticle:setScale(0.5)\n\t\tparticle:setGlobalZOrder(1)\n\t\tparticle:setTextureWithRect(cc.SpriteFrameCache:getInstance():getSpriteFrame(\"attack_magic.png\"))\n\t\tparticle:setRotation3D(cc.vec3(0, 0, 0))\n\t\tself.part1 = particle\n\t\tself.part2 = particle\n\t\tlocal action = cc.FadeOut:create(0.5)\n\t\tself.sp:runAction(action)\n\t\tself.sp:setScale(0.5)\n\tend))\n\tself:runAction(sequence)", "CodeBleu_score": 52.00896557691374}, {"code": "function MageNormalAttack:onTimeOut()\n\t\tself.part1:stopSystem()\n\tself.part2:stopSystem()\n\tlocal sequence = cc.Sequence:create(cc.DelayTime:create(0.5), cc.CallFunc:create(function() \n\t\tlocal part = cc.ParticleSystemQuad:create(\"particle/magic_normal.plist\")\n\t\tself:addChild(part)\n\t\tpart:setPosition(cc.p(self.sp:getPositionX(), self.sp:getPositionY()))\n\t\tpart:setScale(self.sp:getScale())\n\t\tpart:setTextureWithRect(self.sp:getTexture(), self.sp:getTextureRect())\n\t\tpart:setRotation3D(self.sp:getRotation3D())\n\t\tpart:setGlobalZOrder(self.sp:getGlobalZOrder())\n\t\tpart:setCameraMask(self:getCameraMask())\n\t\tself.sp:runAction(cc.FadeOut:create(0.5))\n\t\tself.sp:setScale(0)\n\tend))\n\tself:runAction(sequence)", "CodeBleu_score": 55.000913844202856}, {"code": "function MageNormalAttack:onTimeOut()\n\t\tself.part1:stopSystem()\n\tself.part2:stopSystem()\n\tlocal sequence = cc.Sequence:create(cc.DelayTime:create(0.5), cc.CallFunc:create(function()\n\t\tlocal part = cc.ParticleSystemQuad:create(\"particle/magic/magic_normal_attack_01.plist\")\n\t\tpart:setPosition(self.sp:getPosition())\n\t\tself:addChild(part)\n\t\tpart:setScale(0.5)\n\t\tpart:setGlobalZOrder(self.sp:getGlobalZOrder())\n\t\tlocal frame = cc.SpriteFrameCache:getInstance():getSpriteFrame(\"magic_normal_attack_01_01.png\")\n\t\tpart:setTextureWithRect(frame:getTexture(), frame:getRect())\n\t\tpart:setRotation3D(self.sp:getRotation3D())\n\t\tpart:setScale(self.sp:getScale())\n\t\tpart:setOpacity(0)\n\t\tpart:runAction(cc.FadeOut:create(0.5))\n\t\tpart:setScale(self.sp:getScale())\n\tend))\n\tself:runAction(sequence)", "CodeBleu_score": 59.31305359711092}]}
{"instance_id": "d735c4ea6358", "generation_result": [{"code": "function BattlefieldUI:heroDead(hero)\n\t\tif hero == \"Knight\" then\n\t\tself.KnightAngryClone:setVisible(false)\n\t\tself.KnightAngryFullSignal:setVisible(false)\n\t\tself.KnightClone:setShader(cc.GreyShader:getGreyShader())\n\telseif hero == \"Mage\" then\n\t\tself.MageAngryClone:setVisible(false)\n\t\tself.MageAngryFullSignal:setVisible(false)\n\t\tself.MageClone:setShader(cc.GreyShader:getGreyShader())\n\telseif hero == \"Archer\" then\n\t\tself.ArcherAngryClone:setVisible(false)\n\t\tself.ArcherAngryFullSignal:setVisible(false)\n\t\tself.ArcherClone:setShader(cc.GreyShader:getGreyShader())\n\tend", "CodeBleu_score": 45.02044996654164}, {"code": "function BattlefieldUI:heroDead(hero)\n\t\tif hero == \"Knight\" then\n\t\tself.KnightAngryClone:setVisible(false)\n\t\tself.KnightAngryFullSignal:setVisible(false)\n\t\tself.KnightAngryClone:setGreyShader()\n\telseif hero == \"Mage\" then\n\t\tself.MageAngryClone:setVisible(false)\n\t\tself.MageAngryFullSignal:setVisible(false)\n\t\tself.MageAngryClone:setGreyShader()\n\telseif hero == \"Archer\" then\n\t\tself.ArcherAngryClone:setVisible(false)\n\t\tself.ArcherAngryFullSignal:setVisible(false)\n\t\tself.ArcherAngryClone:setGreyShader()\n\tend", "CodeBleu_score": 40.961177169147334}, {"code": "function BattlefieldUI:heroDead(hero)\n\t\tif hero == \"Knight\" then\n\t\tself.KnightAngryClone:setVisible(false)\n\t\tself.KnightAngryFullSignal:setVisible(false)\n\t\tself.KnightAngryClone:setGreyShader()\n\telseif hero == \"Mage\" then\n\t\tself.MageAngryClone:setVisible(false)\n\t\tself.MageAngryFullSignal:setVisible(false)\n\t\tself.MageAngryClone:setGreyShader()\n\telseif hero == \"Archer\" then\n\t\tself.ArcherAngryClone:setVisible(false)\n\t\tself.ArcherAngryFullSignal:setVisible(false)\n\t\tself.ArcherAngryClone:setGreyShader()\n\tend", "CodeBleu_score": 40.961177169147334}]}
{"instance_id": "009f167d3ab2", "generation_result": [{"code": "local function moveCamera(dt)\n\t\t--print(\"moveCamera\")\n\t--print(\"camera:getPositionX() = \"..camera:getPositionX())\n\t--print(\"camera:getPositionY() = \"..camera:getPositionY())\n\t--print(\"camera:getPositionZ() = \"..camera:getPositionZ())\n\t--print(\"camera:getRotation() = \"..camera:getRotation())\n\t--print(\"camera:getScale() = \"..camera:getScale())\n\t--print(\"camera:getScaleX() = \"..camera:getScaleX())\n\t--print(\"camera:getScaleY() = \"..camera:getScaleY())\n\t--print(\"camera:getScaleZ() = \"..camera:getScaleZ())\n\t--print(\"camera:getPosition3D() = \"..camera:getPosition3D())\n\t--print(\"camera:getLookAt() = \"..camera:getLookAt())\n\t--print(\"camera:getLookAt3D() = \"..camera:getLookAt3D())\n\t--print(\"camera:getPosition() = \"..camera:getPosition())\n\t--print(\"camera:getPosition3D() = \"..camera:getPosition3D())\n\t--print(\"camera:getRotation() = \"..camera:getRotation())\n\t--print(\"camera:getRotation3D() = \"..camera:getRotation3D())\n\t--print(\"camera:getScale() = \"..camera:getScale())\n\t--print(\"camera:getScale3D() = \"..camera:getScale3D())\n\t--print(\"camera:getScaleX() = \"..camera:getScaleX())\n\t--print(\"camera:getScaleY() = \"..camera:getScaleY())\n\t--print(\"camera:getScaleZ() = \"..camera:getScaleZ())\n\t--print(\"camera:getSkewX() = \"..camera:getSkewX())\n\t--print(\"camera:getSkewY() = \"..camera:getSkewY())\n\t--print(\"camera:getSkewZ() = \"..camera:getSkewZ())\n\t--print(\"camera:getWorldToNodeTransform() = \"..camera:getWorldToNodeTransform())\n\t--print(\"camera:getNodeToWorldTransform() = \"..camera:getNodeToWorldTransform())\n\t--print(\"camera:getNodeToParentTransform() = \"..camera:getNodeToParentTransform())\n\t--print(\"camera:", "CodeBleu_score": 0.21929824561403508}, {"code": "local function moveCamera(dt)\n\t\tif camera.specialTarget ~= nil then\n\t\tlocal target = camera.specialTarget\n\t\tlocal currentPos = camera:getPosition()\n\t\tlocal targetPos = target:getPosition()\n\t\tlocal newPos = cc.p(currentPos.x + (targetPos.x - currentPos.x) * dt, currentPos.y + (targetPos.y - currentPos.y) * dt)\n\t\tcamera:setPosition(newPos)\n\t\tcamera:lookAt(target:getPosition(), cc.p(0, 1))\n\telseif List.getSize(heroes) > 0 then\n\t\tlocal focusPoint = getFocusPointOfHeros()\n\t\tlocal currentPos = camera:getPosition()\n\t\tlocal newPos = cc.p(currentPos.x + (focusPoint.x - currentPos.x) * dt, currentPos.y + (focusPoint.y - currentPos.y) * dt)\n\t\tcamera:setPosition(newPos)\n\t\tcamera:lookAt(focusPoint, cc.p(0, 1))\n\tend", "CodeBleu_score": 40.76701999755392}, {"code": "local function moveCamera(dt)\n\t\tif specialCameraActive then\n\t\t-- Interpolate the camera position towards a special target\n\t\tlocal currentPosition = camera:getPosition()\n\t\tlocal newPosition = cc.p(specialTarget.x, specialTarget.y)\n\t\tlocal newPosition = cc.pLerp(currentPosition, newPosition, dt * 10)\n\t\tcamera:setPosition(newPosition)\n\n\t\t-- Set the camera to look at a special target\n\t\tlocal target = cc.p(specialTarget.x, specialTarget.y)\n\t\tlocal up = cc.p(0, 1)\n\t\tcamera:lookAt(target, up)\n\telseif List.getSize(heroes) > 0 then\n\t\t-- Interpolate the camera position towards the focus point of the heroes\n\t\tlocal currentPosition = camera:getPosition()\n\t\tlocal newPosition = getFocusPointOfHeros()\n\t\tlocal newPosition = cc.pLerp(currentPosition, newPosition, dt * 10)\n\t\tcamera:setPosition(newPosition)\n\n\t\t-- Set the camera to look at the focus point of the heroes\n\t\tlocal target = getFocusPointOfHeros()\n\t\tlocal up = cc.p(0, 1)\n\t\tcamera:lookAt(target, up)\n\tend", "CodeBleu_score": 39.27256822320713}]}
{"instance_id": "f7f5e7fe1dc2", "generation_result": [{"code": "local function updateParticlePos()\n\t\tfor i, hero in ipairs(HeroManager.heroes) do\n\t\tif hero.particle_effect then\n\t\t\thero.particle_effect._effectNode:setPosition(hero:getPosition())\n\t\tend\n\tend", "CodeBleu_score": 22.23312603572565}, {"code": "local function updateParticlePos()\n\t\tlocal heroes = HeroManager:getHeroes()\n\tfor i, hero in ipairs(heroes) do\n\t\tif hero.effectNode ~= nil then\n\t\t\tlocal pos = hero:getPos()\n\t\t\tlocal posTable = getPosTable(pos)\n\t\t\thero.effectNode:setPosition(posTable)\n\t\tend\n\tend", "CodeBleu_score": 43.711215842232285}, {"code": "local function updateParticlePos()\n\t\tfor i, hero in pairs(HeroManager.heroes) do\n\t\tif hero.sprite._effectNode then\n\t\t\thero.sprite._effectNode:setPosition(hero.sprite:getPosition())\n\t\tend\n\tend", "CodeBleu_score": 32.041500980116254}]}
{"instance_id": "77829ef7341e", "generation_result": [{"code": "function ChooseRoleScene:playAudioWhenRotate()\n\t\tlocal hero = self.layer:getChildByTag(self.selectedHeroTag)\n\tlocal raceType = hero:getRaceType()\n\tif raceType == \"knight\" then\n\t\tccexp.AudioEngine:play2d(\"audio/knight_rotate.mp3\", false)\n\telseif raceType == \"archer\" then\n\t\tccexp.AudioEngine:play2d(\"audio/archer_rotate.mp3\", false)\n\telseif raceType == \"mage\" then\n\t\tccexp.AudioEngine:play2d(\"audio/mage_rotate.mp3\", false)\n\tend", "CodeBleu_score": 48.15383258037678}, {"code": "function ChooseRoleScene:playAudioWhenRotate()\n\t\tlocal hero = self.layer:getChildByTag(self.heroTag)\n\tlocal heroRace = hero:getRaceType()\n\tif heroRace == \"Knight\" then\n\t\tccexp.AudioEngine:play2d(\"audio/Knight_Rotate.mp3\", false)\n\telseif heroRace == \"Archer\" then\n\t\tccexp.AudioEngine:play2d(\"audio/Archer_Rotate.mp3\", false)\n\telseif heroRace == \"Mage\" then\n\t\tccexp.AudioEngine:play2d(\"audio/Mage_Rotate.mp3\", false)\n\tend", "CodeBleu_score": 50.05847281602652}, {"code": "function ChooseRoleScene:playAudioWhenRotate()\n\t\tlocal hero = self.layer:getChildByTag(self.selectedHeroTag)\n\tif hero ~= nil then\n\t\tlocal raceType = hero:getRaceType()\n\t\tif raceType == \"Knight\" then\n\t\t\tccexp.AudioEngine:play2d(\"audio/choose_role_knight.mp3\", false)\n\t\telseif raceType == \"Archer\" then\n\t\t\tccexp.AudioEngine:play2d(\"audio/choose_role_archer.mp3\", false)\n\t\telseif raceType == \"Mage\" then\n\t\t\tccexp.AudioEngine:play2d(\"audio/choose_role_mage.mp3\", false)\n\t\tend\n\tend", "CodeBleu_score": 51.42447367125547}]}
{"instance_id": "2b35fdb15a13", "generation_result": [{"code": "function GameMaster:AddHeros()\n\t\t--Create the knight\n\tlocal knight = Knight:create()\n\tknight:setPosition(100, 200)\n\tcurrentLayer:addChild(knight)\n\tknight:idleMode()\n\tList.pushlast(HeroManager, knight)\n\t\n\t--Create the mage\n\tlocal mage = Mage:create()\n\tmage:setPosition(200, 200)\n\tcurrentLayer:addChild(mage)\n\tmage:idleMode()\n\tList.pushlast(HeroManager, mage)\n\t\n\t--Create the archer\n\tlocal archer = Archer:create()\n\tarcher:setPosition(300, 200)\n\tcurrentLayer:addChild(archer)\n\tarcher:idleMode()\n\tList.pushlast(HeroManager, archer)", "CodeBleu_score": 74.68185842657947}, {"code": "function GameMaster:AddHeros()\n\t\tlocal knight = Knight:create()\n\tknight:setPosition(100, 100)\n\tcurrentLayer:addChild(knight)\n\tknight:idleMode()\n\tHeroManager:pushlast(knight)\n\t\n\tlocal mage = Mage:create()\n\tmage:setPosition(200, 200)\n\tcurrentLayer:addChild(mage)\n\tmage:idleMode()\n\tHeroManager:pushlast(mage)\n\t\n\tlocal archer = Archer:create()\n\tarcher:setPosition(300, 300)\n\tcurrentLayer:addChild(archer)\n\tarcher:idleMode()\n\tHeroManager:pushlast(archer)", "CodeBleu_score": 58.96480794316663}, {"code": "function GameMaster:AddHeros()\n\t\tself.knight = Knight:create()\n\tself.knight:setPosition(100, 100)\n\tself.currentLayer:addChild(self.knight)\n\tself.knight:idleMode()\n\tList.pushlast(self.heroManager, self.knight)\n\n\tself.mage = Mage:create()\n\tself.mage:setPosition(200, 200)\n\tself.currentLayer:addChild(self.mage)\n\tself.mage:idleMode()\n\tList.pushlast(self.heroManager, self.mage)\n\n\tself.archer = Archer:create()\n\tself.archer:setPosition(300, 300)\n\tself.currentLayer:addChild(self.archer)\n\tself.archer:idleMode()\n\tList.pushlast(self.heroManager, self.archer)", "CodeBleu_score": 54.11198916754603}]}
{"instance_id": "cdfbc82ff3cd", "generation_result": [{"code": "function GameMaster:showBoss()\n\t\tlocal boss = Rat:create()\n\tboss:setCameraMask(cc.CameraFlag.USER1)\n\tself.currentLayer:addChild(boss)\n\tboss:setPosition(cc.p(self.currentLayer:getContentSize().width/2, self.currentLayer:getContentSize().height/2))\n\tboss:setDirection(cc.p(0,1))\n\tboss:setAIEnabled(false)\n\tboss:bounceOut()\n\tboss:setAIEnabled(true)\n\tself.monsterManager:addMonster(boss)", "CodeBleu_score": 42.0209284917561}, {"code": "function GameMaster:showBoss()\n\t\tlocal boss = Rat:new()\n\tboss:setCameraMask(1)\n\tself.currentLayer:addChild(boss)\n\tboss:setPosition(self.currentLayer:getContentSize().width/2, self.currentLayer:getContentSize().height/2)\n\tboss:setFacingDirection(2)\n\tboss:setAIEnabled(false)\n\tboss:performBounceOutMove()\n\tboss:setAIEnabled(true)\n\tself.monsterManager:addMonster(boss)", "CodeBleu_score": 36.89842872420675}, {"code": "function GameMaster:showBoss()\n\t\tlocal boss = Rat.new(self.boss)\n\tboss.cameramask = self.cameramask\n\tboss.layer = self.layer\n\tboss.position = self.boss.position\n\tboss.facing = self.boss.facing\n\tboss.AIEnabled = false\n\tboss:bounceOut()\n\tboss.AIEnabled = true\n\tself.monsterManager:addMonster(boss)", "CodeBleu_score": 37.579210280637085}]}
{"instance_id": "fa7b402853bb", "generation_result": [{"code": "function createAnimation(file, begin, finish, speed)\n\t\tlocal animation = cc.Animation3D:create(file)\n\tlocal animate3d = cc.Animate3D:create(animation, begin, finish)\n\tanimate3d:setSpeed(speed)\n\tanimate3d:retain()\n\treturn animate3d", "CodeBleu_score": 68.98312526571402}, {"code": "function createAnimation(file, begin, finish, speed)\n\t\tlocal animation = cc.Animation3D:create(file)\n\tlocal animate3d = cc.Animate3D:create(animation, begin, finish)\n\tanimate3d:setSpeed(speed)\n\tanimate3d:retain()\n\treturn animate3d", "CodeBleu_score": 68.98312526571402}, {"code": "function createAnimation(file, begin, finish, speed)\n\t\tlocal animate3d = cc.Animation3D:create(file)\n\tlocal animate = cc.Animate3D:create(animate3d, begin, finish)\n\tanimate:setSpeed(speed)\n\tanimate:retain()\n\treturn animate", "CodeBleu_score": 59.25523863713194}]}
{"instance_id": "0725f2413b6b", "generation_result": [{"code": "function removeAll(table)\n\t\tfor k,v in pairs(table) do \n\t\ttable[k] = nil \n\tend ", "CodeBleu_score": 37.5225396286282}, {"code": "function removeAll(table)\n\t\tfor k, v in pairs(table) do \n\t\ttable[k] = nil \n\tend ", "CodeBleu_score": 37.61883259750955}, {"code": "function removeAll(table)\n\t\tfor k,v in pairs(table) do\n\t\ttable[k] = nil\n\tend", "CodeBleu_score": 37.457832536187205}]}
{"instance_id": "526d10bb37bb", "generation_result": [{"code": "function delayExecute(target, func, delay)\n\t\tlocal delayAction = cc.DelayTime:create(delay)\n\tlocal funcCall = cc.CallFunc:create(func)\n\tlocal seq = cc.Sequence:create(delayAction, funcCall)\n\ttarget:runAction(seq)", "CodeBleu_score": 58.32957734900015}, {"code": "function delayExecute(target, func, delay)\n\t\tlocal action = cc.Sequence:create(cc.DelayTime:create(delay), cc.CallFunc:create(func))\n\ttarget:runAction(action)", "CodeBleu_score": 59.82560730608639}, {"code": "function delayExecute(target, func, delay)\n\t\tlocal delay = cc.DelayTime:create(delay)\n\tlocal func = cc.CallFunc:create(func)\n\tlocal seq = cc.Sequence:create(delay, func)\n\ttarget:runAction(seq)", "CodeBleu_score": 58.28744578711977}]}
{"instance_id": "3b277bd3d0d0", "generation_result": [{"code": "function LoadingScene:addLoadingText(layer)\n\t\tlocal font = \"fonts/Marker Felt.ttf\"\n\tlocal fontSize = 24\n\tlocal loadingText = cc.Label:createWithTTF(font, fontSize)\n\tloadingText:setString(\"Loading...\")\n\tloadingText:setPosition(display.cx, display.cy)\n\tlayer:addChild(loadingText)\n\tself._loading = loadingText", "CodeBleu_score": 26.359215573818773}, {"code": "function LoadingScene:addLoadingText(layer)\n\t\tlocal label = cc.Label:createWithTTF(\"Loading...\", \"fonts/Marker Felt.ttf\", 24)\n\tlabel:setAnchorPoint(cc.p(0.5, 0.5))\n\tlabel:setPosition(cc.p(display.cx, display.cy))\n\tlayer:addChild(label)\n\tself._loading = label", "CodeBleu_score": 21.075168673995744}, {"code": "function LoadingScene:addLoadingText(layer)\n\t\tlocal label = cc.Label:createWithTTF(\"Loading...\", \"fonts/Marker Felt.ttf\", 40)\n\tlabel:setAnchorPoint(cc.p(0.5, 0.5))\n\tlabel:setPosition(cc.p(self._visibleSize.width / 2, self._visibleSize.height / 2))\n\tlayer:addChild(label)\n\tself._loading = label", "CodeBleu_score": 26.536198772447527}]}
{"instance_id": "68250ae97644", "generation_result": [{"code": "function MainMenuScene.create()\n\t\tlocal scene = MainMenuScene.new()\n\tscene:createLayer()\n\treturn scene", "CodeBleu_score": 48.64033735784464}, {"code": "function MainMenuScene.create()\n\t\tlocal scene = MainMenuScene.new()\n\tscene:createLayer()\n\treturn scene", "CodeBleu_score": 48.64033735784464}, {"code": "function MainMenuScene.create()\n\t\tlocal scene = MainMenuScene.new()\n\tscene:createLayer()\n\treturn scene", "CodeBleu_score": 48.64033735784464}]}
{"instance_id": "81470efbb6ff", "generation_result": [{"code": "local function collision(object)\n\n\t\tfor i = 1, #HeroManager.heroes do\n\t\tif object.x < HeroManager.heroes[i].x + HeroManager.heroes[i].width and object.x + object.width > HeroManager.heroes[i].x and object.y < HeroManager.heroes[i].y + HeroManager.heroes[i].height and object.y + object.height > HeroManager.heroes[i].y then\n\t\t\tsolveCollision(object, HeroManager.heroes[i])\n\t\tend\n\tend\n\n\tfor i = 1, #MonsterManager.monsters do\n\t\tif object.x < MonsterManager.monsters[i].x + MonsterManager.monsters[i].width and object.x + object.width > MonsterManager.monsters[i].x and object.y < MonsterManager.monsters[i].y + MonsterManager.monsters[i].height and object.y + object.height > MonsterManager.monsters[i].y then\n\t\t\tsolveCollision(object, MonsterManager.monsters[i])\n\t\tend\n\tend\n", "CodeBleu_score": 33.00500779350624}, {"code": "local function collision(object)\n\n\t\tlocal heroes = HeroManager:getAllHeroes()\n\tlocal monsters = MonsterManager:getAllMonsters()\n\n\tfor _, hero in pairs(heroes) do\n\t\tif hero.dead == false then\n\t\t\tif object:intersects(hero) then\n\t\t\t\tsolveCollision(object, hero)\n\t\t\tend\n\t\tend\n\tend\n\n\tfor _, monster in pairs(monsters) do\n\t\tif monster.dead == false then\n\t\t\tif object:intersects(monster) then\n\t\t\t\tsolveCollision(object, monster)\n\t\t\tend\n\t\tend\n\tend", "CodeBleu_score": 36.284090824168146}, {"code": "local function collision(object)\n\n\t\tfor i,hero in pairs(HeroManager:GetHeroes(true)) do\n\t\tif object:GetCollisionRect():intersectsWithRect(hero:GetCollisionRect()) then\n\t\t\tsolveCollision(object, hero)\n\t\tend\n\tend\n\tfor i,monster in pairs(MonsterManager:GetMonsters()) do\n\t\tif object:GetCollisionRect():intersectsWithRect(monster:GetCollisionRect()) then\n\t\t\tsolveCollision(object, monster)\n\t\tend\n\tend", "CodeBleu_score": 28.609770399244816}]}
{"instance_id": "f8915bebdc0e", "generation_result": [{"code": "function collisionDetect(dt)\n\t\tfor i=#HeroManager,1,-1 do\n\t\tif HeroManager[i]:isAlive() then\n\t\t\tcollision(HeroManager[i], MonsterManager)\n\t\t\tisOutOfBound(HeroManager[i])\n\t\telse\n\t\t\tHeroManager:remove(HeroManager[i])\n\t\tend\n\tend\n\n\tfor i=#MonsterManager,1,-1 do\n\t\tif MonsterManager[i]:isAlive() then\n\t\t\tcollision(MonsterManager[i], HeroManager)\n\t\t\tisOutOfBound(MonsterManager[i])\n\t\telse\n\t\t\tMonsterManager:remove(MonsterManager[i])\n\t\tend\n\tend", "CodeBleu_score": 26.964676750832687}, {"code": "function collisionDetect(dt)\n\t\tfor i=#HeroManager,1,-1 do\n\t\tif HeroManager[i]:isAlive() then\n\t\t\tfor j=#MonsterManager,1,-1 do\n\t\t\t\tif MonsterManager[j]:isAlive() then\n\t\t\t\t\tif collision(HeroManager[i], MonsterManager[j]) then\n\t\t\t\t\t\tHeroManager[i]:update(dt)\n\t\t\t\t\t\tMonsterManager[j]:update(dt)\n\t\t\t\t\t\tif HeroManager[i]:isAlive() then\n\t\t\t\t\t\t\tHeroManager[i]:attack(MonsterManager[j])\n\t\t\t\t\t\tend\n\t\t\t\t\t\tif MonsterManager[j]:isAlive() then\n\t\t\t\t\t\t\tMonsterManager[j]:attack(HeroManager[i])\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tMonsterManager:remove(MonsterManager[j])\n\t\t\t\tend\n\t\t\tend\n\t\t\tif collision(HeroManager[i], Boundary) then\n\t\t\t\tHeroManager[i]:update(dt)\n\t\t\t\tHeroManager[i]:isOutOfBound()\n\t\t\tend\n\t\telse\n\t\t\tHeroManager:remove(HeroManager[i])\n\t\tend\n\tend\n\tfor i=#MonsterManager,1,-1 do\n\t\tif MonsterManager[i]:isAlive() then\n\t\t\tif collision(MonsterManager[i], Boundary) then\n\t\t\t\tMonsterManager[i]:update(dt)\n\t\t\t\tMonsterManager[i]:isOutOfBound()\n\t\t\tend\n\t\telse\n\t\t\tMonsterManager:remove(MonsterManager[i])\n\t\tend\n\tend", "CodeBleu_score": 32.80566391897549}, {"code": "function collisionDetect(dt)\n\t\tfor i=#HeroManager,1,-1 do\n\t\tif HeroManager[i].isAlive then\n\t\t\tcollision(HeroManager[i],dt)\n\t\t\tif isOutOfBound(HeroManager[i]) then\n\t\t\t\tHeroManager[i].isAlive = false\n\t\t\tend\n\t\tend\n\tend\n\tfor i=#MonsterManager,1,-1 do\n\t\tif MonsterManager[i].isAlive then\n\t\t\tcollision(MonsterManager[i],dt)\n\t\t\tif isOutOfBound(MonsterManager[i]) then\n\t\t\t\tMonsterManager[i].isAlive = false\n\t\t\tend\n\t\tend\n\tend\n\tfor i=#BulletManager,1,-1 do\n\t\tif BulletManager[i].isAlive then\n\t\t\tcollision(BulletManager[i],dt)\n\t\t\tif isOutOfBound(BulletManager[i]) then\n\t\t\t\tBulletManager[i].isAlive = false\n\t\t\tend\n\t\tend\n\tend", "CodeBleu_score": 25.8368464669823}]}
{"instance_id": "fc081bb122f5", "generation_result": [{"code": "function Actor:specialAttack()\n\t\tlocal attackCollider = BasicCollider.create(self.x, self.y, self.width, self.height, self.attack.damage, self.attack.knockback, self.attack.stun)\n\tattackCollider.attack = self.attack\n\tattackCollider.attack.attacker = self\n\tattackCollider.attack.attacker.attacking = true\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimer = self.attack.attackTime\n\tattackCollider.attack.attacker.attackingTimerMax = self.attack.attack", "CodeBleu_score": 38.272978503863996}, {"code": "function Actor:specialAttack()\n\t\tlocal collider = BasicCollider.create(self.position, self.facingDirection, self.specialAttackProperties)\n\tself.specialAttackCollider = collider\n\tself:specialAttackSoundEffects()", "CodeBleu_score": 45.29124648593957}, {"code": "function Actor:specialAttack()\n\t\tlocal specialAttackCollider = BasicCollider.create(self.x, self.y, self.facingDirection, self.specialAttackProperties)\n\tself:specialAttackSoundEffects()", "CodeBleu_score": 56.23113626672929}]}
{"instance_id": "bfc98809aacb", "generation_result": [{"code": "function Slime:angryFace(trueFalse)\n\t\tif self._angryFace ~= trueFalse then\n\t\tself._angryFace = trueFalse\n\t\tself._sprite3d:setTexture(self._angryFace and self._angryTexture or self._normalTexture)\n\tend", "CodeBleu_score": 46.177954783533124}, {"code": "function Slime:angryFace(trueFalse)\n\t\tif (trueFalse) then\n\t\tif (self._state ~= \"angry\") then\n\t\t\tself._state = \"angry\"\n\t\t\tself._sprite3d:setTexture(\"slime_angry.png\")\n\t\tend\n\telse\n\t\tif (self._state ~= \"normal\") then\n\t\t\tself._state = \"normal\"\n\t\t\tself._sprite3d:setTexture(\"slime.png\")\n\t\tend\n\tend", "CodeBleu_score": 47.552112467262965}, {"code": "function Slime:angryFace(trueFalse)\n\t\tif self._angry == trueFalse then return end\n\tself._angry = trueFalse\n\tself._sprite3d:setTexture(self._angry and self._angryTexture or self._texture)", "CodeBleu_score": 35.49693263616204}]}
{"instance_id": "546a0b8fb77b", "generation_result": [{"code": "override fun getCharPixmap(char: Char): Pixmap{\n\t\tval metric = getMetrics()  // Use our interpretation instead of paint.fontMetrics because it fixes some bad metrics\n\tvar width = paint.measureText(char.toString()).toInt()\n\tvar height = ceil(metric.height).toInt()\n\tif (width == 0) {\n\t\theight = getFontSize()\n\t\twidth = height\n\t}\n\n\tval bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)\n\tval canvas = Canvas(bitmap)\n\tcanvas.drawText(char.toString(), 0f, metric.leading + metric.ascent + 1f, paint)\n\n\tval pixmap = Pixmap(width, height, Pixmap.Format.RGBA8888)\n\tval data = IntArray(width * height)\n\tbitmap.getPixels(data, 0, width, 0, 0, width, height) // faster than bitmap[x, y]\n\tfor (x in 0 until width) {\n\t\tfor (y in 0 until height) {\n\t\t\tpixmap.drawPixel(x, y, Integer.rotateLeft(data[x + (y * width)], 8))\n\t\t}\n\t}\n\tbitmap.recycle()\n\treturn pixmap\n}", "CodeBleu_score": 85.24847800398743}, {"code": "override fun getCharPixmap(char: Char): Pixmap{\n\t\tval metric = getMetrics()  // Use our interpretation instead of paint.fontMetrics because it fixes some bad metrics\n\tvar width = paint.measureText(char.toString()).toInt()\n\tvar height = ceil(metric.height).toInt()\n\tif (width == 0) {\n\t\theight = getFontSize()\n\t\twidth = height\n\t}\n\n\tval bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)\n\tval canvas = Canvas(bitmap)\n\tcanvas.drawText(char.toString(), 0f, metric.leading + metric.ascent + 1f, paint)\n\n\tval pixmap = Pixmap(width, height, Pixmap.Format.RGBA8888)\n\tval data = IntArray(width * height)\n\tbitmap.getPixels(data, 0, width, 0, 0, width, height) // faster than bitmap[x, y]\n\tfor (x in 0 until width) {\n\t\tfor (y in 0 until height) {\n\t\t\tpixmap.drawPixel(x, y, Integer.rotateLeft(data[x + (y * width)], 8))\n\t\t}\n\t}\n\tbitmap.recycle()\n\treturn pixmap\n}", "CodeBleu_score": 85.24847800398743}, {"code": "override fun getCharPixmap(char: Char): Pixmap{\n\tval metric = getMetrics()  // Use our interpretation instead of paint.fontMetrics because it fixes some bad metrics\nvar width = paint.measureText(char.toString()).toInt()\nvar height = ceil(metric.height).toInt()\nif (width == 0) {\nheight = getFontSize()\nwidth = height\n}\n\nval bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)\nval canvas = Canvas(bitmap)\ncanvas.drawText(char.toString(), 0f, metric.leading + metric.ascent + 1f, paint)\n\nval pixmap = Pixmap(width, height, Pixmap.Format.RGBA8888)\nval data = IntArray(width * height)\nbitmap.getPixels(data, 0, width, 0, 0, width, height) // faster than bitmap[x, y]\nfor (x in 0 until width) {\nfor (y in 0 until height) {\npixmap.drawPixel(x, y, Integer.rotateLeft(data[x + (y * width)], 8))\n}\n}\nbitmap.recycle()\nreturn pixmap\n}", "CodeBleu_score": 85.1719151294859}]}
{"instance_id": "9c1ce2567ce1", "generation_result": [{"code": " override fun saveGame(\n        data: String,\n        suggestedLocation: String,\n        onSaved: (location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t\n// When we loaded, we returned a \"content://\" URI as file location.\n        val suggestedUri = Uri.parse(suggestedLocation)\n        val fileName = getFilename(suggestedUri, suggestedLocation)\n\n        val onFileChosen = { uri: Uri ->\n            var stream: OutputStream? = null\n            try {\n                stream = contentResolver.openOutputStream(uri, \"rwt\")\n                stream!!.writer().use { it.write(data) }\n                onSaved(uri.toString())\n            } catch (ex: Exception) {\n                onError(ex)\n            } finally {\n                stream?.close()\n            }\n        }\n\n        requests[requestCode] = Request(onFileChosen, onError)\n        openSaveFileChooser(fileName, suggestedUri, requestCode)\n        requestCode += 1\n    }", "CodeBleu_score": 96.20868685899666}, {"code": " override fun saveGame(\n        data: String,\n        suggestedLocation: String,\n        onSaved: (location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t\n// When we loaded, we returned a \"content://\" URI as file location.\n        val suggestedUri = Uri.parse(suggestedLocation)\n        val fileName = getFilename(suggestedUri, suggestedLocation)\n\n        val onFileChosen = { uri: Uri ->\n            var stream: OutputStream? = null\n            try {\n                stream = contentResolver.openOutputStream(uri, \"rwt\")\n                stream!!.writer().use { it.write(data) }\n                onSaved(uri.toString())\n            } catch (ex: Exception) {\n                onError(ex)\n            } finally {\n                stream?.close()\n            }\n        }\n\n        requests[requestCode] = Request(onFileChosen, onError)\n        openSaveFileChooser(fileName, suggestedUri, requestCode)\n        requestCode += 1\n    }", "CodeBleu_score": 96.20868685899666}, {"code": " override fun saveGame(\n        data: String,\n        suggestedLocation: String,\n        onSaved: (location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t\n// When we loaded, we returned a \"content://\" URI as file location.\nval suggestedUri = Uri.parse(suggestedLocation)\nval fileName = getFilename(suggestedUri, suggestedLocation)\n\nval onFileChosen = { uri: Uri ->\nvar stream: OutputStream? = null\ntry {\nstream = contentResolver.openOutputStream(uri, \"rwt\")\nstream!!.writer().use { it.write(data) }\nonSaved(uri.toString())\n} catch (ex: Exception) {\nonError(ex)\n} finally {\nstream?.close()\n}\n}\n\nrequests[requestCode] = Request(onFileChosen, onError)\nopenSaveFileChooser(fileName, suggestedUri, requestCode)\nrequestCode += 1\n}", "CodeBleu_score": 93.08680962566996}]}
{"instance_id": "ea556fe12030", "generation_result": [{"code": "override fun loadGame(\n        onLoaded: (data: String, location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t\nval onFileChosen = {uri: Uri ->\n    var stream: InputStream? = null\n    try {\n        stream = contentResolver.openInputStream(uri)\n        val text = stream!!.reader().use { it.readText() }\n        onLoaded(text, uri.toString())\n    } catch (ex: Exception) {\n        onError(ex)\n    } finally {\n        stream?.close()\n    }\n}\n\nrequests[requestCode] = Request(onFileChosen, onError)\nopenLoadFileChooser(requestCode)\nrequestCode += 1\n}", "CodeBleu_score": 96.13557236804078}, {"code": "override fun loadGame(\n        onLoaded: (data: String, location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t\n//        val onFileChosen = {uri: Uri ->\n//            var stream: InputStream? = null\n//            try {\n//                stream = contentResolver.openInputStream(uri)\n//                val text = stream!!.reader().use { it.readText() }\n//                onLoaded(text, uri.toString())\n//            } catch (ex: Exception) {\n//                onError(ex)\n//            } finally {\n//                stream?.close()\n//            }\n//        }\n//\n//        requests[requestCode] = Request(onFileChosen, onError)\n//        openLoadFileChooser(requestCode)\n//        requestCode += 1\n\n        val onFileChosen = {uri: Uri ->\n            var stream: InputStream? = null\n            try {\n                stream = contentResolver.openInputStream(uri)\n                val text = stream!!.reader().use { it.readText() }\n                onLoaded(text, uri.toString())\n            } catch (ex: Exception) {\n                onError(ex)\n            } finally {\n                stream?.close()\n            }\n        }\n\n        requests[requestCode] = Request(onFileChosen, onError)\n        openLoadFileChooser(requestCode)\n        requestCode += 1\n    }", "CodeBleu_score": 96.03406591579981}, {"code": "override fun loadGame(\n        onLoaded: (data: String, location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t\n//        val onFileChosen = {uri: Uri ->\n//            var stream: InputStream? = null\n//            try {\n//                stream = contentResolver.openInputStream(uri)\n//                val text = stream!!.reader().use { it.readText() }\n//                onLoaded(text, uri.toString())\n//            } catch (ex: Exception) {\n//                onError(ex)\n//            } finally {\n//                stream?.close()\n//            }\n//        }\n//\n//        requests[requestCode] = Request(onFileChosen, onError)\n//        openLoadFileChooser(requestCode)\n//        requestCode += 1\n    }", "CodeBleu_score": 19.45536830701614}]}
{"instance_id": "813990d9bb4d", "generation_result": [{"code": "private fun openSaveFileChooser(fileName: String, uri: Uri, requestCode: Int){\n\tval intent = Intent(Intent.ACTION_CREATE_DOCUMENT)\nintent.type = \"application/json\"\nintent.putExtra(Intent.EXTRA_TITLE, fileName)\nif (uri.scheme == \"content\")\nintent.putExtra(DocumentsContract.EXTRA_INITIAL_URI, uri)\nactivity.startActivityForResult(intent, requestCode)\n}", "CodeBleu_score": 96.75518805287992}, {"code": "private fun openSaveFileChooser(fileName: String, uri: Uri, requestCode: Int){\n\tval intent = Intent(Intent.ACTION_CREATE_DOCUMENT)\nintent.type = \"application/json\"\nintent.putExtra(Intent.EXTRA_TITLE, fileName)\nif (uri.scheme == \"content\")\nintent.putExtra(DocumentsContract.EXTRA_INITIAL_URI, uri)\nactivity.startActivityForResult(intent, requestCode)\n}", "CodeBleu_score": 96.75518805287992}, {"code": "private fun openSaveFileChooser(fileName: String, uri: Uri, requestCode: Int){\n\t\tval intent = Intent(Intent.ACTION_CREATE_DOCUMENT)\n\tintent.type = \"application/json\"\n\tintent.putExtra(Intent.EXTRA_TITLE, fileName)\n\tif (uri.scheme == \"content\")\n\t\tintent.putExtra(DocumentsContract.EXTRA_INITIAL_URI, uri)\n\tactivity.startActivityForResult(intent, requestCode)\n}", "CodeBleu_score": 96.80076040995861}]}
{"instance_id": "a423b39ba6fe", "generation_result": [{"code": "fun createNotificationChannelInfo(appContext: Context){\n\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) return\nval name = appContext.resources.getString(R.string.Notify_ChannelInfo_Short)\nval descriptionText = appContext.resources.getString(R.string.Notify_ChannelInfo_Long)\nval importance = NotificationManager.IMPORTANCE_HIGH\nval mChannel = NotificationChannel(NOTIFICATION_CHANNEL_ID_INFO, name, importance)\nmChannel.description = descriptionText\nmChannel.setShowBadge(true)\nmChannel.lockscreenVisibility = NotificationCompat.VISIBILITY_PUBLIC\n\nval notificationManager = appContext.getSystemService(AndroidApplication.NOTIFICATION_SERVICE) as NotificationManager\nnotificationManager.createNotificationChannel(mChannel)\n}", "CodeBleu_score": 97.99820659160187}, {"code": "fun createNotificationChannelInfo(appContext: Context){\n\t\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) return\n\tval name = appContext.resources.getString(R.string.Notify_ChannelInfo_Short)\n\tval descriptionText = appContext.resources.getString(R.string.Notify_ChannelInfo_Long)\n\tval importance = NotificationManager.IMPORTANCE_HIGH\n\tval mChannel = NotificationChannel(NOTIFICATION_CHANNEL_ID_INFO, name, importance)\n\tmChannel.description = descriptionText\n\tmChannel.setShowBadge(true)\n\tmChannel.lockscreenVisibility = NotificationCompat.VISIBILITY_PUBLIC\n\n\tval notificationManager = appContext.getSystemService(AndroidApplication.NOTIFICATION_SERVICE) as NotificationManager\n\tnotificationManager.createNotificationChannel(mChannel)\n}", "CodeBleu_score": 98.01503316791309}, {"code": "fun createNotificationChannelInfo(appContext: Context){\n\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) return\nval name = appContext.resources.getString(R.string.Notify_ChannelInfo_Short)\nval descriptionText = appContext.resources.getString(R.string.Notify_ChannelInfo_Long)\nval importance = NotificationManager.IMPORTANCE_HIGH\nval mChannel = NotificationChannel(NOTIFICATION_CHANNEL_ID_INFO, name, importance)\nmChannel.description = descriptionText\nmChannel.setShowBadge(true)\nmChannel.lockscreenVisibility = NotificationCompat.VISIBILITY_PUBLIC\n\nval notificationManager = appContext.getSystemService(AndroidApplication.NOTIFICATION_SERVICE) as NotificationManager\nnotificationManager.createNotificationChannel(mChannel)\n}", "CodeBleu_score": 97.99820659160187}]}
{"instance_id": "4f3e7f77a567", "generation_result": [{"code": "fun packImages(workingPath: String){\n\t//        val defaultSettings = getDefaultSettings()\n//        packImagesPerMod(workingPath, \"$workingPath/assets/\", defaultSettings)\n//        val modDirectory = File(\"mods\")\n//        if (!modDirectory.exists())\n//            return\n//        for (mod in modDirectory.listFiles()!!) {\n//            if (mod.isHidden)\n//                continue\n//            try {\n//                packImagesPerMod(mod.path, mod.path, defaultSettings)\n//            } catch (ex: Throwable) {\n//                ex.printStackTrace()\n//            }\n//        }\n    packImagesPerMod(workingPath, \"$workingPath/assets/\", getDefaultSettings())\n}", "CodeBleu_score": 6.811855415811364}, {"code": "fun packImages(workingPath: String){\n\t\tpackImagesPerMod(workingPath, \"$workingPath/assets/\", getDefaultSettings())\n\tval modDirectory = File(\"mods\")\n\tif (!modDirectory.exists())\n\t\treturn\n\tfor (mod in modDirectory.listFiles()!!) {\n\t\tif (mod.isHidden)\n\t\t\tcontinue\n\t\ttry {\n\t\t\tpackImagesPerMod(mod.path, mod.path, getDefaultSettings())\n\t\t} catch (ex: Throwable) {\n\t\t\tex.printStackTrace()\n\t\t}\n\t}\n}", "CodeBleu_score": 74.02665413616121}, {"code": "fun packImages(workingPath: String){\n\t//    val defaultSettings = getDefaultSettings()\n    packImagesPerMod(workingPath, \"$workingPath/assets/\", getDefaultSettings())\n    val modDirectory = File(\"mods\")\n    if (!modDirectory.exists())\n        return\n    for (mod in modDirectory.listFiles()!!) {\n        if (mod.isHidden)\n            continue\n        try {\n            packImagesPerMod(mod.path, mod.path, getDefaultSettings())\n        } catch (ex: Throwable) {\n            ex.printStackTrace()\n        }\n    }\n}", "CodeBleu_score": 80.76189389958934}]}
{"instance_id": "206dbb3c21eb", "generation_result": [{"code": "suspend fun reloadWorldscreen(){\n\tthThreadPoolContext {\n\t\tval worldScreen = worldScreen?: throw UncivShowableException(\"No world screen available\")\n\t\tworldScreen.dispose()\n\t\tloadGame(gameInfo!!, AutoPlay(settings.autoPlay))\n\t}\n}", "CodeBleu_score": 28.2656490638279}, {"code": "suspend fun reloadWorldscreen(){\n\t   val workingPath = settings.workingPath\n//    val worldScreen = loadGame(GameInfo(gameId = \"0\"))\n//    worldScreen.packImages(workingPath)\n//    worldScreen.dispose()\n//    loadGame(GameInfo(gameId = \"0\"))\n}", "CodeBleu_score": 8.750868355600822}, {"code": "suspend fun reloadWorldscreen(){\n\tl worldScreen = worldScreen?: return\n\tworldScreen.dispose()\n\tloadGame(gameInfo!!)\n}", "CodeBleu_score": 24.097871061511352}]}
{"instance_id": "2d8fdcb5ad6f", "generation_result": [{"code": "fun goToMainMenu(): MainMenuScreen{\n\t (screenStack.isNotEmpty()) {\n\t\tscreenStack.removeLast()\n\t}\n\treturn MainMenuScreen()\n}", "CodeBleu_score": 7.490359668522868}, {"code": "fun goToMainMenu(): MainMenuScreen{\n\tl screen = MainMenuScreen()\n\tpushScreen(screen)\n\treturn screen\n}", "CodeBleu_score": 23.76389177068204}, {"code": "fun goToMainMenu(): MainMenuScreen{\n\t", "CodeBleu_score": 1.6510664568825009}]}
{"instance_id": "df60142d384c", "generation_result": [{"code": " protected fun setWindowedMode(settings: GameSettings): Boolean{\n\t// Calling AWT after Gdx is fully initialized seems icky, but seems to have no side effects\n// Found no equivalent in Gdx - available _desktop_ surface without taskbars etc\n// *for the primary monitor* - no saving window sizes that span over several monitors\nval maximumWindowBounds = getMaximumWindowBounds()\n\n// Make sure an inappropriate saved size doesn't make the window unusable\nval (width, height) = settings.windowState.coerceIn(maximumWindowBounds)\n\n// Kludge - see also DesktopLauncher - without, moving the window might revert to the size stored in config\n(Lwjgl3Application::class.java).getDeclaredField(\"config\").run {\nisAccessible = true\nget(Gdx.app) as Lwjgl3ApplicationConfiguration\n}.setWindowedMode(width, height)\n\nGdx.graphics.setWindowedMode(width, height)\n\nreturn width == maximumWindowBounds.width && height == maximumWindowBounds.height\n}", "CodeBleu_score": 97.07133990723558}, {"code": " protected fun setWindowedMode(settings: GameSettings): Boolean{\n\t// Calling AWT after Gdx is fully initialized seems icky, but seems to have no side effects\n// Found no equivalent in Gdx - available _desktop_ surface without taskbars etc\n// *for the primary monitor* - no saving window sizes that span over several monitors\nval maximumWindowBounds = getMaximumWindowBounds()\n\n// Make sure an inappropriate saved size doesn't make the window unusable\nval (width, height) = settings.windowState.coerceIn(maximumWindowBounds)\n\n// Kludge - see also DesktopLauncher - without, moving the window might revert to the size stored in config\n(Lwjgl3Application::class.java).getDeclaredField(\"config\").run {\n    isAccessible = true\n    get(Gdx.app) as Lwjgl3ApplicationConfiguration\n}.setWindowedMode(width, height)\n\nGdx.graphics.setWindowedMode(width, height)\n\nreturn width == maximumWindowBounds.width && height == maximumWindowBounds.height\n}", "CodeBleu_score": 97.7092336475477}, {"code": " protected fun setWindowedMode(settings: GameSettings): Boolean{\n\t// Calling AWT after Gdx is fully initialized seems icky, but seems to have no side effects\n// Found no equivalent in Gdx - available _desktop_ surface without taskbars etc\n// *for the primary monitor* - no saving window sizes that span over several monitors\nval maximumWindowBounds = getMaximumWindowBounds()\n\n// Make sure an inappropriate saved size doesn't make the window unusable\nval (width, height) = settings.windowState.coerceIn(maximumWindowBounds)\n\n// Kludge - see also DesktopLauncher - without, moving the window might revert to the size stored in config\n(Lwjgl3Application::class.java).getDeclaredField(\"config\").run {\nisAccessible = true\nget(Gdx.app) as Lwjgl3ApplicationConfiguration\n}.setWindowedMode(width, height)\n\nGdx.graphics.setWindowedMode(width, height)\n\nreturn width == maximumWindowBounds.width && height == maximumWindowBounds.height\n}", "CodeBleu_score": 97.07133990723558}]}
{"instance_id": "a8b17234c4e5", "generation_result": [{"code": "private fun getLinuxDistro(): String{\n\tRelease: Map<String, String> = try {\n\t\tFileHandle(\"/etc/os-release\")\n\t\t\t.readString()\n\t\t\t.split('\n')\n\t\t\t.map { it.split('=') }\n\t\t\t.filter { it.size == 2 }\n\t\t\t.associate { it[0] to it[1].removeSuffix(\"\\\"\").removePrefix(\"\\\"\") }\n\t} catch (_: Throwable) {\n\t\tmapOf()\n\t}\n\tif (\"NAME\"!in osRelease) return \"\"\n\treturn osRelease[\"PRETTY_NAME\"]?: \"${osRelease[\"NAME\"]} ${osRelease[\"VERSION\"]}\"\n}", "CodeBleu_score": 80.78791084698142}, {"code": "private fun getLinuxDistro(): String{\n\tRelease = try {\n\t\tFileHandle(\"/etc/os-release\").readString().split('\n').map { it.split('=') }.filter { it.size == 2 }.associate { it[0] to it[1].removeSuffix(\"\\\"\").removePrefix(\"\\\"\") }\n\t} catch (_: Throwable) {\n\t\tmapOf()\n\t}\n\tif (\"NAME\"!in osRelease) return \"\"\n\treturn osRelease[\"PRETTY_NAME\"]?: \"${osRelease[\"NAME\"]} ${osRelease[\"VERSION\"]}\"\n}", "CodeBleu_score": 66.55375230331703}, {"code": "private fun getLinuxDistro(): String{\n\tRelease = try {\n\t\tFileHandle(\"/etc/os-release\").readString().split('\n').map { it.split('=') }.filter { it.size == 2 }.associate { it[0] to it[1].removeSuffix(\"\\\"\").removePrefix(\"\\\"\") }\n\t} catch (_: Throwable) {\n\t\tmapOf()\n\t}\n\tif (\"NAME\"!in osRelease) return \"\"\n\treturn osRelease[\"PRETTY_NAME\"]?: \"${osRelease[\"NAME\"]} ${osRelease[\"VERSION\"]}\"\n}", "CodeBleu_score": 66.55375230331703}]}
{"instance_id": "36a1d2e56540", "generation_result": [{"code": "private fun flashWindow(){\n\t\ttry {\n\t\t// Get the window handle for the application window\n\t\tval windowHandle = getWindowHandle()\n\t\tif (windowHandle == null) {\n\t\t\t// If the window handle is null, the application window is not currently open\n\t\t\treturn\n\t\t}\n\n\t\t// Flash the application window to notify the user\n\t\tif (isWindows) {\n\t\t\t// On Windows, use the FlashWindowEx API\n\t\t\tval flashInfo = FlashInfo(0)\n\t\t\tflashInfo.cbSize = FlashInfo.sizeOf()\n\t\t\tflashInfo.dwFlags = FLASHW_ALL\n\t\t\tflashInfo.uCount = 3\n\t\t\tflashInfo.dwTimeout = 0\n\t\t\tFlashWindowEx(flashInfo, windowHandle)\n\t\t} else if (isMac) {\n\t\t\t// On macOS, use the NSBeep API\n\t\t\tNSBeep()\n\t\t} else if (isLinux) {\n\t\t\t// On Linux, use the XBell API\n\t\t\tXBell(null, 0)\n\t\t} else {\n\t\t\t// On other platforms, use the beep API\n\t\t\tbeep()\n\t\t}\n\t} catch (e: Throwable) {\n\t\t// Catch any errors and log them without interrupting execution\n\t\tlogger.error(\"Error flashing application window\", e)\n\t}\n}", "CodeBleu_score": 49.93945068129698}, {"code": "private fun flashWindow(){\n\t\ttry {\n\t\tif (System.getProperty(\"os.name\").contains(\"Windows\")) {\n\t\t\tval hwnd = findWindow(null, windowTitle)\n\t\t\tif (hwnd!= 0) {\n\t\t\t\tflashWindow(hwnd)\n\t\t\t}\n\t\t} else if (System.getProperty(\"os.name\").contains(\"Mac\")) {\n\t\t\tval app = NSRunningApplication.currentApplication()\n\t\t\tapp.activate(true)\n\t\t} else if (System.getProperty(\"os.name\").contains(\"Linux\")) {\n\t\t\tval wm = Toolkit.getDefaultToolkit().getSystemTray()\n\t\t\twm.beep()\n\t\t}\n\t} catch (e: Exception) {\n\t\tlogger.error(\"Error flashing window\", e)\n\t}\n}", "CodeBleu_score": 48.17754085486744}, {"code": "private fun flashWindow(){\n\t\ttry {\n\t\tif (SystemUtils.IS_OS_WINDOWS) {\n\t\t\tval hwnd = Window.getHandle()\n\t\t\tUser32.INSTANCE.FlashWindow(hwnd, true)\n\t\t} else if (SystemUtils.IS_OS_MAC) {\n\t\t\t// TODO: Implement flashing for macOS\n\t\t} else if (SystemUtils.IS_OS_LINUX) {\n\t\t\t// TODO: Implement flashing for Linux\n\t\t}\n\t} catch (e: Throwable) {\n\t\tlogger.error(\"Error flashing window\", e)\n\t}\n}", "CodeBleu_score": 35.348154613861546}]}
{"instance_id": "8e3c7096415a", "generation_result": [{"code": "public void onFullBackup(FullBackupDataOutput data){\n\ttry {\n\t\t// Backup the shared preferences file\n\t\tSharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);\n\t\tFile prefsFile = getFile(getFilesDir(), \"preferences.xml\");\n\t\tif (prefsFile!= null) {\n\t\t\tdata.writeEntity(prefs, prefsFile);\n\t\t}\n\n\t\t// Backup the game data files\n\t\tFile rankingsFile = getFile(getFilesDir(), \"rankings.xml\");\n\t\tFile badgesFile = getFile(getFilesDir(), \"badges.xml\");\n\t\tFile journalFile = getFile(getFilesDir(), \"journal.xml\");\n\t\tif (rankingsFile!= null) {\n\t\t\tdata.writeEntity(rankings, rankingsFile);\n\t\t}\n\t\tif (badgesFile!= null) {\n\t\t\tdata.writeEntity(badges, badgesFile);\n\t\t}\n\t\tif (journalFile!= null) {\n\t\t\tdata.writeEntity(journal, journalFile);\n\t\t}\n\t} catch (IOException e) {\n\t\te.printStackTrace();\n\t}\n}", "CodeBleu_score": 28.191576726271673}, {"code": "public void onFullBackup(FullBackupDataOutput data){\n\t//Backup shared preferences\n\tFile sharedPrefFile = getFile(mPrefsDir, SHARED_PREFS_FILE);\n\tif (sharedPrefFile!= null) {\n\t\tdata.writeEntity(sharedPrefFile);\n\t}\n\n\t//Backup rankings\n\tFile rankingsFile = getFile(mRankingsDir, RANKINGS_FILE);\n\tif (rankingsFile!= null) {\n\t\tdata.writeEntity(rankingsFile);\n\t}\n\n\t//Backup badges\n\tFile badgesFile = getFile(mBadgesDir, BADGES_FILE);\n\tif (badgesFile!= null) {\n\t\tdata.writeEntity(badgesFile);\n\t}\n\n\t//Backup journal entries\n\tFile journalFile = getFile(mJournalDir, JOURNAL_FILE);\n\tif (journalFile!= null) {\n\t\tdata.writeEntity(journalFile);\n\t}\n}", "CodeBleu_score": 24.847075132359354}, {"code": "public void onFullBackup(FullBackupDataOutput data){\n\t", "CodeBleu_score": 1.3013707544357997}]}
{"instance_id": "583999724a15", "generation_result": [{"code": "public boolean connectedToUnmeteredNetwork(){\n\t\tConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\tNetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo();\n\tif (activeNetwork!= null) {\n\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n\t\t\treturn!activeNetwork.isRoaming() &&!activeNetwork.isMetered();\n\t\t} else {\n\t\t\treturn activeNetwork.getType() == ConnectivityManager.TYPE_WIFI || activeNetwork.getType() == ConnectivityManager.TYPE_WIMAX || activeNetwork.getType() == ConnectivityManager.TYPE_BLUETOOTH || activeNetwork.getType() == ConnectivityManager.TYPE_ETHERNET;\n\t\t}\n\t}\n\treturn false;\n}", "CodeBleu_score": 62.84938332637291}, {"code": "public boolean connectedToUnmeteredNetwork(){\n\t\tConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\tNetworkInfo activeNetwork = cm.getActiveNetworkInfo();\n\tif (activeNetwork!= null) { // connected to the internet\n\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n\t\t\treturn!activeNetwork.isMetered();\n\t\t} else {\n\t\t\treturn activeNetwork.getType() == ConnectivityManager.TYPE_WIFI\n\t\t\t\t\t|| activeNetwork.getType() == ConnectivityManager.TYPE_WIMAX\n\t\t\t\t\t|| activeNetwork.getType() == ConnectivityManager.TYPE_BLUETOOTH\n\t\t\t\t\t|| activeNetwork.getType() == ConnectivityManager.TYPE_ETHERNET;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 64.59280217272418}, {"code": "public boolean connectedToUnmeteredNetwork(){\n\t\tConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n\t\treturn!cm.isActiveNetworkMetered();\n\t} else {\n\t\tNetworkInfo networkInfo = cm.getActiveNetworkInfo();\n\t\tif (networkInfo!= null && networkInfo.isConnected()) {\n\t\t\tswitch (networkInfo.getType()) {\n\t\t\t\tcase ConnectivityManager.TYPE_WIFI:\n\t\t\t\tcase ConnectivityManager.TYPE_WIMAX:\n\t\t\t\tcase ConnectivityManager.TYPE_BLUETOOTH:\n\t\t\t\tcase ConnectivityManager.TYPE_ETHERNET:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}", "CodeBleu_score": 48.929248731132304}]}
{"instance_id": "f8bd6cd4826b", "generation_result": [{"code": "protected boolean affectHero( Hero hero ){\n\t\tif(!isAlive() ) {\n\t\treturn false;\n\t}\n\thero.restoreHealth();\n\tif( hero.getAilment()!= null ) {\n\t\thero.getAilment().cure();\n\t}\n\tif( hero.getEquipped()!= null ) {\n\t\thero.getEquipped().uncurseEquipped();\n\t}\n\thero.satisfy();\n\thero.restoreHealth();\n\tif( showStatusWithIcon ) {\n\t\thero.play();\n\t\thero.showStatus();\n\t}\n\tinterrupt();\n\tlog( \"You feel better!\" );\n\treturn true;\n}", "CodeBleu_score": 21.640329173622902}, {"code": "protected boolean affectHero( Hero hero ){\n\t\t// Play sound\n\tif (!hero.isAlive() ) {\n\t\tAudioPlayer.playSound( \"sounds/hero/die.wav\" );\n\t} else {\n\t\tAudioPlayer.playSound( \"sounds/hero/heal.wav\" );\n\t}\n\n\t// Cure any ailments\n\tif ( hero.isPoisoned() ) {\n\t\thero.setPoisoned( false );\n\t}\n\tif ( hero.isParalyzed() ) {\n\t\thero.setParalyzed( false );\n\t}\n\tif ( hero.isBlind() ) {\n\t\thero.setBlind( false );\n\t}\n\n\t// Remove curses from equipped items\n\tif ( hero.getWeapon()!= null ) {\n\t\thero.getWeapon().uncurseEquipped();\n\t}\n\tif ( hero.getArmor()!= null ) {\n\t\thero.getArmor().uncurseEquipped();\n\t}\n\n\t// Satisfy the hero's hunger\n\tif ( hero.getHunger() > 0 ) {\n\t\thero.setHunger( hero.getHunger() - 1 );\n\t}\n\n\t// Restore health\n\tif ( hero.getHealth() < hero.getMaxHealth() ) {\n\t\thero.setHealth( hero.getHealth() + 1 );\n\t}\n\n\t// Display visual effects\n\tif ( hero.isAlive() ) {\n\t\tshowStatusWithIcon( \"You feel better!\" );\n\t} else {\n\t\tshowStatusWithIcon( \"You are dead!\" );\n\t}\n\n\t// Interrupt the hero's current action\n\tinterrupt();\n\n\t// Log a message\n\tlog( hero.getName() + \" is healed.\" );\n\n\treturn true;\n}", "CodeBleu_score": 32.65579675028314}, {"code": "protected boolean affectHero( Hero hero ){\n\t\tif(!isAlive() ) {\n\t\treturn false;\n\t}\n\thero.restoreHealth();\n\tif( hero.hasAilment() ) {\n\t\thero.cure();\n\t}\n\tif( hero.hasEquipped() ) {\n\t\thero.uncurseEquipped();\n\t}\n\thero.satisfy();\n\tif( hero.isAlive() ) {\n\t\thero.restoreHealth();\n\t}\n\thero.showStatusWithIcon();\n\thero.interrupt();\n\thero.log( \"The \" + toString() + \" is over.\" );\n\treturn true;\n}", "CodeBleu_score": 19.218312590438252}]}
{"instance_id": "3a94f2e84c83", "generation_result": [{"code": "protected Item affectItem( Item item, int pos ){\n\t\tif ( item == null ) {\n\t\treturn null;\n\t}\n\tif ( item instanceof Waterskin ) {\n\t\tWaterskin waterskin = (Waterskin) item;\n\t\tif ( waterskin.isFull() ) {\n\t\t\treturn null;\n\t\t}\n\t\twaterskin.fill();\n\t\treturn waterskin;\n\t}\n\tif ( item instanceof Ankh ) {\n\t\tAnkh ankh = (Ankh) item;\n\t\tif ( ankh.isBlessed() ) {\n\t\t\treturn null;\n\t\t}\n\t\tankh.bless();\n\t\treturn ankh;\n\t}\n\tif ( item instanceof Curse ) {\n\t\tCurse curse = (Curse) item;\n\t\tif (!curse.isCursable() ) {\n\t\t\treturn null;\n\t\t}\n\t\tcurse.uncurse();\n\t\treturn curse;\n\t}\n\treturn null;\n}", "CodeBleu_score": 32.006082189495366}, {"code": "protected Item affectItem( Item item, int pos ){\n\t\tif ( item == null ) {\n\t\treturn null;\n\t}\n\tif ( item.isWaterskin() &&!item.isFull() ) {\n\t\titem.fill();\n\t\treturn item;\n\t}\n\tif ( item.isAnkh() &&!item.isBlessed() ) {\n\t\titem.bless();\n\t\treturn item;\n\t}\n\tif ( item.isUncurseable() ) {\n\t\titem.uncurse();\n\t\treturn item;\n\t}\n\treturn null;\n}", "CodeBleu_score": 22.677897931206676}, {"code": "protected Item affectItem( Item item, int pos ){\n\t\tif( item.getType() == Item.Type.Waterskin ) {\n\t\tif( item.getCurseLevel() == 0 ) {\n\t\t\titem.setCurseLevel( 1 );\n\t\t\tif(!isFull( item ) ) {\n\t\t\t\tfill( item );\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t} else if( item.getType() == Item.Type.Ankh ) {\n\t\tif( item.getCurseLevel() == 0 ) {\n\t\t\titem.setCurseLevel( 1 );\n\t\t\tif(!isBlessed( item ) ) {\n\t\t\t\tbless( item );\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t} else if( item.getType() == Item.Type.Uncurseable ) {\n\t\tif( item.getCurseLevel() > 0 ) {\n\t\t\titem.setCurseLevel( 0 );\n\t\t\tif(!isFull( item ) ) {\n\t\t\t\tfill( item );\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}", "CodeBleu_score": 39.82222674590378}]}
{"instance_id": "d322228d1a3e", "generation_result": [{"code": "public static void affectAndLoot(Mob enemy, Hero hero, Class<?extends AllyBuff> buffCls){\n\t\tif (enemy.isEnemy()) {\n\t\tif (buffCls!= null) {\n\t\t\ttry {\n\t\t\t\tAllyBuff buff = buffCls.newInstance();\n\t\t\t\tbuff.apply(enemy);\n\t\t\t\tenemy.setBuff(buff);\n\t\t\t} catch (InstantiationException | IllegalAccessException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tif (hero.isMonk()) {\n\t\t\thero.gainEnergy();\n\t\t}\n\t\thero.processEnemyKill(enemy);\n\t\thero.rollToDropLoot();\n\t}\n}", "CodeBleu_score": 18.225913404471456}, {"code": "public static void affectAndLoot(Mob enemy, Hero hero, Class<?extends AllyBuff> buffCls){\n\t\tif (enemy.isEnemy()) {\n\t\tif (buffCls!= null) {\n\t\t\tenemy.addBuff(buffCls);\n\t\t}\n\t\thero.gainExp(enemy.getLevel());\n\t\tif (hero.getClass().equals(Monk.class)) {\n\t\t\thero.gainEnergy(enemy.getLevel());\n\t\t}\n\t\tif (hero.isAscended()) {\n\t\t\thero.gainExp(hero.getLevel());\n\t\t}\n\t\tif (hero.isAscended()) {\n\t\t\thero.rollToDropLoot();\n\t\t}\n\t\tif (hero.isAscended()) {\n\t\t\thero.processEnemyKill(enemy);\n\t\t}\n\t}\n}", "CodeBleu_score": 19.535762700331194}, {"code": "public static void affectAndLoot(Mob enemy, Hero hero, Class<?extends AllyBuff> buffCls){\n\t\tif (enemy instanceof Enemy) {\n\t\tEnemy enemy1 = (Enemy) enemy;\n\t\tenemy1.applyBuff(buffCls);\n\t\tif (enemy1.isAligned(hero)) {\n\t\t\tenemy1.rollToDropLoot();\n\t\t\tenemy1.processEnemyKill(hero);\n\t\t\tif (hero.getClass().equals(Monk.class)) {\n\t\t\t\thero.gainEnergy(enemy1.getEnergyGain());\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 18.14514288320363}]}
{"instance_id": "9ee21c0149f3", "generation_result": [{"code": "public static void processEnemyKill(Char enemy){\n\t", "CodeBleu_score": 0.5739817495090933}, {"code": "public static void processEnemyKill(Char enemy){\n\tif (AscensionChallenge.isAscensionChallengeActive(hero)) {\nif (AscensionChallenge.isAscensionChallengeEnemy(enemy)) {\nif (AscensionChallenge.isAscensionChallengeBoosted(enemy)) {\nAscensionChallenge.revertAscensionChallengeBoost(enemy);\n} else {\nint enemyType = AscensionChallenge.getAscensionChallengeEnemyType(enemy);\nint enemyStacks = AscensionChallenge.getAscensionChallengeEnemyStacks(enemy);\nint heroStacks = AscensionChallenge.getAscensionChallengeHeroStacks(hero);\nint heroLevel = hero.getLevel();\nint heroMaxLevel = hero.getMaxLevel();\nboolean heroMaxLevelReached = heroLevel == heroMaxLevel;\nboolean heroBoosted = AscensionChallenge.isAscensionChallengeBoosted(hero);\nif (AscensionChallenge.isAscensionChallengeEnemyStacksDecreasing(enemyType)) {\nAscensionChallenge.decreaseAscensionChallengeEnemyStacks(enemy);\n} else {\nAscensionChallenge.increaseAscensionChallengeEnemyStacks(enemy);\n}\nif (AscensionChallenge.isAscensionChallengeEnemyStacksBelowThreshold(enemyStacks)) {\nAscensionChallenge.logAscensionChallengeWeakeningMessage(enemyStacks);\n}\nif (AscensionChallenge.isAscensionChallengeEnemyStacksBelowThreshold(heroStacks)) {\nAscensionChallenge.logAscensionChallengeWeakeningMessage(heroStacks);\n}\nif (heroMaxLevelReached &&!heroBoosted) {\nAscensionChallenge.grantAscensionChallengeExperience(hero);\n}\nAscensionChallenge.refreshAscensionChallengeHeroBuffIndicators(hero);\n}\n}\n}\n}", "CodeBleu_score": 18.458215434266016}, {"code": "public static void processEnemyKill(Char enemy){\n\t", "CodeBleu_score": 0.5739817495090933}]}
{"instance_id": "4fc9c3c1fcce", "generation_result": [{"code": "public static int AscensionCorruptResist(Mob m){\n\t", "CodeBleu_score": 1.4729374628756662}, {"code": "public static int AscensionCorruptResist(Mob m){\n\t", "CodeBleu_score": 1.4729374628756662}, {"code": "public static int AscensionCorruptResist(Mob m){\n\t", "CodeBleu_score": 1.4729374628756662}]}
{"instance_id": "bdc8df5952c7", "generation_result": [{"code": "public void hit( Char enemy ){\n\t", "CodeBleu_score": 2.676826499359523}, {"code": "public void hit( Char enemy ){\n\t", "CodeBleu_score": 2.676826499359523}, {"code": "public void hit( Char enemy ){\n\t\tif (enemy.isDead() || (enemy.getBuff(Buff.CORROSION)!= null && enemy.getBuff(Buff.CORROSION).getHealth() == 0)){\n\t\tcomboTimer = comboTimer + (talentPointsInCleave * 2);\n\t}\n\tcomboTimer = comboTimer + 1;\n\tcomboCount++;\n\tvalidateMasteryCombo();\n\tlogCombo();\n\trefreshHero();\n\t}", "CodeBleu_score": 19.362890775679876}]}
{"instance_id": "abf7c664b4dd", "generation_result": [{"code": "public int capacity(){\n\tnt cap = super.capacity();\n\tfor (Item item : items){\n\t\tif (item instanceof Bag){\n\t\t\tcap++;\n\t\t}\n\t}\n\tif (Dungeon.hero!= null && Dungeon.hero.belongings.secondWep!= null){\n\t\t//secondary weapons still occupy an inv. slot\n\t\tcap--;\n\t}\n\treturn cap;\n}", "CodeBleu_score": 84.73382461458368}, {"code": "public int capacity(){\n\tnt cap = super.capacity();\n\tfor (Item item : items) {\n\t\tif (item instanceof Bag) {\n\t\t\tcap++;\n\t\t}\n\t}\n\tif (Dungeon.hero!= null && Dungeon.hero.belongings.secondWep!= null) {\n\t\tcap--;\n\t}\n\treturn cap;\n}", "CodeBleu_score": 78.4373679809383}, {"code": "public int capacity(){\n\tnt cap = super.capacity();\n\tfor (Item item : items) {\n\t\tif (item instanceof Bag) {\n\t\t\tcap++;\n\t\t}\n\t}\n\tif (Dungeon.hero!= null && Dungeon.hero.belongings.secondWep!= null) {\n\t\t//secondary weapons still occupy an inv. slot\n\t\tcap--;\n\t}\n\treturn cap;\n}", "CodeBleu_score": 78.4373679809383}]}
{"instance_id": "b97e41e092d2", "generation_result": [{"code": "public void updateHT( boolean boostHP ){\n\t\t// Base formula\n\tHT = (int) Math.ceil( ( 100 + 10 * level ) * ( 1 + 0.05 * boost ) * ( 1 + 0.05 * ( (int) Math.floor( (double) level / 10 ) ) ) );\n\n\t// Adjust for RingOfMight\n\tHT += (int) Math.floor( HT * 0.05 * ( 1 + 0.1 * (int) Math.floor( (double) level / 10 ) ) );\n\n\t// Adjust for ElixirOfMight\n\tHT += (int) Math.floor( HT * 0.05 * ( 1 + 0.1 * (int) Math.floor( (double) level / 10 ) ) );\n\n\t// Adjust for buffs\n\tHT = (int) Math.floor( HT * ( 1 + 0.05 * buff ) );\n\n\t// Adjust for max\n\tHT = Math.min( HT, max );\n\n\t// Adjust for boost\n\tif ( boostHP ) {\n\t\tHP += (int) Math.floor( HT * 0.05 );\n\t}\n\n\t// Ensure HP does not exceed the new HT value\n\tHP = Math.min( HP, HT );\n}", "CodeBleu_score": 23.932982730684078}, {"code": "public void updateHT( boolean boostHP ){\n\t\tif ( boostHP ) {\n\t\tthis.HP = Math.min( this.HP + this.HT, this.HT );\n\t}\n\tthis.HT = (int)(this.level * (this.HTMultiplier + this.HTBoost) * this.HTMultiplier);\n\tif ( this.ringOfMight!= null ) {\n\t\tthis.HT += this.ringOfMight.getHTBonus();\n\t}\n\tif ( this.elixirOfMight!= null ) {\n\t\tthis.HT += this.elixirOfMight.getHTBonus();\n\t}\n}", "CodeBleu_score": 27.50463545575872}, {"code": "public void updateHT( boolean boostHP ){\n\t\tint newHT = (int) (Math.round( ( ( 100 + ( level * 10 ) ) * ( 1 + ( ( ( level - 1 ) * 0.25 ) + ( level * 0.05 ) ) ) ) * ( 1 + ( ( level - 1 ) * 0.01 ) ) ) * ( 1 + ( ( level - 1 ) * 0.01 ) ) );\n\tif( newHT < 1 )\n\t\tnewHT = 1;\n\tif( boostHP ) {\n\t\tif( HP + newHT > newHT )\n\t\t\tHP = newHT;\n\t\telse\n\t\t\tHP += newHT;\n\t}\n\tHT = newHT;\n}", "CodeBleu_score": 18.20948221340792}]}
{"instance_id": "b72bd91544e7", "generation_result": [{"code": "public boolean shoot( Char enemy, MissileWeapon wep ){\n\t\tboolean hit = false;\n\tif( enemy.getAlignment() == Alignment.ENEMY ) {\n\t\thit = wep.attack( enemy );\n\t} else if( enemy.getAlignment() == Alignment.NEUTRAL ) {\n\t\thit = wep.attack( enemy );\n\t}\n\tif( hit ) {\n\t\tif( this.getAlignment() == Alignment.GLADIATOR || this.getAlignment() == Alignment.DUELIST ) {\n\t\t\tthis.addHit();\n\t\t\tif( this.getHit() % 3 == 0 ) {\n\t\t\t\tthis.setBuff( true );\n\t\t\t} else {\n\t\t\t\tthis.setBuff( false );\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setBuff( false );\n\t\t}\n\t\tthis.clearWeapon();\n\t}\n\treturn hit;\n}", "CodeBleu_score": 25.325795102761766}, {"code": "public boolean shoot( Char enemy, MissileWeapon wep ){\n\t\tif(!isAligned( enemy ) ) {\n\t\tif(!enemy.isMimic() ) {\n\t\t\tenemy.setHit( false );\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tenemy.setHit( true );\n\t\t\treturn true;\n\t\t}\n\t}\n\telse {\n\t\tif(!enemy.isMimic() ) {\n\t\t\tenemy.setHit( true );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tenemy.setHit( false );\n\t\t\treturn false;\n\t\t}\n\t}\n}", "CodeBleu_score": 9.26654039930979}, {"code": "public boolean shoot( Char enemy, MissileWeapon wep ){\n\t\tif (enemy.alignment == Alignment.ENEMY) {\n\t\tif (wep.attack(enemy)) {\n\t\t\tif (enemy.alignment == Alignment.ENEMY) {\n\t\t\t\tif (this.alignment == Alignment.NEUTRAL) {\n\t\t\t\t\tif (this.alignment == Alignment.ENEMY) {\n\t\t\t\t\t\tthis.alignment = Alignment.NEUTRAL;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.alignment = Alignment.ENEMY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (enemy.alignment == Alignment.NEUTRAL) {\n\t\t\t\tif (this.alignment == Alignment.ENEMY) {\n\t\t\t\t\tthis.alignment = Alignment.NEUTRAL;\n\t\t\t\t} else {\n\t\t\t\t\tthis.alignment = Alignment.ENEMY;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.alignment == Alignment.ENEMY) {\n\t\t\t\tthis.buff(Buff.COMBO, 2);\n\t\t\t}\n\t\t\tif (this.alignment == Alignment.NEUTRAL) {\n\t\t\t\tthis.buff(Buff.COMBO, 1);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t} else if (enemy.alignment == Alignment.NEUTRAL) {\n\t\tif (wep.attack(enemy)) {\n\t\t\tif (enemy.alignment == Alignment.NEUTRAL) {\n\t\t\t\tif (this.alignment == Alignment.ENEMY) {\n\t\t\t\t\tthis.alignment = Alignment.NEUTRAL;\n\t\t\t\t} else {\n\t\t\t\t\tthis.alignment = Alignment.ENEMY;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.alignment == Alignment.ENEMY) {\n\t\t\t\tthis.buff(Buff.COMBO, 2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}", "CodeBleu_score": 17.147186942925124}]}
{"instance_id": "f265b39b6677", "generation_result": [{"code": "public int attackSkill( Char target ){\n\t\tint attackSkill = baseAttackSkill;\n\tattackSkill *= accuracyFactor;\n\tattackSkill *= accuracyMultiplier;\n\tattackSkill *= fightingUnarmed;\n\tattackSkill *= adjacent;\n\tattackSkill *= attackingWeapon;\n\treturn attackSkill;\n}", "CodeBleu_score": 11.25201376584777}, {"code": "public int attackSkill( Char target ){\n\t", "CodeBleu_score": 3.516528221576535}, {"code": "public int attackSkill( Char target ){\n\t\tint attackSkill = baseAttackSkill;\n\tattackSkill *= accuracyFactor;\n\tattackSkill *= accuracyMultiplier;\n\tattackSkill *= fightingUnarmed;\n\tattackSkill *= adjacent;\n\tattackSkill *= attackingWeapon;\n\tattackSkill *= buff;\n\treturn attackSkill;\n}", "CodeBleu_score": 12.509780977960666}]}
{"instance_id": "9e50c198348d", "generation_result": [{"code": "inline fun PerformanceCounter.profile(\n  repeats: Int = if (time.mean != null) time.mean.windowSize else 10,\n  printResults: Boolean = true,\n  operation: () -> Unit,\n){\n\tif (this.time.count == 0) tick()\n  repeat(repeats) {\n    this.start()\n    operation()\n    this.stop()\n    this.tick()\n  }\n  if (printResults) {\n    prettyPrint()\n  }\n}", "CodeBleu_score": 99.37659596685258}, {"code": "inline fun PerformanceCounter.profile(\n  repeats: Int = if (time.mean != null) time.mean.windowSize else 10,\n  printResults: Boolean = true,\n  operation: () -> Unit,\n){\n\tif (this.time.count == 0) tick()\n  repeat(repeats) {\n    this.start()\n    operation()\n    this.stop()\n    this.tick()\n  }\n  if (printResults) {\n    prettyPrint()\n  }\n}", "CodeBleu_score": 99.37659596685258}, {"code": "inline fun PerformanceCounter.profile(\n  repeats: Int = if (time.mean != null) time.mean.windowSize else 10,\n  printResults: Boolean = true,\n  operation: () -> Unit,\n){\n\t", "CodeBleu_score": 34.553107085871765}]}
{"instance_id": "5f6e11998a1f", "generation_result": [{"code": "inline fun <E> behaviorTree(\n  rootTask: Task<E>? = null,\n  blackboard: E? = null,\n  init: (@GdxAiDsl BehaviorTree<E>).() -> Unit = {},\n): BehaviorTree<E>{\n\t", "CodeBleu_score": 29.691457752773907}, {"code": "inline fun <E> behaviorTree(\n  rootTask: Task<E>? = null,\n  blackboard: E? = null,\n  init: (@GdxAiDsl BehaviorTree<E>).() -> Unit = {},\n): BehaviorTree<E>{\n\t", "CodeBleu_score": 29.691457752773907}, {"code": "inline fun <E> behaviorTree(\n  rootTask: Task<E>? = null,\n  blackboard: E? = null,\n  init: (@GdxAiDsl BehaviorTree<E>).() -> Unit = {},\n): BehaviorTree<E>{\n\t", "CodeBleu_score": 29.691457752773907}]}
{"instance_id": "cdda12e45fb9", "generation_result": [{"code": "onPointerOver (){\n\t\tthis.scene.city.map.selectedCell.x = this.x;\n\tthis.scene.city.map.selectedCell.y = this.y;\n\n\tthis.tiles.sprites.forEach((sprite) => {\n\t\tif (sprite.visible) sprite.setTint(0xaa0000);\n\t});\n\n\tthis.related.forEach((cell) => {\n\t\tcell.tiles.sprites.forEach((sprite) => {\n\t\t\tif (sprite.visible) sprite.setTint(0xaa0000);\n\t\t});\n\t});\n\n\tif (this.tiles.heightmap) {\n\t\tif (this.tiles.heightmap.polygon.top){\n\t\t\tthis.tiles.heightmap.polygon.top.fillAlpha = 0.5;\n\t\t}\n\t\tif (this.tiles.heightmap.polygon.slope){\n\t\t\tthis.tiles.heightmap.polygon.slope.fillAlpha = 0.5;\n\t\t}\n\t}\n}", "CodeBleu_score": 96.16936989131777}, {"code": "onPointerOver (){\n\tthis.scene.city.map.selectedCell.x = this.x;\nthis.scene.city.map.selectedCell.y = this.y;\n\nthis.tiles.sprites.forEach((sprite) => {\nif (sprite.visible) sprite.setTint(0xaa0000);\n});\n\nthis.related.forEach((cell) => {\ncell.tiles.sprites.forEach((sprite) => {\nif (sprite.visible) sprite.setTint(0xaa0000);\n});\n});\n\nif (this.tiles.heightmap) {\nif (this.tiles.heightmap.polygon.top){\nthis.tiles.heightmap.polygon.top.fillAlpha = 0.5;\n}\nif (this.tiles.heightmap.polygon.slope){\nthis.tiles.heightmap.polygon.slope.fillAlpha = 0.5;\n}\n}\n}", "CodeBleu_score": 96.06928284575314}, {"code": "onPointerOver (){\n\t\tthis.scene.city.map.selectedCell.x = this.x;\n\tthis.scene.city.map.selectedCell.y = this.y;\n\n\tthis.tiles.sprites.forEach((sprite) => {\n\t\tif (sprite.visible) sprite.setTint(0xaa0000);\n\t});\n\n\tthis.related.forEach((cell) => {\n\t\tcell.tiles.sprites.forEach((sprite) => {\n\t\t\tif (sprite.visible) sprite.setTint(0xaa0000);\n\t\t});\n\t});\n\n\tif (this.tiles.heightmap) {\n\t\tif (this.tiles.heightmap.polygon.top){\n\t\t\tthis.tiles.heightmap.polygon.top.fillAlpha = 0.5;\n\t\t}\n\t\tif (this.tiles.heightmap.polygon.slope){\n\t\t\tthis.tiles.heightmap.polygon.slope.fillAlpha = 0.5;\n\t\t}\n\t}\n}", "CodeBleu_score": 96.16936989131777}]}
{"instance_id": "850931ce3401", "generation_result": [{"code": "getTrafficDensity (){\n\t\tif (this.current < this.lightThreshold)\n\t\treturn null;\n\n\tif (this.current >= this.lightThreshold && this.current < this.heavyThreshold)\n\t\treturn 'light';\n\n\tif (this.current >= this.heavyThreshold)\n\t\treturn 'heavy';\n}", "CodeBleu_score": 71.89591271917458}, {"code": "getTrafficDensity (){\n\t\tif (this.current < this.lightThreshold)\n\t\treturn null;\n\n\tif (this.current >= this.lightThreshold && this.current < this.heavyThreshold)\n\t\treturn 'light';\n\n\tif (this.current >= this.heavyThreshold)\n\t\treturn 'heavy';\n}", "CodeBleu_score": 71.89591271917458}, {"code": "getTrafficDensity (){\n\t\tif (this.current < this.lightThreshold)\n\t\treturn null;\n\n\tif (this.current >= this.lightThreshold && this.current < this.heavyThreshold)\n\t\treturn 'light';\n\n\tif (this.current >= this.heavyThreshold)\n\t\treturn 'heavy';\n}", "CodeBleu_score": 71.89591271917458}]}
{"instance_id": "5958478bf873", "generation_result": [{"code": "restart: function (){\n\t", "CodeBleu_score": 25.419227090064833}, {"code": "restart: function (){\n\t", "CodeBleu_score": 25.419227090064833}, {"code": "restart: function (){\n\t", "CodeBleu_score": 25.419227090064833}]}
{"instance_id": "d2441e586d58", "generation_result": [{"code": "flash: function (color, duration, force, alpha){\n\t\tif (!this.fx) return false;\n\tthis.fx.clear();\n\tthis.fx.beginFill(color, alpha);\n\tthis.fx.drawRect(0, 0, this.width, this.height);\n\tthis.fx.endFill();\n\tthis.fx.duration = duration;\n\tthis.fx.force = force;\n\treturn true;\n}", "CodeBleu_score": 43.07468989024862}, {"code": "flash: function (color, duration, force, alpha){\n\t\tif (this.fx.flashing) {\n\t\tthis.fx.clear();\n\t}\n\tif (typeof color === 'undefined') {\n\t\tcolor = 0x000000;\n\t}\n\tif (typeof duration === 'undefined') {\n\t\tduration = 100;\n\t}\n\tif (typeof force === 'undefined') {\n\t\tforce = true;\n\t}\n\tif (typeof alpha === 'undefined') {\n\t\talpha = 0.5;\n\t}\n\tif (force) {\n\t\tthis.fx.clear();\n\t}\n\tthis.fx.beginFill(color, alpha);\n\tthis.fx.drawRect(0, 0, this.width, this.height);\n\tthis.fx.endFill();\n\tthis.fx.flashing = true;\n\tthis.fx.flashDuration = duration;\n\tthis.fx.flashAlpha = alpha;\n\tthis.fx.flashColor = color;\n\treturn true;\n}", "CodeBleu_score": 56.17898648123403}, {"code": "flash: function (color, duration, force, alpha){\n\t\t//TODO: add support for force\n\tif (this.fx.flashing) {\n\t\tthis.fx.clear();\n\t}\n\tif (color === undefined) {\n\t\tcolor = 0x000000;\n\t}\n\tif (duration === undefined) {\n\t\tduration = 0.5;\n\t}\n\tif (alpha === undefined) {\n\t\talpha = 0.5;\n\t}\n\tif (this.fx.flashing) {\n\t\treturn false;\n\t}\n\tthis.fx.flashing = true;\n\tthis.fx.flashColor = color;\n\tthis.fx.flashAlpha = alpha;\n\tthis.fx.flashDuration = duration;\n\tthis.fx.drawRect(0, 0, this.width, this.height, color, alpha);\n\tthis.fx.endFill();\n\tthis.fx.flashTimer = new Timer(duration * 1000, 0);\n\tthis.fx.flashTimer.addEventListener(TimerEvent.TIMER, this.flashTimerHandler);\n\tthis.fx.flashTimer.start();\n\treturn true;\n}", "CodeBleu_score": 61.143534805309365}]}
{"instance_id": "48b26381d975", "generation_result": [{"code": "createFluidLayer: function (children, addToWorld){\n\t\tvar layer = new FlexLayer(this.game, this.game.world, children, addToWorld);\n\tthis.layers.push(layer);\n\tif (addToWorld) {\n\t\tthis.game.world.add(layer);\n\t}\n\treturn layer;\n}", "CodeBleu_score": 38.987278985040874}, {"code": "createFluidLayer: function (children, addToWorld){\n\t\tvar layer = new Phaser.FlexLayer(this.game, 0, 0, this.width, this.height, this.fluidProperties);\n\tif (addToWorld) {\n\t\tthis.game.world.add(layer);\n\t}\n\tthis.layers.push(layer);\n\tif (children) {\n\t\tlayer.addMultiple(children);\n\t}\n\treturn layer;\n}", "CodeBleu_score": 59.13283651327074}, {"code": "createFluidLayer: function (children, addToWorld){\n\t\tvar layer = new FlexLayer(this.game, children, this.fluidProperties);\n\tif (addToWorld) {\n\t\tthis.layers.push(layer);\n\t\tthis.game.world.add(layer);\n\t}\n\treturn layer;\n}", "CodeBleu_score": 34.10434976243694}]}
{"instance_id": "624c9e2eb19f", "generation_result": [{"code": "createFullLayer: function (children){\n\t\tvar layer = new Phaser.FlexLayer(this.game, this.x, this.y, this.bounds, this.scale);\n\n\tif (children) {\n\t\tlayer.addMultiple(children);\n\t}\n\n\tthis.layers.push(layer);\n\tthis.game.world.add(layer);\n\n\treturn layer;\n}", "CodeBleu_score": 56.29515625130861}, {"code": "createFullLayer: function (children){\n\t\tvar layer = new Phaser.FlexLayer(this.game, this.x, this.y, this.bounds, this.scale);\n\tthis.layers.push(layer);\n\tthis.game.world.add(layer);\n\tif (children) {\n\t\tlayer.addMultiple(children);\n\t}\n\treturn layer;\n}", "CodeBleu_score": 58.73491043901653}, {"code": "createFullLayer: function (children){\n\t\tvar layer = new Phaser.FlexLayer(this.game, 0, 0, 0, 0, 1, 1);\n\tthis.layers.push(layer);\n\tthis.game.world.add(layer);\n\tif (children) {\n\t\tlayer.addMultiple(children);\n\t}\n\treturn layer;\n}", "CodeBleu_score": 51.254157162678005}]}
{"instance_id": "1c7529bca3ce", "generation_result": [{"code": "crop: function (rect, copy){\n\tif (rect) {\nif (copy) {\nthis.cropRect.setTo(rect.x, rect.y, rect.width, rect.height);\n} else {\nthis.cropRect.copyFrom(rect);\n}\nthis.updateCrop();\n} else {\nthis.resetFrame();\n}\n}", "CodeBleu_score": 29.273255273402377}, {"code": "crop: function (rect, copy){\n\t\tif (rect) {\n\t\tif (copy) {\n\t\t\tthis.cropRect.setTo(rect);\n\t\t}\n\t\telse {\n\t\t\tthis.cropRect.copyFrom(rect);\n\t\t}\n\t\tthis.updateCrop();\n\t}\n\telse {\n\t\tthis.resetFrame();\n\t}\n\treturn this;\n}", "CodeBleu_score": 17.263393075163293}, {"code": "crop: function (rect, copy){\n\t\tif (rect) {\n\t\tif (copy) {\n\t\t\tthis.cropRect.copyFrom(rect);\n\t\t} else {\n\t\t\tthis.cropRect.setTo(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\t\tthis.updateCrop();\n\t} else {\n\t\tthis.resetFrame();\n\t}\n}", "CodeBleu_score": 29.266318213930383}]}
{"instance_id": "d767b9ea9212", "generation_result": [{"code": "move: function (x, y, wrap){\n\t\tif (x) this.moveH(x, wrap);\n\tif (y) this.moveV(y, wrap);\n\treturn this;\n}", "CodeBleu_score": 37.54494891585429}, {"code": "move: function (x, y, wrap){\n\t\tthis.moveH(x, wrap);\n\tthis.moveV(y, wrap);\n\treturn this;\n}", "CodeBleu_score": 35.37305709858386}, {"code": "move: function (x, y, wrap){\n\t\tif (x) this.moveH(x, wrap);\n\tif (y) this.moveV(y, wrap);\n\treturn this;\n}", "CodeBleu_score": 37.54494891585429}]}
{"instance_id": "c7cf015114f3", "generation_result": [{"code": "Phaser.Button.prototype.changeStateFrame = function (state){\n\t\tif (this.framesFrozen) {\n\t\treturn false;\n\t}\n\n\tif (typeof state ==='string') {\n\t\tstate = this.states[state];\n\t}\n\n\tif (typeof state === 'number') {\n\t\tthis.frame = state;\n\t\treturn true;\n\t}\n\n\treturn false;\n}", "CodeBleu_score": 31.204572788100283}, {"code": "Phaser.Button.prototype.changeStateFrame = function (state){\n\t\tif (this.framesFrozen) {\n\t\treturn false;\n\t}\n\n\tif (typeof state ==='string') {\n\t\tstate = this.frameMap[state];\n\t}\n\n\tif (state >= 0 && state < this.frames.length) {\n\t\tthis.frame = state;\n\t\treturn true;\n\t}\n\n\treturn false;\n}", "CodeBleu_score": 29.586568682246185}, {"code": "Phaser.Button.prototype.changeStateFrame = function (state){\n\t\tvar frame = this.frameCache[state];\n\tif (frame === undefined) {\n\t\treturn false;\n\t}\n\n\tthis.frame = frame;\n\tthis.updateFrame();\n\treturn true;\n}", "CodeBleu_score": 23.106555461213972}]}
{"instance_id": "e0294cb83ca3", "generation_result": [{"code": "weapon: function (quantity, key, frame, group, bulletClass){\n\t", "CodeBleu_score": 6.680082188273345}, {"code": "weapon: function (quantity, key, frame, group, bulletClass){\n\t\t//...\n}", "CodeBleu_score": 5.476186467129299}, {"code": "weapon: function (quantity, key, frame, group, bulletClass){\n\t\n}", "CodeBleu_score": 5.476186467129299}]}
{"instance_id": "2fca91787d6c", "generation_result": [{"code": "Phaser.Graphics.prototype.drawTriangle = function (points, cull){\n\t\tvar p1 = points[0];\n\tvar p2 = points[1];\n\tvar p3 = points[2];\n\tvar p1x = p1.x;\n\tvar p1y = p1.y;\n\tvar p2x = p2.x;\n\tvar p2y = p2.y;\n\tvar p3x = p3.x;\n\tvar p3y = p3.y;\n\tvar dx1 = p2x - p1x;\n\tvar dy1 = p2y - p1y;\n\tvar dx2 = p3x - p1x;\n\tvar dy2 = p3y - p1y;\n\tvar faceNormal = new Phaser.Point(dy1 * dy2 - dx1 * dx2, dx1 * dy2 - dy1 * dx2);\n\tif (cull && faceNormal.dot(this.cameraToFace) <= 0) {\n\t\treturn;\n\t}\n\tthis.moveTo(p1x, p1y);\n\tthis.lineTo(p2x, p2y);\n\tthis.lineTo(p3x, p3y);\n\tthis.lineTo(p1x, p1y);\n\treturn this;\n}", "CodeBleu_score": 20.996533279040037}, {"code": "Phaser.Graphics.prototype.drawTriangle = function (points, cull){\n\t\tif (cull) {\n\t\tvar normal = this.cameraToFace.dot(this.pointsToFace(points));\n\n\t\tif (normal < 0) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tthis.lineStyle(1, 0x000000);\n\tthis.beginFill(0xffffff, 1);\n\tthis.moveTo(points[0].x, points[0].y);\n\tthis.lineTo(points[1].x, points[1].y);\n\tthis.lineTo(points[2].x, points[2].y);\n\tthis.lineTo(points[0].x, points[0].y);\n\tthis.endFill();\n}", "CodeBleu_score": 23.339973739046933}, {"code": "Phaser.Graphics.prototype.drawTriangle = function (points, cull){\n\t\tif (cull)\n\t{\n\t\tvar normal = this.cameraToFace.dot(this.cross(points[0], points[1], points[2]));\n\n\t\tif (normal > 0)\n\t\t{\n\t\t\tthis.drawPolygon(points);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.drawPolygon(points);\n\t}\n}", "CodeBleu_score": 20.81706255015524}]}
{"instance_id": "5d227ea7f97b", "generation_result": [{"code": "checkVideoProgress: function (){\n\t", "CodeBleu_score": 5.572246494525378}, {"code": "checkVideoProgress: function (){\n\t\tif (this.video.readyState > 1) {\n\t\t// The video is ready to play.\n\t\t// Stop any pending source changes.\n\t\tthis.video.pause();\n\t\tthis.video.src = '';\n\t\tthis.video.load();\n\t\t// Update the texture.\n\t\tthis.updateTexture();\n\t\t// Stop checking progress.\n\t\tthis.video.removeEventListener('canplaythrough', this.checkVideoProgress, false);\n\t} else if (this.video.error) {\n\t\t// The video failed to load.\n\t\t// Stop checking progress.\n\t\tthis.video.removeEventListener('canplaythrough', this.checkVideoProgress, false);\n\t\t// If we've exceeded the retry limit, stop the video.\n\t\tif (this.retryCount >= this.maxRetries) {\n\t\t\tthis.video.pause();\n\t\t\tthis.video.src = '';\n\t\t\tthis.video.load();\n\t\t\tthis.retryCount = 0;\n\t\t\t// Stop checking progress.\n\t\t\tthis.video.removeEventListener('canplaythrough', this.checkVideoProgress, false);\n\t\t} else {\n\t\t\t// Retry the video.\n\t\t\tthis.retryCount++;\n\t\t\tthis.video.src = this.video.src;\n\t\t\t// Start checking progress again.\n\t\t\tthis.video.addEventListener('canplaythrough', this.checkVideoProgress, false);\n\t\t}\n\t}\n}", "CodeBleu_score": 26.17737934912064}, {"code": "checkVideoProgress: function (){\n\t\tif (this.video.readyState >= 2) {\n\t\tif (this.video.paused) {\n\t\t\tthis.video.play();\n\t\t}\n\t\tthis.video.removeEventListener('progress', this.checkVideoProgress);\n\t\tthis.updateTexture();\n\t} else if (this.retries > 0) {\n\t\tthis.retries--;\n\t\tconsole.warn('Video not ready, retrying', this.retries);\n\t\tthis.video.removeEventListener('progress', this.checkVideoProgress);\n\t\tthis.video.addEventListener('progress', this.checkVideoProgress);\n\t\tthis.video.removeEventListener('error', this.checkVideoProgress);\n\t\tthis.video.addEventListener('error', this.checkVideoProgress);\n\t\twindow.setTimeout(this.checkVideoProgress.bind(this), 1000);\n\t} else {\n\t\tconsole.warn('Video not ready, giving up');\n\t\tthis.video.removeEventListener('progress', this.checkVideoProgress);\n\t\tthis.video.removeEventListener('error', this.checkVideoProgress);\n\t}\n}", "CodeBleu_score": 31.51579091283076}]}
{"instance_id": "e48c3c53f00a", "generation_result": [{"code": "start: function (event, value){\n\t\tif (this.state!= 2) {\n\t\tthis.state = 2;\n\t\tthis.time = Date.now();\n\t\tthis.repeat = 0;\n\t\tthis.event = event;\n\t\tthis.value = value;\n\t\tif (event) {\n\t\t\tthis.alt = event.altKey;\n\t\t\tthis.shift = event.shiftKey;\n\t\t\tthis.ctrl = event.ctrlKey;\n\t\t}\n\t\tthis.onDown.dispatch(this.state, this.value);\n\t}\n}", "CodeBleu_score": 49.570962655578356}, {"code": "start: function (event, value){\n\t\tif (this.state!== this.DOWN) {\n\t\tthis.state = this.DOWN;\n\t\tthis.time = this.now();\n\t\tthis.repeat = 0;\n\t\tthis.event = event;\n\t\tthis.value = value;\n\t\tif (event) {\n\t\t\tthis.alt = event.altKey;\n\t\t\tthis.ctrl = event.ctrlKey;\n\t\t\tthis.shift = event.shiftKey;\n\t\t}\n\t\tthis.onDown.dispatch(this.state, this.value);\n\t}\n}", "CodeBleu_score": 49.85656814823152}, {"code": "start: function (event, value){\n\t\tif (this.isDown) {\n\t\treturn;\n\t}\n\tthis.isDown = true;\n\tthis.timeDown = Date.now();\n\tthis.repeatCounter = 0;\n\tthis.event = event;\n\tthis.value = value;\n\tthis.isModifierDown = false;\n\tif (event) {\n\t\tthis.isModifierDown = event.altKey || event.shiftKey || event.ctrlKey;\n\t}\n\tthis.onDown.dispatch(this.isDown, this.value);\n}", "CodeBleu_score": 53.758582339204075}]}
{"instance_id": "a2cb3bdacb1e", "generation_result": [{"code": "onMouseDown: function (event){\n\tif (!this.enabled) return;\nevent.preventDefault();\nthis.mouseDownCallback.call(this.mouseDownCallbackContext, event);\nif (this.input.enabled) {\nthis.input.mousePointer.start(event.x, event.y);\n}\n}", "CodeBleu_score": 30.019337478694393}, {"code": "onMouseDown: function (event){\n\tthis.event = event\nif (this.preventDefault)\nevent.preventDefault()\nif (this.input.mousePointer) {\nthis.input.mousePointer.start(event)\nthis.input.mousePointer.update()\n}\nif (this.mouseDownCallback)\nthis.mouseDownCallback.call(this.mouseDownCallbackContext, event)\n}", "CodeBleu_score": 43.07867783766021}, {"code": "onMouseDown: function (event){\n\t", "CodeBleu_score": 6.864115172258767}]}
{"instance_id": "88538a5b66e8", "generation_result": [{"code": "onMouseUpGlobal: function (event){\n\t", "CodeBleu_score": 13.408675420784958}, {"code": "onMouseUpGlobal: function (event){\n\tthis.input.mousePointer.onMouseUp(event)\n\nif (this.input.mousePointer.isDown) {\nthis.input.mousePointer.onMouseUpGlobal(event)\n}\n}", "CodeBleu_score": 30.562581956590297}, {"code": "onMouseUpGlobal: function (event){\n\t", "CodeBleu_score": 13.408675420784958}]}
{"instance_id": "bf8b43ab3487", "generation_result": [{"code": "onTouchEnter: function (event){\n\tif (this.game.input.enabled && this.enabled && this.touchEnterCallback) {\nthis.touchEnterCallback.call(this, event);\nif (this.touchEnterPreventDefault) {\nevent.preventDefault();\n}\n}\n}", "CodeBleu_score": 25.889074684467715}, {"code": "onTouchEnter: function (event){\n\tif (this.game.input.enabled && this.enabled && this.touchEnterCallback) {\nthis.touchEnterCallback.call(this, event);\nif (this.touchEnterPreventDefault) {\nevent.preventDefault();\n}\n}\n}", "CodeBleu_score": 25.889074684467715}, {"code": "onTouchEnter: function (event){\n\tif (this.game.input.enabled && this.enabled) {\nthis.touchEnterCallback.call(this, event);\nif (this.touchEnterPreventDefault) {\nevent.preventDefault();\n}\n}\n}", "CodeBleu_score": 23.637927634963656}]}
