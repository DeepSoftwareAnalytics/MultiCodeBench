{"instance_id": "47ee1dae200b", "generation_result": [{"code": "public static void PreloadDll(string dllName){\n\tvar dllPath = Path.Combine(GetDirectedDllDirectory(), dllName);\n\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Windows)) {\n\t\tWin32.LoadDll(dllPath);\n\t} else {\n\t\tPosix.LoadDll(dllPath);\n\t}\n}", "CodeBleu_score": 32.070955214399454}, {"code": "public static void PreloadDll(string dllName){\n\t// Get the DLL directory\n\tvar dllDir = GetDirectedDllDirectory();\n\n\t// Check the OS platform\n\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Windows)) {\n\t\t// Load the DLL using the Win32 method\n\t\tWin32.LoadDll(dllName, dllDir);\n\t} else {\n\t\t// Load the DLL using the Posix method\n\t\tPosix.LoadDll(dllName, dllDir);\n\t}\n}", "CodeBleu_score": 56.122974332718826}, {"code": "public static void PreloadDll(string dllName){\n\tstring dllPath = Path.Combine(GetDirectedDllDirectory(), dllName);\n\n\tif (RuntimeInformation.IsOSPlatform(OSPlatform.Windows)) {\n\t\tWin32.LoadDll(dllPath);\n\t} else {\n\t\tPosix.LoadDll(dllPath);\n\t}\n}", "CodeBleu_score": 30.77479943545326}]}
{"instance_id": "2073a8291d05", "generation_result": [{"code": "private void LoadAssetsFromMemory(FileReader reader, string originalPath, string unityVersion = null){\n\t\tif (!assetsFileListHash.Contains(originalPath)) {\n\t\tSerializedFile assetsFile = new SerializedFile(reader, originalPath, unityVersion);\n\t\ttry {\n\t\t\tCheckStrippedVersion(assetsFile);\n\t\t} catch (Exception e) {\n\t\t\tLogger.Error(e.Message);\n\t\t\treturn;\n\t\t}\n\t\tresourceFileReaders.Add(reader);\n\t\tassetsFileListHash.Add(originalPath);\n\t\tassetsFileList.Add(assetsFile);\n\t} else {\n\t\tLogger.Info(\"Skipped file: \" + originalPath);\n\t}\n}", "CodeBleu_score": 33.803632328370355}, {"code": "private void LoadAssetsFromMemory(FileReader reader, string originalPath, string unityVersion = null){\n\t\tif (assetsFileListHash.Contains(originalPath)) {\n\t\tLogger.Info(\"Skipping \" + originalPath + \" as it has already been loaded\");\n\t\treturn;\n\t}\n\tSerializedFile assetsFile = new SerializedFile();\n\ttry {\n\t\tassetsFile.Read(reader);\n\t\tCheckStrippedVersion(assetsFile);\n\t\tassetsFileListHash.Add(originalPath, assetsFile);\n\t\tassetsFileList.Add(assetsFile);\n\t}\n\tcatch (Exception e) {\n\t\tLogger.Error(\"Error loading \" + originalPath + \": \" + e.Message);\n\t\tskippedFiles.Add(originalPath);\n\t}\n}", "CodeBleu_score": 34.02216130132917}, {"code": "private void LoadAssetsFromMemory(FileReader reader, string originalPath, string unityVersion = null){\n\t\tif (assetsFileList.Contains(originalPath)) {\n\t\tLogger.Info(\"Skipping file \" + originalPath + \" because it is already loaded\");\n\t\treturn;\n\t}\n\tSerializedFile assetsFile = new SerializedFile(reader, originalPath);\n\tif (assetsFile.IsVersionStripped && string.IsNullOrEmpty(SpecifyUnityVersion)) {\n\t\tLogger.Error(\"The Unity version has been stripped, please set the version in the options\");\n\t\treturn;\n\t}\n\tif (!string.IsNullOrEmpty(SpecifyUnityVersion)) {\n\t\tassetsFile.SetVersion(SpecifyUnityVersion);\n\t}\n\tassetsFileList.Add(assetsFile);\n\tassetsFileListHash.Add(originalPath, assetsFile);\n\tLogger.Info(\"Loaded \" + originalPath);\n}", "CodeBleu_score": 33.330631434634576}]}
{"instance_id": "5dacc6a26301", "generation_result": [{"code": "public ImportedFrame FindFrameByPath(string path){\n\t\tstring[] pathParts = path.Split('/');\n\tstring name = pathParts[pathParts.Length - 1];\n\tforeach (ImportedFrame child in children) {\n\t\tif (child.Name == name) {\n\t\t\tif (child.Path == path) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tImportedFrame result = child.FindFrameByPath(path);\n\t\t\tif (result!= null) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}", "CodeBleu_score": 49.27727846724118}, {"code": "public ImportedFrame FindFrameByPath(string path){\n\t\tstring name = Path.GetFileNameWithoutExtension(path);\n\tforeach(ImportedFrame child in children) {\n\t\tif(child.Name == name) {\n\t\t\tif(child.Path == path) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}", "CodeBleu_score": 46.310539800390124}, {"code": "public ImportedFrame FindFrameByPath(string path){\n\t\tstring name = path.Split('/').Last();\n\tforeach (ImportedFrame child in children) {\n\t\tif (child.Name == name) {\n\t\t\tif (child.Path == path) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}", "CodeBleu_score": 48.0522830074329}]}
{"instance_id": "c20b04c4ad37", "generation_result": [{"code": "public static FileReader DecompressGZip(FileReader reader){\n\t\tMemoryStream ms = new MemoryStream();\n\treader.CopyTo(ms);\n\tms.Position = 0;\n\tGZipStream gz = new GZipStream(ms, CompressionMode.Decompress);\n\tMemoryStream ms2 = new MemoryStream();\n\tgz.CopyTo(ms2);\n\treturn new FileReader(ms2.ToArray());\n}", "CodeBleu_score": 37.09133023877232}, {"code": "public static FileReader DecompressGZip(FileReader reader){\n\t\tMemoryStream stream = new MemoryStream();\n\tusing (GZipStream gzip = new GZipStream(reader.BaseStream, CompressionMode.Decompress)) {\n\t\tgzip.CopyTo(stream);\n\t}\n\tstream.Position = 0;\n\treturn new FileReader(stream);\n}", "CodeBleu_score": 61.51076880149995}, {"code": "public static FileReader DecompressGZip(FileReader reader){\n\t\tMemoryStream ms = new MemoryStream();\n\tGZipStream gzs = new GZipStream(reader.GetStream(), CompressionMode.Decompress);\n\tgzs.CopyTo(ms);\n\tgzs.Close();\n\treturn new FileReader(ms);\n}", "CodeBleu_score": 33.432144031542435}]}
{"instance_id": "11ce5c7b009d", "generation_result": [{"code": "public void ParseStrings(SwitchForm[] switchForms, string[] commandStrings){\n\t\t_switches = new SwitchResult[switchForms.Length];\n\tfor (int i = 0; i < _switches.Length; i++)\n\t\t_switches[i] = new SwitchResult();\n\t_nonSwitchStrings = new ArrayList();\n\tParseStrings(switchForms, commandStrings, null);\n}", "CodeBleu_score": 35.90015341090923}, {"code": "public void ParseStrings(SwitchForm[] switchForms, string[] commandStrings){\n\t\tif (commandStrings == null || commandStrings.Length == 0)\n\t\treturn;\n\tif (switchForms == null || switchForms.Length == 0)\n\t\treturn;\n\t_switches = new SwitchResult[switchForms.Length];\n\tfor (int i = 0; i < _switches.Length; i++)\n\t\t_switches[i] = new SwitchResult();\n\t_nonSwitchStrings = new List<string>();\n\tfor (int i = 0; i < commandStrings.Length; i++)\n\t{\n\t\tstring commandString = commandStrings[i];\n\t\tif (ParseString(commandString, switchForms))\n\t\t\tcontinue;\n\t\tif (commandString == kStopToken)\n\t\t\tbreak;\n\t\t_nonSwitchStrings.Add(commandString);\n\t}\n}", "CodeBleu_score": 47.749568536159124}, {"code": "public void ParseStrings(SwitchForm[] switchForms, string[] commandStrings){\n\t", "CodeBleu_score": 7.310515368361058}]}
{"instance_id": "b8da2d0a3f76", "generation_result": [{"code": "public Texture2DConverter(Texture2D m_Texture2D){\n\t", "CodeBleu_score": 4.956671404714457}, {"code": "public Texture2DConverter(Texture2D m_Texture2D){\n\t", "CodeBleu_score": 4.956671404714457}, {"code": "public Texture2DConverter(Texture2D m_Texture2D){\n\t\tthrow new NotImplementedException();\n}", "CodeBleu_score": 6.718792736360784}]}
{"instance_id": "4d1412b550a3", "generation_result": [{"code": "private static string CollectActiveNames(SerializedProperty sp, List<string> result){\n\t\tresult.Clear();\n\tfor (int i = 0; i < sp.arraySize; i++) {\n\t\tSerializedProperty name = sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"name\");\n\t\tif (name.stringValue.Length > 0) {\n\t\t\tresult.Add(name.stringValue);\n\t\t}\n\t}\n\tif (result.Count == 0) {\n\t\treturn \"Nothing\";\n\t}\n\tstring s = result[0];\n\tfor (int i = 1; i < result.Count; i++) {\n\t\ts += \", \" + result[i];\n\t}\n\treturn s;\n}", "CodeBleu_score": 40.51202459965779}, {"code": "private static string CollectActiveNames(SerializedProperty sp, List<string> result){\n\t\tresult.Clear();\n\tfor (int i = 0; i < sp.arraySize; i++) {\n\t\tstring name = sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"name\").stringValue;\n\t\tif (name.Length > 0) {\n\t\t\tresult.Add(name);\n\t\t}\n\t}\n\tif (result.Count == 0) {\n\t\treturn \"Nothing\";\n\t}\n\tstring names = \"\";\n\tforeach (string name in result) {\n\t\tnames += name + \", \";\n\t}\n\tnames = names.Substring(0, names.Length - 2);\n\treturn names;\n}", "CodeBleu_score": 44.26249485551523}, {"code": "private static string CollectActiveNames(SerializedProperty sp, List<string> result){\n\t\tresult.Clear();\n\tfor (int i = 0; i < sp.arraySize; i++) {\n\t\tif (sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"active\").boolValue) {\n\t\t\tresult.Add(sp.GetArrayElementAtIndex(i).FindPropertyRelative(\"name\").stringValue);\n\t\t}\n\t}\n\tif (result.Count == 0) {\n\t\treturn \"Nothing\";\n\t}\n\telse {\n\t\tStringBuilder s_Sb = new StringBuilder();\n\t\tresult.Aggregate(s_Sb, (sb, s) => sb.Append(s).Append(\", \"));\n\t\treturn s_Sb.ToString();\n\t}\n}", "CodeBleu_score": 43.18649847505939}]}
{"instance_id": "5014bde74f8b", "generation_result": [{"code": "private static void AddMenu(GenericMenu menu, SerializedProperty sp, ShaderProperty prop, bool add){\n\t\tif (add) {\n\t\tif (!s_ActiveNames.Contains(prop.name)) {\n\t\t\tmenu.AddItem(new GUIContent(prop.name + \" (\" + prop.type + \")\"), false, AddRemove, prop);\n\t\t}\n\t} else {\n\t\tif (s_ActiveNames.Contains(prop.name)) {\n\t\t\tmenu.AddItem(new GUIContent(prop.name + \" (\" + prop.type + \")\"), false, AddRemove, prop);\n\t\t}\n\t}\n}", "CodeBleu_score": 21.377434853989325}, {"code": "private static void AddMenu(GenericMenu menu, SerializedProperty sp, ShaderProperty prop, bool add){\n\t\tif (add &&!s_ActiveNames.Contains(prop.name)) {\n\t\tmenu.AddItem(new GUIContent(prop.name + \" (\" + prop.type + \")\"), false, () => {\n\t\t\tif (sp.isArray) {\n\t\t\t\tsp.serializedObject.Update();\n\t\t\t\tsp.InsertArrayElementAtIndex(sp.arraySize);\n\t\t\t\tsp.GetArrayElementAtIndex(sp.arraySize - 1).FindPropertyRelative(\"name\").stringValue = prop.name;\n\t\t\t\tsp.GetArrayElementAtIndex(sp.arraySize - 1).FindPropertyRelative(\"type\").stringValue = prop.type;\n\t\t\t\tsp.serializedObject.ApplyModifiedProperties();\n\t\t\t} else {\n\t\t\t\tsp.FindPropertyRelative(\"name\").stringValue = prop.name;\n\t\t\t\tsp.FindPropertyRelative(\"type\").stringValue = prop.type;\n\t\t\t\tsp.serializedObject.ApplyModifiedProperties();\n\t\t\t}\n\t\t});\n\t} else if (!add && s_ActiveNames.Contains(prop.name)) {\n\t\tmenu.AddItem(new GUIContent(prop.name + \" (\" + prop.type + \")\"), false, () => {\n\t\t\tsp.serializedObject.Update();\n\t\t\tint index = sp.GetArrayElementAtIndex(s_ActiveNames.IndexOf(prop.name)).GetArrayElementAtIndex(0).FindPropertyRelative(\"name\").stringValue == prop.name? s_ActiveNames.IndexOf(prop.name) : s_ActiveNames.IndexOf(prop.name) - 1;\n\t\t\tsp.DeleteArrayElementAtIndex(index);\n\t\t\tsp.serializedObject.ApplyModifiedProperties();\n\t\t});\n\t}\n}", "CodeBleu_score": 39.09733673046198}, {"code": "private static void AddMenu(GenericMenu menu, SerializedProperty sp, ShaderProperty prop, bool add){\n\t\tif (add) {\n\t\tif (!s_ActiveNames.Contains(prop.name)) {\n\t\t\tmenu.AddItem(new GUIContent(prop.name + \" (\" + prop.type + \")\"), false, AddRemoveMenu, new AddRemoveMenuInfo(sp, prop, true));\n\t\t}\n\t} else {\n\t\tif (s_ActiveNames.Contains(prop.name)) {\n\t\t\tmenu.AddItem(new GUIContent(prop.name + \" (\" + prop.type + \")\"), false, AddRemoveMenu, new AddRemoveMenuInfo(sp, prop, false));\n\t\t}\n\t}\n}", "CodeBleu_score": 22.76158451472765}]}
{"instance_id": "20e390481814", "generation_result": [{"code": "private static bool DrawFloatOrVector3Field(SerializedProperty sp, bool showXyz){\n\t\tbool isVector3 = sp.propertyType == SerializedPropertyType.Vector3;\n\tbool isFloat = sp.propertyType == SerializedPropertyType.Float;\n\tif (!isVector3 &&!isFloat) {\n\t\treturn showXyz;\n\t}\n\tfloat x = sp.vector3Value.x;\n\tfloat y = sp.vector3Value.y;\n\tfloat z = sp.vector3Value.z;\n\tbool showXyzNew = showXyz;\n\tif (isVector3) {\n\t\tif (Mathf.Approximately(x, y) && Mathf.Approximately(x, z)) {\n\t\t\tshowXyzNew = false;\n\t\t}\n\t}\n\tEditorGUILayout.BeginHorizontal();\n\tif (showXyzNew) {\n\t\tEditorGUI.BeginChangeCheck();\n\t\tVector3 v = EditorGUILayout.Vector3Field(sp.displayName, sp.vector3Value);\n\t\tif (EditorGUI.EndChangeCheck()) {\n\t\t\tsp.vector3Value = v;\n\t\t}\n\t} else {\n\t\tEditorGUI.BeginChangeCheck();\n\t\tfloat f = EditorGUILayout.FloatField(sp.displayName, x);\n\t\tif (EditorGUI.EndChangeCheck()) {\n\t\t\tsp.vector3Value = new Vector3(f, f, f);\n\t\t}\n\t}\n\tEditorGUILayout.EndHorizontal();\n\tEditorGUILayout.BeginHorizontal();\n\tshowXyzNew = GUILayout.Toggle(showXyzNew, \"Vector3\", GUILayout.Width(80f));\n\tEditorGUILayout.EndHorizontal();\n\treturn showXyzNew;\n}", "CodeBleu_score": 39.02636288541987}, {"code": "private static bool DrawFloatOrVector3Field(SerializedProperty sp, bool showXyz){\n\t\tif (sp.propertyType!= SerializedPropertyType.Float) {\n\t\tDebug.LogWarning(\"DrawFloatOrVector3Field only works on float properties\");\n\t\treturn false;\n\t}\n\n\tbool changed = false;\n\tEditorGUILayout.BeginHorizontal();\n\tEditorGUI.BeginChangeCheck();\n\tif (showXyz) {\n\t\tEditorGUILayout.PropertyField(sp);\n\t} else {\n\t\tfloat x = sp.floatValue;\n\t\tEditorGUILayout.PropertyField(sp, new GUIContent(\"x\"));\n\t\tif (EditorGUI.EndChangeCheck()) {\n\t\t\tif (Mathf.Approximately(x, sp.floatValue)) {\n\t\t\t\tshowXyz = true;\n\t\t\t}\n\t\t}\n\t\tif (showXyz) {\n\t\t\tsp.vector3Value = new Vector3(x, x, x);\n\t\t} else {\n\t\t\tsp.floatValue = x;\n\t\t}\n\t}\n\tshowXyz = GUILayout.Toggle(showXyz, new GUIContent(\"xyz\", \"Toggle between single float and Vector3 display modes\"), GUILayout.Width(40));\n\tif (EditorGUI.EndChangeCheck()) {\n\t\tchanged = true;\n\t}\n\tEditorGUILayout.EndHorizontal();\n\treturn changed;\n}", "CodeBleu_score": 41.556415004038115}, {"code": "private static bool DrawFloatOrVector3Field(SerializedProperty sp, bool showXyz){\n\t\tif (sp == null) {\n\t\treturn false;\n\t}\n\n\tif (sp.propertyType!= SerializedPropertyType.Float && sp.propertyType!= SerializedPropertyType.Vector3) {\n\t\treturn false;\n\t}\n\n\tEditorGUILayout.BeginHorizontal();\n\n\tEditorGUI.BeginChangeCheck();\n\n\tif (sp.propertyType == SerializedPropertyType.Float) {\n\t\tshowXyz = GUILayout.Toggle(showXyz, \"XYZ\", GUILayout.Width(40));\n\t\tif (showXyz) {\n\t\t\tsp.vector3Value = EditorGUILayout.Vector3Field(\"\", sp.vector3Value);\n\t\t} else {\n\t\t\tfloat x = sp.floatValue;\n\t\t\tx = EditorGUILayout.FloatField(\"\", x);\n\t\t\tsp.floatValue = x;\n\t\t\tif (EditorGUI.EndChangeCheck()) {\n\t\t\t\tsp.vector3Value = new Vector3(x, x, x);\n\t\t\t}\n\t\t}\n\t} else if (sp.propertyType == SerializedPropertyType.Vector3) {\n\t\tshowXyz = GUILayout.Toggle(showXyz, \"XYZ\", GUILayout.Width(40));\n\t\tif (showXyz) {\n\t\t\tsp.vector3Value = EditorGUILayout.Vector3Field(\"\", sp.vector3Value);\n\t\t} else {\n\t\t\tfloat x = sp.vector3Value.x;\n\t\t\tfloat y = sp.vector3Value.y;\n\t\t\tfloat z = sp.vector3Value.z;\n\t\t\tx = EditorGUILayout.FloatField(\"\", x);\n\t\t\tif (EditorGUI.EndChangeCheck()) {\n\t\t\t\tsp.vector3Value = new Vector3(x, y, z);\n\t\t\t}\n\t\t}\n\t}\n\n\tEditorGUILayout.EndHorizontal();\n\n\treturn showXyz;\n}", "CodeBleu_score": 41.96938265843464}]}
{"instance_id": "c3587cbcda7e", "generation_result": [{"code": "public static Material Add(Material baseMat, Texture texture, int id, int props){\n\t\treturn Internal_Add(baseMat, texture, id, props);\n}", "CodeBleu_score": 7.257394245380025}, {"code": "public static Material Add(Material baseMat, Texture texture, int id, int props){\n\t\treturn Internal_Add(baseMat, texture, id, props);\n}", "CodeBleu_score": 7.257394245380025}, {"code": "public static Material Add(Material baseMat, Texture texture, int id, int props){\n\t\tif( baseMat == null ) {\n\t\tDebug.LogError( \"Material.Add - baseMat is null\" );\n\t\treturn null;\n\t}\n\tif( texture == null ) {\n\t\tDebug.LogError( \"Material.Add - texture is null\" );\n\t\treturn null;\n\t}\n\tif( id < 0 ) {\n\t\tDebug.LogError( \"Material.Add - id is less than zero\" );\n\t\treturn null;\n\t}\n\tif( props < 0 ) {\n\t\tDebug.LogError( \"Material.Add - props is less than zero\" );\n\t\treturn null;\n\t}\n\tint index = -1;\n\tfor( int i = 0; i < s_Entries.Count; ++i ) {\n\t\tMaterialEntry entry = s_Entries[i];\n\t\tif( entry.baseMat == baseMat && entry.texture == texture && entry.id == id && entry.props == props ) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif( index < 0 ) {\n\t\tMaterialEntry entry = new MaterialEntry();\n\t\tentry.baseMat = baseMat;\n\t\tentry.texture = texture;\n\t\tentry.id = id;\n\t\tentry.props = props;\n\t\tentry.count = 1;\n\t\tentry.mat = new Material( baseMat );\n\t\tentry.mat.mainTexture = texture;\n\t\tentry.mat.SetInt( \"_Id\", id );\n\t\tentry.mat.SetInt( \"_Props\", props );\n\t\ts_Entries.Add( entry );\n\t\treturn entry.mat;\n\t} else {\n\t\tMaterialEntry entry = s_Entries[index];\n\t\tentry.count++;\n\t\treturn entry.mat;\n\t}\n}", "CodeBleu_score": 33.67025639737739}]}
{"instance_id": "a35149bc8b8b", "generation_result": [{"code": "public static void Remove(Material customMat){\n\t\tif (customMat == null) {\n\t\tDebug.LogError(\"Custom Material is null\");\n\t\treturn;\n\t}\n\tfor (int i = 0; i < s_Entries.Count; i++) {\n\t\tif (s_Entries[i].m_CustomMat == customMat) {\n\t\t\ts_Entries[i].m_Count--;\n\t\t\tif (s_Entries[i].m_Count == 0) {\n\t\t\t\ts_Entries[i].m_CustomMat.DestroyImmediate();\n\t\t\t\ts_Entries[i].m_CustomMat = null;\n\t\t\t\ts_Entries.RemoveAt(i);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n}", "CodeBleu_score": 34.93096661438923}, {"code": "public static void Remove(Material customMat){\n\t\tif (customMat == null) {\n\t\tDebug.LogError(\"CustomMatManager.Remove: material is null\");\n\t\treturn;\n\t}\n\n\tfor (int i = 0; i < s_Entries.Count; ++i) {\n\t\tif (s_Entries[i].mat == customMat) {\n\t\t\ts_Entries[i].count -= 1;\n\t\t\tif (s_Entries[i].count == 0) {\n\t\t\t\tObject.DestroyImmediate(customMat);\n\t\t\t\ts_Entries[i].mat = null;\n\t\t\t\ts_Entries[i].count = 0;\n\t\t\t\ts_Entries[i].isDirty = false;\n\t\t\t\ts_Entries.RemoveAt(i);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\tDebug.LogError(\"CustomMatManager.Remove: material not found in list\");\n}", "CodeBleu_score": 37.88958225545904}, {"code": "public static void Remove(Material customMat){\n\t\tif (customMat == null) {\n\t\tDebug.LogWarning(\"Material is null.\");\n\t\treturn;\n\t}\n\tfor (int i = 0; i < s_Entries.Count; i++) {\n\t\tif (s_Entries[i].m_Material == customMat) {\n\t\t\ts_Entries[i].m_Count--;\n\t\t\tif (s_Entries[i].m_Count <= 0) {\n\t\t\t\ts_Entries[i].m_Material.DestroyImmediate();\n\t\t\t\ts_Entries[i].m_Material = null;\n\t\t\t\ts_Entries[i].m_Count = 0;\n\t\t\t\ts_Entries.RemoveAt(i);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n}", "CodeBleu_score": 32.835982801573785}]}
{"instance_id": "892bbee52ab9", "generation_result": [{"code": "private void RefreshParticles(GameObject root){\n\t\tList<ParticleSystem> psList = new List<ParticleSystem>(root.GetComponentsInChildren<ParticleSystem>());\n\tList<ParticleSystem> psListToRemove = new List<ParticleSystem>();\n\tfor (int i = 0; i < psList.Count; i++) {\n\t\tif (psList[i].GetComponentInParent<UIParticle>()!= this) {\n\t\t\tpsListToRemove.Add(psList[i]);\n\t\t} else {\n\t\t\tif (psList[i].textureSheetAnimation.enabled!= textureSheetAnimation.enabled) {\n\t\t\t\tpsList[i].textureSheetAnimation.enabled = textureSheetAnimation.enabled;\n\t\t\t}\n\t\t\tif (psList[i].textureSheetAnimation.enabled) {\n\t\t\t\tif (psList[i].textureSheetAnimation.numTilesX!= textureSheetAnimation.numTilesX) {\n\t\t\t\t\tpsList[i].textureSheetAnimation.numTilesX = textureSheetAnimation.numTilesX;\n\t\t\t\t}\n\t\t\t\tif (psList[i].textureSheetAnimation.numTilesY!= textureSheetAnimation.numTilesY) {\n\t\t\t\t\tpsList[i].textureSheetAnimation.numTilesY = textureSheetAnimation.numTilesY;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tforeach (ParticleSystem ps in psListToRemove) {\n\t\tpsList.Remove(ps);\n\t}\n\tRefreshParticles(psList);\n}", "CodeBleu_score": 30.10493446047106}, {"code": "private void RefreshParticles(GameObject root){\n\t\tList<ParticleSystem> ps = new List<ParticleSystem>();\n\troot.GetComponentsInChildren(ps);\n\tfor (int i = ps.Count - 1; i >= 0; i--) {\n\t\tif (ps[i].GetComponentInParent<UIParticle>()!= this) {\n\t\t\tps.RemoveAt(i);\n\t\t}\n\t}\n\tif (ps.Count == 0) {\n\t\treturn;\n\t}\n\tParticleSystem.TextureSheetAnimationModule tsam = ps[0].textureSheetAnimation;\n\tif (tsam.enabled && tsam.numTilesX!= m_TilesX || tsam.numTilesY!= m_TilesY) {\n\t\tfor (int i = 0; i < ps.Count; i++) {\n\t\t\ttsam = ps[i].textureSheetAnimation;\n\t\t\ttsam.numTilesX = m_TilesX;\n\t\t\ttsam.numTilesY = m_TilesY;\n\t\t\tps[i].textureSheetAnimation = tsam;\n\t\t}\n\t}\n\tRefreshParticles(ps.ToArray());\n}", "CodeBleu_score": 37.71468091965632}, {"code": "private void RefreshParticles(GameObject root){\n\t\tList<ParticleSystem> ps = new List<ParticleSystem>();\n\troot.GetComponentsInChildren<ParticleSystem>(ps);\n\tfor (int i = 0; i < ps.Count; i++) {\n\t\tUIParticle uiParticle = ps[i].GetComponentInParent<UIParticle>();\n\t\tif (uiParticle == null || uiParticle!= this) {\n\t\t\tps.RemoveAt(i);\n\t\t\ti--;\n\t\t}\n\t}\n\tif (ps.Count > 0) {\n\t\tif (ps[0].main.simulationSpace == ParticleSystemSimulationSpace.Local) {\n\t\t\tfor (int i = 0; i < ps.Count; i++) {\n\t\t\t\tif (ps[i].textureSheetAnimation.enabled) {\n\t\t\t\t\tps[i].textureSheetAnimation.enabled = false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < ps.Count; i++) {\n\t\t\t\tif (!ps[i].textureSheetAnimation.enabled) {\n\t\t\t\t\tps[i].textureSheetAnimation.enabled = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tparticles = ps;\n}", "CodeBleu_score": 39.23767335456972}]}
{"instance_id": "d6b082e37770", "generation_result": [{"code": "private void RegisterColorSwapManagers(ContainerBuilder containerBuilder){\n\ttAssembly = Assembly.GetExecutingAssembly();\ncontainerBuilder\n               .RegisterAssemblyTypes(currentAssembly)\n               .AssignableTo<IColorSwapManager>()\n               .As<IColorSwapManager>()\n               .SingleInstance();\n}", "CodeBleu_score": 72.07562624697272}, {"code": "private void RegisterColorSwapManagers(ContainerBuilder containerBuilder){\n\ttAssembly = Assembly.GetExecutingAssembly();\ncontainerBuilder.RegisterAssemblyTypes(currentAssembly).AssignableTo<IColorSwapManager>().As<IColorSwapManager>().SingleInstance();\n}", "CodeBleu_score": 52.140298747300406}, {"code": "private void RegisterColorSwapManagers(ContainerBuilder containerBuilder){\n\ttAssembly = Assembly.GetExecutingAssembly();\ncontainerBuilder\n               .RegisterAssemblyTypes(currentAssembly)\n               .AssignableTo<IColorSwapManager>()\n               .As<IColorSwapManager>()\n               .SingleInstance();\n}", "CodeBleu_score": 72.07562624697272}]}
{"instance_id": "2359d72977a4", "generation_result": [{"code": " public async Task ConnectAsync(string ipAddress, int port){\n\t\tif (this.CurrentState == null) {\n\t\tthrow new Exception(\"Cannot connect with a null state\");\n\t}\n\tthis.IpAddress = ipAddress;\n\tthis.Port = port;\n\tawait this.CurrentState.InitializeAsync(this.IpAddress, this.Port);\n\tawait this.CurrentState.NegotiateReservationAsync();\n}", "CodeBleu_score": 30.679844670751628}, {"code": " public async Task ConnectAsync(string ipAddress, int port){\n\t\t_ipAddress = ipAddress;\n\t_port = port;\n\tawait _serializer.InitializeAsync();\n\tawait _currentState.NegotiateReservationAsync();\n}", "CodeBleu_score": 39.77106546633217}, {"code": " public async Task ConnectAsync(string ipAddress, int port){\n\t\t_ipAddress = ipAddress;\n\t_port = port;\n\tawait _serializer.InitializeAsync();\n\tawait _currentState.NegotiateReservationAsync();\n}", "CodeBleu_score": 39.77106546633217}]}
{"instance_id": "151a27d718b1", "generation_result": [{"code": "public void UpdateConnectionState(IMultiplayerSessionConnectionState sessionConnectionState){\n\t\t// TODO: Implement this function.\n\tthrow new NotImplementedException();\n}", "CodeBleu_score": 1.9259176485086862}, {"code": "public void UpdateConnectionState(IMultiplayerSessionConnectionState sessionConnectionState){\n\t\t// Validate the input\n\tValidate.NotNull(sessionConnectionState, \"sessionConnectionState\");\n\t// Log the transition from the previous state to the new state\n\tLog.Debug(LogCategory.Multiplayer, \"Updating connection state from {0} to {1}\", CurrentState.CurrentStage, sessionConnectionState.CurrentStage);\n\t// Update the current multiplayer session connection state\n\tCurrentState = sessionConnectionState;\n\t// If the new state is SESSION_RESERVED, update the player name in the log\n\tif (CurrentState.CurrentStage == MultiplayerSessionConnectionState.Stage.SESSION_RESERVED) {\n\t\tLog.Debug(LogCategory.Multiplayer, \"Player name: {0}\", CurrentState.PlayerName);\n\t}\n\t// Invoke the ConnectionStateChanged event\n\tConnectionStateChanged?.Invoke(this, EventArgs.Empty);\n}", "CodeBleu_score": 39.24526732268426}, {"code": "public void UpdateConnectionState(IMultiplayerSessionConnectionState sessionConnectionState){\n\t\n}", "CodeBleu_score": 1.4713632696835737}]}
{"instance_id": "7f7717307d6a", "generation_result": [{"code": "public async Task StartAsync(string ipAddress, int serverPort){\n\t\tclient = new LiteNetLibClient();\n\tclient.Start();\n\tclient.Connect(ipAddress, serverPort, \"nitrox\");\n\tawait connectedEvent.WaitAsync(2000);\n\tconnectedEvent.Reset();\n}", "CodeBleu_score": 45.66744820689548}, {"code": "public async Task StartAsync(string ipAddress, int serverPort){\n\t\tLog.Info(\"Starting client...\");\n\tclient = new LiteNetLibClient();\n\tclient.Start();\n\tLog.Info(\"Attempting to connect to server...\");\n\tconnectedEvent.Reset();\n\tclient.Connect(ipAddress, serverPort, \"nitrox\");\n\tawait connectedEvent.WaitAsync(2000);\n\tconnectedEvent.Reset();\n}", "CodeBleu_score": 51.432565386279386}, {"code": "public async Task StartAsync(string ipAddress, int serverPort){\n\t\tclient = new LiteNetLibClient();\n\tclient.NetworkErrorEvent += Client_NetworkErrorEvent;\n\tclient.NetworkReceiveEvent += Client_NetworkReceiveEvent;\n\tclient.NetworkReceiveUnconnectedEvent += Client_NetworkReceiveUnconnectedEvent;\n\tclient.PeerConnectedEvent += Client_PeerConnectedEvent;\n\tclient.PeerDisconnectedEvent += Client_PeerDisconnectedEvent;\n\tclient.Start();\n\tawait Task.Run(() => {\n\t\tclient.Connect(ipAddress, serverPort, \"nitrox\");\n\t}).ConfigureAwait(false);\n\tawait Task.Run(() => {\n\t\tconnectedEvent.WaitOne(2000);\n\t}).ConfigureAwait(false);\n\tconnectedEvent.Reset();\n}", "CodeBleu_score": 48.38190345588663}]}
{"instance_id": "eeb95434f1eb", "generation_result": [{"code": "public void StartFireSuppression(NitroxId id){\n\t\tCyclopsFireSuppressionSystemButton fireSuppButton = cyclops.RequireComponentInChildren<CyclopsFireSuppressionSystemButton>();\n\tif (fireSuppButton!= null) {\n\t\tPacketSuppressor<CyclopsFireSuppressionSystem>.Suppress(() => {\n\t\t\tfireSuppButton.StartCoroutine(fireSuppButton.StartFireSuppressionSystem(fireSuppButton.subFire));\n\t\t\tfireSuppButton.StartCooldown();\n\t\t});\n\t}\n}", "CodeBleu_score": 61.80961534321467}, {"code": "public void StartFireSuppression(NitroxId id){\n\t\tvar cyclops = NitroxEntity.RequireObjectFrom(id);\n\tvar fireSuppButton = cyclops.RequireComponentInChildren<CyclopsFireSuppressionSystemButton>();\n\tPacketSuppressor<CyclopsFireSuppressionSystem>.Suppress(() => {\n\t\tfireSuppButton.StartCoroutine(fireSuppButton.StartFireSuppressionSystem(fireSuppButton.subFire));\n\t\tfireSuppButton.StartCooldown();\n\t});\n}", "CodeBleu_score": 61.87438764367085}, {"code": "public void StartFireSuppression(NitroxId id){\n\t\tif (id.IsInvalid()) return;\n\tCyclopsEntity cyclops = id.RequireObjectFrom<CyclopsEntity>();\n\tCyclopsFireSuppressionSystemButton fireSuppButton = cyclops.RequireComponentInChildren<CyclopsFireSuppressionSystemButton>();\n\tPacketSuppressor<CyclopsFireSuppressionSystemButton>.Suppress(fireSuppButton, () => fireSuppButton.StartFireSuppressionSystem(fireSuppButton.subFire));\n\tPacketSuppressor<CyclopsFireSuppressionSystemButton>.Suppress(fireSuppButton, () => fireSuppButton.StartCooldown());\n}", "CodeBleu_score": 59.76015083182067}]}
{"instance_id": "a23a043559c6", "generation_result": [{"code": "public void OnDamagePointRepaired(SubRoot subRoot, CyclopsDamagePoint damagePoint, float repairAmount){\n\t\tif (subRoot.TryGetIdOrWarn(out var id)) {\n\t\tvar repairPacket = new RepairPacket(id, damagePoint.name, repairAmount);\n\t\tpacketSender.Send(repairPacket);\n\t}\n}", "CodeBleu_score": 20.320350503910486}, {"code": "public void OnDamagePointRepaired(SubRoot subRoot, CyclopsDamagePoint damagePoint, float repairAmount){\n\t\tif (subRoot.TryGetIdOrWarn(out var id)) {\n\t\tvar packet = new CyclopsDamagePacket(id, damagePoint, repairAmount);\n\t\tpacketSender.Send(packet);\n\t}\n}", "CodeBleu_score": 20.82159753564737}, {"code": "public void OnDamagePointRepaired(SubRoot subRoot, CyclopsDamagePoint damagePoint, float repairAmount){\n\t\tif (subRoot.TryGetIdOrWarn(out var id)) {\n\t\tvar packet = new RepairPacket {\n\t\t\tId = id,\n\t\t\tDamagePoint = damagePoint,\n\t\t\tRepairAmount = repairAmount\n\t\t};\n\t\tpacketSender.Send(packet);\n\t}\n}", "CodeBleu_score": 22.024976737443374}]}
{"instance_id": "dfb3586de856", "generation_result": [{"code": "private void BroadcastDamageState(SubRoot subRoot, Optional<DamageInfo> info){\n\t\tif (!subRoot.TryGetIdOrWarn(out NitroxId subRootId)) {\n\t\treturn;\n\t}\n\n\tif (subRoot.health.health <= 0) {\n\t\treturn;\n\t}\n\n\tCyclopsDamageInfoData damageInfo = null;\n\n\tif (info.HasValue) {\n\t\tdamageInfo = new CyclopsDamageInfoData(info.Value.damage, info.Value.dealer.GetId(), info.Value.position.ToDto());\n\t}\n\n\tIEnumerable<int> activeDamagePoints = GetActiveDamagePoints(subRoot);\n\tIEnumerable<CyclopsFireData> activeFires = GetActiveRoomFires(subRoot.GetComponent<SubFire>());\n\n\tCyclopsDamage packet = new CyclopsDamage(subRootId, damageInfo, activeDamagePoints.ToArray(), activeFires.ToArray());\n\n\tpacketSender.Send(packet);\n}", "CodeBleu_score": 52.275177225950365}, {"code": "private void BroadcastDamageState(SubRoot subRoot, Optional<DamageInfo> info){\n\t\tif (!subRoot.TryGetIdOrWarn(out NitroxId subRootId)) {\n\t\treturn;\n\t}\n\n\tif (subRoot.GetHealth() < 1f) {\n\t\treturn;\n\t}\n\n\tCyclopsDamageInfoData? damageInfo = null;\n\tif (info.HasValue) {\n\t\tdamageInfo = new CyclopsDamageInfoData(info.Value.damage, info.Value.dealer, info.Value.position);\n\t}\n\n\tCyclopsDamagePacket packet = new CyclopsDamagePacket(subRootId, damageInfo, GetActiveDamagePoints(subRoot).ToArray(), GetActiveRoomFires(subRoot.GetComponent<SubFire>()).ToArray());\n\tpacketSender.Send(packet);\n}", "CodeBleu_score": 42.68033262857017}, {"code": "private void BroadcastDamageState(SubRoot subRoot, Optional<DamageInfo> info){\n\t\tif (!subRoot.TryGetIdOrWarn(out NitroxId subRootId)) {\n\t\treturn;\n\t}\n\n\tif (subRoot.GetComponent<LiveMixin>().health <= 0) {\n\t\treturn;\n\t}\n\n\tCyclopsDamageInfoData? damageInfo = null;\n\n\tif (info.HasValue) {\n\t\tdamageInfo = new CyclopsDamageInfoData(info.Value.damageDealerId, info.Value.damagePosition);\n\t}\n\n\tIEnumerable<int> activeDamagePoints = GetActiveDamagePoints(subRoot);\n\tIEnumerable<CyclopsFireData> activeRoomFires = GetActiveRoomFires(subRoot.GetComponent<SubFire>());\n\n\tCyclopsDamage packet = new CyclopsDamage(subRootId, damageInfo, activeDamagePoints.ToArray(), activeRoomFires.ToArray());\n\tpacketSender.Send(packet);\n}", "CodeBleu_score": 45.54290338402609}]}
{"instance_id": "03223c10109f", "generation_result": [{"code": "public void CleanupExistingEntities(List<Entity> dirtyEntities){\n\t\tforeach (Entity entity in dirtyEntities) {\n\t\tRemoveEntityHierarchy(entity);\n\t\tGameObject gameObject = GetGameObjectFromEntity(entity);\n\t\tif (gameObject!= null) {\n\t\t\tUnityEngine.Object.Destroy(gameObject);\n\t\t}\n\t}\n}", "CodeBleu_score": 50.81754298887382}, {"code": "public void CleanupExistingEntities(List<Entity> dirtyEntities){\n\t\tforeach (Entity entity in dirtyEntities) {\n\t\tRemoveEntityHierarchy(entity);\n\t\tGameObject gameObject = NitroxEntity.GetObjectFrom(entity.Id);\n\t\tif (gameObject!= null) {\n\t\t\tUnityEngine.Object.Destroy(gameObject);\n\t\t}\n\t}\n}", "CodeBleu_score": 58.90349805040543}, {"code": "public void CleanupExistingEntities(List<Entity> dirtyEntities){\n\t\tforeach (Entity entity in dirtyEntities) {\n\t\tRemoveEntityHierarchy(entity);\n\t\tGameObject entityGameObject = GetObjectFrom(entity);\n\t\tif (entityGameObject!= null) {\n\t\t\tUnityEngine.Object.Destroy(entityGameObject);\n\t\t}\n\t}\n}", "CodeBleu_score": 50.24238424616605}]}
{"instance_id": "990abe8e473e", "generation_result": [{"code": "private void AddPendingParentEntity(Entity entity){\n\t\tList<Entity> pendingParentEntities;\n\tif (!pendingParentEntitiesByParentId.TryGetValue(entity.parentId, out pendingParentEntities)) {\n\t\tpendingParentEntities = new List<Entity>();\n\t\tpendingParentEntitiesByParentId[entity.parentId] = pendingParentEntities;\n\t}\n\tpendingParentEntities.Add(entity);\n}", "CodeBleu_score": 52.025149953140584}, {"code": "private void AddPendingParentEntity(Entity entity){\n\t\tif (!pendingParentEntitiesByParentId.ContainsKey(entity.parentId)) {\n\t\tpendingParentEntitiesByParentId.Add(entity.parentId, new List<Entity>());\n\t}\n\tpendingParentEntitiesByParentId[entity.parentId].Add(entity);\n}", "CodeBleu_score": 32.833962641498545}, {"code": "private void AddPendingParentEntity(Entity entity){\n\t\tif (!pendingParentEntitiesByParentId.TryGetValue(entity.ParentId, out var pendingEntities)) {\n\t\tpendingEntities = new List<Entity>();\n\t\tpendingParentEntitiesByParentId[entity.ParentId] = pendingEntities;\n\t}\n\tpendingEntities.Add(entity);\n}", "CodeBleu_score": 66.60154496454119}]}
{"instance_id": "a885fbb1f085", "generation_result": [{"code": "public void BroadcastClawUse(ExosuitClawArm clawArm, float cooldown){\n\t\tif (cooldown == pickupCooldown) {\n\t\tBroadcastArmAction(clawArm.techType, clawArm, ExosuitArmAction.START_USE_TOOL, null, null);\n\t} else if (cooldown == punchCooldown) {\n\t\tBroadcastArmAction(clawArm.techType, clawArm, ExosuitArmAction.ALT_HIT, null, null);\n\t} else {\n\t\tErrorLog.Add(\"ExosuitArmAction: Invalid cooldown for claw arm: \" + cooldown);\n\t}\n}", "CodeBleu_score": 36.58078639546061}, {"code": "public void BroadcastClawUse(ExosuitClawArm clawArm, float cooldown){\n\t\tif (cooldown == pickupCooldown) {\n\t\tBroadcastArmAction(clawArm.GetTechType(), clawArm, ExosuitArmAction.START_USE_TOOL, null, null);\n\t} else if (cooldown == punchCooldown) {\n\t\tBroadcastArmAction(clawArm.GetTechType(), clawArm, ExosuitArmAction.ALT_HIT, null, null);\n\t} else {\n\t\tErrorLog.Error(\"Invalid cooldown for ExosuitClawArm: \" + cooldown);\n\t}\n}", "CodeBleu_score": 36.645564186314026}, {"code": "public void BroadcastClawUse(ExosuitClawArm clawArm, float cooldown){\n\t\tif (cooldown == clawArm.pickupCooldown) {\n\t\tBroadcastArmAction(clawArm.techType, clawArm, ExosuitArmAction.START_USE_TOOL, null, null);\n\t} else if (cooldown == clawArm.punchCooldown) {\n\t\tBroadcastArmAction(clawArm.techType, clawArm, ExosuitArmAction.ALT_HIT, null, null);\n\t} else {\n\t\tErrorLog.Add(\"BroadcastClawUse: Invalid cooldown value\");\n\t}\n}", "CodeBleu_score": 32.795027137618284}]}
{"instance_id": "e390441c8dc2", "generation_result": [{"code": "public void BroadcastBatteryAdd(GameObject gameObject, GameObject parent, TechType techType){\n\t\tif (gameObject.TryGetIdOrWarn(out var id) && parent.TryGetIdOrWarn(out var parentId)) {\n\t\tvar metadata = entityMetadataManager.Extract(gameObject, techType);\n\t\tpacketSender.Send(new EntitySpawnedByClient(new InstalledBatteryEntity(id, parentId, metadata)));\n\t}\n}", "CodeBleu_score": 40.88129891187037}, {"code": "public void BroadcastBatteryAdd(GameObject gameObject, GameObject parent, TechType techType){\n\t\tif (gameObject.TryGetIdOrWarn(out ushort id) && parent.TryGetIdOrWarn(out ushort parentId)) {\n\t\tvar metadata = _entityMetadataManager.Extract(gameObject, techType);\n\t\tvar batteryEntity = new InstalledBatteryEntity(id, parentId, metadata);\n\t\t_packetSender.Send(new EntitySpawnedByClient(batteryEntity));\n\t}\n}", "CodeBleu_score": 39.657267194159104}, {"code": "public void BroadcastBatteryAdd(GameObject gameObject, GameObject parent, TechType techType){\n\t\tif (gameObject.TryGetIdOrWarn(out ushort id)) {\n\t\tif (parent.TryGetIdOrWarn(out ushort parentId)) {\n\t\t\tvar metadata = _entityMetadataManager.Extract(gameObject, techType);\n\t\t\tvar installedBatteryEntity = new InstalledBatteryEntity {\n\t\t\t\tid = id,\n\t\t\t\tparentId = parentId,\n\t\t\t\ttechType = techType.ToDto(),\n\t\t\t\tmetadata = metadata.OrNull()\n\t\t\t};\n\t\t\t_packetSender.Send(new EntitySpawnedByClient {\n\t\t\t\tentity = installedBatteryEntity\n\t\t\t});\n\t\t}\n\t}\n}", "CodeBleu_score": 44.37665506720187}]}
{"instance_id": "a87b772a8e5a", "generation_result": [{"code": "public void PickedUp(GameObject gameObject, TechType techType){\n\t\tPickingUpObject = gameObject;\n\tRemoveAnyRemoteControl(gameObject);\n\tNitroxId itemId = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\tentities.MarkAsSpawned(itemId);\n\tLog.Debug($\"[Items] Picked up {techType} with id {itemId}\");\n\tpacketSender.Send(new PickupItem(itemId));\n\tPickingUpObject = null;\n}", "CodeBleu_score": 30.664544912220926}, {"code": "public void PickedUp(GameObject gameObject, TechType techType){\n\t\tif (PickingUpObject!= null) {\n\t\treturn;\n\t}\n\n\tPickingUpObject = gameObject;\n\n\tRemoveAnyRemoteControl(gameObject);\n\n\tNitroxId itemId = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\n\tentities.StopWatchingEntity(itemId);\n\n\tInventoryItemEntity inventoryItemEntity = ConvertToInventoryItemEntity(gameObject, entityMetadataManager);\n\n\tentities.MarkAsSpawned(inventoryItemEntity);\n\n\tLog.Debug($\"[Items] Picked up {techType} with id {itemId}\");\n\n\tPickupItem packet = new(itemId, techType.ToDto());\n\n\tpacketSender.Send(packet);\n\n\tPickingUpObject = null;\n}", "CodeBleu_score": 44.66626543601756}, {"code": "public void PickedUp(GameObject gameObject, TechType techType){\n\t\tif (gameObject == null) {\n\t\treturn;\n\t}\n\n\tPickingUpObject = gameObject;\n\tRemoveAnyRemoteControl(gameObject);\n\tNitroxId itemId = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\tLog.Debug($\"[Items] Picked up {gameObject.name} with id {itemId}\");\n\tentities.StopWatchingEntity(gameObject);\n\tInventoryItemEntity inventoryItemEntity = ConvertToInventoryItemEntity(gameObject, entityMetadataManager);\n\tentities.MarkAsSpawned(inventoryItemEntity);\n\tpacketSender.Send(new PickupItem(inventoryItemEntity));\n\tPickingUpObject = null;\n}", "CodeBleu_score": 48.155316968081436}]}
{"instance_id": "b6d1e68114e1", "generation_result": [{"code": "public static InventoryItemEntity ConvertToInventoryItemEntity(GameObject gameObject, EntityMetadataManager entityMetadataManager){\n\troxId id = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\tstring classId = gameObject.GetClassId();\n\tTechType techType = gameObject.RequireComponent<TechTag>().type;\n\tOptional<EntityMetadata> metadata = entityMetadataManager.Extract(gameObject);\n\tNitroxId playerId = Player.main.GetNitroxId();\n\tOptional<Battery> battery = BatteryChildEntityHelper.TryPopulateInstalledBattery(gameObject);\n\tList<Entity> children = GetPrefabChildren(gameObject, id, entityMetadataManager).ToList();\n\treturn new InventoryItemEntity(id, classId, techType.ToDto(), playerId, metadata, battery, children);\n}", "CodeBleu_score": 57.355453423884086}, {"code": "public static InventoryItemEntity ConvertToInventoryItemEntity(GameObject gameObject, EntityMetadataManager entityMetadataManager){\n\troxId id = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\tstring classId = gameObject.GetComponent<PrefabIdentifier>().classId;\n\tTechType techType = gameObject.GetComponent<TechTag>().type;\n\tEntityMetadata metadata = entityMetadataManager.Extract(gameObject);\n\tNitroxId playerId = Player.main.TryGetNitroxId();\n\tList<Entity> childEntities = GetPrefabChildren(gameObject, id, entityMetadataManager).ToList();\n\tInventoryItemEntity inventoryItemEntity = new InventoryItemEntity(id, classId, techType.ToDto(), playerId, metadata, childEntities);\n\tBatteryChildEntityHelper.TryPopulateInstalledBattery(inventoryItemEntity);\n\treturn inventoryItemEntity;\n}", "CodeBleu_score": 49.963642322831724}, {"code": "public static InventoryItemEntity ConvertToInventoryItemEntity(GameObject gameObject, EntityMetadataManager entityMetadataManager){\n\troxId id = NitroxEntity.GetIdOrGenerateNew(gameObject);\n\tstring classId = gameObject.GetComponent<PrefabIdentifier>().classId;\n\tTechType techType = gameObject.GetComponent<TechTag>().type;\n\tOptional<EntityMetadata> metadata = entityMetadataManager.Extract(gameObject);\n\tNitroxId playerId = Player.main.GetNitroxId();\n\tInventoryItemEntity inventoryItemEntity = new InventoryItemEntity(id, classId, techType.ToDto(), metadata.Value, playerId);\n\tBatteryChildEntityHelper.TryPopulateInstalledBattery(inventoryItemEntity, gameObject);\n\treturn inventoryItemEntity;\n}", "CodeBleu_score": 46.60845589850417}]}
{"instance_id": "e416d51a7af7", "generation_result": [{"code": "public LocalPlayer(IMultiplayerSession multiplayerSession, IPacketSender packetSender, ThrottledPacketSender throttledPacketSender){\n\t\tthis.multiplayerSession = multiplayerSession;\n\tthis.packetSender = packetSender;\n\tthis.throttledPacketSender = throttledPacketSender;\n\n\tthis.body = new Lazy<Body>(this.CreateBody);\n\tthis.playerModel = new Lazy<PlayerModel>(this.CreatePlayerModel);\n\tthis.bodyPrototype = new Lazy<BodyPrototype>(this.CreateBodyPrototype);\n\n\tthis.permissions = new LocalPlayerPermissions(this);\n}", "CodeBleu_score": 49.366179696677136}, {"code": "public LocalPlayer(IMultiplayerSession multiplayerSession, IPacketSender packetSender, ThrottledPacketSender throttledPacketSender){\n\t}", "CodeBleu_score": 3.6219203114758085}, {"code": "public LocalPlayer(IMultiplayerSession multiplayerSession, IPacketSender packetSender, ThrottledPacketSender throttledPacketSender){\n\t\tthis.multiplayerSession = multiplayerSession;\n\tthis.packetSender = packetSender;\n\tthis.throttledPacketSender = throttledPacketSender;\n\n\tthis.main = new LocalPlayerMain(this);\n\tthis.body = new LocalPlayerBody(this);\n\tthis.model = new LocalPlayerModel(this);\n\tthis.bodyPrototype = new LocalPlayerBodyPrototype(this);\n\tthis.permissions = new LocalPlayerPermissions(this);\n}", "CodeBleu_score": 43.18217535117051}]}
{"instance_id": "def56af985df", "generation_result": [{"code": "private GameObject CreateBodyPrototype{\n\t\tget {\n\t\t// Ensure head is visible\n\t\tplayer.head.gameObject.SetActive(true);\n\t\t// Instantiate clone\n\t\tGameObject clone = Object.Instantiate(player.body.gameObject, player.body.transform.position, player.body.transform.rotation);\n\t\t// Reset head's shadow casting mode\n\t\tplayer.head.shadowCastingMode = UnityEngine.Rendering.ShadowCastingMode.On;\n\t\t// Deactivate and rename clone\n\t\tclone.SetActive(false);\n\t\tclone.name = \"RemotePlayerPrototype\";\n\t\t// Remove items held in hand from clone\n\t\tclone.transform.Find(\"LeftHand\").GetComponent<Hand>().RemoveItem();\n\t\tclone.transform.Find(\"RightHand\").GetComponent<Hand>().RemoveItem();\n\t\t// Return clone\n\t\treturn clone;\n\t}\n}", "CodeBleu_score": 30.57120483920834}, {"code": "private GameObject CreateBodyPrototype{\n\t\tget {\n\t\t// Ensure head is visible\n\t\thead.SetActive(true);\n\t\t// Instantiate a clone of the body prototype\n\t\tGameObject clone = Instantiate(bodyPrototype);\n\t\t// Reset head's shadow casting mode\n\t\thead.GetComponent<SkinnedMeshRenderer>().shadowCastingMode = ShadowCastingMode.On;\n\t\t// Deactivate and rename the clone\n\t\tclone.SetActive(false);\n\t\tclone.name = \"RemotePlayerPrototype\";\n\t\t// Remove items held in hand from the clone\n\t\tif (clone.transform.Find(\"RightHandItem(Clone)\")!= null) {\n\t\t\tDestroyImmediate(clone.transform.Find(\"RightHandItem(Clone)\").gameObject);\n\t\t}\n\t\tif (clone.transform.Find(\"LeftHandItem(Clone)\")!= null) {\n\t\t\tDestroyImmediate(clone.transform.Find(\"LeftHandItem(Clone)\").gameObject);\n\t\t}\n\t\treturn clone;\n\t}\n}", "CodeBleu_score": 33.57673997366216}, {"code": "private GameObject CreateBodyPrototype{\n\t\tget {\n\t\t// Ensure head is visible\n\t\thead.GetComponent<MeshRenderer>().enabled = true;\n\t\t// Instantiate clone of body prototype\n\t\tGameObject clone = Instantiate(bodyPrototype);\n\t\t// Reset head's shadow casting mode\n\t\thead.GetComponent<MeshRenderer>().shadowCastingMode = ShadowCastingMode.On;\n\t\t// Deactivate clone and rename\n\t\tclone.SetActive(false);\n\t\tclone.name = \"RemotePlayerPrototype\";\n\t\t// Remove items held in hand from clone\n\t\tif (clone.GetComponent<Player>().leftHand.childCount > 0) {\n\t\t\tDestroy(clone.GetComponent<Player>().leftHand.GetChild(0).gameObject);\n\t\t}\n\t\tif (clone.GetComponent<Player>().rightHand.childCount > 0) {\n\t\t\tDestroy(clone.GetComponent<Player>().rightHand.GetChild(0).gameObject);\n\t\t}\n\t\t// Return clone\n\t\treturn clone;\n\t}\n}", "CodeBleu_score": 34.29320780808447}]}
{"instance_id": "e9bd7f669aed", "generation_result": [{"code": "void ICacheable.Save(BinaryWriter bw){\n\t\tbw.Write(GetType().Name);\n\tbw.Write(Location);\n\tbw.Write(Metadata.Version.ToString());\n\tbw.Write(Processes.ToList().Count);\n\tforeach (var process in Processes) {\n\t\tbw.Write(process);\n\t}\n\tbw.Write(Dependencies.ToList().Count);\n\tforeach (var dependency in Dependencies) {\n\t\t((ICacheable) dependency).Save(bw);\n\t}\n\tbw.Write(Incompatibilities.ToList().Count);\n\tforeach (var incompatibility in Incompatibilities) {\n\t\t((ICacheable) incompatibility).Save(bw);\n\t}\n\tbw.Write(TargettedBepInExVersion.ToString());\n}", "CodeBleu_score": 46.203072508990196}, {"code": "void ICacheable.Save(BinaryWriter bw){\n\t\tbw.Write(GetType().FullName);\n\tbw.Write(Location);\n\tMetadata.Save(bw);\n\tbw.Write(Processes.Count);\n\tforeach (var process in Processes) {\n\t\tbw.Write(process);\n\t}\n\tbw.Write(Dependencies.Count);\n\tforeach (var dependency in Dependencies) {\n\t\t((ICacheable) dependency).Save(bw);\n\t}\n\tbw.Write(Incompatibilities.Count);\n\tforeach (var incompatibility in Incompatibilities) {\n\t\t((ICacheable) incompatibility).Save(bw);\n\t}\n\tbw.Write(TargettedBepInExVersion.ToString());\n}", "CodeBleu_score": 45.81343485962154}, {"code": "void ICacheable.Save(BinaryWriter bw){\n\t\tbw.Write(this.GetType().FullName);\n\tbw.Write(Location);\n\tbw.Write(Metadata.Version.ToString());\n\tbw.Write(Processes.Count);\n\tforeach (var process in Processes) {\n\t\tbw.Write(process.ToString());\n\t}\n\tbw.Write(Dependencies.Count);\n\tforeach (var dependency in Dependencies) {\n\t\t((ICacheable) dependency).Save(bw);\n\t}\n\tbw.Write(Incompatibilities.Count);\n\tforeach (var incompatibility in Incompatibilities) {\n\t\t((ICacheable) incompatibility).Save(bw);\n\t}\n\tbw.Write(TargettedBepInExVersion.ToString());\n}", "CodeBleu_score": 50.28895330514561}]}
{"instance_id": "a7e51620987d", "generation_result": [{"code": "public override BasePlugin LoadPlugin(PluginInfo pluginInfo, Assembly pluginAssembly){\n\t\t// Get the plugin type\n\tType pluginType = pluginAssembly.GetType(pluginInfo.PluginType);\n\t// Create an instance of the plugin\n\tBasePlugin pluginInstance = (BasePlugin)Activator.CreateInstance(pluginType);\n\t// Invoke the PluginLoad event\n\tPluginLoad?.Invoke();\n\t// Load the plugin\n\tpluginInstance.Load();\n\t// Return the plugin instance\n\treturn pluginInstance;\n}", "CodeBleu_score": 55.41543272310917}, {"code": "public override BasePlugin LoadPlugin(PluginInfo pluginInfo, Assembly pluginAssembly){\n\t\tType pluginType = pluginAssembly.GetType(pluginInfo.PluginType);\n\tBasePlugin pluginInstance = Activator.CreateInstance(pluginType) as BasePlugin;\n\tPluginLoad?.Invoke(pluginInstance);\n\tpluginInstance.Load();\n\treturn pluginInstance;\n}", "CodeBleu_score": 55.10068499426788}, {"code": "public override BasePlugin LoadPlugin(PluginInfo pluginInfo, Assembly pluginAssembly){\n\t\tvar pluginType = pluginAssembly.GetType(pluginInfo.PluginType);\n\tvar pluginInstance = (BasePlugin)Activator.CreateInstance(pluginType);\n\tpluginInstance.PluginInfo = pluginInfo;\n\tPluginLoad?.Invoke(pluginInstance);\n\tpluginInstance.Load();\n\treturn pluginInstance;\n}", "CodeBleu_score": 59.69369023929041}]}
{"instance_id": "0925dc086c01", "generation_result": [{"code": "public MethodBase GenerateTrampoline(MethodBase signature = null){\n\t\tif (TrampolineMethod == null) {\n\t\tPrepare();\n\t\tTrampolineMethod = GenerateNativeProxy(TrampolinePtr, signature);\n\t}\n\treturn TrampolineMethod;\n}", "CodeBleu_score": 66.01722055988265}, {"code": "public MethodBase GenerateTrampoline(MethodBase signature = null){\n\t\tif (TrampolineMethod == null) {\n\t\tPrepare();\n\t\tTrampolineMethod = GenerateNativeProxy(TrampolinePtr, signature);\n\t}\n\treturn TrampolineMethod;\n}", "CodeBleu_score": 66.01722055988265}, {"code": "public MethodBase GenerateTrampoline(MethodBase signature = null){\n\t", "CodeBleu_score": 3.6806732796976527}]}
{"instance_id": "cfab5c23610e", "generation_result": [{"code": "private static Dictionary<string, string> LoadLanguageInternal(string code){\n\t\t// Get the stream from the assembly's resources\n\tvar stream = typeof(LocalizationLoader).Assembly.GetManifestResourceStream(\"Localization.Languages.\" + code + \".json\");\n\n\t// If the file is not found, throw a NullReferenceException\n\tif (stream == null) {\n\t\tthrow new NullReferenceException(\"The language file for the code '\" + code + \"' was not found.\");\n\t}\n\n\t// Deserialize the stream into a dictionary\n\tvar dictionary = JsonSerializer.Deserialize<Dictionary<string, string>>(stream);\n\n\t// If deserialization fails, throw a JsonException\n\tif (dictionary == null) {\n\t\tthrow new JsonException(\"The language file for the code '\" + code + \"' could not be deserialized.\");\n\t}\n\n\treturn dictionary;\n}", "CodeBleu_score": 47.786003022188225}, {"code": "private static Dictionary<string, string> LoadLanguageInternal(string code){\n\t\tif (code == null) {\n\t\tthrow new ArgumentNullException(nameof(code));\n\t}\n\n\tvar assembly = typeof(LocalizationLoader).Assembly;\n\tvar resourceName = $\"Localization.{code}.json\";\n\tusing var stream = assembly.GetManifestResourceStream(resourceName);\n\tif (stream == null) {\n\t\tthrow new NullReferenceException($\"Could not find {resourceName} in the assembly's resources.\");\n\t}\n\n\tvar dictionary = JsonSerializer.Deserialize<Dictionary<string, string>>(stream);\n\tif (dictionary == null) {\n\t\tthrow new JsonException($\"Failed to deserialize {resourceName}.\");\n\t}\n\n\treturn dictionary;\n}", "CodeBleu_score": 51.9812111169218}, {"code": "private static Dictionary<string, string> LoadLanguageInternal(string code){\n\t\t// Get the language file stream from the assembly's resources\n\tvar stream = typeof(LocalizationLoader).Assembly.GetManifestResourceStream($\"Localization.Resources.Languages.{code}.json\");\n\n\t// If the file is not found, throw a NullReferenceException\n\tif (stream == null) {\n\t\tthrow new NullReferenceException($\"Language file for '{code}' not found.\");\n\t}\n\n\t// Deserialize the stream into a dictionary\n\tvar dictionary = JsonSerializer.Deserialize<Dictionary<string, string>>(stream);\n\n\t// If deserialization fails, throw a JsonException\n\tif (dictionary == null) {\n\t\tthrow new JsonException($\"Failed to deserialize language file for '{code}'.\");\n\t}\n\n\t// Return the dictionary\n\treturn dictionary;\n}", "CodeBleu_score": 53.018015466086865}]}
{"instance_id": "9978bd31d199", "generation_result": [{"code": "private int GenerateCodeForExpressionsInFormattedText(IList<IParseTree> nodes){\n\t\tint expressionCount = 0;\n\tfor (int i = 0; i < nodes.Count; i++) {\n\t\tvar node = nodes[i];\n\t\tif (node is ParserRuleContext) {\n\t\t\tvar context = (ParserRuleContext)node;\n\t\t\texpressionCount += this.Visit(context);\n\t\t}\n\t}\n\treturn expressionCount;\n}", "CodeBleu_score": 40.30287229544725}, {"code": "private int GenerateCodeForExpressionsInFormattedText(IList<IParseTree> nodes){\n\t\tint expressionCount = 0;\n\tforeach (IParseTree node in nodes) {\n\t\tif (node is ParserRuleContext) {\n\t\t\texpressionCount += this.Visit((ParserRuleContext)node);\n\t\t}\n\t}\n\treturn expressionCount;\n}", "CodeBleu_score": 47.47004148982644}, {"code": "private int GenerateCodeForExpressionsInFormattedText(IList<IParseTree> nodes){\n\t\tint count = 0;\n\tforeach (var node in nodes) {\n\t\tif (node is ParserRuleContext) {\n\t\t\tcount += this.Visit((ParserRuleContext)node);\n\t\t}\n\t}\n\treturn count;\n}", "CodeBleu_score": 41.134832780118366}]}
{"instance_id": "8f9bf9ee575a", "generation_result": [{"code": "public override int VisitLine_statement(YarnSpinnerParser.Line_statementContext context){\n\t\nint expressionCount = this.GenerateCodeForExpressionsInFormattedText(context.line_formatted_text());\n\n// Get the line ID tag\nstring lineIDTag = context.line_id_tag().GetText();\n\n// Emit a RunLine opcode\nthis.compiler.Emit(OpCode.RunLine, lineIDTag, expressionCount);\n\nreturn 0;\n}", "CodeBleu_score": 29.7971322558053}, {"code": "public override int VisitLine_statement(YarnSpinnerParser.Line_statementContext context){\n\t\t// Generate code for any expressions in the formatted text\n\tthis.GenerateCodeForExpressionsInFormattedText(context.line_formatted_text());\n\n\t// Retrieve the line ID tag\n\tvar lineIDTag = this.compiler.GetLineIDTag(context.line_id());\n\n\t// Emit a RunLine opcode with the line ID and expression count\n\tthis.compiler.Emit(OpCode.RunLine, lineIDTag, context.line_formatted_text().expression().Length);\n\n\treturn 0;\n}", "CodeBleu_score": 44.87234494898074}, {"code": "public override int VisitLine_statement(YarnSpinnerParser.Line_statementContext context){\n\t\t// Generate code for any expressions in the formatted text\n\tthis.GenerateCodeForExpressionsInFormattedText(context.line_formatted_text());\n\n\t// Retrieve the line ID tag\n\tvar lineIDTag = context.line_id_tag();\n\tif (lineIDTag == null) {\n\t\tthrow new InvalidOperationException(\"Line statement must contain a line ID tag\");\n\t}\n\n\t// Emit a RunLine opcode with the line ID and expression count\n\tthis.compiler.Emit(\n\t\tOpCode.RunLine,\n\t\tthis.compiler.GetLineIDTag(lineIDTag.GetText()),\n\t\tthis.compiler.ExpressionCount);\n\n\treturn 0;\n}", "CodeBleu_score": 43.75754285875969}]}
{"instance_id": "b70d033fed9c", "generation_result": [{"code": "private static IEnumerable<Diagnostic> UnknownCommands(YarnFileData yarnFile){\n\t\n}", "CodeBleu_score": 2.0310005653774117}, {"code": "private static IEnumerable<Diagnostic> UnknownCommands(YarnFileData yarnFile){\n\t\tvar diagnostics = new List<Diagnostic>();\n\tvar knownCommands = yarnFile.GetKnownCommands();\n\tvar commandReferences = yarnFile.GetCommandReferences();\n\tforeach (var commandReference in commandReferences) {\n\t\tif (!knownCommands.Any(command => command.Name == commandReference.Name)) {\n\t\t\tvar diagnostic = Diagnostic.Create(\n\t\t\t\tnew DiagnosticDescriptor(\n\t\t\t\t\tid: \"UnknownCommand\",\n\t\t\t\t\ttitle: \"Unknown Command\",\n\t\t\t\t\tmessageFormat: $\"The command {commandReference.Name} is not defined in the project's known commands.\",\n\t\t\t\t\tcategory: \"Yarn\",\n\t\t\t\t\tdefaultSeverity: DiagnosticSeverity.Warning,\n\t\t\t\t\tisEnabledByDefault: true,\n\t\t\t\t\tdescription: \"This diagnostic is raised when a command reference is found in a yarn file that does not have a corresponding definition in the project's known commands.\"\n\t\t\t\t),\n\t\t\t\tlocation: Location.Create(yarnFile.FilePath, commandReference.ParametersRange),\n\t\t\t\tcommandReference.Name\n\t\t\t);\n\t\t\tdiagnostics.Add(diagnostic);\n\t\t}\n\t}\n\treturn diagnostics;\n}", "CodeBleu_score": 26.096193902715985}, {"code": "private static IEnumerable<Diagnostic> UnknownCommands(YarnFileData yarnFile){\n\t\t// Get a list of all known commands in the project\n\tvar knownCommands = GetKnownCommands();\n\n\t// Create a list to store the diagnostics\n\tvar diagnostics = new List<Diagnostic>();\n\n\t// Iterate over each command reference in the YarnFileData object\n\tforeach (var commandReference in yarnFile.CommandReferences) {\n\t\t// Check if the command reference is unknown\n\t\tif (!knownCommands.Any(knownCommand => knownCommand.Name == commandReference.Name)) {\n\t\t\t// Generate a Diagnostic object for the unknown command\n\t\t\tvar diagnostic = Diagnostic.Create(\n\t\t\t\tDiagnosticDescriptors.UnknownCommand,\n\t\t\t\tcommandReference.NameToken.GetLocation(),\n\t\t\t\tcommandReference.NameToken.Text,\n\t\t\t\tcommandReference.NameToken.Text,\n\t\t\t\tcommandReference.NameToken.Text,\n\t\t\t\tcommandReference.NameToken.Text,\n\t\t\t\tcommandReference.NameToken.Text,\n\t\t\t\tcommandReference.NameToken.Text\n\t\t\t);\n\n\t\t\t// Add the diagnostic to the list\n\t\t\tdiagnostics.Add(diagnostic);\n\t\t}\n\t}\n\n\t// Return the list of diagnostics\n\treturn diagnostics;\n}", "CodeBleu_score": 27.169384538089226}]}
{"instance_id": "9a072876f358", "generation_result": [{"code": "public CodeActionRegistrationOptions GetRegistrationOptions(CodeActionCapability capability, ClientCapabilities clientCapabilities){\n\t\treturn new CodeActionRegistrationOptions() {\n\t\tDocumentSelector = new DocumentSelector(\n\t\t\tnew DocumentFilter() {\n\t\t\t\tLanguage = \"yarn\",\n\t\t\t\tScheme = \"file\"\n\t\t\t}\n\t\t),\n\t\tResolveProvider = false,\n\t\tCodeActionKinds = new Container<CodeActionKind>(CodeActionKind.QuickFix)\n\t};\n}", "CodeBleu_score": 54.89837593575076}, {"code": "public CodeActionRegistrationOptions GetRegistrationOptions(CodeActionCapability capability, ClientCapabilities clientCapabilities){\n\t\treturn new CodeActionRegistrationOptions {\n\t\tDocumentSelector = new DocumentSelector(\n\t\t\tnew DocumentFilter {\n\t\t\t\tLanguage = \"yarn\",\n\t\t\t\tScheme = \"file\"\n\t\t\t}\n\t\t),\n\t\tResolveProvider = false,\n\t\tCodeActionKinds = new Container<CodeActionKind>(CodeActionKind.QuickFix)\n\t};\n}", "CodeBleu_score": 62.61453906432459}, {"code": "public CodeActionRegistrationOptions GetRegistrationOptions(CodeActionCapability capability, ClientCapabilities clientCapabilities){\n\t\tvar registrationOptions = new CodeActionRegistrationOptions() {\n\t\tDocumentSelector = new DocumentSelector(new DocumentFilter() {\n\t\t\tLanguage = \"yarn\",\n\t\t\tScheme = \"file\"\n\t\t}),\n\t\tResolveProvider = false,\n\t\tCodeActionKinds = new Container<CodeActionKind>(CodeActionKind.QuickFix)\n\t};\n\n\treturn registrationOptions;\n}", "CodeBleu_score": 44.72231778110503}]}
{"instance_id": "7b61df32aee3", "generation_result": [{"code": "public bool TryGetValue<T>(string variableName, out T result){\n\t\tobject foundValue;\n\tif (this.variables.TryGetValue(variableName, out foundValue)) {\n\t\tif (typeof(T).IsAssignableFrom(foundValue.GetType())) {\n\t\t\tresult = (T)foundValue;\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthrow new ArgumentException(\"The type of the variable is not compatible with the type of the result.\");\n\t\t}\n\t}\n\telse {\n\t\tresult = default(T);\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 63.39367926024624}, {"code": "public bool TryGetValue<T>(string variableName, out T result){\n\t\tobject foundValue;\n\tif (this.variables.TryGetValue(variableName, out foundValue)) {\n\t\tif (typeof(T).IsAssignableFrom(foundValue.GetType())) {\n\t\t\tresult = (T)foundValue;\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthrow new ArgumentException(string.Format(\"Variable '{0}' is not of type '{1}'\", variableName, typeof(T).Name));\n\t\t}\n\t}\n\tresult = default(T);\n\treturn false;\n}", "CodeBleu_score": 64.86308418691193}, {"code": "public bool TryGetValue<T>(string variableName, out T result){\n\t\tobject foundValue;\n\tif (this.variables.TryGetValue(variableName, out foundValue)) {\n\t\tif (foundValue.GetType() == typeof(T)) {\n\t\t\tresult = (T)foundValue;\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthrow new ArgumentException(\"The type of the variable is incompatible with the specified type T.\");\n\t\t}\n\t} else {\n\t\tresult = default(T);\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 57.811719095502646}]}
{"instance_id": "7201488347ef", "generation_result": [{"code": "public Dialogue(Yarn.IVariableStorage variableStorage){\n\t\tLibrary = new Library();\n\tVirtualMachine = new VirtualMachine(Library, variableStorage);\n\tLibrary.ImportLibrary(new StandardLibrary());\n\tLibrary.RegisterFunction(\"select\", Select);\n\tLibrary.RegisterFunction(\"plural\", Plural);\n\tLibrary.RegisterFunction(\"ordinal\", Ordinal);\n\tLibrary.RegisterFunction(\"nameof\", NameOf);\n\tLibrary.RegisterFunction(\"visit\", Visit);\n\tLibrary.RegisterFunction(\"nameof\", NameOf);\n\tlineParser = new LineParser();\n\tlineParser.RegisterMarkerProcessor(\"select\", SelectMarkerProcessor);\n\tlineParser.RegisterMarkerProcessor(\"plural\", PluralMarkerProcessor);\n\tlineParser.RegisterMarkerProcessor(\"ordinal\", OrdinalMarkerProcessor);\n}", "CodeBleu_score": 38.14810657150717}, {"code": "public Dialogue(Yarn.IVariableStorage variableStorage){\n\t\nLibrary = new Library();\nVirtualMachine = new VirtualMachine(Library, variableStorage);\n\nLibrary.ImportLibrary(StandardLibrary.GetLibrary());\n\nVirtualMachine.RegisterFunction(\"nameof\", (string nodeName) => {\nreturn nodeName;\n});\n\nlineParser = new LineParser(Library);\n\nlineParser.RegisterMarkerProcessor(\"select\", (string[] parameters) => {\nif (parameters.Length!= 1) {\nthrow new ArgumentException(\"select marker requires exactly one parameter\");\n}\n\nif (parameters[0] == \"1\") {\nreturn \"a\";\n}\n\nreturn \"an\";\n});\n\nlineParser.RegisterMarkerProcessor(\"plural\", (string[] parameters) => {\nif (parameters.Length!= 1) {\nthrow new ArgumentException(\"plural marker requires exactly one parameter\");\n}\n\nif (parameters[0] == \"1\") {\nreturn \"\";\n}\n\nreturn \"s\";\n});\n\nlineParser.RegisterMarkerProcessor(\"ordinal\", (string[] parameters) => {\nif (parameters.Length!= 1) {\nthrow new ArgumentException(\"ordinal marker requires exactly one parameter\");\n}\n\nint number = 0;\n\nif (!int.TryParse(parameters[0], out number)) {\nthrow new ArgumentException(\"ordinal marker requires a number as a parameter\");\n}\n\nswitch (number) {\ncase 1:\nreturn \"1st\";\ncase 2:\nreturn \"2nd\";\ncase 3:\nreturn \"3rd\";\ndefault:\nreturn number + \"th\";\n}\n});\n}", "CodeBleu_score": 38.65796025712186}, {"code": "public Dialogue(Yarn.IVariableStorage variableStorage){\n\t", "CodeBleu_score": 2.543243612731241}]}
{"instance_id": "59b7b5a9c34a", "generation_result": [{"code": "public int FindUniqueID(string UniqueID){\n\t\tif(string.IsNullOrEmpty(UniqueID)) {\n\t\treturn -1;\n\t}\n\tfor(int i = 0; i < LoopListBankData.Count; i++) {\n\t\tif(LoopListBankData[i].UniqueID == UniqueID) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}", "CodeBleu_score": 61.53772531399938}, {"code": "public int FindUniqueID(string UniqueID){\n\t\nif(string.IsNullOrEmpty(UniqueID)) { return -1; }\nfor (int i = 0; i < _LoopListBankData.Count; ++i) {\n  if (UniqueID == _LoopListBankData[i].UniqueID) {\n      return i;\n      }\n    }\nreturn -1;\n  }", "CodeBleu_score": 69.6078289080788}, {"code": "public int FindUniqueID(string UniqueID){\n\tif (string.IsNullOrEmpty(UniqueID)) { return -1; }\nfor (int i = 0; i < Count; i++) {\nif (this[i].UniqueID == UniqueID) { return i; }\n}\nreturn -1;\n}", "CodeBleu_score": 66.13129777067621}]}
{"instance_id": "2b85606238aa", "generation_result": [{"code": "public void AddContent(object newContent){\n\t\t// Create a new LoopListBankData object\n\tLoopListBankData newData = new LoopListBankData();\n\n\t// Assign the provided content to the new object\n\tnewData.m_Content = newContent;\n\n\t// Generate a unique ID for the new object\n\tnewData.m_ID = System.Guid.NewGuid().ToString();\n\n\t// Add the new object to the m_LoopListBankDataList\n\tm_LoopListBankDataList.Add(newData);\n}", "CodeBleu_score": 58.510781666626}, {"code": "public void AddContent(object newContent){\n\t\tLoopListBankData newData = new LoopListBankData();\n\tnewData.m_Content = newContent;\n\tnewData.m_ID = System.Guid.NewGuid().ToString();\n\tm_LoopListBankDataList.Add(newData);\n}", "CodeBleu_score": 58.53205128540437}, {"code": "public void AddContent(object newContent){\n\t\tLoopListBankData newLoopListBankData = new LoopListBankData();\n\tnewLoopListBankData.content = newContent;\n\tnewLoopListBankData.id = System.Guid.NewGuid().ToString();\n\tm_LoopListBankDataList.Add(newLoopListBankData);\n}", "CodeBleu_score": 58.88680507864894}]}
{"instance_id": "34e593106991", "generation_result": [{"code": "public virtual void ScrollCellIndex(int idx, object content, string ClickUniqueID = \"\", object ClickObject = null){\n\t\tif (m_IsUpdateGameObjectName) {\n\t\tgameObject.name = m_PrefabName + \" \" + idx.ToString();\n\t}\n\tm_IndexID = idx;\n\tm_Content = content;\n\tm_ClickUniqueID = ClickUniqueID;\n\tm_ClickObject = ClickObject;\n\tif (m_ClickUniqueID == \"\") {\n\t\tm_ClickUniqueID = m_IndexID.ToString();\n\t}\n}", "CodeBleu_score": 48.75042917329936}, {"code": "public virtual void ScrollCellIndex(int idx, object content, string ClickUniqueID = \"\", object ClickObject = null){\n\t\tm_IndexID = idx;\n\tm_Content = content;\n\tif (m_IsUpdateGameObjectName) {\n\t\tgameObject.name = string.Format(\"{0} {1}\", gameObject.name.Substring(0, gameObject.name.LastIndexOf(\" \")), m_IndexID);\n\t}\n\tif (m_IsUpdateClickUniqueID) {\n\t\tm_ClickUniqueID = ClickUniqueID;\n\t\tm_ClickObject = ClickObject;\n\t}\n}", "CodeBleu_score": 63.77669270850976}, {"code": "public virtual void ScrollCellIndex(int idx, object content, string ClickUniqueID = \"\", object ClickObject = null){\n\t\tif (m_IsUpdateGameObjectName) {\n\t\tgameObject.name = m_PrefabName + \"_\" + idx.ToString();\n\t}\n\n\tm_IndexID = idx;\n\tm_Content = content;\n\n\tm_ClickUniqueID = ClickUniqueID;\n\tm_ClickObject = ClickObject;\n}", "CodeBleu_score": 50.752631470945595}]}
{"instance_id": "6b6a6cc329cc", "generation_result": [{"code": "private void OnButtonAddDataClickk(){\n\t\tint numToAdd = 1;\n\tif (int.TryParse(m_InputField.text, out numToAdd) && numToAdd < 1) {\n\t\tnumToAdd = 1;\n\t}\n\tfor (int i = 0; i < numToAdd; i++) {\n\t\tm_ListBank.AddContent(Random.Range(0, 10));\n\t}\n\tm_LoopScrollRect.UpdateTotalCount();\n\tm_LoopScrollRect.RefreshCells();\n}", "CodeBleu_score": 37.63241104526605}, {"code": "private void OnButtonAddDataClickk(){\n\t\tint count = 0;\n\tif (int.TryParse(m_InputField.text, out count)) {\n\t\tif (count < 1) count = 1;\n\t\tfor (int i = 0; i < count; i++) {\n\t\t\tm_ListBank.AddContent(Random.Range(0, 10));\n\t\t}\n\t\tm_LoopScrollRect.UpdateTotalCount();\n\t\tm_LoopScrollRect.RefreshCells();\n\t}\n}", "CodeBleu_score": 32.96130656981277}, {"code": "private void OnButtonAddDataClickk(){\n\t\tint addCount = 0;\n\tif (int.TryParse(m_InputFieldAddData.text, out addCount)) {\n\t\taddCount = Mathf.Max(1, addCount);\n\t\tfor (int i = 0; i < addCount; i++) {\n\t\t\tm_ListBank.AddContent(Random.Range(0, 10));\n\t\t}\n\t\tm_LoopScrollRect.UpdateTotalCount();\n\t\tm_LoopScrollRect.RefreshCells();\n\t}\n}", "CodeBleu_score": 45.273413667118156}]}
{"instance_id": "209961c9eb8e", "generation_result": [{"code": "protected override void ClearTempPool(){\n\t}", "CodeBleu_score": 1.2759667216965314}, {"code": "protected override void ClearTempPool(){\n\t\tif (m_Content.childCount!= m_Pool.Count) {\n\t\tDebug.LogError(\"Content has the wrong number of children.\");\n\t}\n\n\t// Return items marked for deletion at the start to the prefab source and reset the start index\n\twhile (m_StartIndex!= 0) {\n\t\tm_Pool[--m_StartIndex].ReturnObject(m_PrefabSource);\n\t}\n\n\t// Return items marked for deletion at the end to the prefab source and reset the end index\n\twhile (m_EndIndex!= m_Pool.Count) {\n\t\tm_Pool[m_EndIndex++].ReturnObject(m_PrefabSource);\n\t}\n}", "CodeBleu_score": 20.846418969031138}, {"code": "protected override void ClearTempPool(){\n\t\tDebug.Assert(m_Content.childCount == m_Content.GetChild(0).childCount, \"Content pool is not a square matrix\");\n\tint childCount = m_Content.GetChild(0).childCount;\n\tint start = m_Content.GetChild(0).childCount;\n\tint end = m_Content.GetChild(0).childCount;\n\tfor (int i = 0; i < childCount; i++) {\n\t\tif (m_Content.GetChild(i).childCount > 0) {\n\t\t\tif (m_Content.GetChild(i).GetChild(0).gameObject.activeSelf) {\n\t\t\t\tstart = i;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tm_PrefabSource.ReturnObject(m_Content.GetChild(i).GetChild(0).gameObject);\n\t\t\t\tm_Content.GetChild(i).GetChild(0).SetParent(null);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = childCount - 1; i >= 0; i--) {\n\t\tif (m_Content.GetChild(i).childCount > 0) {\n\t\t\tif (m_Content.GetChild(i).GetChild(0).gameObject.activeSelf) {\n\t\t\t\tend = i + 1;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tm_PrefabSource.ReturnObject(m_Content.GetChild(i).GetChild(0).gameObject);\n\t\t\t\tm_Content.GetChild(i).GetChild(0).SetParent(null);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = start; i < end; i++) {\n\t\tfor (int j = 0; j < childCount; j++) {\n\t\t\tm_Content.GetChild(i).GetChild(j).gameObject.SetActive(false);\n\t\t}\n\t}\n\tm_StartIndex = start;\n\tm_EndIndex = end;\n}", "CodeBleu_score": 37.42792971806238}]}
{"instance_id": "c6bb290de2b3", "generation_result": [{"code": "public void AnticipateScale(Vector3 newScale){\n\t\n}", "CodeBleu_score": 2.0649604624249824}, {"code": "public void AnticipateScale(Vector3 newScale){\n\t\nif (PhotonNetwork.IsConnectedAndReady) {\n\ntransform.localScale = newScale;\n\nanticipatedScale = newScale;\n\nif (syncScale) {\n\ntransform.localScale = newScale;\n\n}\n\nRecordAnticipatedTransform();\n\nResetAnticipationCountersAndTimes();\n\nResetSmoothTransition();\n\n}\n\n}", "CodeBleu_score": 21.208562650103914}, {"code": "public void AnticipateScale(Vector3 newScale){\n\t\n}", "CodeBleu_score": 2.0649604624249824}]}
{"instance_id": "d67d3c80dd00", "generation_result": [{"code": "private void FlushMessages(){\n\t", "CodeBleu_score": 0.843141799522195}, {"code": "private void FlushMessages(){\n\t\tif (m_NetworkAnimator == null) {\n\t\treturn;\n\t}\n\n\t// Send all queued animation updates\n\tfor (int i = 0; i < m_SendAnimationUpdates.Count; ++i) {\n\t\tm_NetworkAnimator.SendAnimStateClientRpc(m_SendAnimationUpdates[i]);\n\t}\n\tm_SendAnimationUpdates.Clear();\n\n\t// Send all queued parameter updates\n\tfor (int i = 0; i < m_SendParameterUpdates.Count; ++i) {\n\t\tm_NetworkAnimator.SendParametersUpdateClientRpc(m_SendParameterUpdates[i]);\n\t}\n\tm_SendParameterUpdates.Clear();\n\n\t// Send all queued trigger updates\n\tfor (int i = 0; i < m_SendTriggerUpdates.Count; ++i) {\n\t\tm_NetworkAnimator.SendAnimTriggerClientRpc(m_SendTriggerUpdates[i]);\n\t}\n\tm_SendTriggerUpdates.Clear();\n}", "CodeBleu_score": 44.46109603120823}, {"code": "private void FlushMessages(){\n\t\tif (m_NetworkAnimator == null) {\n\t\treturn;\n\t}\n\n\t// send animation updates\n\tfor (int i = 0; i < m_SendAnimationUpdates.Count; i++) {\n\t\tm_NetworkAnimator.SendAnimStateClientRpc(m_SendAnimationUpdates[i]);\n\t}\n\tm_SendAnimationUpdates.Clear();\n\n\t// send parameter updates\n\tfor (int i = 0; i < m_SendParameterUpdates.Count; i++) {\n\t\tm_NetworkAnimator.SendParametersUpdateClientRpc(m_SendParameterUpdates[i]);\n\t}\n\tm_SendParameterUpdates.Clear();\n\n\t// send trigger updates\n\tfor (int i = 0; i < m_SendTriggerUpdates.Count; i++) {\n\t\tm_NetworkAnimator.SendAnimTriggerClientRpc(m_SendTriggerUpdates[i]);\n\t}\n\tm_SendTriggerUpdates.Clear();\n}", "CodeBleu_score": 39.02631342251258}]}
{"instance_id": "0632b2f27d22", "generation_result": [{"code": "public void NetworkUpdate(NetworkUpdateStage updateStage){\n\t\tif (updateStage == NetworkUpdateStage.PreUpdate) {\n\t\tif (m_NetworkAnimator.IsServerAuthoritative || m_NetworkAnimator.IsClientWithAuthority) {\n\t\t\tFlushMessages();\n\t\t}\n\t\tm_NetworkAnimator.UpdateParameters();\n\t\tm_NetworkAnimator.CheckForAnimatorChanges();\n\t}\n}", "CodeBleu_score": 17.72785347426898}, {"code": "public void NetworkUpdate(NetworkUpdateStage updateStage){\n\t\tif (updateStage == NetworkUpdateStage.PreUpdate) {\n\t\tif (m_NetworkAnimator.IsOwnerOrServer) {\n\t\t\tFlushMessages();\n\t\t}\n\t\tm_NetworkAnimator.UpdateParameters();\n\t\tm_NetworkAnimator.CheckForAnimatorChanges();\n\t}\n}", "CodeBleu_score": 15.005612532239088}, {"code": "public void NetworkUpdate(NetworkUpdateStage updateStage){\n\t\tif (m_NetworkAnimator.IsServerAuthoritative) {\n\t\tif (updateStage == NetworkUpdateStage.PreUpdate) {\n\t\t\tFlushMessages();\n\t\t}\n\t\telse {\n\t\t\tm_NetworkAnimator.UpdateParameters();\n\t\t}\n\t}\n\telse {\n\t\tif (updateStage == NetworkUpdateStage.PreUpdate) {\n\t\t\tif (m_NetworkAnimator.IsOwner) {\n\t\t\t\tFlushMessages();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tm_NetworkAnimator.CheckForAnimatorChanges();\n\t\t}\n\t}\n}", "CodeBleu_score": 15.909083008588693}]}
{"instance_id": "d78874b65b32", "generation_result": [{"code": "private void UpdateOwnershipAuthority(){\n\t\tif (this.IsServerAuthority) {\n\t\tif (this.IsOwnedByClient) {\n\t\t\t// Server authority and owned by client\n\t\t\tthis.AuthorityState = AuthorityState.ServerAndClient;\n\t\t\tthis.SetRigidbodyKinematic(false);\n\t\t\tthis.SetRigidbodyInterpolation(RigidbodyInterpolation.Interpolate);\n\t\t} else {\n\t\t\t// Server authority and not owned by client\n\t\t\tthis.AuthorityState = AuthorityState.ServerOnly;\n\t\t\tthis.SetRigidbodyKinematic(true);\n\t\t\tthis.SetRigidbodyInterpolation(RigidbodyInterpolation.None);\n\t\t}\n\t} else {\n\t\tif (this.IsOwnedByClient) {\n\t\t\t// Client authority and owned by client\n\t\t\tthis.AuthorityState = AuthorityState.ClientOnly;\n\t\t\tthis.SetRigidbodyKinematic(true);\n\t\t\tthis.SetRigidbodyInterpolation(RigidbodyInterpolation.None);\n\t\t} else {\n\t\t\t// Client authority and not owned by client\n\t\t\tthis.AuthorityState = AuthorityState.None;\n\t\t\tthis.SetRigidbodyKinematic(true);\n\t\t\tthis.SetRigidbodyInterpolation(RigidbodyInterpolation.None);\n\t\t}\n\t}\n}", "CodeBleu_score": 22.081987200303665}, {"code": "private void UpdateOwnershipAuthority(){\n\t\tif (isServer) {\n\t\tif (isOwned) {\n\t\t\tif (rigidBody!= null) {\n\t\t\t\trigidBody.isKinematic = false;\n\t\t\t\trigidBody.interpolation = RigidbodyInterpolation.Interpolate;\n\t\t\t}\n\t\t} else {\n\t\t\tif (rigidBody!= null) {\n\t\t\t\trigidBody.isKinematic = true;\n\t\t\t\trigidBody.interpolation = RigidbodyInterpolation.None;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (isOwned) {\n\t\t\tif (rigidBody!= null) {\n\t\t\t\trigidBody.isKinematic = true;\n\t\t\t\trigidBody.interpolation = RigidbodyInterpolation.None;\n\t\t\t}\n\t\t} else {\n\t\t\tif (rigidBody!= null) {\n\t\t\t\trigidBody.isKinematic = false;\n\t\t\t\trigidBody.interpolation = RigidbodyInterpolation.Interpolate;\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 19.9845448121105}, {"code": "private void UpdateOwnershipAuthority(){\n\tif (isServer) {\nif (isOwnedByServer) {\n// The object is owned by the server and is kinematic.\nif (m_rigidbody!= null) {\nm_rigidbody.isKinematic = true;\nm_rigidbody.interpolation = RigidbodyInterpolation.None;\n}\n} else {\n// The object is owned by a client and is non-kinematic.\nif (m_rigidbody!= null) {\nm_rigidbody.isKinematic = false;\nm_rigidbody.interpolation = RigidbodyInterpolation.Interpolate;\n}\n}\n} else {\n// The object is owned by the server and is kinematic.\nif (m_rigidbody!= null) {\nm_rigidbody.isKinematic = true;\nm_rigidbody.interpolation = RigidbodyInterpolation.None;\n}\n}\n}", "CodeBleu_score": 22.89023447211933}]}
{"instance_id": "304fe1278db9", "generation_result": [{"code": "public static void DecompressQuaternion(ref Quaternion quaternion, uint compressed){\n\t\tfloat x, y, z, w;\n\tswitch (compressed >> 30) {\n\t\tcase 0:\n\t\t\tx = DecompressFloat(compressed);\n\t\t\ty = DecompressFloat(compressed >> 10);\n\t\t\tz = DecompressFloat(compressed >> 20);\n\t\t\tw = Mathf.Sqrt(1.0f - x * x - y * y - z * z);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tx = DecompressFloat(compressed);\n\t\t\ty = DecompressFloat(compressed >> 10);\n\t\t\tw = DecompressFloat(compressed >> 20);\n\t\t\tz = Mathf.Sqrt(1.0f - x * x - y * y - w * w);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tx = DecompressFloat(compressed);\n\t\t\tz = DecompressFloat(compressed >> 10);\n\t\t\tw = DecompressFloat(compressed >> 20);\n\t\t\ty = Mathf.Sqrt(1.0f - x * x - z * z - w * w);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ty = DecompressFloat(compressed);\n\t\t\tz = DecompressFloat(compressed >> 10);\n\t\t\tw = DecompressFloat(compressed >> 20);\n\t\t\tx = Mathf.Sqrt(1.0f - y * y - z * z - w * w);\n\t\t\tbreak;\n\t}\n\tquaternion.x = x;\n\tquaternion.y = y;\n\tquaternion.z = z;\n\tquaternion.w = w;\n}", "CodeBleu_score": 22.8386509936544}, {"code": "public static void DecompressQuaternion(ref Quaternion quaternion, uint compressed){\n\t\t// Determine which component to skip based on the highest two bits\n\tint skipAxis = (int)(compressed >> 30);\n\tcompressed &= 0x3FFFFFFF;\n\n\t// Decompress the remaining components\n\tfloat x = DecompressFloat(compressed & 0x3FF);\n\tfloat y = DecompressFloat((compressed >> 10) & 0x3FF);\n\tfloat z = DecompressFloat((compressed >> 20) & 0x3FF);\n\n\t// Calculate the sum of squared magnitudes\n\tfloat sum = x * x + y * y + z * z;\n\n\t// Compute the skipped component to ensure the quaternion's unit length\n\tswitch (skipAxis) {\n\tcase 0:\n\t\tquaternion = new Quaternion(x, y, z, Mathf.Sqrt(1f - sum));\n\t\tbreak;\n\tcase 1:\n\t\tquaternion = new Quaternion(x, Mathf.Sqrt(1f - sum), z, y);\n\t\tbreak;\n\tcase 2:\n\t\tquaternion = new Quaternion(Mathf.Sqrt(1f - sum), y, z, x);\n\t\tbreak;\n\t}\n}", "CodeBleu_score": 28.36588123678863}, {"code": "public static void DecompressQuaternion(ref Quaternion quaternion, uint compressed){\n\t\tint highestTwoBits = (int)(compressed >> 30);\n\tfloat x, y, z, w;\n\tswitch (highestTwoBits) {\n\t\tcase 0:\n\t\t\tx = 1.0f;\n\t\t\ty = DecompressFloat(compressed, 10);\n\t\t\tz = DecompressFloat(compressed, 20);\n\t\t\tw = DecompressFloat(compressed, 0);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tx = DecompressFloat(compressed, 10);\n\t\t\ty = 1.0f;\n\t\t\tz = DecompressFloat(compressed, 20);\n\t\t\tw = DecompressFloat(compressed, 0);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tx = DecompressFloat(compressed, 10);\n\t\t\ty = DecompressFloat(compressed, 20);\n\t\t\tz = 1.0f;\n\t\t\tw = DecompressFloat(compressed, 0);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tx = DecompressFloat(compressed, 10);\n\t\t\ty = DecompressFloat(compressed, 20);\n\t\t\tz = DecompressFloat(compressed, 0);\n\t\t\tw = 1.0f;\n\t\t\tbreak;\n\t}\n\tfloat sumOfSquares = x * x + y * y + z * z + w * w;\n\tfloat scale = 1.0f / Mathf.Sqrt(sumOfSquares);\n\tquaternion.x = x * scale;\n\tquaternion.y = y * scale;\n\tquaternion.z = z * scale;\n\tquaternion.w = w * scale;\n}", "CodeBleu_score": 25.883520291090672}]}
{"instance_id": "452b860a7dde", "generation_result": [{"code": "static void GenerateCLRBindingByAnalysis(){\n\t\t//Create a new AppDomain\n\tAppDomain appdomain = new AppDomain();\n\t//Load an assembly from a specified file\n\tAssembly assembly = appdomain.LoadAssembly(Application.dataPath + \"/ILRuntim/ILRuntime.Runtime.dll\");\n\t//Initialize ILRuntime with the domain\n\tILRuntime.Runtime.CLRBinding.Initialize(appdomain);\n\t//Generate binding code\n\tILRuntime.Runtime.CLRBinding.BindingCodeGenerator.GenerateBindingCode(assembly, Application.dataPath + \"/ILRuntime/Generated\");\n\t//Refresh the AssetDatabase\n\tAssetDatabase.Refresh();\n}", "CodeBleu_score": 23.385951482564334}, {"code": "static void GenerateCLRBindingByAnalysis(){\n\t\t// Create a new AppDomain\n\tAppDomain domain = new AppDomain();\n\t// Load an assembly from a specified file\n\tAssembly assembly = domain.LoadAssembly(Application.dataPath + \"/ILRuntime/Generated/MyAssembly-csharp.dll\");\n\t// Initialize ILRuntime with the domain\n\tILRuntime.Runtime.CLRBinding.Initialize(domain);\n\t// Generate binding code\n\tILRuntime.Runtime.CLRBinding.BindingCodeGenerator.GenerateBindingCode(assembly, Application.dataPath + \"/ILRuntime/Generated\");\n\t// Refresh the AssetDatabase\n\tAssetDatabase.Refresh();\n}", "CodeBleu_score": 28.17409491676763}, {"code": "static void GenerateCLRBindingByAnalysis(){\n\t\tAppDomain domain = new AppDomain();\n\tdomain.DebugService.StartDebugService(56000);\n\tdomain.DebugService.BreakAtEnter = true;\n\tdomain.DebugService.BreakAtException = true;\n\tdomain.DebugService.BreakOnStep = true;\n\tILRuntime.Runtime.Generated.CLRBindings.Initialize(domain);\n\tGenerateCLRBinding(domain);\n\tAssetDatabase.Refresh();\n}", "CodeBleu_score": 26.545036348668805}]}
{"instance_id": "b8990031b636", "generation_result": [{"code": "public override void OnInspectorGUI(){\n\t\tserializedObject.Update();\n\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperInfo\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelper\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperType\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperTypeName\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperTypeFullName\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperTypeAssemblyQualifiedName\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperTypeAssemblyName\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperTypeAssemblyQualifiedNameWithoutVersion\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperTypeAssemblyQualifiedNameWithoutVersionOrCulture\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperTypeAssemblyQualifiedNameWithoutVersionOrCultureOrPublicKeyToken\"));\n\tEditorGUILayout.PropertyField(serializedObject.FindProperty(\"m_ConfigHelperTypeAssemblyQualifiedNameWithoutPublicKeyToken\"));\n\n\tEditorGUI.BeginDisabledGroup(Application.isPlaying && IsPrefabInHierarchy());\n\n\tif (Application.isPlaying && IsPrefabInHierarchy()) {\n\t\tvar t = target as ConfigComponent;\n\t\tEditorGUILayout.LabelField(\"Config Count\", t.Count.ToString());\n\t\tEditorGUILayout.LabelField(\"Cached Bytes Size\", t.CachedBytesSize.ToString());\n\t}\n\n\tEditorGUI.EndDisabledGroup();\n\n\tserializedObject.ApplyModifiedProperties();\n\n\tRepaint();\n}", "CodeBleu_score": 56.66527665074352}, {"code": "public override void OnInspectorGUI(){\n\t\tserializedObject.Update();\n\n\tEditorGUILayout.PropertyField(m_ConfigHelperInfo);\n\n\tif (Application.isPlaying && m_ConfigHelperInfo.objectReferenceValue!= null) {\n\t\tvar t = (ConfigComponent)m_ConfigHelperInfo.objectReferenceValue;\n\n\t\tEditorGUI.BeginDisabledGroup(true);\n\n\t\tEditorGUILayout.LabelField(\"Config Count\", t.Count.ToString());\n\t\tEditorGUILayout.LabelField(\"Cached Bytes Size\", t.CachedBytesSize.ToString());\n\n\t\tEditorGUI.EndDisabledGroup();\n\t}\n\n\tserializedObject.ApplyModifiedProperties();\n\n\tRepaint();\n}", "CodeBleu_score": 53.01599347729437}, {"code": "public override void OnInspectorGUI(){\n\t", "CodeBleu_score": 0.925914944286159}]}
{"instance_id": "6453adc2daa8", "generation_result": [{"code": "public static void DefaultScenes(){\n\t\tvar defaultSceneNames = new HashSet<string> {\n\t\t\"Assets/Scenes/Splash.unity\",\n\t\t\"Assets/Scenes/Main.unity\",\n\t\t\"Assets/Scenes/Game.unity\",\n\t\t\"Assets/Scenes/End.unity\"\n\t};\n\tvar scenes = new List<EditorBuildSettingsScene>();\n\tforeach (var sceneName in defaultSceneNames) {\n\t\tscenes.Add(new EditorBuildSettingsScene(sceneName, true));\n\t}\n\tEditorBuildSettings.scenes = scenes.ToArray();\n\tDebug.Log(\"Build settings scenes set to default\");\n}", "CodeBleu_score": 52.207038245703096}, {"code": "public static void DefaultScenes(){\n\t\tHashSet<string> defaultScenes = new HashSet<string>() {\n\t\t\"Assets/Scenes/Title.unity\",\n\t\t\"Assets/Scenes/MainMenu.unity\",\n\t\t\"Assets/Scenes/LevelSelect.unity\",\n\t\t\"Assets/Scenes/Game.unity\",\n\t\t\"Assets/Scenes/PauseMenu.unity\",\n\t\t\"Assets/Scenes/GameOver.unity\",\n\t\t\"Assets/Scenes/Victory.unity\"\n\t};\n\tList<EditorBuildSettingsScene> scenes = new List<EditorBuildSettingsScene>();\n\tforeach (string scene in defaultScenes) {\n\t\tscenes.Add(new EditorBuildSettingsScene(scene, true));\n\t}\n\tEditorBuildSettings.scenes = scenes.ToArray();\n\tDebug.Log(\"Scenes set to default.\");\n}", "CodeBleu_score": 51.748727008690146}, {"code": "public static void DefaultScenes(){\n\t\t// Create a HashSet of the default scene names.\n\tHashSet<string> defaultSceneNames = new HashSet<string>() {\n\t\t\"Assets/Scenes/Main.unity\",\n\t\t\"Assets/Scenes/Splash.unity\",\n\t\t\"Assets/Scenes/Loading.unity\",\n\t\t\"Assets/Scenes/Game.unity\",\n\t\t\"Assets/Scenes/Menu.unity\",\n\t\t\"Assets/Scenes/Settings.unity\",\n\t\t\"Assets/Scenes/Credits.unity\",\n\t\t\"Assets/Scenes/Quit.unity\"\n\t};\n\t// Convert the HashSet of scene names to a list of EditorBuildSettingsScene objects.\n\tList<EditorBuildSettingsScene> scenes = new List<EditorBuildSettingsScene>();\n\tforeach (string sceneName in defaultSceneNames) {\n\t\tscenes.Add(new EditorBuildSettingsScene(sceneName, true));\n\t}\n\t// Update the EditorBuildSettings with the list of scenes.\n\tEditorBuildSettings.scenes = scenes.ToArray();\n\t// Log that the scenes have been set to the default.\n\tDebug.Log(\"Build settings scenes set to default.\");\n}", "CodeBleu_score": 54.89728032213451}]}
{"instance_id": "e199f1a42526", "generation_result": [{"code": "public void Draw(){\n\t\tif (m_helperTypeIndex == -1) {\n\t\tm_helperTypeIndex = 0;\n\t\tm_helperType = m_helperTypes[m_helperTypeIndex];\n\t}\n\n\tEditorGUILayout.BeginHorizontal();\n\tEditorGUILayout.LabelField(\"Helper Type\", GUILayout.Width(100));\n\n\tm_helperTypeIndex = EditorGUILayout.Popup(m_helperTypeIndex, m_helperTypeNames);\n\n\tif (m_helperTypeIndex == m_helperTypeNames.Length - 1) {\n\t\tEditorGUILayout.LabelField(\"Custom Helper\", GUILayout.Width(100));\n\t\tm_helperType = EditorGUILayout.ObjectField(m_helperType, typeof(Helper), false) as Helper;\n\t\tif (m_helperType == null) {\n\t\t\tEditorGUILayout.HelpBox(\"Custom Helper not set\", MessageType.Error);\n\t\t}\n\t} else {\n\t\tm_helperType = m_helperTypes[m_helperTypeIndex];\n\t}\n\n\tEditorGUILayout.EndHorizontal();\n}", "CodeBleu_score": 35.16338249391912}, {"code": "public void Draw(){\n\t\t// If the selected helper type is null, set it to the first type in the list\n\tif (selectedHelperType == null) {\n\t\tselectedHelperType = helperTypes[0];\n\t}\n\n\t// Draw a popup menu for selecting the helper type\n\tint selectedIndex = EditorGUILayout.Popup(\"Helper Type\", Array.IndexOf(helperTypes, selectedHelperType), helperTypes.Select(t => t.Name).ToArray());\n\n\t// If the selected index is different from the previous one, update the selected helper type\n\tif (selectedIndex!= Array.IndexOf(helperTypes, selectedHelperType)) {\n\t\tselectedHelperType = helperTypes[selectedIndex];\n\t}\n\n\t// If no helper type is selected, display a field for a custom helper and show an error message if the custom helper is not set\n\tif (selectedHelperType == null) {\n\t\tcustomHelper = EditorGUILayout.ObjectField(\"Custom Helper\", customHelper, typeof(GameObject), true) as GameObject;\n\t\tif (customHelper == null) {\n\t\t\tEditorGUILayout.HelpBox(\"Please select a custom helper or set a custom helper object.\", MessageType.Error);\n\t\t}\n\t}\n}", "CodeBleu_score": 38.886303663412036}, {"code": "public void Draw(){\n\t\tif (m_SelectedIndex == 0) {\n\t\tEditorGUILayout.HelpBox(\"Select a helper type to configure it.\", MessageType.Info);\n\t\tEditorGUILayout.BeginHorizontal();\n\t\tEditorGUILayout.LabelField(\"Helper type\", GUILayout.Width(100));\n\t\tm_SelectedIndex = EditorGUILayout.Popup(m_SelectedIndex, m_HelperTypes, GUILayout.Width(200));\n\t\tEditorGUILayout.EndHorizontal();\n\t\tif (m_SelectedIndex == 0) {\n\t\t\tEditorGUILayout.HelpBox(\"No helper type selected.\", MessageType.Error);\n\t\t}\n\t} else {\n\t\tEditorGUILayout.BeginHorizontal();\n\t\tEditorGUILayout.LabelField(\"Helper type\", GUILayout.Width(100));\n\t\tm_SelectedIndex = EditorGUILayout.Popup(m_SelectedIndex, m_HelperTypes, GUILayout.Width(200));\n\t\tEditorGUILayout.EndHorizontal();\n\t\tif (m_SelectedIndex == 0) {\n\t\t\tEditorGUILayout.HelpBox(\"No helper type selected.\", MessageType.Error);\n\t\t} else {\n\t\t\tEditorGUILayout.BeginHorizontal();\n\t\t\tEditorGUILayout.LabelField(\"Custom helper\", GUILayout.Width(100));\n\t\t\tm_CustomHelper = EditorGUILayout.ObjectField(m_CustomHelper, typeof(GameObject), true, GUILayout.Width(200));\n\t\t\tEditorGUILayout.EndHorizontal();\n\t\t\tif (m_CustomHelper == null) {\n\t\t\t\tEditorGUILayout.HelpBox(\"No custom helper selected.\", MessageType.Error);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 36.646314850816076}]}
{"instance_id": "957e0aaa6f72", "generation_result": [{"code": "public static void DisableAllLogs(){\n\t\tRemoveScriptingDefineSymbol(LOG_SYMBOL);\n\tRemoveScriptingDefineSymbol(LOG_ERROR_SYMBOL);\n\tRemoveScriptingDefineSymbol(LOG_WARNING_SYMBOL);\n\tRemoveScriptingDefineSymbol(LOG_INFO_SYMBOL);\n\tRemoveScriptingDefineSymbol(LOG_DEBUG_SYMBOL);\n\tRemoveScriptingDefineSymbol(LOG_VERBOSE_SYMBOL);\n}", "CodeBleu_score": 23.494450794722756}, {"code": "public static void DisableAllLogs(){\n\t\t// Remove the general symbol\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL);\n\t// Remove symbols for specific logs\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_DEBUG);\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_INFO);\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_WARNING);\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_ERROR);\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_EXCEPTION);\n\t// Remove symbols for logs above a certain level\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_DEBUG_AND_ABOVE);\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_INFO_AND_ABOVE);\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_WARNING_AND_ABOVE);\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_ERROR_AND_ABOVE);\n\tRemoveScriptingDefineSymbol(LOG_SYMBOL_EXCEPTION_AND_ABOVE);\n}", "CodeBleu_score": 27.32777306726574}, {"code": "public static void DisableAllLogs(){\n\t\tRemoveScriptingDefineSymbol(LOGGING_SYMBOL);\n\tRemoveScriptingDefineSymbol(LOG_LEVEL_SYMBOL);\n\tRemoveScriptingDefineSymbol(LOG_LEVEL_SYMBOL_DEBUG);\n\tRemoveScriptingDefineSymbol(LOG_LEVEL_SYMBOL_INFO);\n\tRemoveScriptingDefineSymbol(LOG_LEVEL_SYMBOL_WARNING);\n\tRemoveScriptingDefineSymbol(LOG_LEVEL_SYMBOL_ERROR);\n\tRemoveScriptingDefineSymbol(LOG_LEVEL_SYMBOL_EXCEPTION);\n}", "CodeBleu_score": 25.40909676008579}]}
{"instance_id": "8a544c3d9513", "generation_result": [{"code": "public static GameFrameworkComponent GetComponent(Type type){\n\t\tGameFrameworkComponent current = _firstComponent;\n\twhile (current!= null) {\n\t\tif (current.GetType() == type) {\n\t\t\treturn current;\n\t\t}\n\t\tcurrent = current.next;\n\t}\n\treturn null;\n}", "CodeBleu_score": 45.5123145346061}, {"code": "public static GameFrameworkComponent GetComponent(Type type){\n\t\tGameFrameworkComponent current = head;\n\twhile (current!= null) {\n\t\tif (current.GetType() == type) {\n\t\t\treturn current;\n\t\t}\n\t\tcurrent = current.next;\n\t}\n\treturn null;\n}", "CodeBleu_score": 44.39710464738877}, {"code": "public static GameFrameworkComponent GetComponent(Type type){\n\t\tGameFrameworkComponent current = head;\n\twhile (current!= null) {\n\t\tif (current.GetType() == type) {\n\t\t\treturn current;\n\t\t}\n\t\tcurrent = current.next;\n\t}\n\treturn null;\n}", "CodeBleu_score": 44.39710464738877}]}
{"instance_id": "ec304512c0e4", "generation_result": [{"code": "public static void Shutdown(ShutdownType shutdownType){\n\t\tLog.Info(\"Shutdown: \" + shutdownType);\n\n\tif (s_GameFrameworkComponents.Count > 0) {\n\t\tBaseComponent baseComponent = s_GameFrameworkComponents[0] as BaseComponent;\n\t\tif (baseComponent!= null) {\n\t\t\tbaseComponent.Shutdown();\n\t\t}\n\t}\n\n\ts_GameFrameworkComponents.Clear();\n\n\tswitch (shutdownType) {\n\t\tcase ShutdownType.Restart:\n\t\t\tSceneManager.LoadScene(SceneManager.GetActiveScene().name);\n\t\t\tbreak;\n\t\tcase ShutdownType.Quit:\n\t\t\tApplication.Quit();\n\t\t\tbreak;\n\t\tcase ShutdownType.None:\n\t\t\tbreak;\n\t}\n}", "CodeBleu_score": 28.006261122417875}, {"code": "public static void Shutdown(ShutdownType shutdownType){\n\t\tLog.Info(\"Shutdown\");\n\tif (s_GameFrameworkComponents.Count > 0) {\n\t\tforeach (BaseComponent component in s_GameFrameworkComponents) {\n\t\t\tif (component!= null) {\n\t\t\t\tcomponent.Shutdown();\n\t\t\t}\n\t\t}\n\t}\n\ts_GameFrameworkComponents.Clear();\n\tswitch (shutdownType) {\n\t\tcase ShutdownType.Restart:\n\t\t\tSceneManager.LoadScene(SceneManager.GetActiveScene().name);\n\t\t\tbreak;\n\t\tcase ShutdownType.Quit:\n\t\t\tApplication.Quit();\n\t\t\tbreak;\n\t\tcase ShutdownType.None:\n\t\t\tbreak;\n\t}\n}", "CodeBleu_score": 24.81484603560411}, {"code": "public static void Shutdown(ShutdownType shutdownType){\n\t\t// Log the shutdown action.\n\tLog.Info(\"Shutdown\");\n\n\t// Shut down the BaseComponent if it exists.\n\tBaseComponent baseComponent = GetComponent<BaseComponent>();\n\tif (baseComponent!= null) {\n\t\tbaseComponent.Shutdown();\n\t}\n\n\t// Clear game framework components.\n\ts_GameFrameworkComponents.Clear();\n\n\t// Depending on the shutdown type, restart the game scene, quit the application, or do nothing if the type is None.\n\tswitch (shutdownType) {\n\t\tcase ShutdownType.Restart:\n\t\t\tSceneManager.LoadScene(SceneManager.GetActiveScene().name);\n\t\t\tbreak;\n\t\tcase ShutdownType.Quit:\n\t\t\tApplication.Quit();\n\t\t\tbreak;\n\t\tcase ShutdownType.None:\n\t\t\tbreak;\n\t}\n}", "CodeBleu_score": 28.82012137656086}]}
{"instance_id": "5c78a1d4f59d", "generation_result": [{"code": "protected override void Awake(){\n\t\tbase.Awake();\n\tm_ConfigManager = GameFrameworkEntry.GetModule<IConfigManager>();\n\tif (m_ConfigManager == null) {\n\t\tLog.Fatal(\"ConfigManager is invalid.\");\n\t\treturn;\n\t}\n\tm_ConfigManager.ReadConfigSuccess += OnReadConfigSuccess;\n\tm_ConfigManager.ReadConfigFailure += OnReadConfigFailure;\n\tif (m_NeedUpdate) {\n\t\tm_ConfigManager.UpdateConfigSuccess += OnUpdateConfigSuccess;\n\t\tm_ConfigManager.UpdateConfigFailure += OnUpdateConfigFailure;\n\t}\n\tif (m_NeedDependency) {\n\t\tm_ConfigManager.DependencyAssetEvent += OnDependencyAsset;\n\t}\n}", "CodeBleu_score": 73.10613976954869}, {"code": "protected override void Awake(){\n\t\tbase.Awake();\n\n\tm_ConfigManager = GameFrameworkEntry.GetModule<IConfigManager>();\n\tif (m_ConfigManager == null) {\n\t\tLog.Fatal(\"Config manager is invalid.\");\n\t\treturn;\n\t}\n\n\tm_ConfigManager.ReadConfigSuccess += OnReadConfigSuccess;\n\tm_ConfigManager.ReadConfigFailure += OnReadConfigFailure;\n\tif (m_LoadType == LoadType.LoadFromAsset) {\n\t\tm_ConfigManager.UpdateConfigSuccess += OnUpdateConfigSuccess;\n\t\tm_ConfigManager.UpdateConfigFailure += OnUpdateConfigFailure;\n\t\tm_ConfigManager.DependencyAssetEvent += OnDependencyAssetEvent;\n\t}\n}", "CodeBleu_score": 73.01786960268609}, {"code": "protected override void Awake(){\n\t\tbase.Awake();\n\tConfigManager = GameFrameworkEntry.GetModule<IConfigManager>();\n\tif (ConfigManager == null) {\n\t\tLog.Fatal(\"ConfigManager is invalid.\");\n\t\treturn;\n\t}\n\tConfigManager.ReadConfigSuccess += OnReadConfigSuccess;\n\tConfigManager.ReadConfigFailure += OnReadConfigFailure;\n\tif (ConfigManager.HasUpdateEvent) {\n\t\tConfigManager.ConfigUpdate += OnConfigUpdate;\n\t}\n\tif (ConfigManager.HasDependencyAssetEvent) {\n\t\tConfigManager.LoadDependencyAssetSuccess += OnLoadDependencyAssetSuccess;\n\t\tConfigManager.LoadDependencyAssetFailure += OnLoadDependencyAssetFailure;\n\t}\n}", "CodeBleu_score": 51.03435707795572}]}
{"instance_id": "fbb36ff9d552", "generation_result": [{"code": "public override bool ReadData(IConfigManager configManager, string configAssetName, object configAsset, object userData){\n\t\t// If the config asset is a TextAsset, parse the data as text\n\tif (configAsset is TextAsset) {\n\t\t// Parse the data as text\n\t\treturn configManager.ParseData((TextAsset)configAsset, userData);\n\t}\n\n\t// If the config asset is not a TextAsset, parse the data as bytes\n\tif (configAsset is byte[]) {\n\t\t// Parse the data as bytes\n\t\treturn configManager.ParseData((byte[])configAsset, userData);\n\t}\n\n\t// If the config asset is invalid, log a warning and return false\n\tLog.Warning(\"Invalid config asset: \" + configAssetName);\n\treturn false;\n}", "CodeBleu_score": 45.38855604875698}, {"code": "public override bool ReadData(IConfigManager configManager, string configAssetName, object configAsset, object userData){\n\t\t// Check if the config asset is a TextAsset\n\tif (configAsset is TextAsset textAsset) {\n\t\t// Check if the asset ends with a specific byte extension\n\t\tif (configAssetName.EndsWith(\".bytes\")) {\n\t\t\t// Parse the data as bytes\n\t\t\treturn configManager.ParseData(textAsset.bytes, userData);\n\t\t} else {\n\t\t\t// Parse the data as text\n\t\t\treturn configManager.ParseData(textAsset.text, userData);\n\t\t}\n\t} else {\n\t\t// Log a warning if the asset is invalid\n\t\tLog.Warning($\"Config asset {configAssetName} is not a TextAsset\");\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 55.959814402112265}, {"code": "public override bool ReadData(IConfigManager configManager, string configAssetName, object configAsset, object userData){\n\t\t// If the config asset is not a TextAsset, log a warning and return false.\n\tif (configAsset is not TextAsset) {\n\t\tLog.Warning(\"Config asset is not a TextAsset.\");\n\t\treturn false;\n\t}\n\n\t// Determine the parsing method based on the file extension.\n\tif (configAssetName.EndsWith(\".bytes\")) {\n\t\t// Parse the data as bytes.\n\t\treturn ParseDataAsBytes(configManager, configAsset, userData);\n\t} else {\n\t\t// Parse the data as text.\n\t\treturn ParseDataAsText(configManager, configAsset, userData);\n\t}\n}", "CodeBleu_score": 48.74833573562527}]}
{"instance_id": "84d744c480ca", "generation_result": [{"code": "public override bool ParseData(IConfigManager configManager, byte[] configBytes, int startIndex, int length, object userData){\n\t\tif (configBytes == null) {\n\t\treturn false;\n\t}\n\n\tif (configManager == null) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tusing (MemoryStream memoryStream = new MemoryStream(configBytes, startIndex, length, false)) {\n\t\t\tusing (BinaryReader binaryReader = new BinaryReader(memoryStream)) {\n\t\t\t\tint numConfigs = binaryReader.ReadInt32();\n\n\t\t\t\tfor (int i = 0; i < numConfigs; i++) {\n\t\t\t\t\tstring configName = binaryReader.ReadString();\n\t\t\t\t\tstring configValue = binaryReader.ReadString();\n\n\t\t\t\t\tif (!configManager.AddConfig(configName, configValue)) {\n\t\t\t\t\t\tLog.Warning(\"Failed to add config {0}={1}\", configName, configValue);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (Exception ex) {\n\t\tLog.Exception(ex);\n\t\treturn false;\n\t}\n\n\treturn true;\n}", "CodeBleu_score": 53.92177315059025}, {"code": "public override bool ParseData(IConfigManager configManager, byte[] configBytes, int startIndex, int length, object userData){\n\t\tif (configBytes == null) {\n\t\tLog.Error(\"ParseData called with null configBytes\");\n\t\treturn false;\n\t}\n\tif (length <= 0) {\n\t\tLog.Error(\"ParseData called with length <= 0\");\n\t\treturn false;\n\t}\n\tif (startIndex < 0 || startIndex + length > configBytes.Length) {\n\t\tLog.Error(\"ParseData called with startIndex < 0 || startIndex + length > configBytes.Length\");\n\t\treturn false;\n\t}\n\ttry {\n\t\tusing (MemoryStream memoryStream = new MemoryStream(configBytes, startIndex, length, false)) {\n\t\t\tusing (BinaryReader binaryReader = new BinaryReader(memoryStream)) {\n\t\t\t\twhile (memoryStream.Position < memoryStream.Length) {\n\t\t\t\t\tstring name = binaryReader.ReadString();\n\t\t\t\t\tstring value = binaryReader.ReadString();\n\t\t\t\t\tif (!configManager.AddConfig(name, value)) {\n\t\t\t\t\t\tLog.Warning(\"Failed to add config \" + name + \" = \" + value);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} catch (Exception ex) {\n\t\tLog.Exception(ex);\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 60.388943807598054}, {"code": "public override bool ParseData(IConfigManager configManager, byte[] configBytes, int startIndex, int length, object userData){\n\t\tif (configManager == null) {\n\t\tLog.Warning(\"ParseData: configManager is null\");\n\t\treturn false;\n\t}\n\n\tif (configBytes == null) {\n\t\tLog.Warning(\"ParseData: configBytes is null\");\n\t\treturn false;\n\t}\n\n\tif (startIndex < 0 || startIndex >= configBytes.Length) {\n\t\tLog.Warning(\"ParseData: startIndex is out of range\");\n\t\treturn false;\n\t}\n\n\tif (length < 0 || startIndex + length > configBytes.Length) {\n\t\tLog.Warning(\"ParseData: length is out of range\");\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tusing (var memoryStream = new MemoryStream(configBytes, startIndex, length, false))\n\t\tusing (var binaryReader = new BinaryReader(memoryStream)) {\n\t\t\twhile (binaryReader.BaseStream.Position < binaryReader.BaseStream.Length) {\n\t\t\t\tvar configName = binaryReader.ReadString();\n\t\t\t\tvar configValue = binaryReader.ReadString();\n\n\t\t\t\tif (!configManager.AddConfig(configName, configValue)) {\n\t\t\t\t\tLog.Warning(\"ParseData: failed to add config '{0}'\", configName);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (Exception e) {\n\t\tLog.Warning(\"ParseData: exception '{0}'\", e);\n\t\treturn false;\n\t}\n\n\treturn true;\n}", "CodeBleu_score": 61.55598985768184}]}
{"instance_id": "298bb6fa19a4", "generation_result": [{"code": "public override void ReleaseDataAsset(IConfigManager configManager, object configAsset){\n\t\t// TODO: Implement this method\n\tm_ResourceComponent.UnloadAsset(configAsset);\n}", "CodeBleu_score": 71.86736951451492}, {"code": "public override void ReleaseDataAsset(IConfigManager configManager, object configAsset){\n\t\tm_ResourceComponent.UnloadAsset(configAsset);\n}", "CodeBleu_score": 71.88402467711936}, {"code": "public override void ReleaseDataAsset(IConfigManager configManager, object configAsset){\n\t\tm_ResourceComponent.UnloadAsset(configAsset);\n}", "CodeBleu_score": 71.88402467711936}]}
{"instance_id": "fa2003d95e36", "generation_result": [{"code": " public static ActiveSceneChangedEventArgs Create(Scene lastActiveScene, Scene activeScene){\n\tActiveSceneChangedEventArgs result = ReferencePool.Acquire<ActiveSceneChangedEventArgs>();\nresult.lastActiveScene = lastActiveScene;\nresult.activeScene = activeScene;\nreturn result;\n}", "CodeBleu_score": 48.505177770556976}, {"code": " public static ActiveSceneChangedEventArgs Create(Scene lastActiveScene, Scene activeScene){\n\tActiveSceneChangedEventArgs t1 = Object.Instantiate<ActiveSceneChangedEventArgs>(ActiveSceneChangedEventArgs.Pooled);\nt1.lastActiveScene = lastActiveScene;\nt1.activeScene = activeScene;\nreturn t1;\n}", "CodeBleu_score": 39.87656247061216}, {"code": " public static ActiveSceneChangedEventArgs Create(Scene lastActiveScene, Scene activeScene){\n\tActiveSceneChangedEventArgs result = ReferencePool.Acquire<ActiveSceneChangedEventArgs>();\nresult.lastActiveScene = lastActiveScene;\nresult.activeScene = activeScene;\nreturn result;\n}", "CodeBleu_score": 48.505177770556976}]}
{"instance_id": "aba13f34251c", "generation_result": [{"code": "public void LoadScene(string sceneAssetName, int priority, object userData){\n\t\tif (string.IsNullOrEmpty(sceneAssetName)) {\n\t\tLog.Error(\"Scene asset name is null or empty\");\n\t\treturn;\n\t}\n\tif (!sceneAssetName.StartsWith(\"Assets/\") ||!sceneAssetName.EndsWith(\".unity\")) {\n\t\tLog.Error(\"Scene asset name must start with \\\"Assets/\\\" and end with \\\".unity\\\"\");\n\t\treturn;\n\t}\n\tm_SceneManager.LoadScene(sceneAssetName, priority, userData);\n}", "CodeBleu_score": 62.974667172644594}, {"code": "public void LoadScene(string sceneAssetName, int priority, object userData){\n\t\tif (string.IsNullOrEmpty(sceneAssetName)) {\n\t\tLog.Error(\"Scene asset name is null or empty.\");\n\t\treturn;\n\t}\n\n\tif (!sceneAssetName.StartsWith(\"Assets/\") ||!sceneAssetName.EndsWith(\".unity\")) {\n\t\tLog.Error(\"Scene asset name is invalid. It must start with 'Assets/' and end with '.unity'.\");\n\t\treturn;\n\t}\n\n\tm_SceneManager.LoadScene(sceneAssetName, priority, userData);\n}", "CodeBleu_score": 64.261365867416}, {"code": "public void LoadScene(string sceneAssetName, int priority, object userData){\n\t\tif (string.IsNullOrEmpty(sceneAssetName)) {\n\t\tLog.Error(\"Invalid scene asset name: {0}\", sceneAssetName);\n\t\treturn;\n\t}\n\n\tif (!sceneAssetName.StartsWith(\"Assets/\") ||!sceneAssetName.EndsWith(\".unity\")) {\n\t\tLog.Error(\"Invalid scene asset name: {0}\", sceneAssetName);\n\t\treturn;\n\t}\n\n\tm_SceneManager.LoadScene(sceneAssetName, priority, userData);\n}", "CodeBleu_score": 61.841906562289125}]}
{"instance_id": "3fe99fba3ce8", "generation_result": [{"code": "void FBinariesPatchFeatureModule::StartupModule(){\n\t\t// Get all registered feature implementations\n\tTArray<IModularFeature*> Features = IModularFeatures::Get().GetModularFeatureImplementations<IBinariesDiffPatchFeature>();\n\n\t// Append their names to the binaries patch feature enumerations\n\tfor (IModularFeature* Feature : Features) {\n\t\tFString FeatureName = Feature->GetFeatureName();\n\t\tEBinariesPatchFeature::AppendEnumerators(FeatureName);\n\t}\n\n\t// Set up callbacks for when modular features are registered or unregistered\n\tIModularFeatures::Get().OnModularFeatureRegistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureRegistered);\n\tIModularFeatures::Get().OnModularFeatureUnregistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureUnregistered);\n}", "CodeBleu_score": 58.21427936129313}, {"code": "void FBinariesPatchFeatureModule::StartupModule(){\n\t\t// Get registered feature implementations\n\tTArray<IModularFeature*> ModularFeatures = IModularFeatures::Get().GetModularFeatureImplementations<IBinariesDiffPatchFeature>();\n\t// Append their names to the binaries patch feature enumerations\n\tfor (IModularFeature* ModularFeature : ModularFeatures) {\n\t\tIBinariesDiffPatchFeature* BinariesDiffPatchFeature = Cast<IBinariesDiffPatchFeature>(ModularFeature);\n\t\tif (BinariesDiffPatchFeature) {\n\t\t\tFString FeatureName = BinariesDiffPatchFeature->GetFeatureName();\n\t\t\tif (!FeatureName.IsEmpty()) {\n\t\t\t\tEBinariesPatchFeature::AppendEnumerators(TEXT(FeatureName));\n\t\t\t}\n\t\t}\n\t}\n\t// Set up callbacks for when modular features are registered or unregistered\n\tIModularFeatures::Get().OnModularFeatureRegistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureRegistered);\n\tIModularFeatures::Get().OnModularFeatureUnregistered().AddStatic(&FBinariesPatchFeatureModule::OnModularFeatureUnregistered);\n}", "CodeBleu_score": 54.13908750991314}, {"code": "void FBinariesPatchFeatureModule::StartupModule(){\n\t\t// This code will execute after your module is loaded into memory; the exact timing is specified in the.uplugin file per-module\n\t// Get all registered feature implementations\n\tTArray<IModularFeature*> Featues = IModularFeatures::Get().GetModularFeatureImplementations<IBinariesDiffPatchFeature>();\n\t// Append their names to the binaries patch feature enumerations\n\tfor (IModularFeature* Featue : Featues) {\n\t\tEBinariesPatchFeature FeatureName = EBinariesPatchFeature::FromString(Featue->GetFeatureName());\n\t\tif (FeatureName == EBinariesPatchFeature::Invalid) {\n\t\t\tUE_LOG(LogHotPatcher, Error, TEXT(\"Invalid feature name: %s\"), *Featue->GetFeatureName());\n\t\t} else {\n\t\t\tEBinariesPatchFeature::AppendEnumeraters(FeatureName);\n\t\t}\n\t}\n\t// Set up callbacks for when modular features are registered or unregistered\n\tIModularFeatures::Get().OnModularFeatureRegistered().AddStatic(\n\t\t&FBinariesPatchFeatureModule::OnModularFeatureRegistered\n\t);\n\tIModularFeatures::Get().OnModularFeatureUnregistered().AddStatic(\n\t\t&FBinariesPatchFeatureModule::OnModularFeatureUnregistered\n\t);\n}", "CodeBleu_score": 53.68689573031362}]}
{"instance_id": "c702cc0f74b5", "generation_result": [{"code": "TArray<FString> CommandletHelper::ParserPatchConfigByCommandline(const FString& Commandline,const FString& Token){\n\t\tTArray<FString> Result;\n\tTMap<FString, FString> ParamsMap;\n\tCommandletHelper::GetCommandLineParamsMap(Commandline, ParamsMap);\n\tif (ParamsMap.Contains(Token)) {\n\t\tFString Value = ParamsMap[Token];\n\t\tValue.ParseIntoArray(Result, TEXT(\",\"), true);\n\t}\n\treturn Result;\n}", "CodeBleu_score": 58.40256449960276}, {"code": "TArray<FString> CommandletHelper::ParserPatchConfigByCommandline(const FString& Commandline,const FString& Token){\n\t\tTArray<FString> Result;\n\tFString CommandlineString = Commandline;\n\tTMap<FString, FString> CommandlineMap;\n\tFString CommandlineValue;\n\tif (FParse::Value(*CommandlineString, *Token, CommandlineValue)) {\n\t\tCommandlineValue.ParseIntoArray(Result, TEXT(\",\"), true);\n\t}\n\treturn Result;\n}", "CodeBleu_score": 49.01648000003682}, {"code": "TArray<FString> CommandletHelper::ParserPatchConfigByCommandline(const FString& Commandline,const FString& Token){\n\t", "CodeBleu_score": 9.464279801391635}]}
{"instance_id": "6a6382275b1d", "generation_result": [{"code": "bool CommandletHelper::IsCookCommandlet(){\n\t\t// Get the name of the current running commandlet.\n\tFString CommandletName = GetCommandletName();\n\n\t// If the commandlet name is not empty and matches \"cook\" (case-insensitive), return true.\n\tif (!CommandletName.IsEmpty() && CommandletName.Equals(TEXT(\"cook\"), ESearchCase::IgnoreCase)) {\n\t\treturn true;\n\t}\n\n\t// Otherwise, return false.\n\treturn false;\n}", "CodeBleu_score": 24.200007851443832}, {"code": "bool CommandletHelper::IsCookCommandlet(){\n\t\tFString CommandletName;\n\tif (IsRunningCommandlet() && FCommandletHelpers::GetCommandletArg(CommandletName, TEXT(\"cook\"))) {\n\t\treturn CommandletName.Equals(TEXT(\"cook\"), ESearchCase::IgnoreCase);\n\t}\n\treturn false;\n}", "CodeBleu_score": 31.39097331506878}, {"code": "bool CommandletHelper::IsCookCommandlet(){\n\t\tif (IsRunningCommandlet()) {\n\t\tFString CommandletName = GetCommandletName();\n\t\tif (!CommandletName.IsEmpty() && CommandletName.Equals(TEXT(\"cook\"), ESearchCase::IgnoreCase)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}", "CodeBleu_score": 27.1863607904676}]}
{"instance_id": "6888ed47b6be", "generation_result": [{"code": "void UHotPatcherCommandletBase::Update(const FString& Params){\n\t\tFString CommandletName = FCommandLine::Get();\n\tif (GetDefault<UHotPatcherSettings>()->bEnableServerlessCount) {\n\t\tCounter = MakeShareable(new FCountServerlessWrapper());\n\t\tCounter->Init(\n\t\t\tFCountServerlessWrapper::MakeServerRequestInfo(GetDefault<UHotPatcherSettings>()->ServerlessCountServer),\n\t\t\tFCountServerlessWrapper::MakeCurrentProject(GetDefault<UHotPatcherSettings>()->ServerlessCountProject, CommandletName)\n\t\t);\n\t\tCounter->Process();\n\t}\n}", "CodeBleu_score": 32.94305743015692}, {"code": "void UHotPatcherCommandletBase::Update(const FString& Params){\n\t\tFString CommandletName = FCommandLine::Get();\n\tif (GetDefault<UHotPatcherSettings>()->bEnableServerlessCount) {\n\t\tCounter->Init(FCountServerlessWrapper::MakeServerRequestInfo(CommandletName), FCountServerlessWrapper::MakeCurrentProject(CommandletName));\n\t}\n\tCounter->Process();\n}", "CodeBleu_score": 23.284651609400356}, {"code": "void UHotPatcherCommandletBase::Update(const FString& Params){\n\t\t// Get the commandlet name from the command line\n\tFString CommandletName = FCommandLine::Get();\n\n\t// Check if serverless counting is enabled in the settings\n\tif (GetDefault<UHotPatcherSettings>()->bEnableServerlessCounting) {\n\t\t// Initialize the counter with server request and project information\n\t\tFCountServerlessWrapper Counter(GetDefault<UHotPatcherSettings>()->ServerlessCountingURL);\n\t\tCounter->Init(GetDefault<UHotPatcherSettings>()->ServerlessCountingProject, CommandletName);\n\n\t\t// Process the counter\n\t\tCounter->Process();\n\t}\n}", "CodeBleu_score": 26.513840319713218}]}
{"instance_id": "c467af995f29", "generation_result": [{"code": "bool UFlibHotCookerHelper::IsAppleMetalPlatform(ITargetPlatform* TargetPlatform){\n\t\tif (TargetPlatform!= nullptr) {\n\t\treturn TargetPlatform->PlatformName().StartsWith(TEXT(\"IOS\"), ESearchCase::IgnoreCase) || TargetPlatform->PlatformName().StartsWith(TEXT(\"Mac\"), ESearchCase::IgnoreCase) || TargetPlatform->PlatformName().StartsWith(TEXT(\"TVOS\"), ESearchCase::IgnoreCase);\n\t}\n\treturn false;\n}", "CodeBleu_score": 35.21675597955712}, {"code": "bool UFlibHotCookerHelper::IsAppleMetalPlatform(ITargetPlatform* TargetPlatform){\n\t\tif (TargetPlatform == nullptr) {\n\t\treturn false;\n\t}\n\tFString PlatformName = TargetPlatform->PlatformName().ToString();\n\tif (PlatformName.StartsWith(\"IOS\") || PlatformName.StartsWith(\"Mac\") || PlatformName.StartsWith(\"TVOS\")) {\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 26.183004415361005}, {"code": "bool UFlibHotCookerHelper::IsAppleMetalPlatform(ITargetPlatform* TargetPlatform){\n\t\tif (TargetPlatform == nullptr) {\n\t\treturn false;\n\t}\n\tFString PlatformName = TargetPlatform->PlatformName().ToString();\n\treturn PlatformName.StartsWith(TEXT(\"IOS\")) || PlatformName.StartsWith(TEXT(\"Mac\")) || PlatformName.StartsWith(TEXT(\"TVOS\"));\n}", "CodeBleu_score": 32.813193404558454}]}
{"instance_id": "3df342b1c6f8", "generation_result": [{"code": "void FFreezePackageTracker::NotifyUObjectCreated(const UObjectBase* Object, int32 Index){\n\t\t// Retrieve the outermost package of the object and check if it is valid\n\tUPackage* Package = Object->GetOutermost();\n\tif (!Package) {\n\t\treturn;\n\t}\n\n\t// If the package is not in CookerAssetsSet but is in AllAssetsSet and does not always require post-load processing, add the object to the PackageObjectsMap and FreezeObjects list\n\tif (!CookerAssetsSet.Contains(Package) && AllAssetsSet.Contains(Package) &&!IsAlwayPostLoadClasses(Package, const_cast<UObject*>(Object))) {\n\t\tFName AssetPathName = Package->GetPathName();\n\t\tPackageObjectsMap.FindOrAdd(AssetPathName).Add(const_cast<UObject*>(Object));\n\t\tFreezeObjects.Add(const_cast<UObject*>(Object));\n\t}\n\n\t// Clear the RF_NeedPostLoad and RF_NeedPostLoadSubobjects flags from the object\n\tconst_cast<UObject*>(Object)->ClearFlags(RF_NeedPostLoad | RF_NeedPostLoadSubobjects);\n}", "CodeBleu_score": 52.07798179732153}, {"code": "void FFreezePackageTracker::NotifyUObjectCreated(const UObjectBase* Object, int32 Index){\n\t\tif (Object == nullptr) {\n\t\treturn;\n\t}\n\tUPackage* Package = Object->GetOutermost();\n\tif (Package == nullptr) {\n\t\treturn;\n\t}\n\tif (CookerAssetsSet.Contains(Package)) {\n\t\treturn;\n\t}\n\tif (AllAssetsSet.Contains(Package)) {\n\t\tif (!IsAlwayPostLoadClasses(Package, const_cast<UObject*>(Object))) {\n\t\t\tPackageObjectsMap.FindOrAdd(Package->GetPathName()).Add(const_cast<UObject*>(Object));\n\t\t\tFreezeObjects.Add(const_cast<UObject*>(Object));\n\t\t\tObject->ClearFlags(RF_NeedPostLoad | RF_NeedPostLoadSubobjects);\n\t\t}\n\t}\n}", "CodeBleu_score": 44.51412667013588}, {"code": "void FFreezePackageTracker::NotifyUObjectCreated(const UObjectBase* Object, int32 Index){\n\t\tif (Object->IsValidLowLevel()) {\n\t\tUPackage* Package = Object->GetOutermost();\n\t\tif (Package) {\n\t\t\tif (!CookerAssetsSet.Contains(Package)) {\n\t\t\t\tif (AllAssetsSet.Contains(Package)) {\n\t\t\t\t\tif (!IsAlwayPostLoadClasses(Package, const_cast<UObject*>(Object))) {\n\t\t\t\t\t\tPackageObjectsMap.FindOrAdd(Package->GetPathName()).Add(const_cast<UObject*>(Object));\n\t\t\t\t\t\tFreezeObjects.Add(const_cast<UObject*>(Object));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst_cast<UObject*>(Object)->ClearFlags(RF_NeedPostLoad | RF_NeedPostLoadSubobjects);\n}", "CodeBleu_score": 45.976519555103046}]}
{"instance_id": "fac8b2878c3c", "generation_result": [{"code": "void FHotPatcherPackageWriter::CollectForSaveBulkData(FRecord& Record, FCommitContext& Context)\n{{\n\t\tconst FBulkDataInfo& BulkRecord = Record.BulkDataInfo;\n\tif (BulkRecord.bIsAppendedToExports)\n\t{\n\t\t// Bulk data appended to exports.\n\t\t// Add the export buffer to the corresponding export buffer list in the context.\n\t\tContext.ExportsBuffers[BulkRecord.Info.MultiOutputIndex].Add(MoveTemp(Record.BulkDataBuffer));\n\t}\n\telse\n\t{\n\t\t// Bulk data not appended to exports.\n\t\t// Create an output file entry in the context's output files, setting its properties such as filename, buffer, regions, and flags for sidecar status and hash contribution.\n\t\tFFileEntry& FileEntry = Context.OutputFiles.Emplace_GetRef();\n\t\tFileEntry.Filename = BulkRecord.Info.Filename;\n\t\tFileEntry.Buffer = MoveTemp(Record.BulkDataBuffer);\n\t\tFileEntry.Regions = BulkRecord.Info.Regions;\n\t\tFileEntry.bIsSidecar = BulkRecord.bIsSidecar;\n\t\tFileEntry.bContributeHash = BulkRecord.bContributeHash;\n\t}\n}", "CodeBleu_score": 53.0607319200724}, {"code": "void FHotPatcherPackageWriter::CollectForSaveBulkData(FRecord& Record, FCommitContext& Context)\n{{\n\t\tconst FBulkDataRecord* BulkRecord = Record.GetBulkDataRecord();\n\tif (BulkRecord)\n\t{\n\t\t// Bulk data appended to exports, add the export buffer to the corresponding export buffer list in the context.\n\t\tif (BulkRecord->Info.bAppendedToExports)\n\t\t{\n\t\t\tcheck(Context.ExportsBuffers[BulkRecord->Info.MultiOutputIndex]);\n\t\t\tContext.ExportsBuffers[BulkRecord->Info.MultiOutputIndex]->Add(BulkRecord->Buffer);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// For other bulk data types, create an output file entry in the context's output files, setting its properties such as filename, buffer, regions, and flags for sidecar status and hash contribution.\n\t\t\tFContextOutputFile& OutputFile = Context.OutputFiles.Emplace_GetRef();\n\t\t\tOutputFile.Filename = BulkRecord->Info.Filename;\n\t\t\tOutputFile.Buffer = BulkRecord->Buffer;\n\t\t\tOutputFile.Regions = BulkRecord->Regions;\n\t\t\tOutputFile.bIsSidecar = BulkRecord->Info.bIsSidecar;\n\t\t\tOutputFile.bContributesToHash = BulkRecord->Info.bContributesToHash;\n\t\t}\n\t}\n}", "CodeBleu_score": 50.79844578289444}, {"code": "void FHotPatcherPackageWriter::CollectForSaveBulkData(FRecord& Record, FCommitContext& Context)\n{{\n\t", "CodeBleu_score": 3.322889697418792}]}
{"instance_id": "bf46051105c9", "generation_result": [{"code": "void FHotPatcherPackageWriter::CollectForSaveExportsFooter(FRecord& Record, FCommitContext& Context){\n\t", "CodeBleu_score": 4.951469825088823}, {"code": "void FHotPatcherPackageWriter::CollectForSaveExportsFooter(FRecord& Record, FCommitContext& Context){\n\t\tif (Context.bDiffExportArchiveCompleted)\n\t{\n\t\treturn;\n\t}\n\n\tFSharedBuffer FooterBuffer = MakeShared<FBuffer>();\n\tFooterBuffer->Add(Record.PackageFileTag);\n\tFooterBuffer->Add(Record.PackageFileTag.Num());\n\tFooterBuffer->Add(Record.PackageFileTag.Num());\n\n\tfor (int32 Index = 0; Index < Context.ExportsBuffers.Num(); ++Index)\n\t{\n\t\tContext.ExportsBuffers[Index].Add(FooterBuffer);\n\t}\n}", "CodeBleu_score": 47.2805079377347}, {"code": "void FHotPatcherPackageWriter::CollectForSaveExportsFooter(FRecord& Record, FCommitContext& Context){\n\t", "CodeBleu_score": 4.951469825088823}]}
{"instance_id": "c0966eddf1ee", "generation_result": [{"code": "void UGDCharacterMovementComponent::FGDSavedMove::SetMoveFor(ACharacter * Character, float InDeltaTime, FVector const & NewAccel, FNetworkPredictionData_Client_Character & ClientData){\n\t\tSuper::SetMoveFor(Character, InDeltaTime, NewAccel, ClientData);\n\n\tif (UGDCharacterMovementComponent * GDMovementComponent = Cast<UGDCharacterMovementComponent>(Character->GetCharacterMovement())) {\n\t\tGDMovementComponent->bWantsToSprint = bWantsToSprint;\n\t\tGDMovementComponent->bWantsToAimDownSights = bWantsToAimDownSights;\n\t}\n}", "CodeBleu_score": 61.71097041949069}, {"code": "void UGDCharacterMovementComponent::FGDSavedMove::SetMoveFor(ACharacter * Character, float InDeltaTime, FVector const & NewAccel, FNetworkPredictionData_Client_Character & ClientData){\n\t\tSuper::SetMoveFor(Character, InDeltaTime, NewAccel, ClientData);\n\tUGDCharacterMovementComponent * GDCharacterMovement = Cast<UGDCharacterMovementComponent>(Character->GetCharacterMovement());\n\tif (GDCharacterMovement) {\n\t\tbSavedWantsToRun = GDCharacterMovement->bWantsToRun;\n\t\tbSavedWantsToAimDownSights = GDCharacterMovement->bWantsToAimDownSights;\n\t}\n}", "CodeBleu_score": 75.07609030055657}, {"code": "void UGDCharacterMovementComponent::FGDSavedMove::SetMoveFor(ACharacter * Character, float InDeltaTime, FVector const & NewAccel, FNetworkPredictionData_Client_Character & ClientData){\n\t\tSuper::SetMoveFor(Character, InDeltaTime, NewAccel, ClientData);\n\n\t// Cast the character's movement component to UGDCharacterMovementComponent\n\tUGDCharacterMovementComponent* GDCharacterMovement = Cast<UGDCharacterMovementComponent>(Character->GetCharacterMovement());\n\n\t// If the cast is successful, save the character's sprinting and aiming down sights (ADS) requests into the move\n\tif (GDCharacterMovement) {\n\t\tbSavedWantsToSprint = GDCharacterMovement->bWantsToSprint;\n\t\tbSavedWantsToAimDownSights = GDCharacterMovement->bWantsToAimDownSights;\n\t}\n}", "CodeBleu_score": 77.31667156425159}]}
{"instance_id": "f73106356e9d", "generation_result": [{"code": "UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::ListenForAttributeChange(UAbilitySystemComponent* AbilitySystemComponent, FGameplayAttribute Attribute){\n\t\tif (!IsValid(AbilitySystemComponent) ||!Attribute.IsValid()) {\n\t\tRemoveFromRoot();\n\t\treturn nullptr;\n\t}\n\n\tUAsyncTaskAttributeChanged* WaitForAttributeChangedTask = NewObject<UAsyncTaskAttributeChanged>();\n\tWaitForAttributeChangedTask->AddToRoot();\n\n\tFGameplayAttribute Attribute = FGameplayAttribute(Attribute);\n\tFDelegateHandle DelegateHandle = AbilitySystemComponent->GetGameplayAttributeValueChangeDelegate(Attribute).AddUObject(WaitForAttributeChangedTask, &UAsyncTaskAttributeChanged::OnAttributeChanged);\n\n\tWaitForAttributeChangedTask->Attribute = Attribute;\n\tWaitForAttributeChangedTask->DelegateHandle = DelegateHandle;\n\n\treturn WaitForAttributeChangedTask;\n}", "CodeBleu_score": 63.625001083092606}, {"code": "UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::ListenForAttributeChange(UAbilitySystemComponent* AbilitySystemComponent, FGameplayAttribute Attribute){\n\t\tif (!AbilitySystemComponent ||!Attribute.IsValid()) {\n\t\t// If either the ability system component or the attribute is invalid, remove the task from the root and return null.\n\t\tRemoveFromRoot();\n\t\treturn nullptr;\n\t}\n\n\t// Create a new instance of the task and set its properties.\n\tUAsyncTaskAttributeChanged* Task = NewObject<UAsyncTaskAttributeChanged>();\n\tTask->AbilitySystemComponent = AbilitySystemComponent;\n\tTask->Attribute = Attribute;\n\n\t// Add a delegate to handle attribute value changes.\n\tAbilitySystemComponent->GetGameplayAttributeValueChangeDelegate(Attribute).AddUObject(Task, &UAsyncTaskAttributeChanged::OnAttributeChanged);\n\n\t// Return the initialized task.\n\treturn Task;\n}", "CodeBleu_score": 57.39757101183811}, {"code": "UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::ListenForAttributeChange(UAbilitySystemComponent* AbilitySystemComponent, FGameplayAttribute Attribute){\n\t\t// Check if the ability system component is valid and the attribute is valid\n\tif (!IsValid(AbilitySystemComponent) ||!Attribute.IsValid()) {\n\t\t// Remove the task from the root and return null\n\t\tRemoveFromRoot();\n\t\treturn nullptr;\n\t}\n\n\t// Create a new instance of the async task\n\tUAsyncTaskAttributeChanged* AsyncTaskAttributeChanged = NewObject<UAsyncTaskAttributeChanged>();\n\n\t// Add a delegate to handle attribute value changes\n\tAbilitySystemComponent->GetGameplayAttributeValueChangeDelegate(Attribute).AddUObject(AsyncTaskAttributeChanged, &UAsyncTaskAttributeChanged::OnAttributeValueChanged);\n\n\t// Return the async task\n\treturn AsyncTaskAttributeChanged;\n}", "CodeBleu_score": 52.08124197354547}]}
{"instance_id": "a581424c2b31", "generation_result": [{"code": "void UAsyncTaskCooldownChanged::EndTask(){\n\t\tif (IsValid(ASC)) {\n\t\tASC->OnActiveGameplayEffectAddedDelegateToSelf.RemoveAll(this);\n\t\tASC->RegisterGameplayTagEvent(CooldownTag, EGameplayTagEventType::NewOrRemoved).RemoveAll(this);\n\t\tMarkAsGarbage();\n\t}\n}", "CodeBleu_score": 41.810750723831234}, {"code": "void UAsyncTaskCooldownChanged::EndTask(){\n\t\tif (IsValid(ASC)) {\n\t\tASC->OnActiveGameplayEffectAddedDelegateToSelf.RemoveAll(this);\n\t\tASC->RegisterGameplayTagEvent(CooldownTag, EGameplayTagEventType::NewOrRemoved).RemoveAll(this);\n\t\tMarkAsGarbage();\n\t}\n}", "CodeBleu_score": 41.810750723831234}, {"code": "void UAsyncTaskCooldownChanged::EndTask(){\n\t\tif (IsValid(ASC)) {\n\t\tASC->OnActiveGameplayEffectAddedDelegateToSelf.RemoveAll(this);\n\t\tASC->RegisterGameplayTagEvent(CooldownTag, EGameplayTagEventType::NewOrRemoved).RemoveAll(this);\n\t}\n\n\tSetReadyToDestroy();\n\tMarkAsGarbage();\n}", "CodeBleu_score": 46.10693618128907}]}
{"instance_id": "5029df3a2033", "generation_result": [{"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tif (EffectRemoved.Spec.GetAllAssetTags().HasTagExact(EffectGameplayTag)) {\n\t\tEffectStackChanged.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EffectRemoved.Spec.StackCount, 0);\n\t}\n\tif (EffectRemoved.Spec.GetAllGrantedTags().HasTagExact(EffectGameplayTag)) {\n\t\tEffectStackChanged.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EffectRemoved.Spec.StackCount, 0);\n\t}\n}", "CodeBleu_score": 45.92375708491903}, {"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tif (EffectRemoved.Spec.GetAllGrantedTags().HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EStackChangeType::STACK_CHANGE_REMOVE);\n\t}\n\tif (EffectRemoved.Spec.GetAllAssetTags().HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EStackChangeType::STACK_CHANGE_REMOVE);\n\t}\n}", "CodeBleu_score": 50.86238556510813}, {"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tFGameplayTagContainer AssetTags = EffectRemoved.Spec.GetAllAssetTags();\n\tFGameplayTagContainer GrantedTags = EffectRemoved.Spec.GetAllGrantedTags();\n\n\tif (AssetTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, FActiveGameplayEffectHandle::StackChangeDetails(EffectRemoved.Handle, 0, EffectRemoved.GetMagnitude(), 0));\n\t}\n\telse if (GrantedTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, FActiveGameplayEffectHandle::StackChangeDetails(EffectRemoved.Handle, 0, EffectRemoved.GetMagnitude(), 0));\n\t}\n}", "CodeBleu_score": 49.59669369938698}]}
{"instance_id": "cb1d2823d203", "generation_result": [{"code": "UAsyncTaskEffectStackChanged * UAsyncTaskEffectStackChanged::ListenForGameplayEffectStackChange(UAbilitySystemComponent * AbilitySystemComponent, FGameplayTag InEffectGameplayTag){\n\t\tUAsyncTaskEffectStackChanged * AsyncTaskEffectStackChanged = NewObject<UAsyncTaskEffectStackChanged>();\n\tAsyncTaskEffectStackChanged->AbilitySystemComponent = AbilitySystemComponent;\n\tAsyncTaskEffectStackChanged->EffectGameplayTag = InEffectGameplayTag;\n\n\tif (AsyncTaskEffectStackChanged->IsValid()) {\n\t\tAsyncTaskEffectStackChanged->AbilitySystemComponent->OnAnyGameplayEffectAddedDelegateToSelf.AddUObject(AsyncTaskEffectStackChanged, &UAsyncTaskEffectStackChanged::OnGameplayEffectAdded);\n\t\tAsyncTaskEffectStackChanged->AbilitySystemComponent->OnAnyGameplayEffectRemovedDelegateToSelf.AddUObject(AsyncTaskEffectStackChanged, &UAsyncTaskEffectStackChanged::OnGameplayEffectRemoved);\n\t\treturn AsyncTaskEffectStackChanged;\n\t}\n\tAsyncTaskEffectStackChanged->EndTask();\n\treturn nullptr;\n}", "CodeBleu_score": 52.00054204811882}, {"code": "UAsyncTaskEffectStackChanged * UAsyncTaskEffectStackChanged::ListenForGameplayEffectStackChange(UAbilitySystemComponent * AbilitySystemComponent, FGameplayTag InEffectGameplayTag){\n\t\tUAsyncTaskEffectStackChanged *AsyncTaskEffectStackChanged = NewObject<UAsyncTaskEffectStackChanged>();\n\tAsyncTaskEffectStackChanged->AbilitySystemComponent = AbilitySystemComponent;\n\tAsyncTaskEffectStackChanged->EffectGameplayTag = InEffectGameplayTag;\n\n\tif (IsValid(AbilitySystemComponent) && InEffectGameplayTag.IsValid()) {\n\t\tAsyncTaskEffectStackChanged->AbilitySystemComponent->OnAnyGameplayEffectRemovedDelegate().AddUObject(AsyncTaskEffectStackChanged, &UAsyncTaskEffectStackChanged::OnGameplayEffectRemoved);\n\t\tAsyncTaskEffectStackChanged->AbilitySystemComponent->OnActiveGameplayEffectAddedDelegateToSelf.AddUObject(AsyncTaskEffectStackChanged, &UAsyncTaskEffectStackChanged::OnGameplayEffectAdded);\n\t}\n\telse {\n\t\tAsyncTaskEffectStackChanged->EndTask();\n\t\tAsyncTaskEffectStackChanged = nullptr;\n\t}\n\n\treturn AsyncTaskEffectStackChanged;\n}", "CodeBleu_score": 57.67391211427023}, {"code": "UAsyncTaskEffectStackChanged * UAsyncTaskEffectStackChanged::ListenForGameplayEffectStackChange(UAbilitySystemComponent * AbilitySystemComponent, FGameplayTag InEffectGameplayTag){\n\t\tUAsyncTaskEffectStackChanged * AsyncTaskEffectStackChanged = NewObject<UAsyncTaskEffectStackChanged>();\n\tAsyncTaskEffectStackChanged->AbilitySystemComponent = AbilitySystemComponent;\n\tAsyncTaskEffectStackChanged->EffectGameplayTag = InEffectGameplayTag;\n\tif (AsyncTaskEffectStackChanged->AbilitySystemComponent.IsValid() && AsyncTaskEffectStackChanged->EffectGameplayTag.IsValid()) {\n\t\tAsyncTaskEffectStackChanged->AbilitySystemComponent->OnActiveGameplayEffectAddedDelegateToSelf.AddUObject(AsyncTaskEffectStackChanged, &UAsyncTaskEffectStackChanged::OnGameplayEffectAdded);\n\t\tAsyncTaskEffectStackChanged->AbilitySystemComponent->OnAnyGameplayEffectRemovedDelegate().AddUObject(AsyncTaskEffectStackChanged, &UAsyncTaskEffectStackChanged::OnGameplayEffectRemoved);\n\t\treturn AsyncTaskEffectStackChanged;\n\t}\n\tAsyncTaskEffectStackChanged->EndTask();\n\treturn nullptr;\n}", "CodeBleu_score": 53.12757568703436}]}
{"instance_id": "6659c2592e93", "generation_result": [{"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tif (EffectRemoved.Spec.GetAllGrantedTags().HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChange::Removed);\n\t}\n\tif (EffectRemoved.Spec.GetAllAssetTags().HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChange::Removed);\n\t}\n}", "CodeBleu_score": 51.00829434631201}, {"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\tif (EffectRemoved.Spec.GetAllGrantedTags().HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChange::Removed);\n\t}\n\tif (EffectRemoved.Spec.GetAllAssetTags().HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, EGameplayEffectStackChange::Removed);\n\t}\n}", "CodeBleu_score": 51.00829434631201}, {"code": "void UAsyncTaskEffectStackChanged::OnRemoveGameplayEffectCallback(const FActiveGameplayEffect & EffectRemoved){\n\t\t// Get the asset and granted tags from the removed effect\n\tconst FGameplayEffectSpec & Spec = EffectRemoved.Spec;\n\tconst FGameplayTagContainer & AssetTags = Spec.GetAssetTags();\n\tconst FGameplayTagContainer & GrantedTags = Spec.GetAllGrantedTags();\n\n\t// If either tag container has the specified EffectGameplayTag, broadcast a stack change event\n\tif (AssetTags.HasTagExact(EffectGameplayTag) || GrantedTags.HasTagExact(EffectGameplayTag)) {\n\t\tOnGameplayEffectStackChange.Broadcast(EffectGameplayTag, EffectRemoved.Handle, 0, 0);\n\t}\n}", "CodeBleu_score": 68.07836583601784}]}
{"instance_id": "a8f7dcc3f1fa", "generation_result": [{"code": "void UGDGameplayAbility::OnAvatarSet(const FGameplayAbilityActorInfo * ActorInfo, const FGameplayAbilitySpec & Spec){\n\t\tSuper::OnAvatarSet(ActorInfo, Spec);\n\n\tif (bActivateAbilityOnGranted) {\n\t\tif (ActorInfo && ActorInfo->AbilitySystemComponent.IsValid()) {\n\t\t\tActorInfo->AbilitySystemComponent->TryActivateAbility(Spec.Handle, false, true);\n\t\t}\n\t}\n}", "CodeBleu_score": 66.33063611492413}, {"code": "void UGDGameplayAbility::OnAvatarSet(const FGameplayAbilityActorInfo * ActorInfo, const FGameplayAbilitySpec & Spec){\n\t\tSuper::OnAvatarSet(ActorInfo, Spec);\n\n\tif (ShouldActivateAbilityOnGranted()) {\n\t\tif (ActorInfo->AbilitySystemComponent) {\n\t\t\tActorInfo->AbilitySystemComponent->TryActivateAbility(Spec.Handle, false, true);\n\t\t}\n\t}\n}", "CodeBleu_score": 66.23430522400405}, {"code": "void UGDGameplayAbility::OnAvatarSet(const FGameplayAbilityActorInfo * ActorInfo, const FGameplayAbilitySpec & Spec){\n\t\tSuper::OnAvatarSet(ActorInfo, Spec);\n\tif (ShouldActivateAbilityOnGranted()) {\n\t\tActorInfo->AbilitySystemComponent->TryActivateAbility(Spec.Handle, false, true);\n\t}\n}", "CodeBleu_score": 70.50752271336862}]}
{"instance_id": "72a7ce4b848c", "generation_result": [{"code": "void UGDAT_PlayMontageAndWaitForEvent::OnMontageEnded(UAnimMontage* Montage, bool bInterrupted){\n\t\tif (!bInterrupted && ShouldBroadcastAbilityTaskDelegates()) {\n\t\tOnCompleted.Broadcast(FGameplayTag(), FGameplayEventData());\n\t}\n\tEndTask();\n}", "CodeBleu_score": 70.20856326502198}, {"code": "void UGDAT_PlayMontageAndWaitForEvent::OnMontageEnded(UAnimMontage* Montage, bool bInterrupted){\n\t\tif (!bInterrupted && ShouldBroadcastAbilityTaskDelegates()) {\n\t\tFGameplayEventData EventData;\n\t\tEventData.EventTag = EventTag;\n\t\tEventData.EventMagnitude = EventMagnitude;\n\t\tEventData.Instigator = InstigatorActor.Get();\n\t\tEventData.Target = TargetActor.Get();\n\t\tOnCompleted.Broadcast(FGameplayTag(), EventData);\n\t}\n\tEndTask();\n}", "CodeBleu_score": 51.691398719700345}, {"code": "void UGDAT_PlayMontageAndWaitForEvent::OnMontageEnded(UAnimMontage* Montage, bool bInterrupted){\n\t\tif (!bInterrupted && ShouldBroadcastAbilityTaskDelegates()) {\n\t\tOnCompleted.Broadcast(FGameplayTag(), FGameplayEventData());\n\t}\n\tEndTask();\n}", "CodeBleu_score": 70.20856326502198}]}
{"instance_id": "cc1cdd579bd4", "generation_result": [{"code": "void UGDAT_PlayMontageAndWaitForEvent::OnDestroy(bool AbilityEnded){\n\t\tif (Ability) {\n\t\tAbility->OnGameplayAbilityCancelled.Remove(AbilityCancelledHandle);\n\t\tif (AbilityEnded && StopPlayingMontage()) {\n\t\t\tAbilitySystemComponent->RemoveGameplayEventTagContainerDelegate(EventTags, EventReceivedDelegateHandle);\n\t\t}\n\t}\n\tSuper::OnDestroy(AbilityEnded);\n}", "CodeBleu_score": 58.88482491217501}, {"code": "void UGDAT_PlayMontageAndWaitForEvent::OnDestroy(bool AbilityEnded){\n\t\t// Remove the cancellation handler from the ability\n\tif (Ability) {\n\t\tAbility->OnGameplayAbilityCancelled.Remove(OnCancelledHandle);\n\t}\n\n\t// Stop playing the montage if the ability has ended and the stop flag is set\n\tif (AbilityEnded && bStopPlayingMontageOnAbilityEnd) {\n\t\tStopPlayingMontage();\n\t}\n\n\t// Remove the event tag container delegate from the ability system component, if valid\n\tif (AbilitySystemComponent.IsValid()) {\n\t\tAbilitySystemComponent->RemoveGameplayEventTagContainerDelegate(EventTags, EventReceivedDelegateHandle);\n\t}\n\n\tSuper::OnDestroy(AbilityEnded);\n}", "CodeBleu_score": 77.78323432146834}, {"code": "void UGDAT_PlayMontageAndWaitForEvent::OnDestroy(bool AbilityEnded){\n\t\tif (Ability) {\n\t\tAbility->OnGameplayAbilityCancelled.Remove(AbilityCancelledDelegateHandle);\n\t\tif (AbilityEnded && bStopPlayingMontageOnAbilityEnd) {\n\t\t\tStopPlayingMontage();\n\t\t}\n\t}\n\tif (AbilitySystemComponent.IsValid()) {\n\t\tAbilitySystemComponent->RemoveGameplayEventTagContainerDelegate(EventTag, EventTagDelegateHandle);\n\t}\n\tSuper::OnDestroy(AbilityEnded);\n}", "CodeBleu_score": 82.17280708264025}]}
{"instance_id": "5932070df16f", "generation_result": [{"code": "bool UGDAT_PlayMontageAndWaitForEvent::StopPlayingMontage(){\n\t\t// Get ActorInfo and AnimInstance\n\tFGameplayAbilityActorInfo* ActorInfo = Ability->GetCurrentActorInfo();\n\tUAnimInstance* AnimInstance = ActorInfo->GetAnimInstance();\n\n\t// If AbilitySystemComponent is valid and Montage is playing\n\tif (AbilitySystemComponent.IsValid() && AbilitySystemComponent->GetCurrentMontage() == MontageToPlay) {\n\t\t// Unbind delegates\n\t\tMontageInstance->OnMontageBlendingOutStarted.Unbind();\n\t\tMontageInstance->OnMontageEnded.Unbind();\n\n\t\t// Stop Montage\n\t\tAbilitySystemComponent->CurrentMontageStop(0.0f);\n\t\treturn true;\n\t}\n\n\treturn false;\n}", "CodeBleu_score": 41.366331031067766}, {"code": "bool UGDAT_PlayMontageAndWaitForEvent::StopPlayingMontage(){\n\t\tif (AbilitySystemComponent.IsValid()) {\n\t\tif (AbilitySystemComponent->GetCurrentMontage() == MontageInstance) {\n\t\t\tMontageInstance->OnMontageBlendingOutStarted.Unbind();\n\t\t\tMontageInstance->OnMontageEnded.Unbind();\n\t\t\tAbilitySystemComponent->CurrentMontageStop();\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}", "CodeBleu_score": 31.04079421547653}, {"code": "bool UGDAT_PlayMontageAndWaitForEvent::StopPlayingMontage(){\n\t\tUAbilitySystemComponent* AbilitySystemComponent = Cast<UAbilitySystemComponent>(GetAbilitySystemComponentFromActorInfo());\n\tif (AbilitySystemComponent && AbilitySystemComponent->GetCurrentMontage() == MontageToPlay) {\n\t\tMontageInstance->OnMontageBlendingOutStarted.Unbind();\n\t\tAbilitySystemComponent->CurrentMontageStop(0.0f);\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 28.156959062037412}]}
{"instance_id": "7049be7f0c75", "generation_result": [{"code": "void USBTService_CheckAttackRange::TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds){\n\t\t// Get the target actor from the blackboard\n\tauto TargetActor = Cast<AActor>(OwnerComp.GetBlackboardComponent()->GetValueAsObject(TEXT(\"TargetActor\")));\n\n\t// Check if the target actor is valid\n\tif (TargetActor) {\n\t\t// Get the AI pawn and its location\n\t\tauto MyController = OwnerComp.GetAIOwner();\n\t\tauto MyPawn = MyController->GetPawn();\n\t\tauto MyLocation = MyPawn->GetActorLocation();\n\n\t\t// Calculate the distance to the target\n\t\tauto Distance = FVector::Distance(MyLocation, TargetActor->GetActorLocation());\n\n\t\t// Check if the target is within range\n\t\tif (Distance <= MaxAttackRange) {\n\t\t\t// Check for line of sight to the target\n\t\t\tif (MyController->LineOfSightTo(TargetActor)) {\n\t\t\t\t// The target is within range and visible\n\t\t\t\tOwnerComp.GetBlackboardComponent()->SetValueAsBool(TEXT(\"TargetInAttackRange\"), true);\n\t\t\t} else {\n\t\t\t\t// The target is within range but not visible\n\t\t\t\tOwnerComp.GetBlackboardComponent()->SetValueAsBool(TEXT(\"TargetInAttackRange\"), false);\n\t\t\t}\n\t\t} else {\n\t\t\t// The target is not within range\n\t\t\tOwnerComp.GetBlackboardComponent()->SetValueAsBool(TEXT(\"TargetInAttackRange\"), false);\n\t\t}\n\t}\n}", "CodeBleu_score": 42.213560796721175}, {"code": "void USBTService_CheckAttackRange::TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds){\n\t\t// Get the target actor from the blackboard\n\tAActor* TargetActor = Cast<AActor>(OwnerComp.GetBlackboardComponent()->GetValueAsObject(TEXT(\"TargetActor\")));\n\tif (TargetActor == nullptr) {\n\t\treturn;\n\t}\n\n\t// Get the AI controller and its pawn\n\tAAIController* MyController = OwnerComp.GetAIOwner();\n\tif (MyController == nullptr) {\n\t\treturn;\n\t}\n\tAPawn* MyPawn = MyController->GetPawn();\n\tif (MyPawn == nullptr) {\n\t\treturn;\n\t}\n\n\t// Calculate the distance to the target\n\tFVector TargetLocation = TargetActor->GetActorLocation();\n\tfloat DistanceToTarget = FVector::Distance(MyPawn->GetActorLocation(), TargetLocation);\n\n\t// Check if the target is within range and has line of sight\n\tbool bIsInRange = DistanceToTarget <= MaxAttackRange;\n\tbool bHasLineOfSight = MyController->LineOfSightTo(TargetActor);\n\n\t// Store the result in the blackboard\n\tOwnerComp.GetBlackboardComponent()->SetValueAsBool(TEXT(\"IsInAttackRange\"), bIsInRange && bHasLineOfSight);\n}", "CodeBleu_score": 48.630032371035284}, {"code": "void USBTService_CheckAttackRange::TickNode(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, float DeltaSeconds){\n\t\t// Get the target actor from the blackboard\n\tAActor* TargetActor = Cast<AActor>(OwnerComp.GetBlackboardComponent()->GetValueAsObject(TEXT(\"TargetActor\")));\n\n\t// Check if the target actor is valid\n\tif (TargetActor) {\n\t\t// Get the AI pawn's location\n\t\tconst FVector PawnLocation = OwnerComp.GetAIOwner()->GetPawn()->GetActorLocation();\n\n\t\t// Calculate the distance to the target\n\t\tconst float DistanceToTarget = FVector::Distance(PawnLocation, TargetActor->GetActorLocation());\n\n\t\t// Check if the target is within range and visible\n\t\tconst bool bIsInRange = DistanceToTarget <= MaxAttackRange;\n\t\tconst bool bIsVisible = OwnerComp.GetAIOwner()->LineOfSightTo(TargetActor);\n\n\t\t// Store the result in the blackboard\n\t\tOwnerComp.GetBlackboardComponent()->SetValueAsBool(TEXT(\"IsInRange\"), bIsInRange);\n\t\tOwnerComp.GetBlackboardComponent()->SetValueAsBool(TEXT(\"IsVisible\"), bIsVisible);\n\t}\n}", "CodeBleu_score": 41.65142985821922}]}
{"instance_id": "031bd0ec3e3c", "generation_result": [{"code": "EBTNodeResult::Type USBTTask_HealSelf::ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory){\n\t\t// Get the pawn from the AI owner\n\tAPawn* Pawn = OwnerComp.GetAIOwner()->GetPawn();\n\t// Get the attribute component\n\tUAttributesComponent* AttributeComp = Cast<UAttributesComponent>(Pawn->GetComponentByClass(UAttributesComponent::StaticClass()));\n\t// If the attribute component is valid, apply a health change to restore the pawn's health to maximum\n\tif (AttributeComp) {\n\t\tAttributeComp->ApplyHealthChange(AttributeComp->GetHealthMax());\n\t}\n\t// Return a success result\n\treturn EBTNodeResult::Succeeded;\n}", "CodeBleu_score": 61.65874365318981}, {"code": "EBTNodeResult::Type USBTTask_HealSelf::ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory){\n\t\t// Get the pawn owner of this component\n\tAPawn* MyPawn = OwnerComp.GetAIOwner()->GetPawn();\n\n\t// Get the attribute component, if any, from the pawn\n\tUAttributeComponent* AttributeComp = MyPawn? Cast<UAttributeComponent>(MyPawn->GetComponentByClass(UAttributeComponent::StaticClass())) : NULL;\n\n\t// If we have an attribute component, apply the health change\n\tif (AttributeComp) {\n\t\tAttributeComp->ApplyHealthChange(AttributeComp->GetHealthMax());\n\t}\n\n\t// Return success\n\treturn EBTNodeResult::Succeeded;\n}", "CodeBleu_score": 68.87710248349926}, {"code": "EBTNodeResult::Type USBTTask_HealSelf::ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory){\n\t\t// Get the pawn from the AI owner\n\tAPawn* Pawn = OwnerComp.GetAIOwner()->GetPawn();\n\n\t// Get the attribute component from the pawn\n\tUAttributeComponent* AttributeComp = Pawn->FindComponentByClass<UAttributeComponent>();\n\n\t// If the attribute component is valid, apply a health change to restore the pawn's health to maximum\n\tif (AttributeComp) {\n\t\tAttributeComp->ApplyHealthChange(AttributeComp->GetHealthMax());\n\t}\n\n\t// Return a success result\n\treturn EBTNodeResult::Succeeded;\n}", "CodeBleu_score": 62.42451579103113}]}
{"instance_id": "6cd6e778e91b", "generation_result": [{"code": "void USProjectileMovementComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tGetWorld()->GetSubsystem<USTickablesSubsystem>()->RegisterComponent(this);\n}", "CodeBleu_score": 40.30073290366272}, {"code": "void USProjectileMovementComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tGetWorld()->GetSubsystem<USTickablesSubsystem>()->RegisterComponent(this);\n}", "CodeBleu_score": 40.30073290366272}, {"code": "void USProjectileMovementComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tGetWorld()->GetSubsystem<USTickablesSubsystem>()->RegisterComponent(this);\n}", "CodeBleu_score": 40.30073290366272}]}
{"instance_id": "e90ff27c7f16", "generation_result": [{"code": "void USProjectileMovementComponent::EndPlay(const EEndPlayReason::Type EndPlayReason){\n\t\tSuper::EndPlay(EndPlayReason);\n\tUSTickablesSubsystem* Tickables = GetWorld()->GetSubsystem<USTickablesSubsystem>();\n\tTickables->DeRegisterComponent(this);\n}", "CodeBleu_score": 81.971458108573}, {"code": "void USProjectileMovementComponent::EndPlay(const EEndPlayReason::Type EndPlayReason){\n\t\tSuper::EndPlay(EndPlayReason);\n\tif (USTickablesSubsystem* Tickables = GetWorld()->GetSubsystem<USTickablesSubsystem>()) {\n\t\tTickables->DeRegisterComponent(this);\n\t}\n}", "CodeBleu_score": 64.66801485570748}, {"code": "void USProjectileMovementComponent::EndPlay(const EEndPlayReason::Type EndPlayReason){\n\t\tSuper::EndPlay(EndPlayReason);\n\n\tUSTickablesSubsystem* Tickables = GetWorld()->GetSubsystem<USTickablesSubsystem>();\n\tif (Tickables) {\n\t\tTickables->DeRegisterComponent(this);\n\t}\n}", "CodeBleu_score": 82.17109184581946}]}
{"instance_id": "be3e542c07ea", "generation_result": [{"code": "void USSignificanceComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\n\tif (bManagingSignificance) {\n\t\tif (GetOwner()->Implements<USSignificanceInterface>()) {\n\t\t\tif (bWaitOneFrame) {\n\t\t\t\tGetWorld()->GetTimerManager().SetTimerForNextTick(FTimerDelegate::CreateUObject(this, &USSignificanceComponent::RegisterWithManager));\n\t\t\t} else {\n\t\t\t\tRegisterWithManager();\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (auto Comp : GetOwner()->GetComponents<UParticleSystemComponent>()) {\n\t\tif (bManagingSignificance) {\n\t\t\tComp->SetManagingSignificance(true);\n\t\t} else {\n\t\t\tComp->SetManagingSignificance(false);\n\t\t}\n\t}\n}", "CodeBleu_score": 61.19389040788549}, {"code": "void USSignificanceComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tif (bManagingSignificance) {\n\t\tif (GetOwner()->Implements<USSignificanceInterface>()) {\n\t\t\tif (bWaitOneFrame) {\n\t\t\t\tGetWorld()->GetTimerManager().SetTimerForNextTick(FTimerDelegate::CreateUObject(this, &USSignificanceComponent::RegisterWithManager));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tRegisterWithManager();\n\t\t\t}\n\t\t}\n\t}\n\tfor (auto ParticleSystemComponent : GetOwner()->GetComponents<UParticleSystemComponent>()) {\n\t\tParticleSystemComponent->bAutoManageAttachment = false;\n\t}\n}", "CodeBleu_score": 53.629367645707624}, {"code": "void USSignificanceComponent::BeginPlay(){\n\t\tSuper::BeginPlay();\n\tif (bManagingSignificance) {\n\t\tif (GetOwner()->Implements<USSignificanceInterface>()) {\n\t\t\tif (bWaitOneFrame) {\n\t\t\t\tGetWorld()->GetTimerManager().SetTimerForNextTick(this, &USSignificanceComponent::RegisterWithManager);\n\t\t\t} else {\n\t\t\t\tRegisterWithManager();\n\t\t\t}\n\t\t} else {\n\t\t\tUE_LOG(LogSignificance, Error, TEXT(\"Significance Component on %s does not implement the Significance Interface\"), *GetOwner()->GetName());\n\t\t}\n\t}\n\tfor (UParticleSystemComponent* ParticleSystemComponent : GetOwner()->GetComponents<UParticleSystemComponent>()) {\n\t\tParticleSystemComponent->bAutoManageAttachment = true;\n\t\tParticleSystemComponent->bAutoDestroy = false;\n\t}\n}", "CodeBleu_score": 63.00889757665671}]}
{"instance_id": "77824b6415d0", "generation_result": [{"code": "void USSignificanceComponent::RegisterWithManager(){\n\tif (!bRegistered) {\n\t\tUSignificanceManager* SignificanceManager = GetWorld()->GetSignificanceManager();\n\t\tif (SignificanceManager) {\n\t\t\tSignificanceManager->RegisterObject(GetOwner()->GetClass()->GetFName(), [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, const FTransform& Viewpoint) -> float {\n\t\t\t\treturn CalcSignificance(ObjectInfo, Viewpoint);\n\t\t\t}, [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, float OldSignificance, float Significance, bool bFinal) {\n\t\t\t\tPostSignificanceUpdate(ObjectInfo, OldSignificance, Significance, bFinal);\n\t\t\t});\n\t\t\tbRegistered = true;\n\t\t}\n\t}\n}", "CodeBleu_score": 64.19029109275678}, {"code": "void USSignificanceComponent::RegisterWithManager(){\n\tif (bRegisteredWithManager) {\n\t\treturn;\n\t}\n\n\t// Get the world\n\tUWorld* World = GetWorld();\n\n\t// Get the manager\n\tUSignificanceManager* SignificanceManager = World->GetSignificanceManager();\n\n\t// Define a lambda function for calculating significance\n\tauto CalculateSignificance = [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, const FTransform& Viewpoint) -> float {\n\t\treturn CalcSignificance(ObjectInfo, Viewpoint);\n\t};\n\n\t// Define a lambda function for handling post-significance updates\n\tauto HandlePostSignificanceUpdate = [this](USignificanceManager::FManagedObjectInfo* ObjectInfo, float OldSignificance, float Significance, bool bFinal) {\n\t\tPostSignificanceUpdate(ObjectInfo, OldSignificance, Significance, bFinal);\n\t};\n\n\t// Register the component with the manager\n\tSignificanceManager->RegisterObject(GetOwner()->GetClass()->GetFName(), CalculateSignificance, HandlePostSignificanceUpdate);\n\n\tbRegisteredWithManager = true;\n}", "CodeBleu_score": 70.81564041239108}, {"code": "void USSignificanceComponent::RegisterWithManager(){\n\t// Get the world\n\tUWorld* World = GetWorld();\n\tif (World == nullptr) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"USSignificanceComponent::RegisterWithManager: World is nullptr\"));\n\t\treturn;\n\t}\n\n\t// Get the significance manager\n\tUSignificanceManager* SignificanceManager = World->GetSignificanceManager();\n\tif (SignificanceManager == nullptr) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"USSignificanceComponent::RegisterWithManager: SignificanceManager is nullptr\"));\n\t\treturn;\n\t}\n\n\t// Get the owner's class name\n\tFName Tag = GetOwner()->GetClass()->GetFName();\n\n\t// Define a lambda function for calculating significance\n\tauto CalcSignificance = [this](const FTransform& Viewpoint) -> float {\n\t\treturn CalcSignificance(nullptr, Viewpoint);\n\t};\n\n\t// Define a lambda function for handling post-significance updates\n\tauto PostSignificanceUpdate = [this](float OldSignificance, float Significance, bool bFinal) {\n\t\tPostSignificanceUpdate(nullptr, OldSignificance, Significance, bFinal);\n\t};\n\n\t// Register the component with the manager\n\tSignificanceManager->RegisterObject(this, Tag, CalcSignificance, PostSignificanceUpdate);\n}", "CodeBleu_score": 57.499358097952936}]}
{"instance_id": "dca342410d64", "generation_result": [{"code": "bool USActorPoolingSubsystem::ReleaseToPool(AActor* Actor){\n\t\tSCOPED_NAMED_EVENT(USActorPoolingSubsystem_ReleaseToPool, FColor::Blue);\n\n\tif (Actor->IsPoolingEnabled()) {\n\t\treturn GetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool_Internal(Actor);\n\t} else {\n\t\tActor->Destroy();\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 52.487204624524765}, {"code": "bool USActorPoolingSubsystem::ReleaseToPool(AActor* Actor){\n\t\tSCOPED_NAMED_EVENT(FColor::Blue, \"USActorPoolingSubsystem::ReleaseToPool\");\n\n\tif (Actor->IsPoolingEnabled) {\n\t\treturn GetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool_Internal(Actor);\n\t}\n\telse {\n\t\tActor->Destroy();\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 50.2884800865123}, {"code": "bool USActorPoolingSubsystem::ReleaseToPool(AActor* Actor){\n\t\tSCOPED_NAMED_EVENT(USActorPoolingSubsystem_ReleaseToPool, FColor::Cyan);\n\tif (Actor->IsPoolingEnabled) {\n\t\treturn GetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool_Internal(Actor);\n\t}\n\telse {\n\t\tActor->Destroy();\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 52.41425592885831}]}
{"instance_id": "5c285130f782", "generation_result": [{"code": "void USActorPoolingSubsystem::PrimeActorPool(TSubclassOf<AActor> ActorClass, int32 Amount){\n\t\tUE_LOGFMT(LogActorPooling, Verbose, TEXT(\"Priming %s pool with %d actors.\"), *ActorClass->GetName(), Amount);\n\tSCOPED_NAMED_EVENT(FColor::Orange, TEXT(\"PrimeActorPool\"));\n\n\tfor (int32 i = 0; i < Amount; i++) {\n\t\tAActor* Actor = GetWorld()->SpawnActor<AActor>(ActorClass);\n\t\tReleaseToPool(Actor);\n\t}\n}", "CodeBleu_score": 53.40864291113512}, {"code": "void USActorPoolingSubsystem::PrimeActorPool(TSubclassOf<AActor> ActorClass, int32 Amount){\n\t\tUE_LOGFMT(\"PrimeActorPool: %s\", ActorClass->GetName());\n\tSCOPED_NAMED_EVENT(FColor::Red, \"PrimeActorPool\");\n\n\t// Create a scoped event for profiling.\n\tfor (int32 i = 0; i < Amount; i++) {\n\t\t// Spawn the actor and add it to the pool.\n\t\tAActor* Actor = GetWorld()->SpawnActor<AActor>(ActorClass);\n\t\tReleaseToPool(Actor);\n\t}\n}", "CodeBleu_score": 45.805004178182784}, {"code": "void USActorPoolingSubsystem::PrimeActorPool(TSubclassOf<AActor> ActorClass, int32 Amount){\n\t\tUE_LOGFMT(\"Pooling %d %s\", Amount, *ActorClass->GetName());\n\n\tFScopeNamedEvent Event(FColor::Green, \"PrimeActorPool\");\n\n\tfor (int32 i = 0; i < Amount; i++) {\n\t\tAActor* Actor = GetWorld()->SpawnActor<AActor>(ActorClass, FTransform::Identity);\n\t\tReleaseToPool(Actor);\n\t}\n}", "CodeBleu_score": 49.550898167954486}]}
{"instance_id": "43c013653d6d", "generation_result": [{"code": "void USLoadingScreenSubsystem::BeginLoadingScreen(const FString& MapName){\n\t\tFLoadingScreenAttributes LoadingScreen;\n\tLoadingScreen.bAutoCompleteWhenLoadingCompletes = false;\n\tLoadingScreen.WidgetLoadingScreen = CreateWidget<UUserWidget>(GetWorld(), LoadingScreenWidgetClass);\n\tGetMoviePlayer()->SetupLoadingScreen(LoadingScreen);\n\tGetMoviePlayer()->PlayMovie();\n}", "CodeBleu_score": 61.99564602925841}, {"code": "void USLoadingScreenSubsystem::BeginLoadingScreen(const FString& MapName){\n\t\t// Create a new FLoadingScreenAttributes object.\n\tFLoadingScreenAttributes LoadingScreenAttributes;\n\n\t// Assign a new loading screen widget to the FLoadingScreenAttributes object.\n\tLoadingScreenAttributes.WidgetLoadingScreen = NewTestLoadingScreenWidget();\n\n\t// Set up the loading screen using the movie player.\n\tGetMoviePlayer()->SetupLoadingScreen(LoadingScreenAttributes);\n}", "CodeBleu_score": 65.75672024567264}, {"code": "void USLoadingScreenSubsystem::BeginLoadingScreen(const FString& MapName){\n\t\t// Create a new loading screen attributes object\n\tFLoadingScreenAttributes LoadingScreenAttributes;\n\n\t// Assign a new loading screen widget to the loading screen attributes object\n\tLoadingScreenAttributes.WidgetLoadingScreen = CreateLoadingScreenWidget();\n\n\t// Set up the loading screen using the movie player\n\tGetMoviePlayer()->SetupLoadingScreen(LoadingScreenAttributes);\n\n\t// Set the loading screen map name\n\tLoadingScreenMapName = MapName;\n\n\t// Set the loading screen state to loading\n\tLoadingScreenState = ELoadingScreenState::Loading;\n}", "CodeBleu_score": 51.69940776554183}]}
{"instance_id": "a6979eb925a5", "generation_result": [{"code": "void USAction::StartAction_Implementation(AActor* Instigator){\n\t\t// Log the start of the action.\n\tUE_LOGFMT(LogAction, Verbose, TEXT(\"Action %s started for %s.\"), *GetName(), *Instigator->GetName());\n\n\t// Append granted tags to the owning component's active gameplay tags.\n\tGetOwningComponent()->GetOwner()->GetGameplayTagsManager()->AppendTags(GrantedTags);\n\n\t// Update the replication data.\n\tSetReplicates(true);\n\tSetIsReplicated(true);\n\tbIsActive = true;\n\tActiveInstigator = Instigator;\n\n\t// If the component's owner role is authoritative, record the start time.\n\tif (GetOwningComponent()->GetOwnerRole() == ROLE_Authority) {\n\t\tStartTime = GetWorld()->GetTimeSeconds();\n\t}\n\n\t// Broadcast an action started event from the owning component.\n\tGetOwningComponent()->OnActionStarted.Broadcast(this, Instigator);\n}", "CodeBleu_score": 54.52624367149808}, {"code": "void USAction::StartAction_Implementation(AActor* Instigator){\n\t\t// Log the start of the action.\n\tUE_LOGFMT(LogSAction, Log, TEXT(\"Starting action %s\"), *GetName());\n\n\t// Append granted tags to the owning component's active gameplay tags.\n\tGetOwningComponent()->GetOwnerRole();\n\tGetWorld();\n\tGetName();\n\tUE_LOGFMT\n\tComp->ActiveGameplayTags.AppendTags\n\tGetOwningComponent\n\tGetOwningComponent()->OnActionStarted.Broadcast\n}", "CodeBleu_score": 37.59697359602016}, {"code": "void USAction::StartAction_Implementation(AActor* Instigator){\n\t\t// Log the start of the action\n\tUE_LOGFMT(LogAction, Log, TEXT(\"Starting action %s\"), *GetName());\n\n\t// Append granted tags to the owning component's active gameplay tags\n\tGetOwningComponent()->GetActiveGameplayTags().AppendTags(GrantedTags);\n\n\t// Update the replication data\n\tUpdateReplicationData();\n\n\t// If the component's owner role is authoritative, record the start time\n\tif (GetOwningComponent()->GetOwnerRole() == ROLE_Authority) {\n\t\tStartTime = GetWorld()->GetTimeSeconds();\n\t}\n\n\t// Broadcast an action started event from the owning component\n\tGetOwningComponent()->OnActionStarted.Broadcast(this);\n}", "CodeBleu_score": 38.76776493964369}]}
{"instance_id": "bdec7bf3e2d7", "generation_result": [{"code": "float USActionEffect::GetTimeRemaining() const{\n\t\tif (auto GS = GetWorld()->GetGameState<AGameStateBase>()) {\n\t\treturn FMath::Max(0.0f, Duration - GS->GetServerWorldTimeSeconds() + StartTime);\n\t}\n\treturn Duration;\n}", "CodeBleu_score": 54.29262648831361}, {"code": "float USActionEffect::GetTimeRemaining() const{\n\t\tif (GetWorld()) {\n\t\tif (GetWorld()->GetGameState<AGameStateBase>()) {\n\t\t\treturn FMath::Max(0.0f, Duration - GetWorld()->GetGameState<AGameStateBase>()->GetServerWorldTimeSeconds() + TimeStarted);\n\t\t}\n\t}\n\treturn Duration;\n}", "CodeBleu_score": 47.91988772961414}, {"code": "float USActionEffect::GetTimeRemaining() const{\n\t\tif (GetWorld()->GetGameState()) {\n\t\treturn FMath::Max(0.f, Duration - GetWorld()->GetGameState<AGameStateBase>()->GetServerWorldTimeSeconds() + StartTime);\n\t}\n\treturn Duration;\n}", "CodeBleu_score": 49.00176973285972}]}
{"instance_id": "db3a7508643b", "generation_result": [{"code": "void USInteractionComponent::ServerInteract_Implementation(AActor* InFocus){\n\t\tif (InFocus == nullptr) {\n\t\tGEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, TEXT(\"ServerInteract_Implementation: InFocus is null\"));\n\t\treturn;\n\t}\n\n\tAPawn* Pawn = CastChecked<APawn>(GetOwner());\n\tInFocus->ISGameplayInterface::Execute_Interact(InFocus, Pawn);\n}", "CodeBleu_score": 69.26243850765678}, {"code": "void USInteractionComponent::ServerInteract_Implementation(AActor* InFocus){\n\t\tif (InFocus == nullptr) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"No actor to interact with.\"));\n\t}\n\telse {\n\t\tAPawn* Pawn = CastChecked<APawn>(GetOwner());\n\t\tInFocus->Execute_Interact(InFocus, Pawn);\n\t}\n}", "CodeBleu_score": 61.60364034986041}, {"code": "void USInteractionComponent::ServerInteract_Implementation(AActor* InFocus){\n\t\tif (InFocus == nullptr) {\n\t\tGEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, TEXT(\"Interact: Focus is null\"));\n\t}\n\telse {\n\t\tAPawn* pawn = GetOwner()->GetOwner<APawn>();\n\t\tif (pawn) {\n\t\t\tInFocus->Interact(pawn);\n\t\t}\n\t}\n}", "CodeBleu_score": 59.41334370928837}]}
{"instance_id": "e6a5224079e6", "generation_result": [{"code": "bool USGameplayFunctionLibrary::ApplyDamage(AActor* DamageCauser, AActor* TargetActor, float DamageAmount){\n\t\tif (DamageCauser && TargetActor && DamageAmount > 0.f) {\n\t\tUAttributeComponent* AttributeComp = Cast<UAttributeComponent>(TargetActor->GetComponentByClass(UAttributeComponent::StaticClass()));\n\t\tif (AttributeComp) {\n\t\t\tAttributeComp->ApplyHealthChange(-DamageAmount);\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}", "CodeBleu_score": 59.637638498950054}, {"code": "bool USGameplayFunctionLibrary::ApplyDamage(AActor* DamageCauser, AActor* TargetActor, float DamageAmount){\n\t\tUAttributeComponent* AttributeComp = Cast<UAttributeComponent>(TargetActor->GetComponentByClass(UAttributeComponent::StaticClass()));\n\tif (AttributeComp) {\n\t\tAttributeComp->ApplyHealthChange(-DamageAmount);\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 53.9691571705677}, {"code": "bool USGameplayFunctionLibrary::ApplyDamage(AActor* DamageCauser, AActor* TargetActor, float DamageAmount){\n\t\tif (DamageCauser == nullptr || TargetActor == nullptr) {\n\t\treturn false;\n\t}\n\n\tUAttributeComponent* TargetAttributeComp = Cast<UAttributeComponent>(TargetActor->GetComponentByClass(UAttributeComponent::StaticClass()));\n\tif (TargetAttributeComp == nullptr) {\n\t\treturn false;\n\t}\n\n\tTargetAttributeComp->ApplyHealthChange(-DamageAmount, DamageCauser);\n\n\treturn true;\n}", "CodeBleu_score": 51.691044688154555}]}
{"instance_id": "084a7501fc08", "generation_result": [{"code": "bool ASPlayerState::UpdatePersonalRecord(float NewTime){\n\t\tif (NewTime > PersonalRecordTime) {\n\t\tPersonalRecordTime = NewTime;\n\t\tOnPersonalRecordTimeChanged.Broadcast(PersonalRecordTime);\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 57.407343823651935}, {"code": "bool ASPlayerState::UpdatePersonalRecord(float NewTime){\n\t\tif (NewTime > PersonalRecordTime) {\n\t\tPersonalRecordTime = NewTime;\n\t\tOnPersonalRecordChanged.Broadcast(PersonalRecordTime);\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 56.67551455595024}, {"code": "bool ASPlayerState::UpdatePersonalRecord(float NewTime){\n\t\tif (NewTime > PersonalRecordTime) {\n\t\tPersonalRecordTime = NewTime;\n\t\tOnPersonalRecordTimeChanged.Broadcast();\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 52.235197444611025}]}
{"instance_id": "8e0ccc856566", "generation_result": [{"code": "void ASPowerup_HealthPotion::Interact_Implementation(APawn* InstigatorPawn){\n\t\tif (InstigatorPawn) {\n\t\tUAttributeComponent* AttributeComp = InstigatorPawn->FindComponentByClass<UAttributeComponent>();\n\t\tif (AttributeComp &&!AttributeComp->IsFullHealth()) {\n\t\t\tASPlayerState* PS = Cast<ASPlayerState>(InstigatorPawn->GetPlayerState());\n\t\t\tif (PS && PS->RemoveCredits(CreditsCost)) {\n\t\t\t\tAttributeComp->ApplyHealthChange(HealthChange);\n\t\t\t\tHideAndCooldownPowerup();\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 52.042444459287765}, {"code": "void ASPowerup_HealthPotion::Interact_Implementation(APawn* InstigatorPawn){\n\t\tif (!IsValid(InstigatorPawn)) {\n\t\treturn;\n\t}\n\n\tauto AttributeComp = InstigatorPawn->FindComponentByClass<USAttributeComponent>();\n\tif (AttributeComp &&!AttributeComp->IsFullHealth()) {\n\t\tauto PS = InstigatorPawn->GetPlayerState<ASPlayerState>();\n\t\tif (PS && PS->RemoveCredits(Cost)) {\n\t\t\tAttributeComp->ApplyHealthChange(HealthChange);\n\t\t\tTriggerCooldown();\n\t\t}\n\t}\n}", "CodeBleu_score": 50.45440393837735}, {"code": "void ASPowerup_HealthPotion::Interact_Implementation(APawn* InstigatorPawn){\n\t\tif (InstigatorPawn == nullptr) {\n\t\tensureAlwaysMsgf(false, TEXT(\"InstigatorPawn is nullptr\"));\n\t\treturn;\n\t}\n\n\tUAttributeComponent* AttributeComp = InstigatorPawn->FindComponentByClass<UAttributeComponent>();\n\tif (AttributeComp == nullptr) {\n\t\tensureAlwaysMsgf(false, TEXT(\"AttributeComp is nullptr\"));\n\t\treturn;\n\t}\n\n\tif (AttributeComp->IsFullHealth()) {\n\t\treturn;\n\t}\n\n\tASPlayerState* PS = Cast<ASPlayerState>(InstigatorPawn->GetPlayerState());\n\tif (PS->RemoveCredits(CreditsCost)) {\n\t\tAttributeComp->ApplyHealthChange(HealthChange);\n\t\tHideAndCooldownPowerup();\n\t}\n}", "CodeBleu_score": 49.73892431754978}]}
{"instance_id": "39a680859a89", "generation_result": [{"code": "void ASProjectileBase::Explode_Implementation(){\n\t\t// Spawn the impact visual effect at the projectile's location\n\tUGameplayStatics::SpawnEmitterAtLocation(GetWorld(), ImpactVisualEffect, GetActorLocation(), GetActorRotation());\n\n\t// Play the impact sound at the projectile's location\n\tUGameplayStatics::PlaySoundAtLocation(GetWorld(), ImpactSound, GetActorLocation());\n\n\t// Trigger the camera shake at the projectile's location\n\tUGameplayStatics::PlayWorldCameraShake(GetWorld(), ImpactShake, GetActorLocation(), 0.0f, GetImpactShakeOuterRadius(), GetImpactShakeInnerRadius());\n\n\t// Release the projectile back to the actor pool\n\tGetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool(this);\n}", "CodeBleu_score": 59.43633722667862}, {"code": "void ASProjectileBase::Explode_Implementation(){\n\t\t// Spawn the impact visual effect at the projectile's location\n\tUGameplayStatics::SpawnEmitterAtLocation(GetWorld(), ImpactEffect, GetActorLocation(), FRotator::ZeroRotator, true);\n\n\t// Play the impact sound at the projectile's location\n\tUGameplayStatics::PlaySoundAtLocation(GetWorld(), ImpactSound, GetActorLocation());\n\n\t// Trigger the camera shake at the projectile's location\n\tUGameplayStatics::PlayWorldCameraShake(GetWorld(), ImpactShake, GetActorLocation(), 0.0f, GetImpactShakeOuterRadius(), GetImpactShakeInnerRadius());\n\n\t// Release the projectile back to the actor pool\n\tUSActorPoolingSubsystem* PoolingSubsystem = GetWorld()->GetSubsystem<USActorPoolingSubsystem>();\n\tif (PoolingSubsystem) {\n\t\tPoolingSubsystem->ReleaseToPool(this);\n\t}\n}", "CodeBleu_score": 68.42870200350559}, {"code": "void ASProjectileBase::Explode_Implementation(){\n\t\t// Spawn the impact visual effect at the projectile's location\n\tif (ImpactEffect) {\n\t\tUGameplayStatics::SpawnEmitterAtLocation(GetWorld(), ImpactEffect, GetActorLocation(), GetActorRotation());\n\t}\n\n\t// Play the impact sound at the projectile's location\n\tif (ImpactSound) {\n\t\tUGameplayStatics::PlaySoundAtLocation(GetWorld(), ImpactSound, GetActorLocation());\n\t}\n\n\t// Trigger a camera shake\n\tif (ImpactShake) {\n\t\tUGameplayStatics::PlayWorldCameraShake(GetWorld(), ImpactShake, GetActorLocation(), 0.0f, GetImpactShakeOuterRadius());\n\t}\n\n\t// Release the projectile back to the actor pool\n\tif (GetWorld()->GetSubsystem<USActorPoolingSubsystem>()) {\n\t\tGetWorld()->GetSubsystem<USActorPoolingSubsystem>()->ReleaseToPool(this);\n\t}\n}", "CodeBleu_score": 54.21172711205333}]}
{"instance_id": "a95c41c6d7b5", "generation_result": [{"code": "FPlayerSaveData* USSaveGame::GetPlayerData(APlayerState* PlayerState){\n\t\tif (!PlayerState) {\n\t\tUE_LOGFMT(LogSSaveGame, Warning, TEXT(\"PlayerState is null\"));\n\t\treturn nullptr;\n\t}\n\n\tif (IsPlayInEditor()) {\n\t\tUE_LOGFMT(LogSSaveGame, Log, TEXT(\"GetPlayerData: PIE mode, returning first saved player entry\"));\n\t\treturn SavedPlayers.IsValidIndex(0)? &SavedPlayers[0] : nullptr;\n\t}\n\n\tconst FUniqueNetId& UniqueId = PlayerState->GetUniqueId();\n\tconst FString UniqueIdString = UniqueId.ToString();\n\n\tif (SavedPlayers.FindByPredicate([UniqueIdString](const FPlayerSaveData& PlayerData) { return PlayerData.UniqueId == UniqueIdString; })) {\n\t\tUE_LOGFMT(LogSSaveGame, Log, TEXT(\"GetPlayerData: Found saved player data for PlayerState with UniqueId %s\"), *UniqueIdString);\n\t\treturn &SavedPlayers[SavedPlayers.IndexOfByPredicate([UniqueIdString](const FPlayerSaveData& PlayerData) { return PlayerData.UniqueId == UniqueIdString; })];\n\t}\n\n\tUE_LOGFMT(LogSSaveGame, Log, TEXT(\"GetPlayerData: No saved player data for PlayerState with UniqueId %s\"), *UniqueIdString);\n\treturn nullptr;\n}", "CodeBleu_score": 48.61076633186086}, {"code": "FPlayerSaveData* USSaveGame::GetPlayerData(APlayerState* PlayerState){\n\t\tif (!PlayerState) {\n\t\treturn nullptr;\n\t}\n\tif (PlayerState->GetWorld()->IsPlayInEditor()) {\n\t\tUE_LOGFMT(LogTemp, Warning, TEXT(\"GetPlayerData: PlayerState is null. Returning first saved player entry.\"));\n\t\treturn SavedPlayers.IsValidIndex(0)? &SavedPlayers[0] : nullptr;\n\t}\n\treturn SavedPlayers.FindByPredicate([PlayerState](const FPlayerSaveData& Entry) {\n\t\treturn Entry.PlayerId == PlayerState->GetUniqueId().ToString();\n\t});\n}", "CodeBleu_score": 53.566414975358676}, {"code": "FPlayerSaveData* USSaveGame::GetPlayerData(APlayerState* PlayerState){\n\t\tif (!PlayerState) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"GetPlayerData: PlayerState is null!\"));\n\t\treturn nullptr;\n\t}\n\n\tif (GIsPlayInEditor) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"GetPlayerData: PIE mode!\"));\n\t\tif (SavedPlayers.Num() > 0) {\n\t\t\treturn &SavedPlayers[0];\n\t\t} else {\n\t\t\treturn nullptr;\n\t\t}\n\t}\n\n\tFString UniqueID = PlayerState->GetUniqueId().ToString();\n\tint32 Index = SavedPlayers.IndexOfByPredicate([&](const FPlayerSaveData& PlayerData) {\n\t\treturn PlayerData.UniqueID == UniqueID;\n\t});\n\n\tif (SavedPlayers.IsValidIndex(Index)) {\n\t\treturn &SavedPlayers[Index];\n\t} else {\n\t\treturn nullptr;\n\t}\n}", "CodeBleu_score": 55.571243144080015}]}
{"instance_id": "58a03c087c47", "generation_result": [{"code": "void USSaveGameSubsystem::HandleStartingNewPlayer(AController* NewPlayer){\n\t\t// Get the player's state\n\tASPlayerState* PS = NewPlayer->GetPlayerState<ASPlayerState>();\n\n\t// If the player's state is valid\n\tif (PS) {\n\t\t// Load the player's state from the current save game\n\t\tLoadPlayerState(PS);\n\t}\n}", "CodeBleu_score": 71.31610239121032}, {"code": "void USSaveGameSubsystem::HandleStartingNewPlayer(AController* NewPlayer){\n\t\tif (NewPlayer == nullptr) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"HandleStartingNewPlayer: NewPlayer is nullptr\"));\n\t\treturn;\n\t}\n\tAPlayerState* PS = NewPlayer->GetPlayerState<APlayerState>();\n\tif (PS == nullptr) {\n\t\tUE_LOG(LogTemp, Warning, TEXT(\"HandleStartingNewPlayer: PlayerState is nullptr\"));\n\t\treturn;\n\t}\n\tLoadPlayerState(PS);\n}", "CodeBleu_score": 44.56965240642692}, {"code": "void USSaveGameSubsystem::HandleStartingNewPlayer(AController* NewPlayer){\n\t\tif (NewPlayer) {\n\t\tAPlayerState* PS = NewPlayer->GetPlayerState<APlayerState>();\n\t\tif (PS) {\n\t\t\tLoadPlayerState(PS);\n\t\t}\n\t}\n}", "CodeBleu_score": 59.39553837166864}]}
{"instance_id": "c5bd4c059b71", "generation_result": [{"code": "void USSaveGameSubsystem::WriteSaveGame(){\n\t\t// Clear existing saved player and actor data in CurrentSaveGame\n\tCurrentSaveGame->SavedPlayers.Empty();\n\tCurrentSaveGame->SavedActors.Empty();\n\n\t// Retrieve the game state and save player data for each player in the game state\n\tauto GS = GetWorld()->GetGameState<ASGameState>();\n\tfor (auto PS : GS->PlayerArray) {\n\t\tauto SPS = CastChecked<ASPlayerState>(PS);\n\t\tSPS->SavePlayerState();\n\t\tCurrentSaveGame->SavedPlayers.Add(SPS);\n\t}\n\n\t// Iterate through all actors in the world, saving those that implement a specific interface\n\tfor (TActorIterator<AActor> ActorIt(GetWorld()); ActorIt; ++ActorIt) {\n\t\tAActor* Actor = *ActorIt;\n\t\tif (Actor->Implements<USGameplayInterface>()) {\n\t\t\t// Actor data, including name, transform, and serialized data, is stored in the CurrentSaveGame\n\t\t\tFString ActorName = Actor->GetFName().ToString();\n\t\t\tFTransform ActorTransform = Actor->GetActorTransform();\n\t\t\tFString ActorData;\n\t\t\tFMemoryWriter MemoryWriter(ActorData);\n\t\t\tActor->Serialize(MemoryWriter);\n\n\t\t\t// Save the actor data to the CurrentSaveGame\n\t\t\tCurrentSaveGame->SavedActors.Add(FSSavedActorData(ActorName, ActorTransform, ActorData));\n\t\t}\n\t}\n\n\t// Write the save game to a slot, and broadcast an event to signal the save is complete\n\tUGameplayStatics::SaveGameToSlot(CurrentSaveGame, SaveGameSlotName, SaveGameUserIndex);\n\tOnSaveGameWritten.Broadcast();\n}", "CodeBleu_score": 50.05196538720341}, {"code": "void USSaveGameSubsystem::WriteSaveGame(){\n\t\t// Clear existing saved player and actor data in CurrentSaveGame\n\tCurrentSaveGame->SavedPlayers.Empty();\n\tCurrentSaveGame->SavedActors.Empty();\n\n\t// Get the game state and save player data for each player in the game state\n\tAGameStateBase* GS = GetWorld()->GetGameState();\n\tfor (APlayerState* PS : GS->PlayerArray) {\n\t\tCastChecked<ASPlayerState>(PS)->SavePlayerState(CurrentSaveGame);\n\t}\n\n\t// Iterate through all actors in the world, saving those that implement a specific interface\n\tfor (TActorIterator<AActor> ActorItr(GetWorld()); ActorItr; ++ActorItr) {\n\t\tAActor* Actor = *ActorItr;\n\t\tif (Actor->Implements<USGameplayInterface>()) {\n\t\t\t// Save actor data, including name, transform, and serialized data\n\t\t\tFName ActorName = Actor->GetFName();\n\t\t\tFTransform ActorTransform = Actor->GetActorTransform();\n\t\t\tFBufferArchive ActorArchive;\n\t\t\tActor->Serialize(ActorArchive);\n\t\t\tCurrentSaveGame->SavedActors.Add(FSSavedActor(ActorName, ActorTransform, ActorArchive));\n\t\t}\n\t}\n\n\t// Write the save game to a slot and broadcast an event to signal the save is complete\n\tUGameplayStatics::SaveGameToSlot(CurrentSaveGame, SaveGameSlotName, SaveGameUserIndex);\n\tOnSaveGameWritten.Broadcast();\n}", "CodeBleu_score": 49.2882624485014}, {"code": "void USSaveGameSubsystem::WriteSaveGame(){\n\t", "CodeBleu_score": 0.989701945674575}]}
{"instance_id": "0d7043a0bff0", "generation_result": [{"code": "void FrameworkConfig::draw_themes(){\n\t\tImGui::Text(\"Theme\");\n\tImGui::SameLine();\n\tif (ImGui::Button(\"?\")) {\n\t\tImGui::OpenPopup(\"Theme Help\");\n\t}\n\tif (ImGui::BeginPopup(\"Theme Help\")) {\n\t\tImGui::Text(\"Select a theme from the list below.\");\n\t\tImGui::Text(\"You can also change the font size.\");\n\t\tImGui::EndPopup();\n\t}\n\n\tImGui::SameLine();\n\tImGui::Text(\"Font Size\");\n\tImGui::SameLine();\n\tif (ImGui::Button(\"?\")) {\n\t\tImGui::OpenPopup(\"Font Size Help\");\n\t}\n\tif (ImGui::BeginPopup(\"Font Size Help\")) {\n\t\tImGui::Text(\"You can change the font size here.\");\n\t\tImGui::Text(\"The font size is used for the theme selection.\");\n\t\tImGui::EndPopup();\n\t}\n\tImGui::SameLine();\n\tImGui::PushItemWidth(100);\n\tImGui::DragInt(\"##FontSize\", &m_font_size->value, 1.0f, 8, 16);\n\tImGui::PopItemWidth();\n\n\tImGui::BeginChild(\"Theme List\", ImVec2(0, 200), true);\n\tfor (auto &theme : m_themes) {\n\t\tif (ImGui::Selectable(theme.first.c_str(), m_current_theme == &theme.second)) {\n\t\t\tm_current_theme = &theme.second;\n\t\t}\n\t}\n\tImGui::EndChild();\n\n\tif (m_current_theme!= nullptr) {\n\t\tm_current_theme->draw();\n\t\tif (m_current_theme->value!= m_font_size->value) {\n\t\t\tm_current_theme->value = m_font_size->value;\n\t\t\tg_framework->set_font_size(m_current_theme->value);\n\t\t}\n\t}\n}", "CodeBleu_score": 40.754829400134895}, {"code": "void FrameworkConfig::draw_themes(){\n\t\tif (!m_font_size) {\n\t\tm_font_size = new FontSize(g_framework->get_font_size());\n\t}\n\n\tif (ImGui::BeginCombo(\"Theme\", m_theme_name.c_str())) {\n\t\tfor (auto& theme : m_themes) {\n\t\t\tbool is_selected = (theme.first == m_theme_name);\n\t\t\tif (ImGui::Selectable(theme.first.c_str(), is_selected)) {\n\t\t\t\tm_theme_name = theme.first;\n\t\t\t\tm_theme = theme.second;\n\t\t\t\tget_imgui_theme()->apply(m_theme);\n\t\t\t}\n\t\t\tif (is_selected) {\n\t\t\t\tImGui::SetItemDefaultFocus();\n\t\t\t}\n\t\t}\n\t\tImGui::EndCombo();\n\t}\n\n\tm_font_size->draw();\n\n\tif (m_font_size->value!= g_framework->get_font_size()) {\n\t\tg_framework->set_font_size(m_font_size->value);\n\t}\n}", "CodeBleu_score": 43.963484518611274}, {"code": "void FrameworkConfig::draw_themes(){\n\t\tImGui::Begin(\"Themes\");\n\n\tImGui::Text(\"Font size:\");\n\tImGui::SameLine();\n\tImGui::DragFloat(\"##font_size\", &m_font_size->value, 1.0f, 10.0f, 100.0f, \"%.0f\");\n\n\tImGui::Text(\"Theme:\");\n\tImGui::SameLine();\n\tImGui::PushItemWidth(100);\n\tImGui::Combo(\"##theme\", &m_theme->value, m_theme->options.data(), m_theme->options.size());\n\tImGui::PopItemWidth();\n\n\tImGui::End();\n\n\tif (m_font_size->value!= m_font_size->last_value) {\n\t\tm_font_size->last_value = m_font_size->value;\n\t\tg_framework->set_font_size(m_font_size->value);\n\t}\n}", "CodeBleu_score": 42.10253357040305}]}
{"instance_id": "e7f81d1dee95", "generation_result": [{"code": "void FrameworkConfig::draw_main() {\n\t\tImGui::Text(\"Menu key: \");\n\tm_menu_key->draw();\n\tImGui::Text(\"Show cursor key: \");\n\tm_show_cursor_key->draw();\n\tImGui::Text(\"Remember menu state: \");\n\tm_remember_menu_state->draw();\n\tImGui::Text(\"Enable L3 + R3 toggle: \");\n\tm_enable_l3_r3_toggle->draw();\n\tImGui::Text(\"Always show cursor: \");\n\tm_always_show_cursor->draw();\n\tImGui::Separator();\n\tImGui::Text(\"Log level: \");\n\tm_log_level->draw();\n\tif (m_log_level->value() >= 0 && m_log_level->value() <= 5) {\n\t\tspdlog::set_level((spdlog::level::level_enum)m_log_level->value());\n\t}\n}", "CodeBleu_score": 62.45906847619456}, {"code": "void FrameworkConfig::draw_main() {\n\t\tImGui::Text(\"Main\");\n\tImGui::Separator();\n\tm_menu_key->draw();\n\tm_show_cursor_key->draw();\n\tm_remember_menu_state->draw();\n\tm_enable_l3_r3_toggle->draw();\n\tm_always_show_cursor->draw();\n\tImGui::Separator();\n\tm_l3_r3_long_press->draw();\n\tImGui::SameLine();\n\tm_menu_key->draw();\n\tif (m_log_level->value() >= 0 && m_log_level->value() <= 6) {\n\t\tspdlog::set_level(static_cast<spdlog::level::level_enum>(m_log_level->value()));\n\t}\n\tm_log_level->draw();\n}", "CodeBleu_score": 44.383749739571954}, {"code": "void FrameworkConfig::draw_main() {\n\t\tImGui::Text(\"Main\");\n\tImGui::Separator();\n\tm_menu_key->draw();\n\tm_show_cursor_key->draw();\n\tm_remember_menu_state->draw();\n\tm_enable_l3_r3_toggle->draw();\n\tm_always_show_cursor->draw();\n\tImGui::Separator();\n\tm_l3_r3_long_press->draw();\n\tImGui::SameLine();\n\tm_menu_key->draw();\n\tImGui::Separator();\n\tif (m_log_level->value() >= 0 && m_log_level->value() <= 6) {\n\t\tspdlog::set_level(static_cast<spdlog::level::level_enum>(m_log_level->value()));\n\t}\n\tm_log_level->draw();\n}", "CodeBleu_score": 51.072611726078165}]}
{"instance_id": "83fa7f401579", "generation_result": [{"code": "bool FOSMFile::LoadOpenStreetMapFile( FString& OSMFilePath, const bool bIsFilePathActuallyTextBuffer, FFeedbackContext* FeedbackContext ){\n\t", "CodeBleu_score": 4.471675108827625}, {"code": "bool FOSMFile::LoadOpenStreetMapFile( FString& OSMFilePath, const bool bIsFilePathActuallyTextBuffer, FFeedbackContext* FeedbackContext ){\n\t", "CodeBleu_score": 4.471675108827625}, {"code": "bool FOSMFile::LoadOpenStreetMapFile( FString& OSMFilePath, const bool bIsFilePathActuallyTextBuffer, FFeedbackContext* FeedbackContext ){\n\t", "CodeBleu_score": 4.471675108827625}]}
{"instance_id": "7349d775edf6", "generation_result": [{"code": "void UStreetMapActorFactory::PostSpawnActor(UObject* Asset, AActor* NewActor){\n\t\tSuper::PostSpawnActor(Asset, NewActor);\n\tif (Asset->IsA(UStreetMap::StaticClass())) {\n\t\tAStreetMapActor* StreetMapActor = CastChecked<AStreetMapActor>(NewActor);\n\t\tUStreetMapComponent* StreetMapComponent = StreetMapActor->GetStreetMapComponent();\n\t\tStreetMapComponent->SetStreetMap(Cast<UStreetMap>(Asset));\n\t}\n}", "CodeBleu_score": 73.3458487800175}, {"code": "void UStreetMapActorFactory::PostSpawnActor(UObject* Asset, AActor* NewActor){\n\t\tSuper::PostSpawnActor(Asset, NewActor);\n\n\tif (Asset->IsA(UStreetMap::StaticClass())) {\n\t\tAStreetMapActor* StreetMapActor = CastChecked<AStreetMapActor>(NewActor);\n\t\tUStreetMapComponent* StreetMapComponent = StreetMapActor->GetStreetMapComponent();\n\t\tStreetMapComponent->SetStreetMap(Cast<UStreetMap>(Asset));\n\t}\n}", "CodeBleu_score": 73.3458487800175}, {"code": "void UStreetMapActorFactory::PostSpawnActor(UObject* Asset, AActor* NewActor){\n\t\tSuper::PostSpawnActor(Asset, NewActor);\n\tif (Asset->IsA(UStreetMap::StaticClass())) {\n\t\tAStreetMapActor* StreetMapActor = CastChecked<AStreetMapActor>(NewActor);\n\t\tUStreetMapComponent* StreetMapComponent = StreetMapActor->GetStreetMapComponent();\n\t\tStreetMapComponent->SetStreetMap(Cast<UStreetMap>(Asset));\n\t}\n}", "CodeBleu_score": 73.3458487800175}]}
{"instance_id": "f160ac6d0353", "generation_result": [{"code": "FReply FStreetMapComponentDetails::OnBuildMeshClicked(){\n\tif (SelectedStreetMapComponent!= nullptr) {\n\t\tSelectedStreetMapComponent->BuildMesh();\n\t\tRefreshDetails();\n\t\treturn FReply::Handled();\n\t}\n\treturn FReply::Unhandled();\n}", "CodeBleu_score": 71.69459697385581}, {"code": "FReply FStreetMapComponentDetails::OnBuildMeshClicked(){\n\tif (SelectedStreetMapComponent!= nullptr) {\n\t\tSelectedStreetMapComponent->BuildMesh();\n\t\tRefreshDetails();\n\t\treturn FReply::Handled();\n\t}\n\treturn FReply::Unhandled();\n}", "CodeBleu_score": 71.69459697385581}, {"code": "FReply FStreetMapComponentDetails::OnBuildMeshClicked(){\n\tif (SelectedStreetMapComponent.IsValid()) {\n\t\tSelectedStreetMapComponent->BuildMesh();\n\t\tRefreshDetails();\n\t}\n\treturn FReply::Handled();\n}", "CodeBleu_score": 76.51297845816737}]}
{"instance_id": "b23f1f2b29fa", "generation_result": [{"code": "void FStreetMapImportingModule::StartupModule(){\n\t\tStreetMapAssetTypeActions = MakeShareable( new FStreetMapAssetTypeActions() );\n\tFAssetToolsModule& AssetToolsModule = FModuleManager::GetModuleChecked<FAssetToolsModule>( \"AssetTools\" );\n\tAssetToolsModule.RegisterAssetTypeActions( StreetMapAssetTypeActions.ToSharedRef() );\n\tFStreetMapStyle::Initialize();\n\tFPropertyEditorModule& PropertyModule = FModuleManager::GetModuleChecked<FPropertyEditorModule>( \"PropertyEditor\" );\n\tPropertyModule.RegisterCustomClassLayout( \"StreetMapComponent\", FOnGetDetailCustomizationInstance::CreateStatic( &FStreetMapComponentDetails::MakeInstance ) );\n\tPropertyModule.NotifyCustomizationModuleChanged();\n}", "CodeBleu_score": 74.09139284525209}, {"code": "void FStreetMapImportingModule::StartupModule(){\n\t\tStreetMapAssetTypeActions = MakeShareable( new FStreetMapAssetTypeActions( ) );\n\tFModuleManager::LoadModuleChecked<FAssetToolsModule>( \"AssetTools\" ).Get().RegisterAssetTypeActions( StreetMapAssetTypeActions.ToSharedRef( ) );\n\tFStreetMapStyle::Initialize( );\n\tFPropertyEditorModule& PropertyModule = FModuleManager::GetModuleChecked<FPropertyEditorModule>( \"PropertyEditor\" );\n\tPropertyModule.RegisterCustomClassLayout( \"StreetMapComponent\", FOnGetDetailCustomizationInstance::CreateStatic( &FStreetMapComponentDetails::MakeInstance ) );\n\tPropertyModule.NotifyCustomizationModuleChanged( );\n}", "CodeBleu_score": 61.10786310488415}, {"code": "void FStreetMapImportingModule::StartupModule(){\n\t\tStreetMapAssetTypeActions = MakeShareable( new FStreetMapAssetTypeActions() );\n\tFAssetToolsModule& AssetToolsModule = FModuleManager::LoadModuleChecked<FAssetToolsModule>( \"AssetTools\" );\n\tAssetToolsModule.RegisterAssetTypeActions( StreetMapAssetTypeActions.ToSharedRef() );\n\tFStreetMapStyle::Initialize();\n\tFPropertyEditorModule& PropertyModule = FModuleManager::GetModuleChecked<FPropertyEditorModule>( \"PropertyEditor\" );\n\tPropertyModule.RegisterCustomClassLayout( \"StreetMapComponent\", FOnGetDetailCustomizationInstance::CreateStatic( &FStreetMapComponentDetails::MakeInstance ) );\n\tPropertyModule.NotifyCustomizationModuleChanged();\n}", "CodeBleu_score": 78.24056900060104}]}
{"instance_id": "1da549fe84e3", "generation_result": [{"code": "FPrimitiveSceneProxy* UStreetMapComponent::CreateSceneProxy(){\n\t\tif (HasValidMesh()) {\n\t\tFStreetMapSceneProxy* StreetMapSceneProxy = new FStreetMapSceneProxy(this);\n\t\tStreetMapSceneProxy->Init();\n\t\treturn StreetMapSceneProxy;\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 52.601629855283335}, {"code": "FPrimitiveSceneProxy* UStreetMapComponent::CreateSceneProxy(){\n\t\tif (HasValidMesh()) {\n\t\tFStreetMapSceneProxy* StreetMapSceneProxy = new FStreetMapSceneProxy(this);\n\t\tStreetMapSceneProxy->Init();\n\t\treturn StreetMapSceneProxy;\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 52.601629855283335}, {"code": "FPrimitiveSceneProxy* UStreetMapComponent::CreateSceneProxy(){\n\t\tif (HasValidMesh()) {\n\t\treturn new FStreetMapSceneProxy(this);\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 14.035361265167964}]}
{"instance_id": "d0ee3b2e023e", "generation_result": [{"code": "void AARCharacter::OnAbility01Ready(FAFAbilitySpec Spec, FAFAbilitySpecHandle ServerHandle, FAFAbilitySpecHandle ClientHandle){\n\t\tTestAbility01Handle = ServerHandle;\n\n\tTArray<FKey> InputIds;\n\tInputIds.Add(EKeys::Gamepad_FaceButton_Bottom);\n\tAbilities->BindAbilityToInputIDs(ServerHandle, InputIds);\n}", "CodeBleu_score": 69.90005954957226}, {"code": "void AARCharacter::OnAbility01Ready(FAFAbilitySpec Spec, FAFAbilitySpecHandle ServerHandle, FAFAbilitySpecHandle ClientHandle){\n\t\t// Set the server handle\n\tTestAbility01Handle = ServerHandle;\n\n\t// Create an array of input IDs\n\tTArray<uint8> InputIds;\n\t// Add the ID for Ability01\n\tInputIds.Add(EAbilityInputID::Ability01);\n\t// Bind the ability to these input IDs using the server handle\n\tAbilities->BindAbilityToInputIDs(ServerHandle, InputIds);\n}", "CodeBleu_score": 79.61090341151143}, {"code": "void AARCharacter::OnAbility01Ready(FAFAbilitySpec Spec, FAFAbilitySpecHandle ServerHandle, FAFAbilitySpecHandle ClientHandle){\n\t\tTestAbility01Handle = ServerHandle;\n\tTArray<FKey> InputIds;\n\tInputIds.Add(EKeys::F);\n\tAbilities->BindAbilityToInputIDs(ServerHandle, InputIds);\n}", "CodeBleu_score": 69.17418673495693}]}
{"instance_id": "e62f1b2cd4bd", "generation_result": [{"code": "void AARCharacter::MoveForward(float Value){\n\t\tif ((Controller!= NULL) && (Value!= 0.0f)) {\n\t\t// find out which way is forward\n\t\tconst FRotator Rotation = Controller->GetControlRotation();\n\t\tconst FRotator YawRotation(0, Rotation.Yaw, 0);\n\n\t\t// get forward vector\n\t\tconst FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);\n\t\tAddMovementInput(Direction, Value);\n\t}\n}", "CodeBleu_score": 91.7974804621021}, {"code": "void AARCharacter::MoveForward(float Value){\n\t\tif ((Controller!= NULL) && (Value!= 0.0f))\n\t{\n\t\t// find out which way is forward\n\t\tconst FRotator Rotation = Controller->GetControlRotation();\n\t\tconst FRotator YawRotation(0, Rotation.Yaw, 0);\n\n\t\t// get forward vector\n\t\tconst FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);\n\t\tAddMovementInput(Direction, Value);\n\t}\n}", "CodeBleu_score": 91.8209588044932}, {"code": "void AARCharacter::MoveForward(float Value){\n\t\tif ((Controller!= NULL) && (Value!= 0.0f)) {\n\t\t// find out which way is forward\n\t\tconst FRotator Rotation = Controller->GetControlRotation();\n\t\tconst FRotator YawRotation(0, Rotation.Yaw, 0);\n\n\t\t// get forward vector\n\t\tconst FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);\n\t\tAddMovementInput(Direction, Value);\n\t}\n}", "CodeBleu_score": 91.7974804621021}]}
{"instance_id": "a77cdc67ee00", "generation_result": [{"code": "FVector AARCharacter::GetMainWeaponSocket(const FName& Socket) const{\n\t\tif (MainWeaponMeshComponent) {\n\t\treturn MainWeaponMeshComponent->GetSocketLocation(Socket);\n\t}\n\telse {\n\t\treturn GetMesh()->GetSocketLocation(Socket);\n\t}\n}", "CodeBleu_score": 49.14352928437134}, {"code": "FVector AARCharacter::GetMainWeaponSocket(const FName& Socket) const{\n\t\tFVector SocketLocation = FVector::ZeroVector;\n\tif (GetMainWeaponMesh()) {\n\t\tSocketLocation = GetMainWeaponMesh()->GetSocketLocation(Socket);\n\t} else {\n\t\tSocketLocation = GetMesh()->GetSocketLocation(Socket);\n\t}\n\treturn SocketLocation;\n}", "CodeBleu_score": 47.39101196830141}, {"code": "FVector AARCharacter::GetMainWeaponSocket(const FName& Socket) const{\n\t\tif (MainWeaponMesh) {\n\t\treturn MainWeaponMesh->GetSocketLocation(Socket);\n\t} else {\n\t\treturn GetMesh()->GetSocketLocation(Socket);\n\t}\n}", "CodeBleu_score": 46.25098018490742}]}
{"instance_id": "f021203f736a", "generation_result": [{"code": "void AAREnemySpawner::OnEnemyKilled(AARAICharacter* InEnemy){\n\t\tif (Role == ROLE_Authority)\n\t{\n\t\tif (InEnemy)\n\t\t{\n\t\t\tSpawnedEnemies.Remove(InEnemy);\n\n\t\t\tif (SpawnedEnemies.Num() < MinimumEnemies)\n\t\t\t{\n\t\t\t\tSetupSpawner();\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 59.134068538872775}, {"code": "void AAREnemySpawner::OnEnemyKilled(AARAICharacter* InEnemy){\n\t\tif (Role == ROLE_Authority) {\n\t\tif (SpawnedEnemies.Contains(InEnemy)) {\n\t\t\tSpawnedEnemies.Remove(InEnemy);\n\t\t\tif (SpawnedEnemies.Num() < MinEnemies) {\n\t\t\t\tSetupSpawner();\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 64.52068924585326}, {"code": "void AAREnemySpawner::OnEnemyKilled(AARAICharacter* InEnemy){\n\t\tSpawnedEnemies.Remove(InEnemy);\n\n\tif (SpawnedEnemies.Num() < MinEnemies) {\n\t\tSetupSpawner();\n\t}\n}", "CodeBleu_score": 59.318569443678946}]}
{"instance_id": "dbab72cb539f", "generation_result": [{"code": "FString AARGameSession::ApproveLogin(const FString& Options){\n\t\tFString Result = Super::ApproveLogin(Options);\n\tif (Result.IsEmpty()) {\n\t\tTArray<FString> OptionsArray;\n\t\tOptions.ParseIntoArray(OptionsArray, TEXT(\"&\"), true);\n\t\tfor (int i = 0; i < OptionsArray.Num(); i++) {\n\t\t\tif (OptionsArray[i].StartsWith(\"PlayerId=\")) {\n\t\t\t\tint32 PlayerId = FCString::Atoi(*OptionsArray[i].Mid(9));\n\t\t\t\tif (PlayerId > 0) {\n\t\t\t\t\tPlayerIdToIndex.Add(PlayerId, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn Result;\n}", "CodeBleu_score": 48.138749573914765}, {"code": "FString AARGameSession::ApproveLogin(const FString& Options){\n\t\tFString Result = Super::ApproveLogin(Options);\n\tif (Result.Contains(\"PlayerId\")) {\n\t\tTArray<FString> OptionsArray;\n\t\tOptions.ParseIntoArray(OptionsArray, TEXT(\"&\"), true);\n\t\tfor (FString& Option : OptionsArray) {\n\t\t\tif (Option.Contains(\"PlayerId\")) {\n\t\t\t\tint32 PlayerId;\n\t\t\t\tOption.Split(TEXT(\"=\"), nullptr, &Option);\n\t\t\t\tOption.Split(TEXT(\"?\"), &Option, nullptr);\n\t\t\t\tif (Option.ToInteger(PlayerId)) {\n\t\t\t\t\treturn Result;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tUE_LOG(LogTemp, Warning, TEXT(\"Invalid PlayerId\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn Result;\n}", "CodeBleu_score": 52.419737999363036}, {"code": "FString AARGameSession::ApproveLogin(const FString& Options){\n\t\tFString ParentResult = Super::ApproveLogin(Options);\n\tOptions.ParseIntoArray(ParsedOptions, TEXT(\"&\"), true);\n\tfor (auto Option : ParsedOptions) {\n\t\tif (Option.StartsWith(TEXT(\"PlayerId=\"))) {\n\t\t\tPlayerId = Option.RightChop(9);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ParentResult;\n}", "CodeBleu_score": 45.05922377255722}]}
{"instance_id": "85ea02df92a5", "generation_result": [{"code": "void UARRegisterView::OnRegisterClicked(){\n\t\t// Get username, display name, and password from input fields\n\tFString UserName = UserNameBox->GetText().ToString();\n\tFString DisplayName = DisplayNameBox->GetText().ToString();\n\tFString Password = PasswordBox->GetText().ToString();\n\n\t// Check if any of the fields are empty\n\tif (UserName.IsEmpty() || DisplayName.IsEmpty() || Password.IsEmpty()) {\n\t\t// Display warning message\n\t\tWarrningText->SetText(FText::FromString(TEXT(\"Please fill all the fields\")));\n\t} else {\n\t\t// Hide register button\n\t\tRegisterButton->SetVisibility(ESlateVisibility::Hidden);\n\n\t\t// Register new player\n\t\tUARGameInstance* GI = Cast<UARGameInstance>(GetOwningPlayer()->GetGameInstance());\n\t\tGI->RegisterNewPlayer(UserName, DisplayName, Password);\n\t}\n}", "CodeBleu_score": 55.83844263353033}, {"code": "void UARRegisterView::OnRegisterClicked(){\n\t\t// Retrieve the username, display name, and password from input fields\n\tFString UserName = UserNameBox->GetText().ToString();\n\tFString DisplayName = DisplayNameBox->GetText().ToString();\n\tFString Password = PasswordBox->GetText().ToString();\n\n\t// Check if any of the fields are empty\n\tif (UserName.IsEmpty() || DisplayName.IsEmpty() || Password.IsEmpty()) {\n\t\t// Display a warning message\n\t\tWarrningText->SetText(FText::FromString(\"All fields are required!\"));\n\t\treturn;\n\t}\n\n\t// Hide the register button\n\tRegisterButton->SetVisibility(ESlateVisibility::Hidden);\n\n\t// Call the RegisterNewPlayer method from the game instance to register the new player\n\tUARGameInstance* GI = Cast<UARGameInstance>(GetOwningPlayer()->GetGameInstance());\n\tGI->RegisterNewPlayer(UserName, DisplayName, Password);\n}", "CodeBleu_score": 59.86475519271512}, {"code": "void UARRegisterView::OnRegisterClicked(){\n\t\t// Retrieve the username, display name, and password from input fields\n\tFString UserName = UserNameBox->GetText().ToString();\n\tFString DisplayName = DisplayNameBox->GetText().ToString();\n\tFString Password = PasswordBox->GetText().ToString();\n\n\t// Check if any of the fields are empty\n\tif (UserName.IsEmpty() || DisplayName.IsEmpty() || Password.IsEmpty()) {\n\t\t// Display a warning message\n\t\tWarrningText->SetText(FText::FromString(\"Please fill in all fields\"));\n\t} else {\n\t\t// Hide the register button\n\t\tRegisterButton->SetVisibility(ESlateVisibility::Collapsed);\n\n\t\t// Call the RegisterNewPlayer method from the game instance to register the new player\n\t\tUARGameInstance* GI = Cast<UARGameInstance>(GetOwningPlayer()->GetGameInstance());\n\t\tGI->RegisterNewPlayer(UserName, DisplayName, Password);\n\t}\n}", "CodeBleu_score": 58.66626439133758}]}
{"instance_id": "b33bb5886dd9", "generation_result": [{"code": "void AARHUD::OnEnemyDamageCaused(const FAFAttributeChangedData& InMod){\n\t\tif (InMod.Target.IsValid()) {\n\t\tFVector WorldPos = InMod.Target->GetActorLocation();\n\t\tFVector2D ScreenPos;\n\t\tUGameplayStatics::ProjectWorldToScreen(GetWorld(), WorldPos, ScreenPos, true);\n\t\tFloatingCombatText->SetInfo(InMod.Value, ScreenPos);\n\t}\n}", "CodeBleu_score": 30.85726263149856}, {"code": "void AARHUD::OnEnemyDamageCaused(const FAFAttributeChangedData& InMod){\n\t\tif (InMod.Target.IsValid()) {\n\t\tconst FVector& DamageLocation = InMod.Target->GetActorLocation();\n\t\tFVector2D ScreenLocation;\n\t\tUGameplayStatics::ProjectWorldToScreen(GetWorld(), DamageLocation, ScreenLocation, true);\n\n\t\tFloatingCombatText->SetInfo(InMod.Value, ScreenLocation);\n\t}\n}", "CodeBleu_score": 32.68582639631469}, {"code": "void AARHUD::OnEnemyDamageCaused(const FAFAttributeChangedData& InMod){\n\t\tif (InMod.TargetActor.IsValid()) {\n\t\tconst FVector& DamageLocation = InMod.HitResult.Location;\n\t\tFVector2D ScreenLocation;\n\t\tif (UGameplayStatics::ProjectWorldToScreen(InMod.TargetActor.Get(), DamageLocation, ScreenLocation, nullptr)) {\n\t\t\tFloatingCombatText->SetInfo(InMod.Damage, ScreenLocation);\n\t\t}\n\t}\n}", "CodeBleu_score": 33.29187868962089}]}
{"instance_id": "177d36e7e076", "generation_result": [{"code": "void UARItemWeapon::AddMagazineUpgrade(class UARMagazineUpgradeItem* InMagazineUpgrade){\n\t}", "CodeBleu_score": 3.4944055265683636}, {"code": "void UARItemWeapon::AddMagazineUpgrade(class UARMagazineUpgradeItem* InMagazineUpgrade){\n\t}", "CodeBleu_score": 3.4944055265683636}, {"code": "void UARItemWeapon::AddMagazineUpgrade(class UARMagazineUpgradeItem* InMagazineUpgrade){\n\t}", "CodeBleu_score": 3.4944055265683636}]}
{"instance_id": "404276da398b", "generation_result": [{"code": "void UARWeaponInventoryComponent::OnWeaponReady(TSoftClassPtr<UARWeaponAbilityBase> InAbilityTag, int8 LocalIndex){\n\t\tif (GetOwnerRole() < ROLE_Authority) {\n\t\tServerOnWeaponReady(InAbilityTag, LocalIndex);\n\t}\n\telse {\n\t\tAARCharacter* Character = Cast<AARCharacter>(GetOwner());\n\t\tif (Character) {\n\t\t\tUGAAbilityComponent* AbilityComp = Character->GetAbilityComp();\n\t\t\tif (AbilityComp) {\n\t\t\t\tUGAAbilityBase* Ability = AbilityComp->BP_GetAbilityByHandle(InAbilityTag);\n\t\t\t\tSetAbilityToItem(LocalIndex, Ability);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 63.13907852704668}, {"code": "void UARWeaponInventoryComponent::OnWeaponReady(TSoftClassPtr<UARWeaponAbilityBase> InAbilityTag, int8 LocalIndex){\n\t\tif (GetOwnerRole()!= ROLE_Authority) {\n\t\treturn;\n\t}\n\n\tAARCharacter* Character = Cast<AARCharacter>(GetOwner());\n\tif (!Character) {\n\t\treturn;\n\t}\n\n\tUARAbilityComponent* AbilityComp = Character->GetAbilityComp();\n\tif (!AbilityComp) {\n\t\treturn;\n\t}\n\n\tUGAAbilityBase* Ability = AbilityComp->BP_GetAbilityByHandle(InAbilityTag);\n\tif (!Ability) {\n\t\treturn;\n\t}\n\n\tSetAbilityToItem(LocalIndex, Cast<UGAAbilityBase>(Ability));\n}", "CodeBleu_score": 55.507187689889825}, {"code": "void UARWeaponInventoryComponent::OnWeaponReady(TSoftClassPtr<UARWeaponAbilityBase> InAbilityTag, int8 LocalIndex){\n\t\tAARCharacter* OwnerCharacter = Cast<AARCharacter>(GetOwner());\n\n\tif (!OwnerCharacter)\n\t\treturn;\n\n\tUGAAbilityComponent* AbilityComp = OwnerCharacter->GetAbilityComp();\n\n\tif (!AbilityComp)\n\t\treturn;\n\n\tUGAAbilityBase* Ability = AbilityComp->BP_GetAbilityByHandle(InAbilityTag.ToSoftObjectPath());\n\n\tif (!Ability)\n\t\treturn;\n\n\tSetAbilityToItem(LocalIndex, Cast<UGAAbilityBase>(Ability));\n}", "CodeBleu_score": 55.89667965338286}]}
{"instance_id": "2e97aab98981", "generation_result": [{"code": "void UARWeaponInventoryComponent::OnItemRemoved(uint8 LocalIndex){\n\t\tif (AARCharacter* Character = Cast<AARCharacter>(POwner)) {\n\t\tFARWeaponRPC Data;\n\t\tData.Weapon = \"\";\n\t\tData.Position = FVector::ZeroVector;\n\t\tData.Rotation = FRotator::ZeroRotator;\n\t\tData.AttachSlot = static_cast<EARWeaponPosition>(LocalIndex);\n\t\tSetWeapon(Data, GroupToComponent[LocalIndex]);\n\t\tif (LocalIndex == CurrentWeaponIndex) {\n\t\t\tUnequip(LocalIndex);\n\t\t}\n\t}\n}", "CodeBleu_score": 85.56502858864235}, {"code": "void UARWeaponInventoryComponent::OnItemRemoved(uint8 LocalIndex){\n\t\tif (AARCharacter* Character = Cast<AARCharacter>(POwner)) {\n\t\tFARWeaponRPC Data;\n\t\tData.Weapon = \"\";\n\t\tData.Position = FVector::ZeroVector;\n\t\tData.Rotation = FRotator::ZeroRotator;\n\t\tData.AttachSlot = static_cast<EARWeaponPosition>(LocalIndex);\n\t\tSetWeapon(Data, GroupToComponent[LocalIndex]);\n\t\tif (CurrentWeaponIndex == LocalIndex) {\n\t\t\tUnequip(LocalIndex);\n\t\t}\n\t}\n}", "CodeBleu_score": 80.79579845534626}, {"code": "void UARWeaponInventoryComponent::OnItemRemoved(uint8 LocalIndex){\n\t\tif (AARCharacter* Character = Cast<AARCharacter>(POwner)) {\n\t\tFARWeaponRPC Data;\n\t\tData.Weapon = \"\";\n\t\tData.Position = FVector(0, 0, 0);\n\t\tData.Rotation = FRotator(0, 0, 0);\n\t\tData.AttachSlot = static_cast<EARWeaponPosition>(LocalIndex);\n\t\tSetWeapon(Data, GroupToComponent[LocalIndex]);\n\t\tif (LocalIndex == CurrentWeaponIndex) {\n\t\t\tUnequip(LocalIndex);\n\t\t}\n\t}\n}", "CodeBleu_score": 77.30500728128156}]}
{"instance_id": "13cc35e5ecac", "generation_result": [{"code": "void FAsyncLoadingScreenModule::ShutdownModule(){\n\t\tif (!IsRunningDedicatedServer()) {\n\t\tGetMoviePlayer()->OnPrepareLoadingScreen().RemoveAll(this);\n\t}\n}", "CodeBleu_score": 72.1566962303026}, {"code": "void FAsyncLoadingScreenModule::ShutdownModule(){\n\t\tif (!IsRunningDedicatedServer()) {\n\t\tGetMoviePlayer()->OnPrepareLoadingScreen().RemoveAll(this);\n\t}\n}", "CodeBleu_score": 72.1566962303026}, {"code": "void FAsyncLoadingScreenModule::ShutdownModule(){\n\t\tif (!IsRunningDedicatedServer()) {\n\t\tGetMoviePlayer()->OnPrepareLoadingScreen().RemoveAll(this);\n\t}\n}", "CodeBleu_score": 72.1566962303026}]}
{"instance_id": "2ee3ac60a8f3", "generation_result": [{"code": "void FAsyncLoadingScreenModule::PreSetupLoadingScreen(){\n\t\tUE_LOG(LogAsyncLoadingScreen, Log, TEXT(\"PreSetupLoadingScreen\"));\n\n\tif (UAsyncLoadingScreenLibrary::GetIsEnableLoadingScreen()) {\n\t\tconst ULoadingScreenSettings* Settings = GetDefault<ULoadingScreenSettings>();\n\t\tbStartup = false;\n\t\tSetupLoadingScreen(Settings->LoadingScreen);\n\t}\n}", "CodeBleu_score": 60.09775238323355}, {"code": "void FAsyncLoadingScreenModule::PreSetupLoadingScreen(){\n\t\tUE_LOG(LogAsyncLoadingScreen, Log, TEXT(\"PreSetupLoadingScreen\"));\n\n\tif (GetDefault<ULoadingScreenSettings>()->bEnableLoadingScreen) {\n\t\tGetDefault<ULoadingScreenSettings>()->bStartup = false;\n\t\tSetupLoadingScreen(GetDefault<ULoadingScreenSettings>()->LoadingScreenSettings);\n\t}\n}", "CodeBleu_score": 43.09401086998601}, {"code": "void FAsyncLoadingScreenModule::PreSetupLoadingScreen(){\n\t\tUE_LOG(LogLoadingScreen, Log, TEXT(\"Async Loading Screen: Setup Loading Screen\"));\n\n\tif (UAsyncLoadingScreenLibrary::GetIsEnableLoadingScreen()) {\n\t\tconst ULoadingScreenSettings* Settings = GetDefault<ULoadingScreenSettings>();\n\t\tSettings->bStartup = false;\n\t\tSetupLoadingScreen(Settings->Default);\n\t}\n}", "CodeBleu_score": 49.858970579483504}]}
{"instance_id": "c095588f550c", "generation_result": [{"code": "void FAsyncLoadingScreenModule::LoadBackgroundImages(){\n\t\t// Remove all existing background images\n\tRemoveAllBackgroundImages();\n\n\t// Get the loading screen settings\n\tULoadingScreenSettings* LoadingScreenSettings = GetDefault<ULoadingScreenSettings>();\n\n\t// Load and add images for the startup loading screen\n\tfor (int32 Index = 0; Index < LoadingScreenSettings->StartupBackgroundImages.Num(); ++Index) {\n\t\tUTexture2D* Image = Cast<UTexture2D>(LoadingScreenSettings->StartupBackgroundImages[Index].TryLoad());\n\t\tif (Image!= NULL) {\n\t\t\tStartupBackgroundImages.Add(Image);\n\t\t}\n\t}\n\n\t// Load and add images for the default loading screen\n\tfor (int32 Index = 0; Index < LoadingScreenSettings->DefaultBackgroundImages.Num(); ++Index) {\n\t\tUTexture2D* Image = Cast<UTexture2D>(LoadingScreenSettings->DefaultBackgroundImages[Index].TryLoad());\n\t\tif (Image!= NULL) {\n\t\t\tDefaultBackgroundImages.Add(Image);\n\t\t}\n\t}\n}", "CodeBleu_score": 56.445615756840326}, {"code": "void FAsyncLoadingScreenModule::LoadBackgroundImages(){\n\t\t// Remove all existing background images.\n\tRemoveAllBackgroundImages();\n\n\t// Get the loading screen settings.\n\tULoadingScreenSettings* LoadingScreenSettings = GetDefault<ULoadingScreenSettings>();\n\n\t// Load and add images for the startup loading screen.\n\tfor (FSoftObjectPath& StartupBackgroundImage : LoadingScreenSettings->StartupBackgroundImages) {\n\t\tUObject* StartupBackgroundImageObject = StartupBackgroundImage.TryLoad();\n\t\tif (StartupBackgroundImageObject) {\n\t\t\tUTexture2D* StartupBackgroundTexture = Cast<UTexture2D>(StartupBackgroundImageObject);\n\t\t\tif (StartupBackgroundTexture) {\n\t\t\t\tStartupBackgroundImages.Add(StartupBackgroundTexture);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Load and add images for the default loading screen.\n\tfor (FSoftObjectPath& DefaultBackgroundImage : LoadingScreenSettings->DefaultBackgroundImages) {\n\t\tUObject* DefaultBackgroundImageObject = DefaultBackgroundImage.TryLoad();\n\t\tif (DefaultBackgroundImageObject) {\n\t\t\tUTexture2D* DefaultBackgroundTexture = Cast<UTexture2D>(DefaultBackgroundImageObject);\n\t\t\tif (DefaultBackgroundTexture) {\n\t\t\t\tDefaultBackgroundImages.Add(DefaultBackgroundTexture);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 45.91892543975784}, {"code": "void FAsyncLoadingScreenModule::LoadBackgroundImages(){\n\t\tRemoveAllBackgroundImages();\n\n\tULoadingScreenSettings* Settings = GetDefault<ULoadingScreenSettings>();\n\tif (Settings) {\n\t\tif (Settings->StartupBackgroundImages.Num() > 0) {\n\t\t\tfor (FSoftObjectPath BackgroundImagePath : Settings->StartupBackgroundImages) {\n\t\t\t\tUTexture2D* BackgroundImage = Cast<UTexture2D>(BackgroundImagePath.TryLoad());\n\t\t\t\tif (BackgroundImage) {\n\t\t\t\t\tStartupBackgroundImages.Add(BackgroundImage);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Settings->DefaultBackgroundImages.Num() > 0) {\n\t\t\tfor (FSoftObjectPath BackgroundImagePath : Settings->DefaultBackgroundImages) {\n\t\t\t\tUTexture2D* BackgroundImage = Cast<UTexture2D>(BackgroundImagePath.TryLoad());\n\t\t\t\tif (BackgroundImage) {\n\t\t\t\t\tDefaultBackgroundImages.Add(BackgroundImage);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 61.44069143637013}]}
{"instance_id": "4ffd56e2a326", "generation_result": [{"code": "EActiveTimerReturnType SLoadingCompleteText::AnimateText(double InCurrentTime, float InDeltaTime){\n\t\t// If the animation is not active, return the timer to stop\n\tif (!m_bIsAnimating) {\n\t\treturn EActiveTimerReturnType::Stop;\n\t}\n\n\t// If the animation has completed, return the timer to stop\n\tif (m_fCurrentTextAlpha >= 1.0f) {\n\t\tm_fCurrentTextAlpha = 1.0f;\n\t\tm_bIsAnimating = false;\n\t\treturn EActiveTimerReturnType::Stop;\n\t}\n\n\t// Update the text alpha value based on the animation direction\n\tif (m_bIsAnimatingUp) {\n\t\tm_fCurrentTextAlpha += m_fAnimationSpeed * InDeltaTime;\n\t}\n\telse {\n\t\tm_fCurrentTextAlpha -= m_fAnimationSpeed * InDeltaTime;\n\t}\n\n\t// If the text alpha value reaches the minimum or maximum, reverse the animation direction\n\tif (m_fCurrentTextAlpha <= 0.0f) {\n\t\tm_fCurrentTextAlpha = 0.0f;\n\t\tm_bIsAnimatingUp = true;\n\t}\n\telse if (m_fCurrentTextAlpha >= 1.0f) {\n\t\tm_fCurrentTextAlpha = 1.0f;\n\t\tm_bIsAnimatingUp = false;\n\t}\n\n\t// Update the text's color with the current alpha value\n\tm_pLoadingCompleteText->SetColorAndOpacity(FLinearColor(1.0f, 1.0f, 1.0f, m_fCurrentTextAlpha));\n\n\t// Return the timer to continue\n\treturn EActiveTimerReturnType::Continue;\n}", "CodeBleu_score": 48.95784820883365}, {"code": "EActiveTimerReturnType SLoadingCompleteText::AnimateText(double InCurrentTime, float InDeltaTime){\n\t\t// Calculate the new alpha value based on the elapsed time and animation speed\n\tfloat alpha = FMath::FInterpTo(alpha, targetAlpha, InDeltaTime, animationSpeed);\n\n\t// Check if the alpha value has reached either extreme\n\tif (FMath::IsNearlyEqual(alpha, minAlpha) || FMath::IsNearlyEqual(alpha, maxAlpha)) {\n\t\t// Reverse the animation direction\n\t\tanimationSpeed = -animationSpeed;\n\t}\n\n\t// Update the text's alpha value\n\ttext->SetColorAndOpacity(FLinearColor(text->ColorAndOpacity.GetSpecifiedColor(), alpha));\n\n\t// Continue the animation\n\treturn EActiveTimerReturnType::Continue;\n}", "CodeBleu_score": 25.621043142410148}, {"code": "EActiveTimerReturnType SLoadingCompleteText::AnimateText(double InCurrentTime, float InDeltaTime){\n\t\t// Set the text's alpha value based on the current animation state\n\tswitch (AnimationState) {\n\t\tcase ELoadingCompleteTextAnimationState::FadeIn:\n\t\t\tTextAlpha = FMath::Clamp(TextAlpha + (InDeltaTime * AnimationSpeed), 0.0f, 1.0f);\n\t\t\tif (TextAlpha >= 1.0f) {\n\t\t\t\tAnimationState = ELoadingCompleteTextAnimationState::FadeOut;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ELoadingCompleteTextAnimationState::FadeOut:\n\t\t\tTextAlpha = FMath::Clamp(TextAlpha - (InDeltaTime * AnimationSpeed), 0.0f, 1.0f);\n\t\t\tif (TextAlpha <= 0.0f) {\n\t\t\t\tAnimationState = ELoadingCompleteTextAnimationState::FadeIn;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\t// Return the animation status\n\treturn EActiveTimerReturnType::Continue;\n}", "CodeBleu_score": 42.165929921902}]}
{"instance_id": "7420af124c78", "generation_result": [{"code": "bool FRaceAwaiter::await_ready(){\n\t\tData->Lock.lock();\n\tif (Data->Index!= -1) {\n\t\tData->Lock.unlock();\n\t\treturn true;\n\t}\n\tData->Lock.unlock();\n\treturn false;\n}", "CodeBleu_score": 71.12623234489106}, {"code": "bool FRaceAwaiter::await_ready(){\n\t\tData->Lock.lock();\n\tif (Data->Index!= -1) {\n\t\tData->Lock.unlock();\n\t\treturn true;\n\t}\n\tData->Lock.unlock();\n\treturn false;\n}", "CodeBleu_score": 71.12623234489106}, {"code": "bool FRaceAwaiter::await_ready(){\n\t\tData->Lock.lock();\n\tif (Data->Index!= -1) {\n\t\tData->Lock.unlock();\n\t\treturn true;\n\t}\n\tData->Lock.unlock();\n\treturn false;\n}", "CodeBleu_score": 71.12623234489106}]}
{"instance_id": "fab9fe81573a", "generation_result": [{"code": "bool ShouldResumeFindPath(void* State, bool bCleanup){\n\t\tFFindPathSharedPtr* FindPathState = static_cast<FFindPathSharedPtr*>(State);\n\tif (FindPathState && FindPathState->IsValid()) {\n\t\tif (bCleanup) {\n\t\t\tFindPathState->NS1.Get()->NS1.Get()->AbortAsyncFindPathRequest();\n\t\t\tFindPathState->NS1.Get().Reset();\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}", "CodeBleu_score": 33.79681242561986}, {"code": "bool ShouldResumeFindPath(void* State, bool bCleanup){\n\t\t//...\n}", "CodeBleu_score": 3.366553206993538}, {"code": "bool ShouldResumeFindPath(void* State, bool bCleanup){\n\t\tif (State == nullptr) {\n\t\treturn true;\n\t}\n\n\tFFindPathSharedPtr* This = static_cast<FFindPathSharedPtr*>(State);\n\tif (This->IsValid()) {\n\t\tif (bCleanup) {\n\t\t\tThis->NS1.Get()->AbortAsyncFindPathRequest(This->QueryID);\n\t\t\tdelete This;\n\t\t}\n\t\treturn true;\n\t}\n\telse {\n\t\tdelete This;\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 42.325161685578415}]}
{"instance_id": "0656af2cb3eb", "generation_result": [{"code": "void AudioListener2D::_notification(int p_what){\n\tswitch (p_what) {\n\t\tcase NOTIFICATION_ENTER_TREE:\n\t\t\tif (!is_part_of_edited_scene()) {\n\t\t\t\tif (get_viewport()->get_audio_listener_2d()) {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase NOTIFICATION_EXIT_TREE:\n\t\t\tif (!is_part_of_edited_scene()) {\n\t\t\t\tif (current) {\n\t\t\t\t\tclear_current();\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n}", "CodeBleu_score": 51.58063535875019}, {"code": "void AudioListener2D::_notification(int p_what){\n\tswitch (p_what) {\n\t\tcase NOTIFICATION_ENTER_TREE:\n\t\t\tif (is_current()) {\n\t\t\t\tmake_current();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase NOTIFICATION_EXIT_TREE:\n\t\t\tif (is_current()) {\n\t\t\t\tclear_current();\n\t\t\t}\n\t\t\tbreak;\n\t}\n}", "CodeBleu_score": 42.37582499477563}, {"code": "void AudioListener2D::_notification(int p_what){\n\tswitch (p_what) {\n\t\tcase NOTIFICATION_ENTER_TREE: {\n\t\t\tif (is_inside_tree() &&!is_part_of_edited_scene()) {\n\t\t\t\tAudioListener2D *current_listener = get_viewport()->get_audio_listener_2d();\n\t\t\t\tif (current_listener) {\n\t\t\t\t\tmake_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t\tcase NOTIFICATION_EXIT_TREE: {\n\t\t\tif (is_inside_tree() &&!is_part_of_edited_scene()) {\n\t\t\t\tif (is_current()) {\n\t\t\t\t\tclear_current();\n\t\t\t\t}\n\t\t\t}\n\t\t} break;\n\t}\n}", "CodeBleu_score": 61.31726618362552}]}
{"instance_id": "9aadd2c91e67", "generation_result": [{"code": "void AudioDriverDummy::mix_audio(int p_frames, int32_t *p_buffer){\n\tif (!active.is_set()) {\n\t\treturn;\n\t}\n\n\tint chunk_size = 1024;\n\tint frames_left = p_frames;\n\tint32_t *buffer = p_buffer;\n\twhile (frames_left > 0) {\n\t\tint chunk_frames = MIN(frames_left, chunk_size);\n\t\tlock();\n\t\taudio_server_process(chunk_frames, buffer, false);\n\t\tunlock();\n\n\t\tframes_left -= chunk_frames;\n\t\tbuffer += chunk_frames * 2;\n\t}\n}", "CodeBleu_score": 35.816687706121485}, {"code": "void AudioDriverDummy::mix_audio(int p_frames, int32_t *p_buffer){\n\tERR_FAIL_COND(!active.is_set());\n\tERR_FAIL_COND(use_threads.is_set());\n\n\tint32_t *w = p_buffer;\n\tint frames_left = p_frames;\n\n\twhile (frames_left) {\n\t\tint frames = MIN(frames_left, 256);\n\n\t\tlock();\n\n\t\taudio_server_process(frames, w, false);\n\n\t\tunlock();\n\n\t\tw += frames * 2;\n\t\tframes_left -= frames;\n\t}\n}", "CodeBleu_score": 34.809061923356985}, {"code": "void AudioDriverDummy::mix_audio(int p_frames, int32_t *p_buffer){\n\tif (!active.is_set()) {\n\t\treturn;\n\t}\n\n\tif (AudioServer::get_singleton()->is_using_threads()) {\n\t\treturn;\n\t}\n\n\tint chunk = 256;\n\tint32_t *buffer = memnew_arr(int32_t, chunk);\n\n\tint32_t *w = p_buffer;\n\n\twhile (p_frames) {\n\t\tint frames = MIN(p_frames, chunk);\n\n\t\tlock();\n\n\t\taudio_server_process(frames, buffer, false);\n\n\t\tunlock();\n\n\t\tfor (int i = 0; i < frames; i++) {\n\t\t\tw[i] += buffer[i];\n\t\t}\n\n\t\tp_frames -= frames;\n\t\tw += frames;\n\t}\n\n\tmemdelete_arr(buffer);\n}", "CodeBleu_score": 48.37983079087042}]}
{"instance_id": "56df08c77b69", "generation_result": [{"code": "void GodotArea2D::compute_gravity(const Vector2 &p_position, Vector2 &r_gravity) const{\n\t\tif (is_gravity_point()) {\n\t\treal_t dist = get_gravity_point_unit_distance();\n\t\tif (dist == 0) {\n\t\t\tr_gravity = Vector2();\n\t\t} else {\n\t\t\tr_gravity = (p_position - get_transform().xform(get_gravity())).normalized() * get_gravity_strength() / (dist * dist);\n\t\t}\n\t} else {\n\t\tr_gravity = get_gravity_vector();\n\t}\n}", "CodeBleu_score": 37.53044629417273}, {"code": "void GodotArea2D::compute_gravity(const Vector2 &p_position, Vector2 &r_gravity) const{\n\t\tif (gravity_is_point) {\n\t\tr_gravity = p_position - gravity_point;\n\t\tr_gravity = r_gravity.normalized();\n\t\tr_gravity *= gravity_point_unit_distance / r_gravity.length_squared();\n\t} else {\n\t\tr_gravity = gravity;\n\t}\n}", "CodeBleu_score": 21.51931957096044}, {"code": "void GodotArea2D::compute_gravity(const Vector2 &p_position, Vector2 &r_gravity) const{\n\t\tif (gravity_is_point) {\n\t\treal_t dist = gravity_point.distance_squared_to(p_position);\n\t\tif (dist > CMP_EPSILON) {\n\t\t\tr_gravity = (p_position - gravity_point).normalized() * (gravity / (dist * dist));\n\t\t} else {\n\t\t\tr_gravity = Vector2();\n\t\t}\n\t} else {\n\t\tr_gravity = gravity;\n\t}\n}", "CodeBleu_score": 36.5965222844128}]}
{"instance_id": "f8c60f8d0caa", "generation_result": [{"code": "void GodotBody2D::wakeup_neighbours(){\n\t", "CodeBleu_score": 1.5183535537141142}, {"code": "void GodotBody2D::wakeup_neighbours(){\n\t\tif (mode == MODE_RIGID) {\n\t\treturn;\n\t}\n\n\tif (space_override.is_null()) {\n\t\treturn;\n\t}\n\n\tif (space_override->get_active_objects().has(get_rid())) {\n\t\treturn;\n\t}\n\n\tfor (int i = 0; i < constraints.size(); i++) {\n\t\tif (constraints[i].is_valid()) {\n\t\t\tPhysicsBody2D *b = Object::cast_to<PhysicsBody2D>(constraints[i]->get_node_a());\n\t\t\tif (b && b->get_mode() == MODE_RIGID &&!b->is_active()) {\n\t\t\t\tb->set_active(true);\n\t\t\t}\n\t\t\tb = Object::cast_to<PhysicsBody2D>(constraints[i]->get_node_b());\n\t\t\tif (b && b->get_mode() == MODE_RIGID &&!b->is_active()) {\n\t\t\t\tb->set_active(true);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 46.88949030291494}, {"code": "void GodotBody2D::wakeup_neighbours(){\n\t\tif (mode == MODE_RIGID) {\n\t\t// Check the list of constraints\n\t\tfor (int i = 0; i < constraints.size(); i++) {\n\t\t\t// Get the connected body\n\t\t\tGodotBody2D *body = constraints[i]->get_body_ptr();\n\t\t\t// If the body is in rigid mode and not active, set it to active\n\t\t\tif (body->mode == MODE_RIGID &&!body->is_active) {\n\t\t\t\tbody->set_active(true);\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 38.360000069131324}]}
{"instance_id": "0c6f6c00da9a", "generation_result": [{"code": "void GodotArea3D::_queue_monitor_update() {\n\t\tif (space) {\n\t\tif (!space->area_add_to_monitor_query_list.in_list()) {\n\t\t\tspace->area_add_to_monitor_query_list.add_to_end(&space->area_add_to_monitor_query_list);\n\t\t}\n\t}\n}", "CodeBleu_score": 35.22238457798545}, {"code": "void GodotArea3D::_queue_monitor_update() {\n\t\tif (space) {\n\t\tif (!space->area_add_to_monitor_query_list.in_list()) {\n\t\t\tspace->area_add_to_monitor_query_list.add_to_end(&space->area_add_to_monitor_query_list);\n\t\t}\n\t}\n}", "CodeBleu_score": 35.22238457798545}, {"code": "void GodotArea3D::_queue_monitor_update() {\n\t\tif (!space) {\n\t\treturn;\n\t}\n\n\tif (!space->monitor_query_list.in_list()) {\n\t\tspace->monitor_query_list.add(&space->monitor_query_list);\n\t}\n}", "CodeBleu_score": 36.516815831144264}]}
{"instance_id": "efc39df0e3a3", "generation_result": [{"code": "void GodotBody3D::_update_transform_dependent(){\n\t\t// update center of mass\n\tVector3 center_of_mass_local = Vector3();\n\tif (center_of_mass_mode == CENTER_OF_MASS_MODE_CUSTOM) {\n\t\tcenter_of_mass_local = center_of_mass;\n\t}\n\tcenter_of_mass_local = center_of_mass_local * get_transform().basis;\n\tcenter_of_mass_offset = center_of_mass_local;\n\tcenter_of_mass = get_transform().xform(center_of_mass_local);\n\n\t// update principal inertia axes\n\tBasis principal_inertia_axes = Basis();\n\tif (principal_inertia_axes_mode == PRINCIPAL_INERTIA_AXES_MODE_CUSTOM) {\n\t\tprincipal_inertia_axes = custom_principal_inertia_axes;\n\t} else {\n\t\tif (body_mode == BODY_MODE_RIGID) {\n\t\t\tprincipal_inertia_axes = get_transform().basis;\n\t\t} else {\n\t\t\tVector3 scale = get_transform().basis.get_scale();\n\t\t\tprincipal_inertia_axes = Basis(Vector3(1.0 / scale.x, 0.0, 0.0), Vector3(0.0, 1.0 / scale.y, 0.0), Vector3(0.0, 0.0, 1.0 / scale.z));\n\t\t}\n\t}\n\tprincipal_inertia_axes = principal_inertia_axes * get_transform().basis;\n\tinverse_principal_inertia_tensor = principal_inertia_axes.inverse() * inverse_inertia * principal_inertia_axes;\n}", "CodeBleu_score": 41.423559179823336}, {"code": "void GodotBody3D::_update_transform_dependent(){\n\t\t// update center of mass\n\tcenter_of_mass = get_transform().xform(center_of_mass_local);\n\n\t// update principal inertia axes\n\tprincipal_inertia_axes = get_transform().basis.xform(principal_inertia_axes_local);\n\n\t// update inverse inertia tensor\n\tinverse_inertia_tensor = principal_inertia_axes * inverse_inertia_tensor_local * principal_inertia_axes.transposed();\n}", "CodeBleu_score": 40.817525504006355}, {"code": "void GodotBody3D::_update_transform_dependent(){\n\t", "CodeBleu_score": 2.1451046329649315}]}
{"instance_id": "aebafb4094a1", "generation_result": [{"code": "void AudioDriver::audio_server_process(int p_frames, int32_t *p_buffer, bool p_update_mix_time) {\n\t\tif (p_update_mix_time) {\n\t\tupdate_mix_time(p_frames);\n\t}\n\tif (AudioServer::get_singleton()) {\n\t\tAudioServer::get_singleton()->process(p_frames, p_buffer);\n\t}\n}", "CodeBleu_score": 90.14566834641015}, {"code": "void AudioDriver::audio_server_process(int p_frames, int32_t *p_buffer, bool p_update_mix_time) {\n\t\tif (p_update_mix_time) {\n\t\tupdate_mix_time(p_frames);\n\t}\n\n\tif (AudioServer::get_singleton()) {\n\t\tAudioServer::get_singleton()->process(p_frames, p_buffer);\n\t}\n}", "CodeBleu_score": 90.14566834641015}, {"code": "void AudioDriver::audio_server_process(int p_frames, int32_t *p_buffer, bool p_update_mix_time) {\n\t\tif (p_update_mix_time) {\n\t\tupdate_mix_time(p_frames);\n\t}\n\tif (AudioServer::get_singleton()) {\n\t\tAudioServer::get_singleton()->process(p_frames, p_buffer);\n\t}\n}", "CodeBleu_score": 90.14566834641015}]}
{"instance_id": "160bb23e8010", "generation_result": [{"code": "void CameraServer::remove_feed(const Ref<CameraFeed> &p_feed){\n\tERR_FAIL_COND(p_feed.is_null());\n\n\tfor (int i = 0; i < feeds.size(); i++) {\n\t\tif (feeds[i]->get_id() == p_feed->get_id()) {\n\t\t\tprint_verbose(\"Removing feed \" + itos(p_feed->get_id()) + \" (\" + p_feed->get_name() + \") at position \" + itos(p_feed->get_position()));\n\t\t\tfeeds.remove_at(i);\n\t\t\temit_signal(\"feed_removed\", p_feed->get_id());\n\t\t\treturn;\n\t\t}\n\t}\n}", "CodeBleu_score": 61.07703211127813}, {"code": "void CameraServer::remove_feed(const Ref<CameraFeed> &p_feed){\n\tif (!p_feed.is_valid()) {\n\t\treturn;\n\t}\n\n\tfor (int i = 0; i < feeds.size(); i++) {\n\t\tif (feeds[i]->get_id() == p_feed->get_id()) {\n\t\t\tprint_verbose(\"Removing feed \" + itos(p_feed->get_id()) + \" (\" + p_feed->get_name() + \") at position \" + itos(p_feed->get_position()));\n\t\t\tfeeds.remove_at(i);\n\t\t\temit_signal(SNAME(\"feed_removed\"), p_feed->get_id());\n\t\t\treturn;\n\t\t}\n\t}\n}", "CodeBleu_score": 62.001848034735794}, {"code": "void CameraServer::remove_feed(const Ref<CameraFeed> &p_feed){\n\tint id = p_feed->get_id();\n\tint position = p_feed->get_position();\n\tString name = p_feed->get_name();\n\n\tfeeds.remove_at(position);\n\temit_signal(SNAME(\"feed_removed\"), id);\n}", "CodeBleu_score": 32.143284354838926}]}
{"instance_id": "bef3cf110c45", "generation_result": [{"code": "EaseRateAction* EaseRateAction::create(ActionInterval* action, float rate){\n\t\tEaseRateAction *ret = new EaseRateAction();\n\tif (ret && ret->initWithAction(action, rate)) {\n\t\tret->autorelease();\n\t} else {\n\t\tCC_SAFE_DELETE(ret);\n\t}\n\treturn ret;\n}", "CodeBleu_score": 43.935710689998686}, {"code": "EaseRateAction* EaseRateAction::create(ActionInterval* action, float rate){\n\t\tEaseRateAction *easeRateAction = new EaseRateAction();\n\tif (easeRateAction && easeRateAction->initWithAction(action, rate)) {\n\t\teaseRateAction->autorelease();\n\t\treturn easeRateAction;\n\t}\n\tCC_SAFE_DELETE(easeRateAction);\n\treturn NULL;\n}", "CodeBleu_score": 67.94404351007937}, {"code": "EaseRateAction* EaseRateAction::create(ActionInterval* action, float rate){\n\t\tEaseRateAction* ret = new EaseRateAction();\n\tif (ret && ret->initWithAction(action, rate)) {\n\t\tret->autorelease();\n\t} else {\n\t\tCC_SAFE_DELETE(ret);\n\t}\n\treturn ret;\n}", "CodeBleu_score": 43.843708707028064}]}
{"instance_id": "97fc6f86ad54", "generation_result": [{"code": "Node* findChildByNameRecursively(Node* node, const std::string &childName){\n\t\tif (node->getName() == childName) {\n\t\treturn node;\n\t}\n\tfor (auto child : node->getChildren()) {\n\t\tNode* foundNode = findChildByNameRecursively(child, childName);\n\t\tif (foundNode!= nullptr) {\n\t\t\treturn foundNode;\n\t\t}\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 50.129032297671486}, {"code": "Node* findChildByNameRecursively(Node* node, const std::string &childName){\n\t\tif (node->getName() == childName) {\n\t\treturn node;\n\t}\n\tfor (auto child : node->getChildren()) {\n\t\tNode* found = findChildByNameRecursively(child, childName);\n\t\tif (found) {\n\t\t\treturn found;\n\t\t}\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 49.023442867609255}, {"code": "Node* findChildByNameRecursively(Node* node, const std::string &childName){\n\t\tif (node->getName() == childName) {\n\t\treturn node;\n\t}\n\tfor (auto child : node->getChildren()) {\n\t\tNode* foundNode = findChildByNameRecursively(child, childName);\n\t\tif (foundNode) {\n\t\t\treturn foundNode;\n\t\t}\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 50.288009147694744}]}
{"instance_id": "5fcbe1fedcd2", "generation_result": [{"code": "void Animate3D::removeFromMap(){\n\t\tif (m_target) {\n\t\tauto it = s_runningAnimates.find(m_target);\n\t\tif (it!= s_runningAnimates.end()) {\n\t\t\ts_runningAnimates.erase(it);\n\t\t}\n\t\tit = s_fadeInAnimates.find(m_target);\n\t\tif (it!= s_fadeInAnimates.end()) {\n\t\t\ts_fadeInAnimates.erase(it);\n\t\t}\n\t\tit = s_fadeOutAnimates.find(m_target);\n\t\tif (it!= s_fadeOutAnimates.end()) {\n\t\t\ts_fadeOutAnimates.erase(it);\n\t\t}\n\t}\n}", "CodeBleu_score": 56.67992208085326}, {"code": "void Animate3D::removeFromMap(){\n\t\tif (m_target) {\n\t\tauto it = s_runningAnimates.find(m_target);\n\t\tif (it!= s_runningAnimates.end()) {\n\t\t\ts_runningAnimates.erase(it);\n\t\t}\n\t\tit = s_fadeInAnimates.find(m_target);\n\t\tif (it!= s_fadeInAnimates.end()) {\n\t\t\ts_fadeInAnimates.erase(it);\n\t\t}\n\t\tit = s_fadeOutAnimates.find(m_target);\n\t\tif (it!= s_fadeOutAnimates.end()) {\n\t\t\ts_fadeOutAnimates.erase(it);\n\t\t}\n\t}\n}", "CodeBleu_score": 56.67992208085326}, {"code": "void Animate3D::removeFromMap(){\n\t\tif (_target) {\n\t\tauto it = s_runningAnimates.find(_target);\n\t\tif (it!= s_runningAnimates.end() && it->second == this) {\n\t\t\ts_runningAnimates.erase(it);\n\t\t}\n\n\t\tit = s_fadeInAnimates.find(_target);\n\t\tif (it!= s_fadeInAnimates.end() && it->second == this) {\n\t\t\ts_fadeInAnimates.erase(it);\n\t\t}\n\n\t\tit = s_fadeOutAnimates.find(_target);\n\t\tif (it!= s_fadeOutAnimates.end() && it->second == this) {\n\t\t\ts_fadeOutAnimates.erase(it);\n\t\t}\n\t}\n}", "CodeBleu_score": 78.55359871873013}]}
{"instance_id": "db8d394f7bc4", "generation_result": [{"code": "Animation3D* Animation3D::create(const std::string& fileName, const std::string& animationName){\n\t\tstd::string key = fileName + animationName;\n\tAnimation3D* animation = Animation3DCache::getInstance()->getAnimation(key);\n\tif (animation == nullptr) {\n\t\tanimation = new (std::nothrow) Animation3D();\n\t\tif (animation && animation->initWithFile(fileName, animationName)) {\n\t\t\tanimation->autorelease();\n\t\t\tAnimation3DCache::getInstance()->addAnimation(animation, key);\n\t\t} else {\n\t\t\tCC_SAFE_DELETE(animation);\n\t\t}\n\t}\n\treturn animation;\n}", "CodeBleu_score": 59.2374719791679}, {"code": "Animation3D* Animation3D::create(const std::string& fileName, const std::string& animationName){\n\t\tstd::string key = fileName + animationName;\n\tAnimation3DCache* cache = Animation3DCache::getInstance();\n\tAnimation3D* animation = cache->getAnimation(key);\n\tif (animation) {\n\t\treturn animation;\n\t}\n\n\tanimation = new Animation3D();\n\tif (animation && animation->initWithFile(fileName, animationName)) {\n\t\tanimation->autorelease();\n\t\tcache->addAnimation(animation, key);\n\t\treturn animation;\n\t}\n\tCC_SAFE_DELETE(animation);\n\treturn nullptr;\n}", "CodeBleu_score": 45.98047444642116}, {"code": "Animation3D* Animation3D::create(const std::string& fileName, const std::string& animationName){\n\t\tstd::string fullPath = FileUtils::getInstance()->fullPathForFilename(fileName);\n\tstd::string key = fullPath + animationName;\n\tAnimation3D* animation = Animation3DCache::getInstance()->getAnimation(key);\n\tif (animation) {\n\t\treturn animation;\n\t}\n\tanimation = new (std::nothrow) Animation3D();\n\tif (animation && animation->initWithFile(fileName, animationName)) {\n\t\tanimation->autorelease();\n\t}\n\telse {\n\t\tCC_SAFE_DELETE(animation);\n\t}\n\treturn animation;\n}", "CodeBleu_score": 78.89852455797335}]}
{"instance_id": "cdf28d98d3ff", "generation_result": [{"code": "void Animation3DCache::removeUnusedAnimation(){\n\t\tfor (auto itor = _animations.begin(); itor!= _animations.end(); ) {\n\t\tif (itor->second->getReferenceCount() == 1) {\n\t\t\titor->second->release();\n\t\t\titor = _animations.erase(itor);\n\t\t}\n\t\telse {\n\t\t\titor++;\n\t\t}\n\t}\n}", "CodeBleu_score": 79.98254263325997}, {"code": "void Animation3DCache::removeUnusedAnimation(){\n\t\tauto itor = _animations.begin();\n\twhile (itor!= _animations.end()) {\n\t\tif (itor->second->getReferenceCount() == 1) {\n\t\t\titor->second->release();\n\t\t\t_animations.erase(itor++);\n\t\t} else {\n\t\t\t++itor;\n\t\t}\n\t}\n}", "CodeBleu_score": 62.89513221820636}, {"code": "void Animation3DCache::removeUnusedAnimation(){\n\t\tauto itor = _animations.begin();\n\twhile (itor!= _animations.end()) {\n\t\tif (itor->second->getReferenceCount() == 1) {\n\t\t\titor->second->release();\n\t\t\t_animations.erase(itor++);\n\t\t}\n\t\telse {\n\t\t\t++itor;\n\t\t}\n\t}\n}", "CodeBleu_score": 62.86024643388559}]}
{"instance_id": "de7926871eb8", "generation_result": [{"code": "BillBoard* BillBoard::createWithTexture(Texture2D *texture, Mode mode){\n\t\tBillBoard *billboard = new (std::nothrow) BillBoard();\n\tif (billboard && billboard->initWithTexture(texture, mode)) {\n\t\tbillboard->autorelease();\n\t\treturn billboard;\n\t}\n\tCC_SAFE_DELETE(billboard);\n\treturn nullptr;\n}", "CodeBleu_score": 75.81205887196573}, {"code": "BillBoard* BillBoard::createWithTexture(Texture2D *texture, Mode mode){\n\t\tBillBoard *billboard = new (std::nothrow) BillBoard();\n\tif (billboard && billboard->initWithTexture(texture, mode)) {\n\t\tbillboard->autorelease();\n\t\treturn billboard;\n\t}\n\tCC_SAFE_DELETE(billboard);\n\treturn nullptr;\n}", "CodeBleu_score": 75.81205887196573}, {"code": "BillBoard* BillBoard::createWithTexture(Texture2D *texture, Mode mode){\n\t\tBillBoard *billboard = new (std::nothrow) BillBoard();\n\tif (billboard && billboard->initWithTexture(texture, mode)) {\n\t\tbillboard->autorelease();\n\t\treturn billboard;\n\t}\n\tCC_SAFE_DELETE(billboard);\n\treturn nullptr;\n}", "CodeBleu_score": 75.81205887196573}]}
{"instance_id": "eef1c2206d68", "generation_result": [{"code": "bool Bundle3D::load(const std::string& path){\n\tth.empty() || _path == path) {\n\t\treturn false;\n\t}\n\t_path = path;\n\t// Determine file extension\n\tstd::string extension = FileUtils::getInstance()->getFileExtension(path);\n\tif (extension == \"c3t\") {\n\t\treturn loadJson(path);\n\t} else if (extension == \"c3b\") {\n\t\treturn loadBinary(path);\n\t} else {\n\t\tCCLOG(\"warning: Invalid file extension: %s\", path.c_str());\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 41.07653002460759}, {"code": "bool Bundle3D::load(const std::string& path){\n\tth.empty() || _path == path) {\n\t\treturn false;\n\t}\n\n\t_path = path;\n\t_modelPath = path;\n\tgetModelRelativePath(_modelPath);\n\n\tsize_t pos = _path.find_last_of('.');\n\tstd::string ext;\n\tif (pos!= std::string::npos) {\n\t\text = _path.substr(pos + 1);\n\t}\n\n\tif (ext == \"c3t\") {\n\t\treturn loadJson(path);\n\t} else if (ext == \"c3b\") {\n\t\treturn loadBinary(path);\n\t} else {\n\t\tCCLOG(\"warning: Invalid file extension for '%s'.\", path.c_str());\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 48.526736205879146}, {"code": "bool Bundle3D::load(const std::string& path){\n\tth.empty() || _path == path)\n\t\treturn false;\n\n\t// Determine loading method\n\tstd::string extension = FileUtils::getInstance()->getFileExtension(path);\n\tif (extension == \".c3t\")\n\t\treturn loadJson(path);\n\telse if (extension == \".c3b\")\n\t\treturn loadBinary(path);\n\telse {\n\t\tCCLOG(\"warning: Invalid file extension: %s\", path.c_str());\n\t\treturn false;\n\t}\n\n\t// Set path\n\t_path = path;\n\n\treturn true;\n}", "CodeBleu_score": 39.52866037721494}]}
{"instance_id": "37b6acea681e", "generation_result": [{"code": "bool Bundle3D::loadSkinData(const std::string& /*id*/, SkinData* skindata){\n\t//    if (!skindata) return false;\n//    skindata->resetData();\n//\n//    if (_isBinary)\n//    {\n//        return loadSkinDataBinary(skindata);\n//    }\n//    else\n//    {\n//        return loadSkinDataJson(skindata);\n//    }\n    return false;\n}", "CodeBleu_score": 9.200748226490477}, {"code": "bool Bundle3D::loadSkinData(const std::string& /*id*/, SkinData* skindata){\n\t\tif (!skindata) {\n\t\treturn false;\n\t}\n\n\tskindata->resetData();\n\n\tif (isBinary()) {\n\t\treturn loadSkinDataBinary(skindata);\n\t} else {\n\t\treturn loadSkinDataJson(skindata);\n\t}\n}", "CodeBleu_score": 80.09165680356932}, {"code": "bool Bundle3D::loadSkinData(const std::string& /*id*/, SkinData* skindata){\n\t//    if (skindata == nullptr)\n//        return false;\n//\n//    skindata->resetData();\n//\n//    if (_binary)\n//        return loadSkinDataBinary(skindata);\n//    else\n//        return loadSkinDataJson(skindata);\n    return false;\n}", "CodeBleu_score": 9.200748226490477}]}
{"instance_id": "97449825e4ef", "generation_result": [{"code": "size_t AudioDecoder::fileRead(void* ptr, size_t size, size_t nmemb, void* datasource){\n\t\tAudioDecoder* thiz = (AudioDecoder*)datasource;\n\tsize_t bytesRead = 0;\n\tsize_t bytesToRead = 0;\n\n\tif (thiz->_fileData.getSize() > 0) {\n\t\tbytesToRead = std::min(size * nmemb, thiz->_fileData.getSize() - thiz->_currentFilePos);\n\t\tmemcpy(ptr, thiz->_fileData.getBytes() + thiz->_currentFilePos, bytesToRead);\n\t\tthiz->_currentFilePos += bytesToRead;\n\t\tbytesRead = bytesToRead / size;\n\t}\n\n\treturn bytesRead;\n}", "CodeBleu_score": 56.623648370996094}, {"code": "size_t AudioDecoder::fileRead(void* ptr, size_t size, size_t nmemb, void* datasource){\n\t\tAudioDecoder* thiz = (AudioDecoder*)datasource;\n\tsize_t bytesToRead = size * nmemb;\n\tif (bytesToRead > (thiz->_fileData.getSize() - thiz->_fileData.getPosition())) {\n\t\tbytesToRead = thiz->_fileData.getSize() - thiz->_fileData.getPosition();\n\t}\n\tmemcpy(ptr, thiz->_fileData.getBytes() + thiz->_fileData.getPosition(), bytesToRead);\n\tthiz->_fileData.setPosition(thiz->_fileData.getPosition() + bytesToRead);\n\treturn bytesToRead;\n}", "CodeBleu_score": 55.18339289893937}, {"code": "size_t AudioDecoder::fileRead(void* ptr, size_t size, size_t nmemb, void* datasource){\n\t\tAudioDecoder* thiz = (AudioDecoder*)datasource;\n\tsize_t ret = 0;\n\tif (thiz->_fileData.getSize() > 0) {\n\t\tsize_t bytesToRead = std::min(size * nmemb, thiz->_fileData.getSize() - thiz->_fileData.getBytes());\n\t\tif (bytesToRead > 0) {\n\t\t\tmemcpy(ptr, thiz->_fileData.getData() + thiz->_fileData.getBytes(), bytesToRead);\n\t\t\tthiz->_fileData.addBytes(bytesToRead);\n\t\t\tret = bytesToRead;\n\t\t}\n\t}\n\treturn ret;\n}", "CodeBleu_score": 56.66896994202223}]}
{"instance_id": "0f4db164ba5d", "generation_result": [{"code": "AudioDecoder::AudioDecoder()\n        : _fileCurrPos(0), _sampleRate(-1){\n\t\tpcmBuffer = std::make_shared<std::vector<char>>();\n\tpcmBuffer->reserve(4096);\n}", "CodeBleu_score": 51.02367217290248}, {"code": "AudioDecoder::AudioDecoder()\n        : _fileCurrPos(0), _sampleRate(-1){\n\t\tpcmBuffer = std::make_shared<std::vector<char>>();\n\tpcmBuffer->reserve(4096);\n}", "CodeBleu_score": 51.02367217290248}, {"code": "AudioDecoder::AudioDecoder()\n        : _fileCurrPos(0), _sampleRate(-1){\n\t\t_pcmBuffer = std::make_shared<std::vector<char>>();\n\t_pcmBuffer->reserve(4096);\n}", "CodeBleu_score": 45.76869405574416}]}
{"instance_id": "0f88663615c6", "generation_result": [{"code": "static cocos2d::network::DownloaderAndroid* _findDownloaderAndroid(int id){\n\t\tstd::lock_guard<std::mutex> lock(sDownloaderMapMutex);\n\tauto iter = sDownloaderMap.find(id);\n\tif (iter!= sDownloaderMap.end()) {\n\t\treturn iter->second;\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 70.52241126746871}, {"code": "static cocos2d::network::DownloaderAndroid* _findDownloaderAndroid(int id){\n\t\tstd::lock_guard<std::mutex> lock(sDownloaderMapMutex);\n\tauto it = sDownloaderMap.find(id);\n\tif (it!= sDownloaderMap.end()) {\n\t\treturn it->second;\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 62.665813195247466}, {"code": "static cocos2d::network::DownloaderAndroid* _findDownloaderAndroid(int id){\n\t\tstd::lock_guard<std::mutex> lock(sDownloaderMapMutex);\n\tauto it = sDownloaderMap.find(id);\n\tif (it!= sDownloaderMap.end()) {\n\t\treturn it->second;\n\t}\n\treturn nullptr;\n}", "CodeBleu_score": 62.665813195247466}]}
{"instance_id": "a5aafaaa944c", "generation_result": [{"code": "function M.playMusic(filename, isLoop)\n\t\tif isLoop == nil then isLoop = true end\n\tcc.SimpleAudioEngine:getInstance():playMusic(filename, isLoop)", "CodeBleu_score": 42.4458974139597}, {"code": "function M.playMusic(filename, isLoop)\n\t\tisLoop = isLoop or false\n\tcc.SimpleAudioEngine:getInstance():playMusic(filename, isLoop)", "CodeBleu_score": 40.2276279505152}, {"code": "function M.playMusic(filename, isLoop)\n\t\tcc.SimpleAudioEngine:getInstance():playMusic(filename, isLoop)", "CodeBleu_score": 30.627005567523202}]}
{"instance_id": "16f2ad4bb4e8", "generation_result": [{"code": "function ccs.TriggerObj:detect()\n\t\treturn false", "CodeBleu_score": 4.655679712484486}, {"code": "function ccs.TriggerObj:detect()\n\t\treturn true", "CodeBleu_score": 6.1421887418480186}, {"code": "function ccs.TriggerObj:detect()\n\t\treturn true", "CodeBleu_score": 6.1421887418480186}]}
{"instance_id": "e73b10418cb6", "generation_result": [{"code": "function ccs.TriggerObj:removeAll()\n\t\treturn self.table.removeAll", "CodeBleu_score": 6.577754502020751}, {"code": "function ccs.TriggerObj:removeAll()\n\t\treturn self.table.removeAll", "CodeBleu_score": 6.577754502020751}, {"code": "function ccs.TriggerObj:removeAll()\n\t\treturn self.obj:removeAll()", "CodeBleu_score": 7.470650631914684}]}
{"instance_id": "d5a1333d794d", "generation_result": [{"code": "function BasicCollider:hurtEffect(target)\n\t\tlocal hurtAnimation = animationCache:getAnimation(\"hurtAnimation\")\n\tlocal hurtEffect = cc.Sprite3D:create(\"hurt.c3b\")\n\thurtEffect:setScale(0.5)\n\thurtEffect:setPosition3D(cc.V3(0, 0, 0))\n\thurtEffect:setCameraMask(cc.CameraFlag.USER1)\n\thurtEffect:runAction(cc.Sequence:create(cc.Animate:create(hurtAnimation), cc.RemoveSelf:create()))\n\ttarget:addChild(hurtEffect)", "CodeBleu_score": 64.1334884285379}, {"code": "function BasicCollider:hurtEffect(target)\n\t\tlocal hurtEffect = cc.BillBoard:create()\n\thurtEffect:setCameraMask(cc.CameraFlag.USER1)\n\thurtEffect:setScale(target:getScale())\n\thurtEffect:setPosition3D(cc.V3(0, 0, 0))\n\thurtEffect:runAction(cc.Sequence:create(cc.Animate:create(animationCache:getAnimation(\"hurtAnimation\")), cc.RemoveSelf:create()))\n\ttarget:addChild(hurtEffect)", "CodeBleu_score": 61.01982235284525}, {"code": "function BasicCollider:hurtEffect(target)\n\t\tlocal hurtAnimation = animationCache:getAnimation(\"hurtAnimation\")\n\tlocal hurtEffect = cc.BillBoard:create()\n\thurtEffect:setCameraMask(cc.CameraFlag.USER1)\n\thurtEffect:setScale(0.5)\n\thurtEffect:setPosition3D(cc.V3(0, 0, 0))\n\thurtEffect:runAction(cc.Sequence:create(cc.Animate:create(hurtAnimation), cc.RemoveSelf:create()))\n\ttarget:addChild(hurtEffect, 100, \"hurtEffect\")\n\thurtEffect:setScale(0.5)", "CodeBleu_score": 67.09767853892522}]}
{"instance_id": "f478d7e70ea6", "generation_result": [{"code": "function MageNormalAttack:onTimeOut()\n\t\tself.part1:stopSystem()\n\tself.part2:stopSystem()\n\tself:runAction(cc.Sequence:create(cc.DelayTime:create(0.5), cc.RemoveSelf:create()))\n\tlocal magic = cc.ParticleSystemQuad:create(ParticleManager:getInstance():getPlistData(\"mage_normal_attack\"))\n\tself:addChild(magic)\n\tmagic:setPositionZ(100)\n\tlocal magicf = magic:getTexture()\n\tmagic:setTextureWithRect(magicf, magicf:getRect())\n\tmagic:setRotation3D(cc.vec3(0, 180, 0))\n\tself.sp:setTextureRect(cc.rect(0, 0, 0, 0))\n\tself.sp:runAction(cc.FadeOut:create(0.5))\n\tself.sp:setScale(2)", "CodeBleu_score": 57.57002145997332}, {"code": "function MageNormalAttack:onTimeOut()\n\t\tself.part1:stopSystem()\n\tself.part2:stopSystem()\n\tself:runAction(cc.Sequence:create(cc.DelayTime:create(0.3), cc.RemoveSelf:create()))\n\tlocal magicf = ParticleManager:getInstance():getPlistData(\"mage_normal_attack\")\n\tlocal magic = cc.ParticleSystemQuad:create(magicf)\n\tself:addChild(magic)\n\tmagic:setPositionZ(100)\n\tmagic:setGlobalZOrder(10000)\n\tmagic:setTextureWithRect(cc.SpriteFrameCache:getInstance():getSpriteFrame(\"mage_normal_attack.png\"))\n\tmagic:setRotation3D(cc.vec3(90, 0, 0))\n\tmagic:setScale(0.5)\n\tself.sp:setTextureRect(magicf:getRect())\n\tself.sp:runAction(cc.Sequence:create(cc.FadeOut:create(0.2), cc.DelayTime:create(0.1), cc.CallFunc:create(function()\n\t\tself:setCameraMask(cc.CameraFlag.USER1)\n\t\tself.sp:setTextureRect(magicf:getTexture():getRect())\n\tend)))", "CodeBleu_score": 62.23416561520722}, {"code": "function MageNormalAttack:onTimeOut()\n\t\tself.part1:stopSystem()\n\tself.part2:stopSystem()\n\tself:runAction(cc.Sequence:create(cc.DelayTime:create(0.3), cc.RemoveSelf:create()))\n\tlocal magic = cc.ParticleSystemQuad:create(ParticleManager:getInstance():getPlistData(\"mage_normal_attack\"))\n\tself:addChild(magic)\n\tmagic:setGlobalZOrder(999)\n\tmagic:setPositionZ(10)\n\tlocal magicf = magic:getTexture()\n\tmagic:setTextureWithRect(magicf, magicf:getRect())\n\tmagic:setRotation3D(cc.Vertex3F(0, 0, 0))\n\tlocal sp = cc.Sprite:createWithSpriteFrameName(\"mage_normal_attack.png\")\n\tself:addChild(sp)\n\tsp:setScale(0.7)\n\tsp:runAction(cc.Sequence:create(cc.FadeOut:create(0.3), cc.DelayTime:create(0.3), cc.RemoveSelf:create()))\n\tsp:setTextureRect(magicf:getRect())\n\tsp:setScale(0.7)\n\tself:setCameraMask(cc.CameraFlag.USER1)", "CodeBleu_score": 60.05874520753866}]}
{"instance_id": "d735c4ea6358", "generation_result": [{"code": "function BattlefieldUI:heroDead(hero)\n\t\tif hero.name == \"Knight\" then\n\t\tself.KnightAngryFullSignal:setVisible(false)\n\t\tself.KnightAngryClone:setVisible(false)\n\t\tself.Knight:setGreyShader()\n\t\tself.KnightFrame:setGreyShader()\n\telseif hero.name == \"Mage\" then\n\t\tself.MageAngryFullSignal:setVisible(false)\n\t\tself.MageAngryClone:setVisible(false)\n\t\tself.Mage:setGreyShader()\n\t\tself.MageFrame:setGreyShader()\n\telseif hero.name == \"Archer\" then\n\t\tself.ArcherAngryFullSignal:setVisible(false)\n\t\tself.ArcherAngryClone:setVisible(false)\n\t\tself.Archer:setGreyShader()\n\t\tself.ArcherFrame:setGreyShader()\n\tend", "CodeBleu_score": 47.90745666117605}, {"code": "function BattlefieldUI:heroDead(hero)\n\t\tif hero.name == \"Knight\" then\n\t\tself.KnightFrame:setGreyShader()\n\t\tself.KnightAngryClone:setVisible(false)\n\t\tself.KnightAngryFullSignal:setVisible(false)\n\telseif hero.name == \"Archer\" then\n\t\tself.ArcherFrame:setGreyShader()\n\t\tself.ArcherAngryClone:setVisible(false)\n\t\tself.ArcherAngryFullSignal:setVisible(false)\n\telseif hero.name == \"Mage\" then\n\t\tself.MageFrame:setGreyShader()\n\t\tself.MageAngryClone:setVisible(false)\n\t\tself.MageAngryFullSignal:setVisible(false)\n\tend", "CodeBleu_score": 42.491839039248504}, {"code": "function BattlefieldUI:heroDead(hero)\n\t\tif hero.name == \"Knight\" then\n\t\tself.KnightAngryClone:setVisible(false)\n\t\tself.KnightAngryFullSignal:setVisible(false)\n\t\tself.Knight:setGreyShader()\n\t\tself.KnightFrame:setGreyShader()\n\telseif hero.name == \"Mage\" then\n\t\tself.MageAngryClone:setVisible(false)\n\t\tself.MageAngryFullSignal:setVisible(false)\n\t\tself.Mage:setGreyShader()\n\t\tself.MageFrame:setGreyShader()\n\telseif hero.name == \"Archer\" then\n\t\tself.ArcherAngryClone:setVisible(false)\n\t\tself.ArcherAngryFullSignal:setVisible(false)\n\t\tself.Archer:setGreyShader()\n\t\tself.ArcherFrame:setGreyShader()\n\tend", "CodeBleu_score": 47.38470650722325}]}
{"instance_id": "009f167d3ab2", "generation_result": [{"code": "local function moveCamera(dt)\n\t\tif not self.active then return end\n\tlocal camera = self.camera\n\tlocal cameraPos = camera:getPosition3D()\n\tlocal cameraTarget = cc.V3(0, 0, 0)\n\tlocal cameraLookAt = cc.V3(0, 0, 0)\n\tlocal cameraTargetPos = cc.V3(0, 0, 0)\n\tlocal cameraLookAtPos = cc.V3(0, 0, 0)\n\tlocal cameraTargetPos = cc.V3(0, 0, 0)\n\tlocal cameraLookAtPos = cc.V3(0, 0, 0)\n\tif self.specialCamera then\n\t\tcameraTargetPos = self.specialCameraTarget:getPosition3D()\n\t\tcameraLookAtPos = self.specialCameraLookAt:getPosition3D()\n\telse\n\t\tlocal heroes = self.heroes\n\t\tif heroes:getSize() > 0 then\n\t\t\tlocal focusPoint = getFocusPointOfHeros(heroes)\n\t\t\tcameraTargetPos = focusPoint\n\t\t\tcameraLookAtPos = focusPoint\n\t\tend\n\tend\n\tlocal cameraTargetPos = cc.pLerp(cameraTargetPos, cameraTargetPos, 0.05)\n\tlocal cameraLookAtPos = cc.pLerp(cameraLookAtPos, cameraLookAtPos, 0.05)\n\tcameraTarget:set(cameraTargetPos)\n\tcameraLookAt:set(cameraLookAtPos)\n\tcamera:setPosition3D(cameraTarget)\n\tcamera:lookAt(cameraLookAt, cc.V3(0, 1, 0))\n\tcamera:setPosition(camera:getPosition3D())", "CodeBleu_score": 39.94104118352596}, {"code": "local function moveCamera(dt)\n\t\tif self.m_specialCamera then\n\t\tlocal cameraPos = self.m_camera:getPosition3D()\n\t\tlocal cameraTarget = self.m_specialCamera.target\n\t\tlocal cameraLookAt = self.m_specialCamera.lookAt\n\t\tcameraPos = cc.pLerp(cameraPos, cameraTarget, dt * self.m_cameraSpeed)\n\t\tself.m_camera:setPosition3D(cameraPos)\n\t\tself.m_camera:lookAt(cameraLookAt)\n\telse\n\t\tlocal heroes = self.m_heroes\n\t\tif heroes:getSize() > 0 then\n\t\t\tlocal focusPoint = self:getFocusPointOfHeros()\n\t\t\tlocal cameraPos = self.m_camera:getPosition3D()\n\t\t\tcameraPos = cc.pLerp(cameraPos, focusPoint, dt * self.m_cameraSpeed)\n\t\t\tself.m_camera:setPosition3D(cameraPos)\n\t\t\tself.m_camera:lookAt(focusPoint)\n\t\tend\n\tend", "CodeBleu_score": 35.331083648294914}, {"code": "local function moveCamera(dt)\n\t\tif isSpecialCameraActive then\n\t\tlocal newPos = cc.pLerp(camera:getPosition3D(), specialCameraTarget, dt * 5)\n\t\tcamera:setPosition3D(newPos)\n\t\tcamera:lookAt(specialCameraLookAt)\n\telseif List.getSize(heroes) > 0 then\n\t\tlocal focusPoint = getFocusPointOfHeros()\n\t\tlocal posTable = getPosTable(focusPoint)\n\t\tlocal newPos = cc.pLerp(camera:getPosition3D(), cc.V3(posTable[1], posTable[2], posTable[3]), dt * 5)\n\t\tcamera:setPosition3D(newPos)\n\t\tcamera:lookAt(focusPoint)\n\tend", "CodeBleu_score": 31.23191610157441}]}
{"instance_id": "f7f5e7fe1dc2", "generation_result": [{"code": "local function updateParticlePos()\n\t\tlocal heroes = HeroManager.heroes\n\tfor i = 1, #heroes do\n\t\tlocal hero = heroes[i]\n\t\tif hero._effectNode then\n\t\t\thero._effectNode:setPosition(hero:getPosition())\n\t\tend\n\tend", "CodeBleu_score": 44.0308719233369}, {"code": "local function updateParticlePos()\n\t\tfor k,v in pairs(heroManager.heroes) do\n\t\tif v._effectNode then\n\t\t\tv._effectNode:setPosition(v.sprite:getPosition())\n\t\tend\n\tend", "CodeBleu_score": 22.818653040920687}, {"code": "local function updateParticlePos()\n\t\tfor i, hero in ipairs(HeroManager.heroes) do\n\t\tif hero._sprite._effectNode then\n\t\t\thero._sprite._effectNode:setPosition(cc.p(hero._sprite:getPositionX(), hero._sprite:getPositionY()))\n\t\tend\n\tend", "CodeBleu_score": 33.2033733330113}]}
{"instance_id": "77829ef7341e", "generation_result": [{"code": "function ChooseRoleScene:playAudioWhenRotate()\n\t\tlocal hero = self.layer:getChildByTag(self.selectedHeroTag)\n\tlocal heroRaceType = hero:getRaceType()\n\tif heroRaceType == 1 then\n\t\tccexp.AudioEngine:play2d(\"audio/knight.mp3\")\n\telseif heroRaceType == 2 then\n\t\tccexp.AudioEngine:play2d(\"audio/archer.mp3\")\n\telseif heroRaceType == 3 then\n\t\tccexp.AudioEngine:play2d(\"audio/mage.mp3\")\n\tend", "CodeBleu_score": 46.54490990237379}, {"code": "function ChooseRoleScene:playAudioWhenRotate()\n\t\tlocal hero = self.layer:getChildByTag(self.heroTag)\n\tlocal raceType = hero:getRaceType()\n\tif raceType == 1 then\n\t\taudio.playEffect(\"audio/archer.mp3\")\n\telseif raceType == 2 then\n\t\taudio.playEffect(\"audio/knight.mp3\")\n\telseif raceType == 3 then\n\t\taudio.playEffect(\"audio/mage.mp3\")\n\tend", "CodeBleu_score": 42.213220687167535}, {"code": "function ChooseRoleScene:playAudioWhenRotate()\n\t\tlocal hero = self.layer:getChildByTag(self.selectedHeroTag)\n\tlocal heroRaceType = hero:getRaceType()\n\tif heroRaceType == \"Knight\" then\n\t\tccexp.AudioEngine:play2d(\"audio/sfx/knight_rotate.mp3\")\n\telseif heroRaceType == \"Archer\" then\n\t\tccexp.AudioEngine:play2d(\"audio/sfx/archer_rotate.mp3\")\n\telseif heroRaceType == \"Mage\" then\n\t\tccexp.AudioEngine:play2d(\"audio/sfx/mage_rotate.mp3\")\n\tend", "CodeBleu_score": 49.533840847999016}]}
{"instance_id": "2b35fdb15a13", "generation_result": [{"code": "function GameMaster:AddHeros()\n\t\t--local currentLayer = self:getCurrentLayer()\n\tlocal currentLayer = self.currentLayer\n\tlocal HeroManager = self.HeroManager\n\tlocal Hero = require(\"Hero\")\n\tlocal knight = Hero:create(\"Knight\")\n\tlocal mage = Hero:create(\"Mage\")\n\tlocal archer = Hero:create(\"Archer\")\n\tknight:setPosition(cc.p(150, 150))\n\tmage:setPosition(cc.p(250, 150))\n\tarcher:setPosition(cc.p(350, 150))\n\tknight:idleMode()\n\tmage:idleMode()\n\tarcher:idleMode()\n\tcurrentLayer:addChild(knight)\n\tcurrentLayer:addChild(mage)\n\tcurrentLayer:addChild(archer)\n\tList.pushlast(HeroManager, knight)\n\tList.pushlast(HeroManager, mage)\n\tList.pushlast(HeroManager, archer)", "CodeBleu_score": 56.90998314574982}, {"code": "function GameMaster:AddHeros()\n\t\tlocal knight = Knight:create()\n\tknight:setPosition(cc.p(400, 300))\n\tcurrentLayer:addChild(knight)\n\tknight:idleMode()\n\tList.pushlast(HeroManager, knight)\n\n\tlocal mage = Mage:create()\n\tmage:setPosition(cc.p(300, 300))\n\tcurrentLayer:addChild(mage)\n\tmage:idleMode()\n\tList.pushlast(HeroManager, mage)\n\n\tlocal archer = Archer:create()\n\tarcher:setPosition(cc.p(500, 300))\n\tcurrentLayer:addChild(archer)\n\tarcher:idleMode()\n\tList.pushlast(HeroManager, archer)", "CodeBleu_score": 76.50587314144015}, {"code": "function GameMaster:AddHeros()\n\t\t--Create and add the Knight to the game\n\tlocal knight = Knight:create()\n\tknight:setPosition(cc.p(50, 50))\n\tcurrentLayer:addChild(knight)\n\tknight:idleMode()\n\tHeroManager:pushlast(knight)\n\n\t--Create and add the Mage to the game\n\tlocal mage = Mage:create()\n\tmage:setPosition(cc.p(100, 100))\n\tcurrentLayer:addChild(mage)\n\tmage:idleMode()\n\tHeroManager:pushlast(mage)\n\n\t--Create and add the Archer to the game\n\tlocal archer = Archer:create()\n\tarcher:setPosition(cc.p(150, 150))\n\tcurrentLayer:addChild(archer)\n\tarcher:idleMode()\n\tHeroManager:pushlast(archer)", "CodeBleu_score": 66.1819983481036}]}
{"instance_id": "cdfbc82ff3cd", "generation_result": [{"code": "function GameMaster:showBoss()\n\t\tlocal boss = Rat:new()\n\tboss:setCameraMask(self.cameraMask)\n\tself.layer:addChild(boss)\n\tboss:setPosition(self.bossSpawnPoint)\n\tboss:setFacingDirection(self.bossFacingDirection)\n\tboss:setAIEnabled(false)\n\tboss:bounceOut()\n\tboss:setAIEnabled(true)\n\tself.monsterManager:addMonster(boss)", "CodeBleu_score": 32.18238206137307}, {"code": "function GameMaster:showBoss()\n\t\tlocal boss = Rat.new()\n\tboss:setCameraMask(self.cameraMask)\n\tself.layer:addChild(boss)\n\tboss:setPosition(cc.p(self.screenSize.width/2, self.screenSize.height/2))\n\tboss:setDirection(Direction.DOWN)\n\tboss:setAIEnabled(false)\n\tboss:bounceOut()\n\tboss:setAIEnabled(true)\n\tself.monsterManager:addMonster(boss)", "CodeBleu_score": 33.03551646838182}, {"code": "function GameMaster:showBoss()\n\t\tlocal boss = Rat:new()\n\tboss:setCameraMask(self.cameraMask)\n\tself.layer:addChild(boss)\n\tboss:setPosition(self.bossSpawnPoint)\n\tboss:setFacing(self.bossFacing)\n\tboss:setAIEnabled(false)\n\tboss:bounceOut(self.bossFacing, self.bossBounceOutDuration)\n\tboss:setAIEnabled(true)\n\tself.monsterManager:addMonster(boss)", "CodeBleu_score": 34.213441846689875}]}
{"instance_id": "fa7b402853bb", "generation_result": [{"code": "function createAnimation(file, begin, finish, speed)\n\t\tlocal animate3d = cc.Animation3D:create(file, begin, finish)\n\tanimate3d:setSpeed(speed)\n\tanimate3d:retain()\n\treturn animate3d", "CodeBleu_score": 43.294206432535}, {"code": "function createAnimation(file, begin, finish, speed)\n\t\tlocal animate3d = cc.Animation3D:create(file, begin, finish)\n\tanimate3d:setSpeed(speed)\n\tanimate3d:retain()\n\treturn animate3d", "CodeBleu_score": 43.294206432535}, {"code": "function createAnimation(file, begin, finish, speed)\n\t\tlocal animate3d = cc.Animation3D:create(file)\n\tanimate3d:setSpeed(speed)\n\tanimate3d:retain()\n\treturn cc.Animate3D:create(animate3d, begin, finish)", "CodeBleu_score": 50.3389584378126}]}
{"instance_id": "0725f2413b6b", "generation_result": [{"code": "function removeAll(table)\n\t\tfor k,v in pairs(table) do \n\t\ttable[k] = nil \n\tend ", "CodeBleu_score": 37.5225396286282}, {"code": "function removeAll(table)\n\t\tfor k in pairs(table) do \n\t\ttable[k] = nil \n\tend ", "CodeBleu_score": 38.81433076479226}, {"code": "function removeAll(table)\n\t\tfor k, v in pairs(table) do\n\t\ttable[k] = nil\n\tend", "CodeBleu_score": 37.567300370186686}]}
{"instance_id": "526d10bb37bb", "generation_result": [{"code": "function delayExecute(target, func, delay)\n\t\tlocal sequence = cc.Sequence:create(cc.DelayTime:create(delay), cc.CallFunc:create(func))\n\ttarget:runAction(sequence)", "CodeBleu_score": 59.653571531857075}, {"code": "function delayExecute(target, func, delay)\n\t\tlocal action = cc.Sequence:create(cc.DelayTime:create(delay), cc.CallFunc:create(func))\n\ttarget:runAction(action)", "CodeBleu_score": 59.82560730608639}, {"code": "function delayExecute(target, func, delay)\n\t\tlocal delay = cc.DelayTime:create(delay)\n\tlocal callback = cc.CallFunc:create(func)\n\tlocal seq = cc.Sequence:create(delay, callback)\n\ttarget:runAction(seq)", "CodeBleu_score": 57.493924177593605}]}
{"instance_id": "3b277bd3d0d0", "generation_result": [{"code": "function LoadingScene:addLoadingText(layer)\n\t\tlocal label = cc.Label:createWithTTF(\"Loading...\", \"fonts/Marker Felt.ttf\", 32)\n\tlabel:setPosition(cc.p(display.cx, display.cy))\n\tlabel:setColor(cc.c4b(255, 255, 255, 255))\n\tlayer:addChild(label)\n\tself._loading[#self._loading + 1] = label", "CodeBleu_score": 23.985308010435645}, {"code": "function LoadingScene:addLoadingText(layer)\n\t\tlocal label = cc.Label:createWithTTF(\"Loading...\", \"fonts/Marker Felt.ttf\", 32)\n\tlabel:setColor(cc.c4b(255, 255, 255, 255))\n\tlabel:setPosition(cc.p(display.cx, display.cy + 100))\n\tlayer:addChild(label)\n\tself._loading[#self._loading + 1] = label", "CodeBleu_score": 24.14029182910254}, {"code": "function LoadingScene:addLoadingText(layer)\n\t\tlocal loadingLabel = cc.Label:createWithTTF(\"Loading\", \"fonts/Marker Felt.ttf\", 24)\n\tloadingLabel:setPosition(cc.p(display.cx, display.cy))\n\tloadingLabel:setColor(cc.c4b(0, 0, 0, 255))\n\tlayer:addChild(loadingLabel)\n\tself._loading[#self._loading + 1] = loadingLabel", "CodeBleu_score": 25.54404779004275}]}
{"instance_id": "68250ae97644", "generation_result": [{"code": "function MainMenuScene.create()\n\t\tlocal scene = MainMenuScene.new()\n\tscene:createLayer()\n\treturn scene", "CodeBleu_score": 48.64033735784464}, {"code": "function MainMenuScene.create()\n\t\tlocal scene = MainMenuScene.new()\n\tscene:createLayer()\n\treturn scene", "CodeBleu_score": 48.64033735784464}, {"code": "function MainMenuScene.create()\n\t\t--'scene' is an autorelease object\n\tlocal scene = MainMenuScene.new()\n\t-- 'layer' is an autorelease object\n\tlocal layer = MainMenuLayer.create()\n\t-- add layer as a child to scene\n\tscene:addChild(layer)\n\t-- return the scene\n\treturn scene", "CodeBleu_score": 68.95313344728247}]}
{"instance_id": "81470efbb6ff", "generation_result": [{"code": "local function collision(object)\n\n\t\t-- check for collision with heroes\n\tfor i, hero in ipairs(HeroManager.heroes) do\n\t\tif object:collidesWith(hero) then\n\t\t\tsolveCollision(object, hero)\n\t\tend\n\tend\n\n\t-- check for collision with monsters\n\tfor i, monster in ipairs(MonsterManager.monsters) do\n\t\tif object:collidesWith(monster) then\n\t\t\tsolveCollision(object, monster)\n\t\tend\n\tend", "CodeBleu_score": 29.496602581626952}, {"code": "local function collision(object)\n\n\t\t-- check for collision with heroes\n\tfor i, hero in ipairs(HeroManager.heroes) do\n\t\tif object:collidesWith(hero) then\n\t\t\tsolveCollision(object, hero)\n\t\tend\n\tend\n \n\t-- check for collision with monsters\n\tfor i, monster in ipairs(MonsterManager.monsters) do\n\t\tif object:collidesWith(monster) then\n\t\t\tsolveCollision(object, monster)\n\t\tend\n\tend\n ", "CodeBleu_score": 29.496602581626952}, {"code": "local function collision(object)\n\n\t\t-- Check for collisions with heroes\n\tfor i, hero in ipairs(HeroManager.heroes) do\n\t\tif object:collidesWith(hero) then\n\t\t\tsolveCollision(object, hero)\n\t\tend\n\tend\n \n\t-- Check for collisions with monsters\n\tfor i, monster in ipairs(MonsterManager.monsters) do\n\t\tif object:collidesWith(monster) then\n\t\t\tsolveCollision(object, monster)\n\t\tend\n\tend", "CodeBleu_score": 29.496602581626952}]}
{"instance_id": "f8915bebdc0e", "generation_result": [{"code": "function collisionDetect(dt)\n\t\tfor i = #HeroManager.spriteList, 1, -1 do\n\t\tlocal hero = HeroManager.spriteList[i]\n\t\tif hero.isAlive then\n\t\t\t-- Collision detection\n\t\t\tfor j = #MonsterManager.spriteList, 1, -1 do\n\t\t\t\tlocal monster = MonsterManager.spriteList[j]\n\t\t\t\tif monster.isAlive then\n\t\t\t\t\tif collision(hero, monster) then\n\t\t\t\t\t\thero.isAlive = false\n\t\t\t\t\t\tmonster.isAlive = false\n\t\t\t\t\t\t-- Play sound effect\n\t\t\t\t\t\taudio.play(audio.loadSound(\"explosion.wav\"), {channel = 2})\n\t\t\t\t\t\t-- Add score\n\t\t\t\t\t\tscore = score + 10\n\t\t\t\t\t\t-- Add explosion effect\n\t\t\t\t\t\tlocal explosion = display.newImage(\"explosion.png\")\n\t\t\t\t\t\texplosion:scale(0.5, 0.5)\n\t\t\t\t\t\texplosion:translate(hero.x, hero.y)\n\t\t\t\t\t\tphysics.addBody(explosion, \"static\", {radius = 10})\n\t\t\t\t\t\texplosion:addEventListener(\"collision\", function(event)\n\t\t\t\t\t\t\tdisplay.remove(event.other)\n\t\t\t\t\t\t\tevent.other = nil\n\t\t\t\t\t\tend)\n\t\t\t\t\t\tphysics.start()\n\t\t\t\t\t\t-- Remove sprites from their lists\n\t\t\t\t\t\ttable.remove(HeroManager.spriteList, i)\n\t\t\t\t\t\ttable.remove(MonsterManager.spriteList, j)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\t-- Boundary check\n\t\t\tif isOutOfBound(hero) then\n\t\t\t\thero.isAlive = false\n\t\t\t\ttable.remove(HeroManager.spriteList, i)\n\t\t\tend\n\t\tend\n\tend\n\tfor i = #MonsterManager.spriteList, 1, -1 do\n\t\tlocal monster = MonsterManager.spriteList[i]\n\t\tif monster.isAlive then\n\t\t\t-- Boundary check\n\t\t\tif isOutOfBound(monster) then\n\t\t\t\tmonster.isAlive = false\n\t\t\t\ttable.remove(MonsterManager.spriteList, i)\n\t\t\tend\n\t\tend\n\tend", "CodeBleu_score": 41.22262646647468}, {"code": "function collisionDetect(dt)\n\t\tfor i = #HeroManager, 1, -1 do\n\t\tlocal sprite = HeroManager[i]\n\t\tif sprite.isAlive then\n\t\t\tif sprite:collision(MonsterManager) then\n\t\t\t\tsprite:isAlive(false)\n\t\t\tend\n\t\t\tif sprite:isOutOfBound() then\n\t\t\t\tsprite:isAlive(false)\n\t\t\tend\n\t\telse\n\t\t\tsprite:remove()\n\t\t\ttable.remove(HeroManager, i)\n\t\tend\n\tend\n\n\tfor i = #MonsterManager, 1, -1 do\n\t\tlocal sprite = MonsterManager[i]\n\t\tif sprite.isAlive then\n\t\t\tif sprite:collision(HeroManager) then\n\t\t\t\tsprite:isAlive(false)\n\t\t\tend\n\t\t\tif sprite:isOutOfBound() then\n\t\t\t\tsprite:isAlive(false)\n\t\t\tend\n\t\telse\n\t\t\tsprite:remove()\n\t\t\ttable.remove(MonsterManager, i)\n\t\tend\n\tend", "CodeBleu_score": 46.71896958067611}, {"code": "function collisionDetect(dt)\n\t\tfor i = #HeroManager.spriteList, 1, -1 do\n\t\tlocal sprite = HeroManager.spriteList[i]\n\t\tif sprite.isAlive then\n\t\t\tif sprite._effectNode then\n\t\t\t\tsprite._effectNode:setPosition(sprite:getPosition())\n\t\t\tend\n\t\t\tif sprite.collision then\n\t\t\t\tsprite:collision(MonsterManager.spriteList)\n\t\t\tend\n\t\t\tif sprite.isOutOfBound then\n\t\t\t\tif sprite:isOutOfBound() then\n\t\t\t\t\tsprite:die()\n\t\t\t\tend\n\t\t\tend\n\t\t\tif not sprite.isAlive then\n\t\t\t\ttable.remove(HeroManager.spriteList, i)\n\t\t\t\tif sprite._effectNode then\n\t\t\t\t\tsprite._effectNode:removeFromParent()\n\t\t\t\tend\n\t\t\t\tsprite:removeFromParent()\n\t\t\tend\n\t\tend\n\tend\n\tfor i = #MonsterManager.spriteList, 1, -1 do\n\t\tlocal sprite = MonsterManager.spriteList[i]\n\t\tif sprite.isAlive then\n\t\t\tif sprite._effectNode then\n\t\t\t\tsprite._effectNode:setPosition(sprite:getPosition())\n\t\t\tend\n\t\t\tif sprite.collision then\n\t\t\t\tsprite:collision(HeroManager.spriteList)\n\t\t\tend\n\t\t\tif sprite.isOutOfBound then\n\t\t\t\tif sprite:isOutOfBound() then\n\t\t\t\t\tsprite:die()\n\t\t\t\tend\n\t\t\tend\n\t\t\tif not sprite.isAlive then\n\t\t\t\ttable.remove(MonsterManager.spriteList, i)\n\t\t\t\tif sprite._effectNode then\n\t\t\t\t\tsprite._effectNode:removeFromParent()\n\t\t\t\tend\n\t\t\t\tsprite:removeFromParent()\n\t\t\tend\n\t\tend\n\tend", "CodeBleu_score": 41.34684319423741}]}
{"instance_id": "fc081bb122f5", "generation_result": [{"code": "function Actor:specialAttack()\n\t\tlocal attackCollider = BasicCollider.create(self.position.x, self.position.y, self.facingDirection, self.specialAttackProperties)\n\tself:specialAttackSoundEffects()", "CodeBleu_score": 55.332296369835476}, {"code": "function Actor:specialAttack()\n\t\tlocal x, y = self:getPosition()\n\tlocal direction = self:getDirection()\n\tlocal attackCollider = BasicCollider.create(x, y, direction, self.specialAttackProperties)\n\tself:playSpecialAttackSoundEffects()", "CodeBleu_score": 38.397824088212005}, {"code": "function Actor:specialAttack()\n\t\tself:createSpecialAttackCollider()\n\tself:specialAttackSoundEffects()", "CodeBleu_score": 33.04682965866304}]}
{"instance_id": "bfc98809aacb", "generation_result": [{"code": "function Slime:angryFace(trueFalse)\n\t\tif trueFalse == true then\n\t\tif self._angry == false then\n\t\t\tself._angry = true\n\t\t\tself._sprite3d:setTexture(self._angryTexture)\n\t\tend\n\telse\n\t\tif self._angry == true then\n\t\t\tself._angry = false\n\t\t\tself._sprite3d:setTexture(self._normalTexture)\n\t\tend\n\tend", "CodeBleu_score": 42.78491322035094}, {"code": "function Slime:angryFace(trueFalse)\n\t\tif trueFalse ~= self._angry then\n\t\tself._angry = trueFalse\n\t\tif trueFalse then\n\t\t\tself._sprite3d:setTexture(\"slime_angry.png\")\n\t\telse\n\t\t\tself._sprite3d:setTexture(\"slime.png\")\n\t\tend\n\tend", "CodeBleu_score": 64.53659870045368}, {"code": "function Slime:angryFace(trueFalse)\n\t\tif trueFalse == true then\n\t\tif self._isAngry ~= true then\n\t\t\tself._isAngry = true\n\t\t\tself._sprite3d:setTexture(\"angrySlime.png\")\n\t\tend\n\telse\n\t\tif self._isAngry ~= false then\n\t\t\tself._isAngry = false\n\t\t\tself._sprite3d:setTexture(\"slime.png\")\n\t\tend\n\tend", "CodeBleu_score": 48.95796053168877}]}
{"instance_id": "546a0b8fb77b", "generation_result": [{"code": "override fun getCharPixmap(char: Char): Pixmap{\n\t\tval width = ceil(paint.measureText(char.toString())).toInt()\n\tval height = ceil(paint.fontMetrics.height).toInt()\n\tval bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)\n\tval canvas = Canvas(bitmap)\n\tcanvas.drawText(char.toString(), 0f, paint.fontMetrics.leading + paint.fontMetrics.ascent + 1f, paint)\n\n\tval pixmap = Pixmap(width, height, Pixmap.Format.RGBA8888)\n\tval data = IntArray(width * height)\n\tbitmap.getPixels(data, 0, width, 0, 0, width, height) // faster than bitmap[x, y]\n\tfor (x in 0 until width) {\n\t\tfor (y in 0 until height) {\n\t\t\tpixmap.drawPixel(x, y, Integer.rotateLeft(data[x + (y * width)], 8))\n\t\t}\n\t}\n\tbitmap.recycle()\n\treturn pixmap\n}", "CodeBleu_score": 70.15900962789878}, {"code": "override fun getCharPixmap(char: Char): Pixmap{\n\t\tval width = ceil(paint.measureText(char.toString())).toInt()\n\tval height = ceil(paint.fontMetrics.height).toInt()\n\tval bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)\n\tval canvas = Canvas(bitmap)\n\tcanvas.drawText(char.toString(), 0f, paint.fontMetrics.leading + paint.fontMetrics.ascent + 1f, paint)\n\tval pixmap = Pixmap(width, height, Pixmap.Format.RGBA8888)\n\tval data = IntArray(width * height)\n\tbitmap.getPixels(data, 0, width, 0, 0, width, height) // faster than bitmap[x, y]\n\tfor (x in 0 until width) {\n\t\tfor (y in 0 until height) {\n\t\t\tpixmap.drawPixel(x, y, Integer.rotateLeft(data[x + (y * width)], 8))\n\t\t}\n\t}\n\tbitmap.recycle()\n\treturn pixmap\n}", "CodeBleu_score": 70.15900962789878}, {"code": "override fun getCharPixmap(char: Char): Pixmap{\n\t\tval text = char.toString()\n\tval width = ceil(paint.measureText(text)).toInt()\n\tval height = ceil(paint.fontMetrics.height).toInt()\n\tval bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)\n\tval canvas = Canvas(bitmap)\n\tcanvas.drawText(text, 0f, paint.fontMetrics.leading + paint.fontMetrics.ascent + 1f, paint)\n\tval pixmap = Pixmap(width, height, Pixmap.Format.RGBA8888)\n\tval data = IntArray(width * height)\n\tbitmap.getPixels(data, 0, width, 0, 0, width, height) // faster than bitmap[x, y]\n\tfor (x in 0 until width) {\n\t\tfor (y in 0 until height) {\n\t\t\tpixmap.drawPixel(x, y, Integer.rotateLeft(data[x + (y * width)], 8))\n\t\t}\n\t}\n\tbitmap.recycle()\n\treturn pixmap\n}", "CodeBleu_score": 75.16320494928014}]}
{"instance_id": "9c1ce2567ce1", "generation_result": [{"code": " override fun saveGame(\n        data: String,\n        suggestedLocation: String,\n        onSaved: (location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t\n/**\n * The val suggestedUri variable parses the suggested location URI using the Uri.parse() method.\n */\n        // When we loaded, we returned a \"content://\" URI as file location.\n        val suggestedUri = Uri.parse(suggestedLocation)\n\n/**\n * The val fileName variable determines the filename by calling the getFilename() method with suggestedUri and suggestedLocation as arguments.\n */\n        val fileName = getFilename(suggestedUri, suggestedLocation)\n\n/**\n * The val onFileChosen variable defines a callback function that takes a Uri as an argument. It attempts to open an output stream using the contentResolver.openOutputStream() method with the uri, \"rwt\" mode, and \"rwt\" mode. If successful, it writes data to the stream using the writer() method and invokes the onSaved callback with the uri.toString() as the location. If an exception is thrown, it invokes the onError callback with the exception. Finally, it closes the stream.\n */\n        val onFileChosen = { uri: Uri ->\n            var stream: OutputStream? = null\n            try {\n                stream = contentResolver.openOutputStream(uri, \"rwt\")\n                stream!!.writer().use { it.write(data) }\n                onSaved(uri.toString())\n            } catch (ex: Exception) {\n                onError(ex)\n            } finally {\n                stream?.close()\n            }\n        }\n\n/**\n * The requests[requestCode] line creates a new Request object with onFileChosen and onError as arguments and assigns it to the requests map using requestCode as the key.\n */\n        requests[requestCode] = Request(onFileChosen, onError)\n\n/**\n * The openSaveFileChooser(fileName, suggestedUri, requestCode) line calls the openSaveFileChooser() method with fileName, suggestedUri, and requestCode as arguments.\n */\n        openSaveFileChooser(fileName, suggestedUri, requestCode)\n        requestCode += 1\n    }", "CodeBleu_score": 96.20868685899666}, {"code": " override fun saveGame(\n        data: String,\n        suggestedLocation: String,\n        onSaved: (location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t", "CodeBleu_score": 13.92206817903272}, {"code": " override fun saveGame(\n        data: String,\n        suggestedLocation: String,\n        onSaved: (location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t", "CodeBleu_score": 13.92206817903272}]}
{"instance_id": "ea556fe12030", "generation_result": [{"code": "override fun loadGame(\n        onLoaded: (data: String, location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t\n}", "CodeBleu_score": 19.45536830701614}, {"code": "override fun loadGame(\n        onLoaded: (data: String, location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t", "CodeBleu_score": 19.371400902165885}, {"code": "override fun loadGame(\n        onLoaded: (data: String, location: String) -> Unit,\n        onError: (ex: Exception) -> Unit\n    ){\n\t", "CodeBleu_score": 19.371400902165885}]}
{"instance_id": "813990d9bb4d", "generation_result": [{"code": "private fun openSaveFileChooser(fileName: String, uri: Uri, requestCode: Int){\n\t\tval intent = Intent(Intent.ACTION_CREATE_DOCUMENT)\n\tintent.type = \"application/json\"\n\tintent.putExtra(Intent.EXTRA_TITLE, fileName)\n\tif (uri.scheme == \"content\")\n\t\tintent.putExtra(DocumentsContract.EXTRA_INITIAL_URI, uri)\n\tactivity.startActivityForResult(intent, requestCode)\n}", "CodeBleu_score": 96.80076040995861}, {"code": "private fun openSaveFileChooser(fileName: String, uri: Uri, requestCode: Int){\n\tval intent = Intent(Intent.ACTION_CREATE_DOCUMENT)\nintent.type = \"application/json\"\nintent.putExtra(Intent.EXTRA_TITLE, fileName)\nif (uri.scheme == \"content\")\nintent.putExtra(DocumentsContract.EXTRA_INITIAL_URI, uri)\nactivity.startActivityForResult(intent, requestCode)\n}", "CodeBleu_score": 96.75518805287992}, {"code": "private fun openSaveFileChooser(fileName: String, uri: Uri, requestCode: Int){\n\tval intent = Intent(Intent.ACTION_CREATE_DOCUMENT)\nintent.type = \"application/json\"\nintent.putExtra(Intent.EXTRA_TITLE, fileName)\nif (uri.scheme == \"content\")\nintent.putExtra(DocumentsContract.EXTRA_INITIAL_URI, uri)\nactivity.startActivityForResult(intent, requestCode)\n}", "CodeBleu_score": 96.75518805287992}]}
{"instance_id": "a423b39ba6fe", "generation_result": [{"code": "fun createNotificationChannelInfo(appContext: Context){\n\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) return\nval name = appContext.resources.getString(R.string.Notify_ChannelInfo_Short)\nval descriptionText = appContext.resources.getString(R.string.Notify_ChannelInfo_Long)\nval importance = NotificationManager.IMPORTANCE_HIGH\nval mChannel = NotificationChannel(NOTIFICATION_CHANNEL_ID_INFO, name, importance)\nmChannel.description = descriptionText\nmChannel.setShowBadge(true)\nmChannel.lockscreenVisibility = NotificationCompat.VISIBILITY_PUBLIC\n\nval notificationManager = appContext.getSystemService(AndroidApplication.NOTIFICATION_SERVICE) as NotificationManager\nnotificationManager.createNotificationChannel(mChannel)\n}", "CodeBleu_score": 97.99820659160187}, {"code": "fun createNotificationChannelInfo(appContext: Context){\n\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) return\nval name = appContext.resources.getString(R.string.Notify_ChannelInfo_Short)\nval descriptionText = appContext.resources.getString(R.string.Notify_ChannelInfo_Long)\nval importance = NotificationManager.IMPORTANCE_HIGH\nval mChannel = NotificationChannel(NOTIFICATION_CHANNEL_ID_INFO, name, importance)\nmChannel.description = descriptionText\nmChannel.setShowBadge(true)\nmChannel.lockscreenVisibility = NotificationCompat.VISIBILITY_PUBLIC\n\nval notificationManager = appContext.getSystemService(AndroidApplication.NOTIFICATION_SERVICE) as NotificationManager\nnotificationManager.createNotificationChannel(mChannel)\n}", "CodeBleu_score": 97.99820659160187}, {"code": "fun createNotificationChannelInfo(appContext: Context){\n\t\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) return\n\tval name = appContext.resources.getString(R.string.Notify_ChannelInfo_Short)\n\tval descriptionText = appContext.resources.getString(R.string.Notify_ChannelInfo_Long)\n\tval importance = NotificationManager.IMPORTANCE_HIGH\n\tval mChannel = NotificationChannel(NOTIFICATION_CHANNEL_ID_INFO, name, importance)\n\tmChannel.description = descriptionText\n\tmChannel.setShowBadge(true)\n\tmChannel.lockscreenVisibility = NotificationCompat.VISIBILITY_PUBLIC\n\n\tval notificationManager = appContext.getSystemService(AndroidApplication.NOTIFICATION_SERVICE) as NotificationManager\n\tnotificationManager.createNotificationChannel(mChannel)\n}", "CodeBleu_score": 98.01503316791309}]}
{"instance_id": "4f3e7f77a567", "generation_result": [{"code": "fun packImages(workingPath: String){\n\t\n}", "CodeBleu_score": 1.537888354575527}, {"code": "fun packImages(workingPath: String){\n\t// Scan for Image folders and build one atlas each\nval defaultSettings = getDefaultSettings()\n\n// pack for main assets\npackImagesPerMod(workingPath, \"$workingPath/assets/\", defaultSettings)\n\n// pack for mods\nval modDirectory = File(\"mods\")\nif (!modDirectory.exists())\nreturn\nfor (mod in modDirectory.listFiles()!!) {\nif (mod.isHidden)\ncontinue\ntry {\npackImagesPerMod(mod.path, mod.path, defaultSettings)\n} catch (ex: Throwable) {\nex.printStackTrace()\n}\n}\n}", "CodeBleu_score": 92.85146461048272}, {"code": "fun packImages(workingPath: String){\n\t\tval defaultSettings = getDefaultSettings()\n\n\t// Scan for Image folders and build one atlas each\n\tpackImagesPerMod(workingPath, \"$workingPath/assets/\", defaultSettings)\n\n\t// pack for mods\n\tval modDirectory = File(\"mods\")\n\tif (!modDirectory.exists())\n\t\treturn\n\tfor (mod in modDirectory.listFiles()!!) {\n\t\tif (mod.isHidden)\n\t\t\tcontinue\n\t\ttry {\n\t\t\tpackImagesPerMod(mod.path, mod.path, defaultSettings)\n\t\t} catch (ex: Throwable) {\n\t\t\tex.printStackTrace()\n\t\t}\n\t}\n}", "CodeBleu_score": 93.13749024180771}]}
{"instance_id": "206dbb3c21eb", "generation_result": [{"code": "suspend fun reloadWorldscreen(){\n\t   val newGameInfo = gameInfo?: throw IllegalStateException(\"No game to reload\")\n//    val newAutoPlay = AutoPlay(settings.autoPlay)\n//    val newPlayerToViewAs = newGameInfo.getPlayerToViewAs()\n//    val newWorldScreen = WorldScreen(newGameInfo, newAutoPlay, newPlayerToViewAs)\n//    worldScreen = newWorldScreen\n//    screenStack.addLast(newWorldScreen)\n//    setScreen(newWorldScreen)\n}", "CodeBleu_score": 25.024970860081826}, {"code": "suspend fun reloadWorldscreen(){\n\t   if (worldScreen!= null) {\n//        worldScreen!!.dispose()\n//        worldScreen = null\n//    }\n//\n//    if (gameInfo == null) return\n//\n//    val autoPlay = AutoPlay(settings.autoPlay)\n//    val playerToViewAs = gameInfo!!.getPlayerToViewAs()\n//    worldScreen = WorldScreen(gameInfo!!, autoPlay, playerToViewAs)\n//    setScreen(worldScreen!!)\n}", "CodeBleu_score": 6.164045374709918}, {"code": "suspend fun reloadWorldscreen(){\n\t   worldScreen?.reload()\n    worldScreen?.dispose()\n    worldScreen = null\n    loadGame(gameInfo!!, settings.autoPlay, true)\n}", "CodeBleu_score": 26.525778054318728}]}
{"instance_id": "2d8fdcb5ad6f", "generation_result": [{"code": "fun goToMainMenu(): MainMenuScreen{\n\t", "CodeBleu_score": 1.6510664568825009}, {"code": "fun goToMainMenu(): MainMenuScreen{\n\t", "CodeBleu_score": 1.6510664568825009}, {"code": "fun goToMainMenu(): MainMenuScreen{\n\t", "CodeBleu_score": 1.6510664568825009}]}
{"instance_id": "df60142d384c", "generation_result": [{"code": " protected fun setWindowedMode(settings: GameSettings): Boolean{\n\t // Calling AWT after Gdx is fully initialized seems icky, but seems to have no side effects\n // Found no equivalent in Gdx - available _desktop_ surface without taskbars etc\n // *for the primary monitor* - no saving window sizes that span over several monitors\n val maximumWindowBounds = getMaximumWindowBounds()\n\n // Make sure an inappropriate saved size doesn't make the window unusable\n val (width, height) = settings.windowState.coerceIn(maximumWindowBounds)\n\n // Kludge - see also DesktopLauncher - without, moving the window might revert to the size stored in config\n (Lwjgl3Application::class.java).getDeclaredField(\"config\").run {\n isAccessible = true\n get(Gdx.app) as Lwjgl3ApplicationConfiguration\n }.setWindowedMode(width, height)\n\n Gdx.graphics.setWindowedMode(width, height)\n\n return width == maximumWindowBounds.width && height == maximumWindowBounds.height\n }", "CodeBleu_score": 97.83517440925759}, {"code": " protected fun setWindowedMode(settings: GameSettings): Boolean{\n\t// Calling AWT after Gdx is fully initialized seems icky, but seems to have no side effects\n// Found no equivalent in Gdx - available _desktop_ surface without taskbars etc\n// *for the primary monitor* - no saving window sizes that span over several monitors\nval maximumWindowBounds = getMaximumWindowBounds()\n\n// Make sure an inappropriate saved size doesn't make the window unusable\nval (width, height) = settings.windowState.coerceIn(maximumWindowBounds)\n\n// Kludge - see also DesktopLauncher - without, moving the window might revert to the size stored in config\n(Lwjgl3Application::class.java).getDeclaredField(\"config\").run {\nisAccessible = true\nget(Gdx.app) as Lwjgl3ApplicationConfiguration\n}.setWindowedMode(width, height)\n\nGdx.graphics.setWindowedMode(width, height)\n\nreturn width == maximumWindowBounds.width && height == maximumWindowBounds.height\n}", "CodeBleu_score": 97.07133990723558}, {"code": " protected fun setWindowedMode(settings: GameSettings): Boolean{\n\t // Calling AWT after Gdx is fully initialized seems icky, but seems to have no side effects\n // Found no equivalent in Gdx - available _desktop_ surface without taskbars etc\n // *for the primary monitor* - no saving window sizes that span over several monitors\n val maximumWindowBounds = getMaximumWindowBounds()\n\n // Make sure an inappropriate saved size doesn't make the window unusable\n val (width, height) = settings.windowState.coerceIn(maximumWindowBounds)\n\n // Kludge - see also DesktopLauncher - without, moving the window might revert to the size stored in config\n (Lwjgl3Application::class.java).getDeclaredField(\"config\").run {\n isAccessible = true\n get(Gdx.app) as Lwjgl3ApplicationConfiguration\n }.setWindowedMode(width, height)\n\n Gdx.graphics.setWindowedMode(width, height)\n\n return width == maximumWindowBounds.width && height == maximumWindowBounds.height\n }", "CodeBleu_score": 97.83517440925759}]}
{"instance_id": "a8b17234c4e5", "generation_result": [{"code": "private fun getLinuxDistro(): String{\n\tRelease: Map<String, String> = try {\n\t\tFileHandle(\"/etc/os-release\")\n\t\t\t.readString()\n\t\t\t.split('\n')\n\t\t\t.map { it.split('=') }\n\t\t\t.filter { it.size == 2 }\n\t\t\t.associate { it[0] to it[1].removeSuffix(\"\\\"\").removePrefix(\"\\\"\") }\n\t} catch (_: Throwable) {\n\t\tmapOf()\n\t}\n\tif (\"NAME\"!in osRelease) return \"\"\n\treturn osRelease[\"PRETTY_NAME\"]?: \"${osRelease[\"NAME\"]} ${osRelease[\"VERSION\"]}\"\n}", "CodeBleu_score": 80.78791084698142}, {"code": "private fun getLinuxDistro(): String{\n\tRelease: Map<String,String> = try {\n\t\tFileHandle(\"/etc/os-release\")\n\t\t\t.readString()\n\t\t\t.split('\n')\n\t\t\t.map { it.split('=') }\n\t\t\t.filter { it.size == 2 }\n\t\t\t.associate { it[0] to it[1].removeSuffix(\"\\\"\").removePrefix(\"\\\"\") }\n\t} catch (_: Throwable) { mapOf() }\n\tif (\"NAME\"!in osRelease) return \"\"\n\treturn osRelease[\"PRETTY_NAME\"]?: \"${osRelease[\"NAME\"]} ${osRelease[\"VERSION\"]}\"\n}", "CodeBleu_score": 81.65665497767039}, {"code": "private fun getLinuxDistro(): String{\n\tRelease: Map<String,String> = try {\n\t\tFileHandle(\"/etc/os-release\")\n\t\t\t.readString()\n\t\t\t.split('\n')\n\t\t\t.map { it.split('=') }\n\t\t\t.filter { it.size == 2 }\n\t\t\t.associate { it[0] to it[1].removeSuffix(\"\\\"\").removePrefix(\"\\\"\") }\n\t} catch (_: Throwable) { mapOf() }\n\tif (\"NAME\"!in osRelease) return \"\"\n\treturn osRelease[\"PRETTY_NAME\"]?: \"${osRelease[\"NAME\"]} ${osRelease[\"VERSION\"]}\"\n}", "CodeBleu_score": 81.65665497767039}]}
{"instance_id": "36a1d2e56540", "generation_result": [{"code": "private fun flashWindow(){\n\t\ttry {\n\t\tval window = JFrame.getWindows()[0]\n\t\tif (window.isFocused) {\n\t\t\treturn\n\t\t}\n\t\tif (System.getProperty(\"os.name\").toLowerCase().contains(\"windows\")) {\n\t\t\tval w = window.peer\n\t\t\tif (w is WindowPeer) {\n\t\t\t\tw.flashWindow()\n\t\t\t}\n\t\t} else {\n\t\t\twindow.toFront()\n\t\t}\n\t} catch (e: Throwable) {\n\t\tlog.error(\"Error while attempting to flash window\", e)\n\t}\n}", "CodeBleu_score": 36.76493634791102}, {"code": "private fun flashWindow(){\n\t\ttry {\n\t\tval window = SwingUtilities.getWindowAncestor(this)\n\t\tif (window!= null &&!window.isFocused) {\n\t\t\tif (window.isShowing) {\n\t\t\t\tif (window.isIcon) {\n\t\t\t\t\twindow.isIcon = false\n\t\t\t\t} else {\n\t\t\t\t\twindow.isIcon = true\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twindow.isVisible = true\n\t\t\t}\n\t\t}\n\t} catch (e: Exception) {\n\t\tlogger.error(\"Unable to flash window\", e)\n\t}\n}", "CodeBleu_score": 43.82293253476007}, {"code": "private fun flashWindow(){\n\t\ttry {\n\t\t// Use platform-specific APIs to flash the window\n\t\twhen (Platform.os) {\n\t\t\tPlatform.OS.WINDOWS -> {\n\t\t\t\t// Windows API to flash the window\n\t\t\t\t//...\n\t\t\t}\n\t\t\tPlatform.OS.MACOS -> {\n\t\t\t\t// macOS API to flash the window\n\t\t\t\t//...\n\t\t\t}\n\t\t\tPlatform.OS.LINUX -> {\n\t\t\t\t// Linux API to flash the window\n\t\t\t\t//...\n\t\t\t}\n\t\t}\n\t} catch (e: Exception) {\n\t\t// Log the error and continue execution\n\t\tlogger.error(\"Error flashing window: ${e.message}\")\n\t}\n\n\t// Fallback method if the primary method is unavailable\n\tif (!windowFlashed) {\n\t\t//...\n\t}\n}", "CodeBleu_score": 27.51970373614657}]}
{"instance_id": "8e3c7096415a", "generation_result": [{"code": "public void onFullBackup(FullBackupDataOutput data){\n\t", "CodeBleu_score": 1.3013707544357997}, {"code": "public void onFullBackup(FullBackupDataOutput data){\n\t", "CodeBleu_score": 1.3013707544357997}, {"code": "public void onFullBackup(FullBackupDataOutput data){\n\t// Backup shared preferences\n\tSharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);\n\tSharedPreferences.Editor editor = sharedPreferences.edit();\n\teditor.putString(\"backup\", \"backup\");\n\teditor.apply();\n\n\t// Backup game data files\n\tFile gameDataDir = getGameDataDir();\n\tif (gameDataDir!= null) {\n\t\tFile[] gameDataFiles = gameDataDir.listFiles();\n\t\tif (gameDataFiles!= null) {\n\t\t\tfor (File gameDataFile : gameDataFiles) {\n\t\t\t\ttry {\n\t\t\t\t\tFileInputStream fileInputStream = new FileInputStream(gameDataFile);\n\t\t\t\t\tbyte[] fileBytes = new byte[(int) gameDataFile.length()];\n\t\t\t\t\tfileInputStream.read(fileBytes);\n\t\t\t\t\tfileInputStream.close();\n\t\t\t\t\tdata.writeEntityHeader(gameDataFile.getName(), fileBytes.length);\n\t\t\t\t\tdata.writeEntityData(fileBytes, 0, fileBytes.length);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "CodeBleu_score": 21.701053131467088}]}
{"instance_id": "583999724a15", "generation_result": [{"code": "public boolean connectedToUnmeteredNetwork(){\n\t\tConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n\t\tNetwork network = cm.getActiveNetwork();\n\t\tNetworkCapabilities nc = cm.getNetworkCapabilities(network);\n\t\treturn nc.hasTransport(NetworkCapabilities.TRANSPORT_WIFI) || nc.hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR) || nc.hasTransport(NetworkCapabilities.TRANSPORT_ETHERNET) || nc.hasTransport(NetworkCapabilities.TRANSPORT_BLUETOOTH);\n\t} else {\n\t\tNetworkInfo networkInfo = cm.getActiveNetworkInfo();\n\t\treturn networkInfo!= null && networkInfo.isConnected() && networkInfo.getType()!= ConnectivityManager.TYPE_MOBILE;\n\t}\n}", "CodeBleu_score": 52.644900692264095}, {"code": "public boolean connectedToUnmeteredNetwork(){\n\t\tConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\tif (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n\t\tNetwork network = connectivityManager.getActiveNetwork();\n\t\tNetworkCapabilities networkCapabilities = connectivityManager.getNetworkCapabilities(network);\n\t\treturn networkCapabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_NOT_METERED);\n\t} else {\n\t\tNetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\t\treturn networkInfo!= null && networkInfo.isConnected() && (networkInfo.getType() == ConnectivityManager.TYPE_WIFI || networkInfo.getType() == ConnectivityManager.TYPE_WIMAX || networkInfo.getType() == ConnectivityManager.TYPE_BLUETOOTH || networkInfo.getType() == ConnectivityManager.TYPE_ETHERNET);\n\t}\n}", "CodeBleu_score": 53.408774742036734}, {"code": "public boolean connectedToUnmeteredNetwork(){\n\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n\t\tConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\t\tNetwork network = connectivityManager.getActiveNetwork();\n\t\tNetworkCapabilities networkCapabilities = connectivityManager.getNetworkCapabilities(network);\n\t\treturn networkCapabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_NOT_METERED);\n\t} else {\n\t\tConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\t\tNetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\t\treturn networkInfo!= null && networkInfo.isConnected() && (networkInfo.getType() == ConnectivityManager.TYPE_WIFI || networkInfo.getType() == ConnectivityManager.TYPE_WIMAX || networkInfo.getType() == ConnectivityManager.TYPE_BLUETOOTH || networkInfo.getType() == ConnectivityManager.TYPE_ETHERNET);\n\t}\n}", "CodeBleu_score": 51.554344075713466}]}
{"instance_id": "f8bd6cd4826b", "generation_result": [{"code": "protected boolean affectHero( Hero hero ){\n\t\tif ( hero.isAlive() ) {\n\t\thero.play( \"magic/heal\" );\n\t\thero.cure();\n\t\thero.uncurseEquipped();\n\t\thero.satisfy();\n\t\thero.restoreHealth();\n\t\thero.showStatusWithIcon( \"magic/heal\", \"You feel better.\" );\n\t\thero.interrupt();\n\t\tLog.info( \"You feel better.\" );\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 16.130674257525886}, {"code": "protected boolean affectHero( Hero hero ){\n\t\tif (hero.isAlive()) {\n\t\thero.interrupt();\n\t\thero.play( \"cure.wav\" );\n\t\thero.cure();\n\t\thero.uncurseEquipped();\n\t\thero.satisfy();\n\t\thero.restoreHealth();\n\t\thero.showStatusWithIcon( \"Cured\" );\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 14.10955507730226}, {"code": "protected boolean affectHero( Hero hero ){\n\t\tif( hero.isAlive() ) {\n\t\thero.play( \"You feel better!\" );\n\t\thero.cure();\n\t\thero.uncurseEquipped();\n\t\thero.satisfy();\n\t\thero.restoreHealth();\n\t\thero.showStatusWithIcon( \"images/potion.png\" );\n\t\thero.interrupt();\n\t\tlog( \"You drink a \" + name + \".\" );\n\t\treturn true;\n\t}\n\treturn false;\n}", "CodeBleu_score": 17.934072305017928}]}
{"instance_id": "3a94f2e84c83", "generation_result": [{"code": "protected Item affectItem( Item item, int pos ){\n\t\tif (item instanceof Waterskin) {\n\t\tif (item.isFull()) {\n\t\t\treturn null;\n\t\t}\n\t\titem.fill();\n\t\treturn item;\n\t}\n\tif (item instanceof Ankh) {\n\t\tif (item.isBlessed()) {\n\t\t\treturn null;\n\t\t}\n\t\titem.bless();\n\t\treturn item;\n\t}\n\tif (item.isCursed()) {\n\t\treturn null;\n\t}\n\tif (item.isUncurseable()) {\n\t\titem.uncurse();\n\t\treturn item;\n\t}\n\treturn null;\n}", "CodeBleu_score": 29.809019856127605}, {"code": "protected Item affectItem( Item item, int pos ){\n\t\tif ( item == null ) {\n\t\treturn null;\n\t}\n\n\tif ( item.isWaterskin() &&!item.isFull() ) {\n\t\titem.fill();\n\t\tif ( pos == -1 ) {\n\t\t\t// no position given, so we assume it's in the inventory\n\t\t\t// and we don't want to change the cursor\n\t\t\treturn null;\n\t\t}\n\t\titem.setCursor( pos );\n\t\treturn item;\n\t}\n\n\tif ( item.isAnkh() &&!item.isBlessed() ) {\n\t\titem.bless();\n\t\tif ( pos == -1 ) {\n\t\t\t// no position given, so we assume it's in the inventory\n\t\t\t// and we don't want to change the cursor\n\t\t\treturn null;\n\t\t}\n\t\titem.setCursor( pos );\n\t\treturn item;\n\t}\n\n\tif ( item.isCursed() &&!item.isUncursable() ) {\n\t\titem.uncurse();\n\t\tif ( pos == -1 ) {\n\t\t\t// no position given, so we assume it's in the inventory\n\t\t\t// and we don't want to change the cursor\n\t\t\treturn null;\n\t\t}\n\t\titem.setCursor( pos );\n\t\treturn item;\n\t}\n\n\treturn null;\n}", "CodeBleu_score": 35.40269530856032}, {"code": "protected Item affectItem( Item item, int pos ){\n\t\tif ( item instanceof Waterskin &&!item.isFull() ) {\n\t\titem.fill();\n\t\treturn item;\n\t} else if ( item instanceof Ankh &&!item.isBlessed() ) {\n\t\titem.bless();\n\t\treturn item;\n\t} else if ( item instanceof CursedItem ) {\n\t\titem.uncurse();\n\t\treturn item;\n\t}\n\treturn null;\n}", "CodeBleu_score": 22.675608126557744}]}
{"instance_id": "d322228d1a3e", "generation_result": [{"code": "public static void affectAndLoot(Mob enemy, Hero hero, Class<?extends AllyBuff> buffCls){\n\t\t// Apply the buff to the enemy\n\tenemy.addBuff(buffCls);\n\n\t// Check if the enemy was aligned as an enemy\n\tif (enemy.getAlignment() == Alignment.ENEMY) {\n\t\t// Roll for loot\n\t\trollToDropLoot(enemy, hero);\n\n\t\t// Update kill statistics\n\t\thero.updateKillStatistics(enemy);\n\n\t\t// Process ascension challenges\n\t\tAscension.processEnemyKill(enemy);\n\t}\n\n\t// Grant experience to the hero based on level comparison\n\thero.earnExp(enemy.getLevel());\n\n\t// Buff the hero with additional energy if they are a Monk subclass\n\tif (hero instanceof Monk) {\n\t\thero.gainEnergy(2);\n\t}\n}", "CodeBleu_score": 20.179707608297363}, {"code": "public static void affectAndLoot(Mob enemy, Hero hero, Class<?extends AllyBuff> buffCls){\n\t\tenemy.affect(buffCls);\n\tif (enemy.isEnemy()) {\n\t\trollToDropLoot(enemy, hero);\n\t\thero.showStatusWithIcon(enemy.getMonsterName(), \"images/enemies/\" + enemy.getMonsterName() + \".png\");\n\t\thero.earnExp(enemy.getMonsterLevel());\n\t}\n\tif (hero instanceof Monk) {\n\t\thero.gainEnergy(1);\n\t}\n}", "CodeBleu_score": 16.48202927649262}, {"code": "public static void affectAndLoot(Mob enemy, Hero hero, Class<?extends AllyBuff> buffCls){\n\t", "CodeBleu_score": 4.537406718231222}]}
{"instance_id": "9ee21c0149f3", "generation_result": [{"code": "public static void processEnemyKill(Char enemy){\n\t\tif (ascensionChallengeActive()) {\n\t\tif (enemy.getOriginal()!= null) {\n\t\t\tenemy = enemy.getOriginal();\n\t\t}\n\t\tif (enemy.isBoosted()) {\n\t\t\treturn;\n\t\t}\n\t\tif (enemy.isBoss()) {\n\t\t\tif (ascensionChallenge.stacks > 0) {\n\t\t\t\tascensionChallenge.stacks--;\n\t\t\t\tif (ascensionChallenge.stacks < 10) {\n\t\t\t\t\tLog.log(ascensionChallenge.logMessage + \" \" + ascensionChallenge.stacks + \" stacks left!\");\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (enemy.isElite()) {\n\t\t\tif (ascensionChallenge.stacks > 0) {\n\t\t\t\tascensionChallenge.stacks -= 2;\n\t\t\t\tif (ascensionChallenge.stacks < 10) {\n\t\t\t\t\tLog.log(ascensionChallenge.logMessage + \" \" + ascensionChallenge.stacks + \" stacks left!\");\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (ascensionChallenge.stacks > 0) {\n\t\t\t\tascensionChallenge.stacks--;\n\t\t\t\tif (ascensionChallenge.stacks < 10) {\n\t\t\t\t\tLog.log(ascensionChallenge.logMessage + \" \" + ascensionChallenge.stacks + \" stacks left!\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ascensionChallenge.stacks == 0) {\n\t\t\tascensionChallenge.remove();\n\t\t}\n\t\tif (hero.getLevel() == hero.getMaxLvl()) {\n\t\t\thero.earnExp(ascensionChallenge.expReward);\n\t\t}\n\t\trefreshHero();\n\t}\n}", "CodeBleu_score": 19.942802107799825}, {"code": "public static void processEnemyKill(Char enemy){\n\t", "CodeBleu_score": 0.5739817495090933}, {"code": "public static void processEnemyKill(Char enemy){\n\t\tif (hero.hasActiveBuff(AscensionChallenge.class)) {\n\t\tif (enemy.getOriginal()!= null) {\n\t\t\tenemy.set(enemy.getOriginal());\n\t\t}\n\t\tif (enemy.isBoosted()) {\n\t\t\treturn;\n\t\t}\n\t\tint stacks = hero.getBuff(AscensionChallenge.class).getStacks();\n\t\tif (enemy.isBoss()) {\n\t\t\tstacks -= 10;\n\t\t} else if (enemy.isElite()) {\n\t\t\tstacks -= 5;\n\t\t} else {\n\t\t\tstacks -= 1;\n\t\t}\n\t\thero.getBuff(AscensionChallenge.class).setStacks(stacks);\n\t\tif (stacks <= 0) {\n\t\t\thero.removeBuff(AscensionChallenge.class);\n\t\t\tLog.log(\"Weakening: Ascension Challenge stacks depleted.\");\n\t\t} else if (stacks <= 50) {\n\t\t\tLog.log(\"Weakening: Ascension Challenge stacks reduced to \" + stacks + \".\");\n\t\t}\n\t\tif (hero.getLevel() == hero.getMaxLevel()) {\n\t\t\thero.earnExp(50);\n\t\t}\n\t\thero.refreshHero();\n\t}\n}", "CodeBleu_score": 21.064575001461787}]}
{"instance_id": "4fc9c3c1fcce", "generation_result": [{"code": "public static int AscensionCorruptResist(Mob m){\n\t", "CodeBleu_score": 1.4729374628756662}, {"code": "public static int AscensionCorruptResist(Mob m){\n\t", "CodeBleu_score": 1.4729374628756662}, {"code": "public static int AscensionCorruptResist(Mob m){\n\t\tif (m.getBuffedSkillLevel(BuffStats.ascensionCorruptionResist) > 0) {\n\t\treturn m.getEXP();\n\t}\n\tif (m.isTransformed()) {\n\t\tm = m.getOriginal();\n\t}\n\tif (m.isMonster()) {\n\t\tMonster mob = (Monster) m;\n\t\tif (mob.getId() == 1295) {\n\t\t\treturn 10;\n\t\t}\n\t\tif (mob.getId() == 1296) {\n\t\t\treturn 7;\n\t\t}\n\t\tif (mob.getId() == 1310 || mob.getId() == 1311) {\n\t\t\treturn 13;\n\t\t}\n\t}\n\treturn m.getEXP();\n}", "CodeBleu_score": 22.83515716196534}]}
{"instance_id": "bdc8df5952c7", "generation_result": [{"code": "public void hit( Char enemy ){\n\t\tif (enemy.isAlive() &&!enemy.hasBuff(Buff.Corruption)){\n\t\tcount++;\n\t\tcomboTime = System.currentTimeMillis();\n\t\tif (enemy.isDead()){\n\t\t\tcomboTime += 2000;\n\t\t}\n\t\telse if (enemy.hasBuff(Buff.Corruption)){\n\t\t\tcomboTime += 2000;\n\t\t}\n\t\telse if (talentPoints[Talent.Cleave] > 0){\n\t\t\tcomboTime += talentPoints[Talent.Cleave] * 1000;\n\t\t}\n\t\tif (count >= 2){\n\t\t\ttriggerAction(Action.Combo);\n\t\t}\n\t\tvalidateMasteryCombo();\n\t\tlog.info(name + \" has hit \" + enemy.getName() + \" for \" + damage + \" damage. Combo count: \" + count);\n\t\trefreshHero();\n\t}\n}", "CodeBleu_score": 28.785395716977707}, {"code": "public void hit( Char enemy ){\n\t", "CodeBleu_score": 2.676826499359523}, {"code": "public void hit( Char enemy ){\n\t", "CodeBleu_score": 2.676826499359523}]}
{"instance_id": "abf7c664b4dd", "generation_result": [{"code": "public int capacity(){\n\tnt cap = super.capacity();\n\tfor (Item item : items) {\n\t\tif (item instanceof Bag) {\n\t\t\tcap++;\n\t\t}\n\t}\n\tif (Dungeon.hero!= null && Dungeon.hero.belongings.secondWep!= null) {\n\t\tcap--;\n\t}\n\treturn cap;\n}", "CodeBleu_score": 78.4373679809383}, {"code": "public int capacity(){\n\tnt capacity = super.capacity();\n\tfor (Item item : items) {\n\t\tif (item instanceof Bag) {\n\t\t\tcapacity++;\n\t\t}\n\t}\n\tif (Dungeon.hero!= null && Dungeon.hero.belongings.secondWep!= null) {\n\t\t// Secondary weapons still occupy an inv. slot\n\t\tcapacity--;\n\t}\n\treturn capacity;\n}", "CodeBleu_score": 71.50637607805757}, {"code": "public int capacity(){\n\tnt cap = super.capacity();\n\tfor (Item item : items) {\n\t\tif (item instanceof Bag) {\n\t\t\tcap++;\n\t\t}\n\t}\n\tif (Dungeon.hero!= null && Dungeon.hero.belongings.secondWep!= null) {\n\t\t//secondary weapons still occupy an inv. slot\n\t\tcap--;\n\t}\n\treturn cap;\n}", "CodeBleu_score": 78.4373679809383}]}
{"instance_id": "b97e41e092d2", "generation_result": [{"code": "public void updateHT( boolean boostHP ){\n\t\t// Calculate the new HT value\n\tdouble newHT = HTBase * HTMultiplier * (1 + (HTBoost / 100));\n\tif (RingOfMight) newHT *= 1.1;\n\tif (ElixirOfMight) newHT *= 1.2;\n\t// If boostHP is true, increase current health (HP) to match the new HT value\n\tif (boostHP) {\n\t\tHP = newHT;\n\t}\n\t// Ensure HP does not exceed the new HT value\n\tHP = Math.min(HP, newHT);\n\t// Update the HT value\n\tHT = newHT;\n}", "CodeBleu_score": 22.420033381884124}, {"code": "public void updateHT( boolean boostHP ){\n\t\tint oldHT = HT;\n\tHT = (int) Math.round( ( level * 100 + 500 ) * HTMultiplier );\n\tif ( buff.contains( \"RingOfMight\" ) ) {\n\t\tHT = (int) Math.round( HT * 1.2 );\n\t}\n\tif ( buff.contains( \"ElixirOfMight\" ) ) {\n\t\tHT = (int) Math.round( HT * 1.5 );\n\t}\n\tif ( boostHP ) {\n\t\tHP = Math.min( HP + HT - oldHT, HT );\n\t}\n}", "CodeBleu_score": 27.593966810557358}, {"code": "public void updateHT( boolean boostHP ){\n\t\t// calculate new HT\n\tint newHT = (int) ( ( level * level * 0.04 + level * 0.5 ) * HTMultiplier );\n\n\t// apply buffs\n\tif ( buff.contains( \"RingOfMight\" ) ) {\n\t\tnewHT = (int) ( newHT * 1.1 );\n\t}\n\tif ( buff.contains( \"ElixirOfMight\" ) ) {\n\t\tnewHT = (int) ( newHT * 1.2 );\n\t}\n\n\t// update HT and HP\n\tHT = newHT;\n\tif ( boostHP ) {\n\t\tHP = Math.min( HP, HT );\n\t}\n}", "CodeBleu_score": 21.842658071340715}]}
{"instance_id": "b72bd91544e7", "generation_result": [{"code": "public boolean shoot( Char enemy, MissileWeapon wep ){\n\t\tif ( enemy.getAlignment() == Alignment.ENEMY || enemy.getAlignment() == Alignment.NEUTRAL_MIMIC ) {\n\t\tif ( attack( enemy, wep ) ) {\n\t\t\tif ( this instanceof Gladiator || this instanceof Duelist ) {\n\t\t\t\tif ( getThrownWeapon() == null ) {\n\t\t\t\t\tsetThrownWeapon( wep );\n\t\t\t\t} else {\n\t\t\t\t\tclearThrownWeapon();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}", "CodeBleu_score": 19.300795744660963}, {"code": "public boolean shoot( Char enemy, MissileWeapon wep ){\n\t\tif( enemy.isEnemy( this ) || enemy.isNeutralMimic( this ) ) {\n\t\tboolean hit = attack( enemy, wep );\n\t\tif( hit ) {\n\t\t\tsetThrownWeapon( wep );\n\t\t\tif( isGladiator() ) {\n\t\t\t\tif( getThrownWeapon().isPiercing() ) {\n\t\t\t\t\taddBuff( new Buff( this, \"Piercing Combo\", 2, 1 ) );\n\t\t\t\t} else {\n\t\t\t\t\taddBuff( new Buff( this, \"Non-Piercing Combo\", 2, 1 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( isDuelist() ) {\n\t\t\t\tif( getThrownWeapon().isPiercing() ) {\n\t\t\t\t\taddBuff( new Buff( this, \"Piercing Combo\", 2, 1 ) );\n\t\t\t\t} else {\n\t\t\t\t\taddBuff( new Buff( this, \"Non-Piercing Combo\", 2, 1 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclearThrownWeapon();\n\t\treturn hit;\n\t}\n\treturn false;\n}", "CodeBleu_score": 18.450570035967175}, {"code": "public boolean shoot( Char enemy, MissileWeapon wep ){\n\t\tif (!enemy.isEnemy( this ) &&!enemy.isNeutralMimic() ) {\n\t\treturn false;\n\t}\n\tif (!attack( enemy, wep ) ) {\n\t\treturn false;\n\t}\n\tsetThrownWeapon( wep );\n\tif (!wep.isThrown() ) {\n\t\tclearThrownWeapon();\n\t}\n\tif ( isGladiator() || isDuelist() ) {\n\t\tif ( wep.isThrown() ) {\n\t\t\tif ( wep.isHit() ) {\n\t\t\t\tif ( isGladiator() ) {\n\t\t\t\t\tsetGladiatorCombo( getGladiatorCombo() + 1 );\n\t\t\t\t} else {\n\t\t\t\t\tsetDuelistCombo( getDuelistCombo() + 1 );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isGladiator() ) {\n\t\t\t\t\tsetGladiatorCombo( 0 );\n\t\t\t\t} else {\n\t\t\t\t\tsetDuelistCombo( 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}", "CodeBleu_score": 14.808267101706221}]}
{"instance_id": "f265b39b6677", "generation_result": [{"code": "public int attackSkill( Char target ){\n\t\tint attackSkill = 0;\n\tint accuracyFactor = 0;\n\tint buff = 0;\n\tint attackingWeapon = 0;\n\tint accuracyMultiplier = 0;\n\tint fightingUnarmed = 0;\n\tint adjacent = 0;\n\n\tif (attackingWeapon == 0) {\n\t\taccuracyFactor = 1;\n\t} else {\n\t\taccuracyFactor = 2;\n\t}\n\n\tif (adjacent == 0) {\n\t\taccuracyFactor = accuracyFactor * 2;\n\t} else {\n\t\taccuracyFactor = accuracyFactor * 1;\n\t}\n\n\tif (fightingUnarmed == 0) {\n\t\taccuracyFactor = accuracyFactor * 2;\n\t} else {\n\t\taccuracyFactor = accuracyFactor * 1;\n\t}\n\n\tif (buff == 0) {\n\t\taccuracyFactor = accuracyFactor * 2;\n\t} else {\n\t\taccuracyFactor = accuracyFactor * 1;\n\t}\n\n\tattackSkill = attackSkill * accuracyFactor;\n\n\treturn attackSkill;\n}", "CodeBleu_score": 16.96876415464542}, {"code": "public int attackSkill( Char target ){\n\t\tint baseAttackSkill = 0;\n\tint accuracyFactor = 0;\n\tint buff = 0;\n\tint attackingWeapon = 0;\n\tint accuracyMultiplier = 0;\n\tint fightingUnarmed = 0;\n\tint adjacent = 0;\n\n\t// Calculate the base attack skill\n\tbaseAttackSkill = pointsInTalent(Talent.BARE_FIST_FIGHTING) + pointsInTalent(Talent.MELEE_WEAPONS);\n\n\t// Consider weapon type and accuracy factors\n\tif (attackingWeapon == WeaponType.UNARMED) {\n\t\tbaseAttackSkill += fightingUnarmed;\n\t} else if (attackingWeapon == WeaponType.EDGED) {\n\t\taccuracyFactor += 10;\n\t} else if (attackingWeapon == WeaponType.BLUNT) {\n\t\taccuracyFactor += 5;\n\t} else if (attackingWeapon == WeaponType.POLEARM) {\n\t\taccuracyFactor += 15;\n\t} else if (attackingWeapon == WeaponType.RANGED) {\n\t\taccuracyFactor += 20;\n\t}\n\n\t// Adjust accuracy based on proximity to target\n\tif (adjacent) {\n\t\taccuracyFactor += 20;\n\t} else {\n\t\taccuracyFactor -= 20;\n\t}\n\n\t// Apply buffs to accuracy\n\tif (buff == Buff.ACCURACY) {\n\t\taccuracyMultiplier += 10;\n\t} else if (buff == Buff.ACCURACY_2) {\n\t\taccuracyMultiplier += 20;\n\t}\n\n\t// Calculate the final attack skill value\n\tint attackSkill = baseAttackSkill + accuracyFactor + accuracyMultiplier;\n\n\treturn attackSkill;\n}", "CodeBleu_score": 23.991356986503714}, {"code": "public int attackSkill( Char target ){\n\t\tint attackSkill = 0;\n\tif (attackingWeapon == null) return 0;\n\tattackSkill = attackingWeapon.attackSkill();\n\tattackSkill *= accuracyMultiplier;\n\tif (fightingUnarmed) attackSkill *= 2;\n\tif (adjacent) attackSkill *= 2;\n\tattackSkill += buff.attackSkill();\n\treturn attackSkill;\n}", "CodeBleu_score": 15.398947037033107}]}
{"instance_id": "9e50c198348d", "generation_result": [{"code": "inline fun PerformanceCounter.profile(\n  repeats: Int = if (time.mean != null) time.mean.windowSize else 10,\n  printResults: Boolean = true,\n  operation: () -> Unit,\n){\n\t", "CodeBleu_score": 34.553107085871765}, {"code": "inline fun PerformanceCounter.profile(\n  repeats: Int = if (time.mean != null) time.mean.windowSize else 10,\n  printResults: Boolean = true,\n  operation: () -> Unit,\n){\n\t", "CodeBleu_score": 34.553107085871765}, {"code": "inline fun PerformanceCounter.profile(\n  repeats: Int = if (time.mean != null) time.mean.windowSize else 10,\n  printResults: Boolean = true,\n  operation: () -> Unit,\n){\n\t", "CodeBleu_score": 34.553107085871765}]}
{"instance_id": "5f6e11998a1f", "generation_result": [{"code": "inline fun <E> behaviorTree(\n  rootTask: Task<E>? = null,\n  blackboard: E? = null,\n  init: (@GdxAiDsl BehaviorTree<E>).() -> Unit = {},\n): BehaviorTree<E>{\n\t\n}", "CodeBleu_score": 29.962864407193813}, {"code": "inline fun <E> behaviorTree(\n  rootTask: Task<E>? = null,\n  blackboard: E? = null,\n  init: (@GdxAiDsl BehaviorTree<E>).() -> Unit = {},\n): BehaviorTree<E>{\n\t\n}", "CodeBleu_score": 29.962864407193813}, {"code": "inline fun <E> behaviorTree(\n  rootTask: Task<E>? = null,\n  blackboard: E? = null,\n  init: (@GdxAiDsl BehaviorTree<E>).() -> Unit = {},\n): BehaviorTree<E>{\n\t}", "CodeBleu_score": 29.962864407193813}]}
{"instance_id": "cdda12e45fb9", "generation_result": [{"code": "onPointerOver (){\n\t\tthis.scene.city.map.selectedCell.x = this.x;\n\tthis.scene.city.map.selectedCell.y = this.y;\n\n\tthis.tiles.sprites.forEach((sprite) => {\n\t\tif (sprite.visible) sprite.setTint(0xaa0000);\n\t});\n\n\tthis.related.forEach((cell) => {\n\t\tcell.tiles.sprites.forEach((sprite) => {\n\t\t\tif (sprite.visible) sprite.setTint(0xaa0000);\n\t\t});\n\t});\n\n\tif (this.tiles.heightmap) {\n\t\tif (this.tiles.heightmap.polygon.top){\n\t\t\tthis.tiles.heightmap.polygon.top.fillAlpha = 0.5;\n\t\t}\n\t\tif (this.tiles.heightmap.polygon.slope){\n\t\t\tthis.tiles.heightmap.polygon.slope.fillAlpha = 0.5;\n\t\t}\n\t}\n}", "CodeBleu_score": 96.16936989131777}, {"code": "onPointerOver (){\n\tthis.scene.city.map.selectedCell.x = this.x;\nthis.scene.city.map.selectedCell.y = this.y;\n\nthis.tiles.sprites.forEach((sprite) => {\n  if (sprite.visible) sprite.setTint(0xaa0000);\n});\n\nthis.related.forEach((cell) => {\n  cell.tiles.sprites.forEach((sprite) => {\n    if (sprite.visible) sprite.setTint(0xaa0000);\n  });\n});\n\nif (this.tiles.heightmap) {\n  if (this.tiles.heightmap.polygon.top){\n    this.tiles.heightmap.polygon.top.fillAlpha = 0.5;\n  }\n  if (this.tiles.heightmap.polygon.slope){\n    this.tiles.heightmap.polygon.slope.fillAlpha = 0.5;\n  }\n}\n}", "CodeBleu_score": 97.86477945955943}, {"code": "onPointerOver (){\n\tthis.scene.city.map.selectedCell.x = this.x;\nthis.scene.city.map.selectedCell.y = this.y;\n\nthis.tiles.sprites.forEach((sprite) => {\nif (sprite.visible) sprite.setTint(0xaa0000);\n});\n\nthis.related.forEach((cell) => {\ncell.tiles.sprites.forEach((sprite) => {\nif (sprite.visible) sprite.setTint(0xaa0000);\n});\n});\n\nif (this.tiles.heightmap) {\nif (this.tiles.heightmap.polygon.top){\nthis.tiles.heightmap.polygon.top.fillAlpha = 0.5;\n}\nif (this.tiles.heightmap.polygon.slope){\nthis.tiles.heightmap.polygon.slope.fillAlpha = 0.5;\n}\n}\n}", "CodeBleu_score": 96.06928284575314}]}
{"instance_id": "850931ce3401", "generation_result": [{"code": "getTrafficDensity (){\n\tif (this.current < this.lightThreshold)\n  return null;\n\nif (this.current >= this.lightThreshold && this.current < this.heavyThreshold)\n  return 'light';\n\nif (this.current >= this.heavyThreshold)\n  return 'heavy';\n}", "CodeBleu_score": 72.97158507806814}, {"code": "getTrafficDensity (){\n\tif (this.current < this.lightThreshold)\n  return null;\n\nif (this.current >= this.lightThreshold && this.current < this.heavyThreshold)\n  return 'light';\n\nif (this.current >= this.heavyThreshold)\n  return 'heavy';\n}", "CodeBleu_score": 72.97158507806814}, {"code": "getTrafficDensity (){\n\t\n}", "CodeBleu_score": 2.7840380783372893}]}
{"instance_id": "5958478bf873", "generation_result": [{"code": "restart: function (){\n\t\tthis._frameData.reset\n\tthis._frameData.getFrame\n\tthis.onStart.dispatch\n\tthis._parent.setFrame\n}", "CodeBleu_score": 11.172764315116114}, {"code": "restart: function (){\n\t\tthis.stop();\n\tthis.play();\n}", "CodeBleu_score": 8.334249803471534}, {"code": "restart: function (){\n\t\tthis.reset();\n\tthis.start();\n}", "CodeBleu_score": 8.33425232698659}]}
{"instance_id": "d2441e586d58", "generation_result": [{"code": "flash: function (color, duration, force, alpha){\n\t\tif (this.fx.flashing ||!this.fx.drawRect) {\n\t\treturn false;\n\t}\n\tif (typeof color === \"undefined\") {\n\t\tcolor = 0xFFFFFF;\n\t}\n\tif (typeof duration === \"undefined\") {\n\t\tduration = 1000;\n\t}\n\tif (typeof alpha === \"undefined\") {\n\t\talpha = 1;\n\t}\n\tif (typeof force === \"undefined\") {\n\t\tforce = false;\n\t}\n\tthis.fx.clear();\n\tthis.fx.beginFill(color, alpha);\n\tthis.fx.drawRect(0, 0, this.width, this.height);\n\tthis.fx.endFill();\n\tthis.fx.flashing = true;\n\tthis.fx.flashDuration = duration;\n\tthis.fx.flashForce = force;\n\treturn true;\n}", "CodeBleu_score": 63.53831367382412}, {"code": "flash: function (color, duration, force, alpha){\n\t\tif (this.fx.flashing &&!force) return false;\n\tif (color === undefined) color = 0xFFFFFF;\n\tif (duration === undefined) duration = 1000;\n\tif (alpha === undefined) alpha = 0.5;\n\tthis.fx.clear();\n\tthis.fx.beginFill(color, alpha);\n\tthis.fx.drawRect(-this.width / 2, -this.height / 2, this.width, this.height);\n\tthis.fx.endFill();\n\tthis.fx.flashing = true;\n\tthis.fx.flashDuration = duration;\n\tthis.fx.flashColor = color;\n\tthis.fx.flashAlpha = alpha;\n\treturn true;\n}", "CodeBleu_score": 57.30968819091397}, {"code": "flash: function (color, duration, force, alpha){\n\t\tif (this.fx.flashing &&!force) {\n\t\treturn false;\n\t}\n\tthis.fx.clear();\n\tif (typeof color === 'undefined') {\n\t\tcolor = 0xffffff;\n\t}\n\tif (typeof alpha === 'undefined') {\n\t\talpha = 1;\n\t}\n\tif (typeof duration === 'undefined') {\n\t\tduration = 1000;\n\t}\n\tthis.fx.beginFill(color, alpha);\n\tthis.fx.drawRect(0, 0, this.width, this.height);\n\tthis.fx.endFill();\n\tthis.fx.flashing = true;\n\tthis.fx.flashTimer = this.game.time.create(false);\n\tthis.fx.flashTimer.add(duration, function () {\n\t\tthis.fx.clear();\n\t\tthis.fx.flashing = false;\n\t}, this);\n\tthis.fx.flashTimer.start();\n\treturn true;\n}", "CodeBleu_score": 59.04955707086754}]}
{"instance_id": "48b26381d975", "generation_result": [{"code": "createFluidLayer: function (children, addToWorld){\n\t\tvar layer = new FlexLayer(this.game, this.game.width, this.game.height, this.game.physics.p2, this.game.physics.p2.gravity.y, this.game.physics.p2.gravity.x, this.game.physics.p2.restitution, this.game.physics.p2.friction, this.game.physics.p2.applyDamping, this.game.physics.p2.applyGravity, this.game.physics.p2.setZeroVelocity, this.game.physics.p2.debug);\n\tif (addToWorld) {\n\t\tthis.game.world.add(layer);\n\t}\n\tif (children) {\n\t\tlayer.addMultiple(children);\n\t}\n\tthis.layers.push(layer);\n\treturn layer;\n}", "CodeBleu_score": 51.96778577190329}, {"code": "createFluidLayer: function (children, addToWorld){\n\t\tvar layer = new FlexLayer(this.game, this.game.world.width, this.game.world.height, this.game.world.centerX, this.game.world.centerY, {\n\t\tfluid: true\n\t});\n\tif (addToWorld) {\n\t\tthis.game.world.add(layer);\n\t}\n\tthis.layers.push(layer);\n\tif (children) {\n\t\tlayer.addMultiple(children);\n\t}\n\treturn layer;\n}", "CodeBleu_score": 59.32325979429586}, {"code": "createFluidLayer: function (children, addToWorld){\n\t\tvar layer = new FlexLayer(this.game, children, addToWorld);\n\tlayer.setFluid(true);\n\tthis.layers.push(layer);\n\treturn layer;\n}", "CodeBleu_score": 25.519526252097048}]}
{"instance_id": "624c9e2eb19f", "generation_result": [{"code": "createFullLayer: function (children){\n\t\tvar layer = this.game.add.flexLayer(0, 0, this.game.width, this.game.height, 1, 1);\n\tthis.layers.push(layer);\n\tif (children) {\n\t\tlayer.addMultiple(children);\n\t}\n\treturn layer;\n}", "CodeBleu_score": 53.81171289130944}, {"code": "createFullLayer: function (children){\n\t\tvar layer = this.game.add.flexLayer(0, 0, this.game.width, this.game.height, this.scale);\n\tlayer.scale.setTo(this.scale);\n\tthis.layers.push(layer);\n\tif (children) {\n\t\tlayer.addMultiple(children);\n\t}\n\treturn layer;\n}", "CodeBleu_score": 56.26766907726035}, {"code": "createFullLayer: function (children){\n\tvar layer = this.game.add.flexLayer(this.game.width, this.game.height, this.game.width, this.game.height, 1, 1);\nthis.layers.push(layer);\nif (children) {\nlayer.addMultiple(children);\n}\nreturn layer;\n}", "CodeBleu_score": 54.2351452762159}]}
{"instance_id": "1c7529bca3ce", "generation_result": [{"code": "crop: function (rect, copy){\n\t\nif (rect)\n{\nif (copy === undefined) { copy = true; }\n\nif (copy)\n{\nthis.cropRect.setTo(rect.x, rect.y, rect.width, rect.height);\n}\nelse\n{\nthis.cropRect.copyFrom(rect);\n}\n\nthis.updateCrop();\n}\nelse\n{\nthis.resetFrame();\n}\n\nreturn this;\n\n}", "CodeBleu_score": 36.642689030996635}, {"code": "crop: function (rect, copy){\n\t\tif (rect) {\n\t\tif (copy) {\n\t\t\tthis.updateCrop(rect.clone());\n\t\t} else {\n\t\t\tthis.updateCrop(rect);\n\t\t}\n\t} else {\n\t\tthis.resetFrame();\n\t}\n}", "CodeBleu_score": 17.86016941955973}, {"code": "crop: function (rect, copy){\n\t\tif (rect) {\n\t\tif (copy === undefined) {\n\t\t\tcopy = true;\n\t\t}\n\n\t\tif (copy) {\n\t\t\tthis.cropRect = Phaser.Rectangle.clone(rect);\n\t\t} else {\n\t\t\tthis.cropRect = rect;\n\t\t}\n\n\t\tthis.updateCrop();\n\t} else {\n\t\tthis.resetFrame();\n\t}\n}", "CodeBleu_score": 35.27173587459124}]}
{"instance_id": "d767b9ea9212", "generation_result": [{"code": "move: function (x, y, wrap){\n\t\tif (x) {\n\t\tthis.moveH(x, wrap);\n\t}\n\tif (y) {\n\t\tthis.moveV(y, wrap);\n\t}\n\treturn this;\n}", "CodeBleu_score": 51.684474181262274}, {"code": "move: function (x, y, wrap){\n\t\treturn this.moveV(y, wrap).moveH(x, wrap);\n}", "CodeBleu_score": 27.93435235707735}, {"code": "move: function (x, y, wrap){\n\t\tif (x) {\n\t\tthis.moveH(x, wrap);\n\t}\n\tif (y) {\n\t\tthis.moveV(y, wrap);\n\t}\n\treturn this;\n}", "CodeBleu_score": 51.684474181262274}]}
{"instance_id": "c7cf015114f3", "generation_result": [{"code": "Phaser.Button.prototype.changeStateFrame = function (state){\n\t\tif (this.freezeFrames) {\n\t\treturn false;\n\t}\n\n\tvar frame = this.states[state];\n\n\tif (typeof frame ==='string') {\n\t\tframe = this.frameNameMap[frame];\n\t}\n\n\tif (frame!== undefined) {\n\t\tthis.frame = frame;\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}", "CodeBleu_score": 45.7109553889439}, {"code": "Phaser.Button.prototype.changeStateFrame = function (state){\n\t\tvar key = this.stateFrames[state];\n\n\tif (key === undefined || key === null) {\n\t\treturn false;\n\t}\n\n\tif (this.frameName!== key) {\n\t\tthis.setFrames(key, key, key);\n\t}\n\n\treturn true;\n}", "CodeBleu_score": 23.06977540818128}, {"code": "Phaser.Button.prototype.changeStateFrame = function (state){\n\t\tif (this.freezeFrames) {\n\t\treturn false;\n\t}\n\n\tvar frameKey = this.stateMap[state];\n\n\tif (frameKey) {\n\t\tif (this.frameName!== frameKey) {\n\t\t\tthis.setFrames(frameKey);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}", "CodeBleu_score": 31.02114678930889}]}
{"instance_id": "e0294cb83ca3", "generation_result": [{"code": "weapon: function (quantity, key, frame, group, bulletClass){\n\t\tif (typeof quantity === 'undefined') { quantity = 1; }\n\tif (typeof key === 'undefined') { key = null; }\n\tif (typeof frame === 'undefined') { frame = null; }\n\tif (typeof group === 'undefined') { group = this.game.world; }\n\tif (typeof bulletClass === 'undefined') { bulletClass = Phaser.Bullet; }\n\n\tvar weapon = new Phaser.Weapon(this.game, key, frame, group, bulletClass);\n\n\tweapon.setBullets(quantity);\n\n\treturn weapon;\n}", "CodeBleu_score": 36.442429730525426}, {"code": "weapon: function (quantity, key, frame, group, bulletClass){\n\t\nif (typeof quantity === 'undefined') { quantity = 1; }\nif (typeof key === 'undefined') { key = null; }\nif (typeof frame === 'undefined') { frame = null; }\nif (typeof group === 'undefined') { group = this.game.world; }\nif (typeof bulletClass === 'undefined') { bulletClass = Phaser.Bullet; }\n\nvar weapon = new Phaser.Weapon(this.game, key, frame, group, bulletClass);\n\nweapon.setBulletBounds();\nweapon.setBulletKillType(Phaser.Weapon.KILL_WORLD_BOUNDS);\n\nweapon.bullets.createMultiple(quantity, key, frame, group);\nweapon.bullets.setAll('checkWorldBounds', true);\n\nreturn weapon;\n\n}", "CodeBleu_score": 39.247680966776144}, {"code": "weapon: function (quantity, key, frame, group, bulletClass){\n\t\tif (quantity === undefined) { quantity = 1; }\n\tif (key === undefined) { key = null; }\n\tif (frame === undefined) { frame = null; }\n\tif (group === undefined) { group = this.game.world; }\n\tif (bulletClass === undefined) { bulletClass = Phaser.Bullet; }\n\n\t//  Create the Weapon\n\tvar weapon = new Phaser.Weapon(this.game, key, frame, group);\n\n\t//  Bullet class\n\tweapon.bulletClass = bulletClass;\n\n\t//  Create the bullet pool\n\tweapon.create(quantity);\n\n\treturn weapon;\n\n}", "CodeBleu_score": 36.34402562305546}]}
{"instance_id": "2fca91787d6c", "generation_result": [{"code": "Phaser.Graphics.prototype.drawTriangle = function (points, cull){\n\t\tvar p0 = points[0];\n\tvar p1 = points[1];\n\tvar p2 = points[2];\n\tvar faceNormal = new Phaser.Point(0, 0, 0);\n\tvar cameraToFace = new Phaser.Point(0, 0, 0);\n\tvar dot;\n\n\tif (cull) {\n\t\tfaceNormal.x = (p1.y - p0.y) * (p2.z - p0.z) - (p2.y - p0.y) * (p1.z - p0.z);\n\t\tfaceNormal.y = (p1.z - p0.z) * (p2.x - p0.x) - (p2.z - p0.z) * (p1.x - p0.x);\n\t\tfaceNormal.z = (p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y);\n\t\tcameraToFace.x = this.camera.x - p0.x;\n\t\tcameraToFace.y = this.camera.y - p0.y;\n\t\tcameraToFace.z = this.camera.z - p0.z;\n\t\tdot = cameraToFace.dot(faceNormal);\n\t\tif (dot < 0) {\n\t\t\tthis.moveTo(p0.x, p0.y);\n\t\t\tthis.lineTo(p1.x, p1.y);\n\t\t\tthis.lineTo(p2.x, p2.y);\n\t\t\tthis.lineTo(p0.x, p0.y);\n\t\t}\n\t} else {\n\t\tthis.moveTo(p0.x, p0.y);\n\t\tthis.lineTo(p1.x, p1.y);\n\t\tthis.lineTo(p2.x, p2.y);\n\t\tthis.lineTo(p0.x, p0.y);\n\t}\n}", "CodeBleu_score": 28.448015910551717}, {"code": "Phaser.Graphics.prototype.drawTriangle = function (points, cull){\n\t\tvar p1 = points[0];\n\tvar p2 = points[1];\n\tvar p3 = points[2];\n\tif (cull) {\n\t\tvar camera = this.game.camera;\n\t\tvar cameraToFace = new Phaser.Point(p1.x - camera.x, p1.y - camera.y);\n\t\tvar faceNormal = new Phaser.Point(p2.y - p1.y, p1.x - p2.x);\n\t\tif (cameraToFace.dot(faceNormal) < 0) {\n\t\t\treturn;\n\t\t}\n\t}\n\tthis.moveTo(p1.x, p1.y);\n\tthis.lineTo(p2.x, p2.y);\n\tthis.lineTo(p3.x, p3.y);\n\tthis.lineTo(p1.x, p1.y);\n}", "CodeBleu_score": 31.552601926201728}, {"code": "Phaser.Graphics.prototype.drawTriangle = function (points, cull){\n\t\tif (cull) {\n\t\tvar a = points[0];\n\t\tvar b = points[1];\n\t\tvar c = points[2];\n\t\tvar ab = new Phaser.Point(b.x - a.x, b.y - a.y);\n\t\tvar ac = new Phaser.Point(c.x - a.x, c.y - a.y);\n\t\tvar normal = new Phaser.Point(ab.y * ac.x - ab.x * ac.y, ab.x * ac.y - ab.y * ac.x);\n\t\tvar cameraToFace = new Phaser.Point(a.x - this.game.camera.x, a.y - this.game.camera.y);\n\t\tif (normal.dot(cameraToFace) < 0) {\n\t\t\tthis.drawPolygon(points);\n\t\t}\n\t} else {\n\t\tthis.drawPolygon(points);\n\t}\n}", "CodeBleu_score": 42.402481686579854}]}
{"instance_id": "5d227ea7f97b", "generation_result": [{"code": "checkVideoProgress: function (){\n\t\tif (this.video.readyState >= 2) {\n\t\t// video is ready, stop the loading state\n\t\tthis.video.pause();\n\t\tthis.video.removeAttribute('src'); // empty source\n\t\tthis.video.load();\n\n\t\t// update the texture\n\t\tthis.videoTexture.needsUpdate = true;\n\t\tthis.updateTexture();\n\t} else {\n\t\t// video is not ready, decrement the retry counter\n\t\tthis.retryCount--;\n\t\tif (this.retryCount <= 0) {\n\t\t\t// video failed to load, warn the user\n\t\t\tconsole.warn('Video failed to load');\n\t\t} else {\n\t\t\t// set a timeout to check progress again\n\t\t\twindow.setTimeout(this.checkVideoProgress.bind(this), 1000);\n\t\t}\n\t}\n}", "CodeBleu_score": 31.57283467128166}, {"code": "checkVideoProgress: function (){\n\t\tif (this.video.readyState >= this.video.HAVE_FUTURE_DATA) {\n\t\tif (this.sourceChangePending) {\n\t\t\tthis.sourceChangePending = false;\n\t\t\tthis.video.pause();\n\t\t\tthis.video.src = this.video.currentSrc;\n\t\t\tthis.video.play();\n\t\t}\n\t\tthis.updateTexture();\n\t} else {\n\t\tthis.retries--;\n\t\tif (this.retries > 0) {\n\t\t\twindow.setTimeout(this.checkVideoProgress.bind(this), 1000);\n\t\t} else {\n\t\t\tconsole.warn('Video failed to load');\n\t\t}\n\t}\n}", "CodeBleu_score": 32.520929500205455}, {"code": "checkVideoProgress: function (){\n\t", "CodeBleu_score": 5.572246494525378}]}
{"instance_id": "e48c3c53f00a", "generation_result": [{"code": "start: function (event, value){\n\t\tif (this.state!== Phaser.Input.Keyboard.Key.DOWN) {\n\t\tthis.state = Phaser.Input.Keyboard.Key.DOWN;\n\t\tthis.timeDown = this.game.time.time;\n\t\tthis.repeats = 0;\n\t\tthis.altKey = event.altKey;\n\t\tthis.ctrlKey = event.ctrlKey;\n\t\tthis.shiftKey = event.shiftKey;\n\t\tthis.event = event;\n\t\tthis.value = value;\n\t\tthis.onDown.dispatch(this, value);\n\t}\n}", "CodeBleu_score": 61.89816802679028}, {"code": "start: function (event, value){\n\t\tif (this.state === Phaser.Input.Keyboard.Key.STATE_UP) {\n\t\tthis.state = Phaser.Input.Keyboard.Key.STATE_DOWN;\n\t\tthis.timeDown = this.game.time.time;\n\t\tthis.repeats = 0;\n\n\t\tif (event) {\n\t\t\tthis.altKey = event.altKey;\n\t\t\tthis.ctrlKey = event.ctrlKey;\n\t\t\tthis.shiftKey = event.shiftKey;\n\t\t}\n\n\t\tthis.onDown.dispatch(this, value);\n\t}\n}", "CodeBleu_score": 51.49411133976965}, {"code": "start: function (event, value){\n\t\nif (this.state === Phaser.Input.Keyboard.Key.STATE_UP)\n{\nthis.state = Phaser.Input.Keyboard.Key.STATE_DOWN;\n\nthis.timeDown = this.game.time.time;\nthis.repeats = 0;\n\nif (event)\n{\nthis.event = event;\nthis.altKey = event.altKey;\nthis.ctrlKey = event.ctrlKey;\nthis.shiftKey = event.shiftKey;\n}\n\nthis.value = value;\n\nthis.onDown.dispatch(this, value);\n}\n\nreturn this;\n\n}", "CodeBleu_score": 62.553257979493246}]}
{"instance_id": "a2cb3bdacb1e", "generation_result": [{"code": "onMouseDown: function (event){\n\t\nif (this.mouseDownCallback)\n{\nthis.mouseDownCallback.call(this.callbackContext, event);\n}\n\nif (this.input.enabled)\n{\nthis.input.mousePointer.start(event);\n}\n\nif (this.input.mouse.capture)\n{\nevent.preventDefault();\n}\n\n}", "CodeBleu_score": 42.114948442914546}, {"code": "onMouseDown: function (event){\n\t\nthis.event = event;\n\nif (this.preventDefaultDown) {\nevent.preventDefault();\n}\n\nif (this.mouseDownCallback) {\nthis.mouseDownCallback.call(this.callbackContext, event);\n}\n\nif (this.input.enabled) {\nthis.input.mousePointer.start(event);\n}\n\n}", "CodeBleu_score": 56.197520934838444}, {"code": "onMouseDown: function (event){\n\tthis.event = event;\nif (this.preventDefaultDown) {\nevent.preventDefault();\n}\nif (this.mouseDownCallback) {\nthis.mouseDownCallback.call(this.callbackContext, event);\n}\nif (this.input.enabled) {\nthis.input.mousePointer.start(event);\n}\n}", "CodeBleu_score": 56.22360209968967}]}
{"instance_id": "88538a5b66e8", "generation_result": [{"code": "onMouseUpGlobal: function (event){\n\t\nthis.event = event\nthis.preventDefault = true\n\nif (this.mouseUpCallback)\n{\nthis.mouseUpCallback.call(this.callbackContext, event)\n}\n\nif (this.input.enabled)\n{\nthis.input.mousePointer.identifier = event.pointerId\nthis.input.mousePointer.start(event)\n}\n\n}", "CodeBleu_score": 62.462952464226674}, {"code": "onMouseUpGlobal: function (event){\n\t\nthis.event = event;\n\nif (this.preventDefault) {\nevent.preventDefault();\n}\n\nif (this.mouseUpCallback) {\nthis.mouseUpCallback.call(this.callbackContext, event);\n}\n\nif (this.input.enabled) {\nthis.input.mousePointer.identifier = event.pointerId;\nthis.input.mousePointer.type = event.type;\nthis.input.mousePointer.start(event);\n}\n\n}", "CodeBleu_score": 63.68250623768702}, {"code": "onMouseUpGlobal: function (event){\n\tthis.mouseUpCallback = this.game.input.mouse.callbackContext.onMouseUp;\nthis.mouseUpCallback.call(this.game.input.mouse.callbackContext, event);\nthis.game.input.mousePointer.stop();\n}", "CodeBleu_score": 20.616708521549796}]}
{"instance_id": "bf8b43ab3487", "generation_result": [{"code": "onTouchEnter: function (event){\n\t\tif (this.gameInput.enabled && this.enabled) {\n\t\tthis.touchEnterEvent = event;\n\t\tif (this.touchEnterCallback) {\n\t\t\tthis.touchEnterCallback.call(this, event);\n\t\t}\n\t\tif (this.touchEnterPreventDefault) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n}", "CodeBleu_score": 47.39177166008206}, {"code": "onTouchEnter: function (event){\n\t\tif (!this.enabled ||!this.game.input.enabled) {\n\t\treturn;\n\t}\n\n\tthis.touchEnterCallback.call(this.callbackContext, this, event);\n\n\tif (this.touchEnterCallback) {\n\t\tif (this.touchEnterCallback.length === 0) {\n\t\t\tthis.touchEnterCallback();\n\t\t} else {\n\t\t\tthis.touchEnterCallback(this, event);\n\t\t}\n\t}\n\n\tif (this.allowInput) {\n\t\tevent.preventDefault();\n\t}\n}", "CodeBleu_score": 44.35908136059899}, {"code": "onTouchEnter: function (event){\n\t\tif (this.gameInputEnabled && this.enabled) {\n\t\tthis.touchEnterCallback.call(this.callbackContext, event);\n\t\tif (this.touchEnterCallback) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n}", "CodeBleu_score": 27.442591373971233}]}
